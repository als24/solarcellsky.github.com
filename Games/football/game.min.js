if (cc.sys._supportWebAudio) {
    var _ctx = cc.webAudioContext = new(window.AudioContext || window.webkitAudioContext || window.mozAudioContext);
    cc.WebAudio = cc.Class.extend({
        _events: null,
        _buffer: null,
        _sourceNode: null,
        _volumeNode: null,
        src: null,
        preload: null,
        autoplay: null,
        controls: null,
        mediagroup: null,
        currentTime: 0,
        startTime: 0,
        duration: 0,
        _loop: null,
        _volume: 1,
        _pauseTime: 0,
        _paused: !1,
        _stopped: !0,
        _loadState: -1,
        ctor: function(a) {
            this._events = {};
            this.src = a;
            this._volumeNode = _ctx.createGain ? _ctx.createGain() : _ctx.createGainNode();
            this._onSuccess1 = this._onSuccess.bind(this);
            this._onError1 = this._onError.bind(this)
        },
        _play: function(a) {
            var b = this._sourceNode = _ctx.createBufferSource(),
                c = this._volumeNode;
            a = a || 0;
            b.buffer = this._buffer;
            c.gain.value = this._volume;
            b.connect(c);
            c.connect(_ctx.destination);
            b.loop = this._loop;
            b._stopped = !1;
            b.playbackState || (b.onended = function() { this._stopped = !0 });
            this._stopped = this._paused = !1;
            b.start ? b.start(0, a) : b.noteGrainOn ? (c = b.buffer.duration, this.loop ? b.noteGrainOn(0, a, c) : b.noteGrainOn(0, a, c - a)) : b.noteOn(0);
            this._pauseTime = 0
        },
        _stop: function() {
            var a = this._sourceNode;
            this._stopped || (a.stop ? a.stop(0) : a.noteOff(0), this._stopped = !0) },
        play: function() {
            if (-1 == this._loadState) this._loadState = 0;
            else if (1 == this._loadState) {
                var a = this._sourceNode;
                if (this._stopped || !a || 2 != a.playbackState && a._stopped) this.startTime = _ctx.currentTime, this._play(0) } },
        pause: function() { this._pauseTime = _ctx.currentTime;
            this._paused = !0;
            this._stop() },
        resume: function() {
            this._paused && this._play(this._buffer ? (this._pauseTime - this.startTime) %
                this._buffer.duration : 0)
        },
        stop: function() { this._pauseTime = 0;
            this._paused = !1;
            this._stop() },
        load: function() {
            var a = this;
            if (1 != a._loadState) { a._loadState = -1;
                a.played = !1;
                a.ended = !0;
                var b = new XMLHttpRequest;
                b.open("GET", a.src, !0);
                b.responseType = "arraybuffer";
                b.onload = function() { _ctx.decodeAudioData(b.response, a._onSuccess1, a._onError1) };
                b.send() } },
        addEventListener: function(a, b) { this._events[a] = b.bind(this) },
        removeEventListener: function(a) { delete this._events[a] },
        canplay: function() {
            return cc.sys._supportWebAudio },
        _onSuccess: function(a) { this._buffer = a;
            a = this._events.success;
            var b = this._events.canplaythrough;
            a && a();
            b && b();
            0 != this._loadState && "autoplay" != this.autoplay && 1 != this.autoplay || this._play();
            this._loadState = 1 },
        _onError: function() {
            var a = this._events.error;
            a && a();
            this._loadState = -2 },
        cloneNode: function() {
            var a = new cc.WebAudio(this.src);
            a.volume = this.volume;
            a._loadState = this._loadState;
            a._buffer = this._buffer;
            0 != a._loadState && -1 != a._loadState || a.load();
            return a }
    });
    var _p = cc.WebAudio.prototype;
    cc.defineGetterSetter(_p,
        "loop",
        function() {
            return this._loop },
        function(a) { this._loop = a;
            this._sourceNode && (this._sourceNode.loop = a) });
    cc.defineGetterSetter(_p, "volume", function() {
        return this._volume }, function(a) { this._volume = a;
        this._volumeNode.gain.value = a });
    cc.defineGetterSetter(_p, "paused", function() {
        return this._paused });
    cc.defineGetterSetter(_p, "ended", function() {
        var a = this._sourceNode;
        return this._paused ? !1 : this._stopped && !a ? !0 : null == a.playbackState ? a._stopped : 3 == a.playbackState });
    cc.defineGetterSetter(_p, "played", function() {
        var a =
            this._sourceNode;
        return a && (2 == a.playbackState || !a._stopped)
    })
}
cc.AudioEngine = cc.Class.extend({
    _soundSupported: !1,
    _currMusic: null,
    _currMusicPath: null,
    _musicPlayState: 0,
    _audioID: 0,
    _effects: {},
    _audioPool: {},
    _effectsVolume: 1,
    _maxAudioInstance: 5,
    _effectPauseCb: null,
    _playings: [],
    ctor: function() { this._soundSupported = 0 < cc._audioLoader._supportedAudioTypes.length;
        this._effectPauseCb && (this._effectPauseCb = this._effectPauseCb.bind(this)) },
    willPlayMusic: function() {
        return !1 },
    getEffectsVolume: function() {
        return this._effectsVolume },
    playMusic: function(a, b) {
        if (this._soundSupported) {
            var c =
                this._currMusic;
            c && this._stopAudio(c);
            cc.sys.isMobile && cc.sys.os == cc.sys.OS_IOS ? (c = this._getAudioByUrl(a), this._currMusic = c.cloneNode(), this._currMusicPath = a) : a != this._currMusicPath && (this._currMusic = c = this._getAudioByUrl(a), this._currMusicPath = a);
            this._currMusic && (this._currMusic.loop = b || !1, this._playMusic(this._currMusic))
        }
    },
    _getAudioByUrl: function(a) {
        var b = cc.loader,
            c = b.getRes(a);
        c || (b.load(a), c = b.getRes(a));
        return c },
    _playMusic: function(a) {
        a.ended || (a.stop ? a.stop() : (a.pause(), 2 < a.readyState &&
            (a.currentTime = 0)));
        this._musicPlayState = 2;
        a.play()
    },
    stopMusic: function(a) {
        if (0 < this._musicPlayState) {
            var b = this._currMusic;
            b && this._stopAudio(b) && (a && cc.loader.release(this._currMusicPath), this._currMusicPath = this._currMusic = null, this._musicPlayState = 0) } },
    _stopAudio: function(a) {
        return a && !a.ended ? (a.stop ? a.stop() : (a.pause(), 2 < a.readyState && a.duration && Infinity != a.duration && (a.currentTime = a.duration)), !0) : !1 },
    pauseMusic: function() {
        2 == this._musicPlayState && (this._currMusic.pause(), this._musicPlayState =
            1)
    },
    resumeMusic: function() { 1 == this._musicPlayState && (this._resumeAudio(this._currMusic), this._musicPlayState = 2) },
    _resumeAudio: function(a) { a && !a.ended && (a.resume ? a.resume() : a.play()) },
    rewindMusic: function() { this._currMusic && this._playMusic(this._currMusic) },
    getMusicVolume: function() {
        return 0 == this._musicPlayState ? 0 : this._currMusic.volume },
    setMusicVolume: function(a) { 0 < this._musicPlayState && (this._currMusic.volume = Math.min(Math.max(a, 0), 1)) },
    isMusicPlaying: function() {
        return 2 == this._musicPlayState &&
            this._currMusic && !this._currMusic.ended
    },
    _getEffectList: function(a) {
        var b = this._audioPool[a];
        b || (b = this._audioPool[a] = []);
        return b },
    _getEffect: function(a) {
        var b;
        if (!this._soundSupported) return null;
        var c = this._getEffectList(a);
        if (cc.sys.isMobile && cc.sys.os == cc.sys.OS_IOS) b = this._getEffectAudio(c, a);
        else {
            for (var d = 0, e = c.length; d < e; d++) {
                var f = c[d];
                if (f.ended) { b = f;
                    2 < b.readyState && (b.currentTime = 0);
                    window.chrome && b.load();
                    break } }
            b || (b = this._getEffectAudio(c, a)) && c.push(b) }
        return b },
    _getEffectAudio: function(a,
        b) {
        var c;
        if (a.length >= this._maxAudioInstance) return cc.log("Error: " + b + " greater than " + this._maxAudioInstance), null;
        c = this._getAudioByUrl(b);
        if (!c) return null;
        c = c.cloneNode(!0);
        this._effectPauseCb && cc._addEventListener(c, "pause", this._effectPauseCb);
        c.volume = this._effectsVolume;
        return c },
    playEffect: function(a, b) {
        var c = this._getEffect(a);
        if (!c) return null;
        c.loop = b || !1;
        c.play();
        var d = this._audioID++;
        this._effects[d] = c;
        return d },
    setEffectsVolume: function(a) {
        a = this._effectsVolume = Math.min(Math.max(a,
            0), 1);
        var b = this._effects,
            c;
        for (c in b) b[c].volume = a
    },
    pauseEffect: function(a) {
        (a = this._effects[a]) && !a.ended && a.pause() },
    pauseAllEffects: function() {
        var a = this._effects,
            b;
        for (b in a) {
            var c = a[b];
            c.ended || c.pause() } },
    resumeEffect: function(a) { this._resumeAudio(this._effects[a]) },
    resumeAllEffects: function() {
        var a = this._effects,
            b;
        for (b in a) this._resumeAudio(a[b]) },
    stopEffect: function(a) { this._stopAudio(this._effects[a]);
        delete this._effects[a] },
    stopAllEffects: function() {
        var a = this._effects,
            b;
        for (b in a) this._stopAudio(a[b]),
            delete a[b]
    },
    unloadEffect: function(a) {
        var b = cc.loader,
            c = this._effects,
            d = this._getEffectList(a);
        b.release(a);
        if (0 != d.length) { b = d[0].src;
            delete this._audioPool[a];
            for (var e in c) c[e].src == b && (this._stopAudio(c[e]), delete c[e]) } },
    end: function() { this.stopMusic();
        this.stopAllEffects() },
    _pausePlaying: function() {
        var a = this._effects,
            b, c;
        for (c in a) !(b = a[c]) || b.ended || b.paused || (this._playings.push(b), b.pause());
        this.isMusicPlaying() && (this._playings.push(this._currMusic), this._currMusic.pause()) },
    _resumePlaying: function() {
        for (var a =
                this._playings, b = 0, c = a.length; b < c; b++) this._resumeAudio(a[b]);
        a.length = 0
    }
});
cc.sys._supportWebAudio || cc.sys._supportMultipleAudio || (cc.AudioEngineForSingle = cc.AudioEngine.extend({
    _waitingEffIds: [],
    _pausedEffIds: [],
    _currEffect: null,
    _maxAudioInstance: 2,
    _effectCache4Single: {},
    _needToResumeMusic: !1,
    _expendTime4Music: 0,
    _isHiddenMode: !1,
    _playMusic: function(a) { this._stopAllEffects();
        this._super(a) },
    resumeMusic: function() { 1 == this._musicPlayState && (this._stopAllEffects(), this._needToResumeMusic = !1, this._expendTime4Music = 0, this._super()) },
    playEffect: function(a, b) {
        var c = this._currEffect,
            d = b ? this._getEffect(a) : this._getSingleEffect(a);
        if (!d) return null;
        d.loop = b || !1;
        var e = this._audioID++;
        this._effects[e] = d;
        this.isMusicPlaying() && (this.pauseMusic(), this._needToResumeMusic = !0);
        c ? (c != d && this._waitingEffIds.push(this._currEffectId), this._waitingEffIds.push(e), c.pause()) : (this._currEffect = d, this._currEffectId = e, d.play());
        return e
    },
    pauseEffect: function(a) { cc.log("pauseEffect not supported in single audio mode!") },
    pauseAllEffects: function() {
        var a = this._waitingEffIds,
            b = this._pausedEffIds,
            c = this._currEffect;
        if (c) {
            for (var d = 0, e = a.length; d < e; d++) b.push(a[d]);
            a.length = 0;
            b.push(this._currEffectId);
            c.pause() }
    },
    resumeEffect: function(a) { cc.log("resumeEffect not supported in single audio mode!") },
    resumeAllEffects: function() {
        var a = this._waitingEffIds,
            b = this._pausedEffIds;
        this.isMusicPlaying() && (this.pauseMusic(), this._needToResumeMusic = !0);
        for (var c = 0, d = b.length; c < d; c++) a.push(b[c]);
        b.length = 0;
        !this._currEffect && 0 <= a.length && (a = a.pop(), b = this._effects[a]) && (this._currEffectId = a, this._currEffect =
            b, this._resumeAudio(b))
    },
    stopEffect: function(a) {
        var b = this._currEffect,
            c = this._waitingEffIds,
            d = this._pausedEffIds;
        b && this._currEffectId == a ? this._stopAudio(b) : (b = c.indexOf(a), 0 <= b ? c.splice(b, 1) : (b = d.indexOf(a), 0 <= b && d.splice(b, 1))) },
    stopAllEffects: function() { this._stopAllEffects();!this._currEffect && this._needToResumeMusic && (this._resumeAudio(this._currMusic), this._musicPlayState = 2, this._needToResumeMusic = !1, this._expendTime4Music = 0) },
    unloadEffect: function(a) {
        var b = cc.loader,
            c = this._effects,
            d = this._effectCache4Single,
            e = this._getEffectList(a),
            f = this._currEffect;
        b.release(a);
        if (0 != e.length || d[a]) { b = 0 < e.length ? e[0].src : d[a].src;
            delete this._audioPool[a];
            delete d[a];
            for (var h in c) c[h].src == b && delete c[h];
            f && f.src == b && this._stopAudio(f) }
    },
    _getSingleEffect: function(a) {
        var b = this._effectCache4Single[a],
            c = this._waitingEffIds,
            d = this._pausedEffIds,
            e = this._effects;
        if (b) 2 < b.readyState && (b.currentTime = 0);
        else {
            b = this._getAudioByUrl(a);
            if (!b) return null;
            b = b.cloneNode(!0);
            this._effectPauseCb && cc._addEventListener(b, "pause",
                this._effectPauseCb);
            b.volume = this._effectsVolume;
            this._effectCache4Single[a] = b
        }
        a = 0;
        for (var f = c.length; a < f;) e[c[a]] == b ? c.splice(a, 1) : a++;
        a = 0;
        for (f = d.length; a < f;) e[d[a]] == b ? d.splice(a, 1) : a++;
        b._isToPlay = !0;
        return b
    },
    _stopAllEffects: function() {
        var a = this._currEffect,
            b = this._audioPool,
            c = this._effectCache4Single,
            d = this._waitingEffIds,
            e = this._pausedEffIds;
        if (a || 0 != d.length || 0 != e.length) {
            for (var f in c) {
                var h = c[f];
                2 < h.readyState && h.duration && Infinity != h.duration && (h.currentTime = h.duration) }
            d.length = 0;
            e.length =
                0;
            for (f in b)
                for (c = b[f], d = 0, e = c.length; d < e; d++) h = c[d], h.loop = !1, 2 < h.readyState && h.duration && Infinity != h.duration && (h.currentTime = h.duration);
            a && this._stopAudio(a)
        }
    },
    _effectPauseCb: function() {
        if (!this._isHiddenMode) {
            var a = this._getWaitingEffToPlay();
            if (a) a._isToPlay ? (delete a._isToPlay, a.play()) : this._resumeAudio(a);
            else if (this._needToResumeMusic) {
                a = this._currMusic;
                if (2 < a.readyState && a.duration && Infinity != a.duration) {
                    var b = a.currentTime + this._expendTime4Music,
                        b = b - a.duration * (b / a.duration | 0);
                    a.currentTime =
                        b
                }
                this._expendTime4Music = 0;
                this._resumeAudio(a);
                this._musicPlayState = 2;
                this._needToResumeMusic = !1
            }
        }
    },
    _getWaitingEffToPlay: function() {
        var a = this._waitingEffIds,
            b = this._effects,
            c = this._currEffect,
            d = c ? c.currentTime - (c.startTime || 0) : 0;
        for (this._expendTime4Music += d; 0 != a.length;) {
            var e = a.pop();
            if (c = b[e]) {
                if (c._isToPlay || c.loop || c.duration && c.currentTime + d < c.duration) return this._currEffectId = e, this._currEffect = c, !c._isToPlay && 2 < c.readyState && c.duration && Infinity != c.duration && (a = c.currentTime + d, a -= c.duration *
                    (a / c.duration | 0), c.currentTime = a), c._isToPlay = !1, c;
                2 < c.readyState && c.duration && Infinity != c.duration && (c.currentTime = c.duration)
            }
        }
        return this._currEffect = this._currEffectId = null
    },
    _pausePlaying: function() {
        var a = this._currEffect;
        this._isHiddenMode = !0;
        if (a = 2 == this._musicPlayState ? this._currMusic : a) this._playings.push(a), a.pause() },
    _resumePlaying: function() {
        var a = this._playings;
        this._isHiddenMode = !1;
        0 < a.length && (this._resumeAudio(a[0]), a.length = 0) }
}));
cc._audioLoader = {
    _supportedAudioTypes: null,
    getBasePath: function() {
        return cc.loader.audioPath },
    _load: function(a, b, c, d, e, f, h) {
        var n = this,
            u = cc.loader,
            t = cc.path,
            r = this._supportedAudioTypes,
            k = "";
        if (0 == r.length) return h("can not support audio!");
        if (-1 == d) k = (t.extname(a) || "").toLowerCase(), n.audioTypeSupported(k) || (k = r[0], d = 0);
        else if (d < r.length) k = r[d];
        else return h("can not found the resource of audio! Last match url is : " + a);
        if (0 <= e.indexOf(k)) return n._load(a, b, c, d + 1, e, f, h);
        a = t.changeExtname(a, k);
        e.push(k);
        f = n._loadAudio(a, f, function(k) {
            if (k) return n._load(a, b, c, d + 1, e, f, h);
            h(null, f) }, d == r.length - 1);
        u.cache[b] = f
    },
    audioTypeSupported: function(a) {
        return a ? 0 <= this._supportedAudioTypes.indexOf(a.toLowerCase()) : !1 },
    _loadAudio: function(a, b, c, d) {
        var e;
        e = cc.isObject(window.cc) || "firefox" != cc.sys.browserType ? "file://" == location.origin ? Audio : cc.WebAudio || Audio : Audio;
        2 == arguments.length ? (c = b, b = new e) : 3 < arguments.length && !b && (b = new e);
        b.src = a;
        b.preload = "auto";
        e = navigator.userAgent;
        if (/Mobile/.test(e) && (/iPhone OS/.test(e) ||
                /iPad/.test(e) || /Firefox/.test(e)) || /MSIE/.test(e)) b.load(), c(null, b);
        else {
            cc._addEventListener(b, "canplaythrough", function() { c(null, b);
                this.removeEventListener("canplaythrough", arguments.callee, !1);
                this.removeEventListener("error", arguments.callee, !1) }, !1);
            var f = function() { b.removeEventListener("emptied", f);
                b.removeEventListener("error", f);
                c("load " + a + " failed");
                d && (this.removeEventListener("canplaythrough", arguments.callee, !1), this.removeEventListener("error", arguments.callee, !1)) };
            cc.sys.browserType ===
                cc.sys.BROWSER_TYPE_WECHAT && cc._addEventListener(b, "emptied", f, !1);
            cc._addEventListener(b, "error", f, !1);
            b.load()
        }
        return b
    },
    load: function(a, b, c, d) { this._load(a, b, c, -1, [], null, d) }
};
cc._audioLoader._supportedAudioTypes = function() {
    var a = cc.newElement("audio"),
        b = [];
    if (a.canPlayType) {
        var c = function(b) { b = a.canPlayType(b);
            return "no" != b && "" != b };
        c('audio/ogg; codecs="vorbis"') && b.push(".ogg");
        c("audio/mpeg") && b.push(".mp3");
        c('audio/wav; codecs="1"') && b.push(".wav");
        c("audio/mp4") && b.push(".mp4");
        (c("audio/x-m4a") || c("audio/aac")) && b.push(".m4a") }
    return b }();
cc.loader.register(["mp3", "ogg", "wav", "mp4", "m4a"], cc._audioLoader);
cc.audioEngine = cc.AudioEngineForSingle ? new cc.AudioEngineForSingle : new cc.AudioEngine;
cc.eventManager.addCustomListener(cc.game.EVENT_HIDE, function() { cc.audioEngine._pausePlaying() });
cc.eventManager.addCustomListener(cc.game.EVENT_SHOW, function() { cc.audioEngine._resumePlaying() });
var res_loading = { bg_loading_jpg: "res_loading/bg_loading.jpg", loadingBar_png: "res_loading/loadingBar.png", loadingBarBg_png: "res_loading/loadingBarBg.png" },
    res = {
        effect_shoot_mp3: "res/effect_foot.mp3",
        effect_cheer_mp3: "res/effect_cheer.mp3",
        effect_xu_mp3: "res/effect_xu.mp3",
        allPicPlist_png: "res/allPicPlist.png",
        allPicPlist_plist: "res/allPicPlist.plist",
        playerPlist_png: "res/playerPlist.png",
        playerPlist_plist: "res/playerPlist.plist",
        bg_index_jpg: "res/bg_index.jpg",
        bg_guide_jpg: "res/bg_guide.jpg",
        bg_playing_jpg: "res/bg_playing.jpg",
        bg_rule_jpg: "res/bg_rule.jpg",
        bg_share_png: "res/bg_share.png",
        footballDoor_png: "res/footballDoor.png",
        bg_overBox_png: "res/bg_overBox.png",
        T_1_png: "res/T_1.png",
        T_2_png: "res/T_2.png",
        T_3_png: "res/T_3.png"
    },
    g_resources = [],
    i;
for (i in res) g_resources.push(res[i]);
var res_name = { btn_return_png: "btn_return.png", btn_start_png: "btn_start.png", btn_rule_png: "btn_rule.png", btn_know_png: "btn_know.png", btn_shoot_png: "btn_shoot.png", btn_shoot_2_png: "btn_shoot_2.png", football_png: "football.png", topGoldBg_png: "topGoldBg.png", btn_addGold_png: "btn_addGold.png", bottomBg_png: "bottomBg.png", btn_again_png: "btn_again.png", btn_share_png: "btn_share.png" };
var MyLoaderScene = cc.Scene.extend({
    loadingBarWidth: 0,
    loadingBarHeight: 0,
    init: function() {
        var a = this,
            b = a._bgLayer = cc.LayerColor.create(cc.color(255, 255, 255, 255), cc.winSize.width, cc.winSize.height);
        b.setPosition(cc.visibleRect.bottomLeft);
        a.addChild(b, 0);
        var b = [],
            c;
        for (c in res_loading) b.push(res_loading[c]);
        cc.loader.load(b, function(a, b, c) {}, function() { a.initUI() }) },
    initUI: function() {
        (this._img = new cc.Sprite(res_loading.bg_loading_jpg)).attr({ x: cc.winSize.width / 2, y: cc.winSize.height / 2 });
        this._bgLayer.addChild(this._img,
            1);
        (this.ProcessBarDown = new cc.Sprite(res_loading.loadingBarBg_png)).attr({ x: cc.winSize.width / 2, y: .11 * cc.winSize.height, anchorX: .5, anchorY: .5 });
        this._bgLayer.addChild(this.ProcessBarDown, 2);
        (this.ProcessBarUp = new cc.Sprite(res_loading.loadingBar_png)).attr({ x: 4, y: 3, anchorX: 0, anchorY: 0, scaleX: 1, scaleY: 1 });
        var a = this.ProcessBarUp.getContentSize();
        this.loadingBarWidth = a.width;
        this.loadingBarHeight = a.height;
        this.ProcessBarUp.setTextureRect(cc.rect(0, 0, 0, this.loadingBarHeight));
        this.ProcessBarDown.addChild(this.ProcessBarUp,
            2);
        this.schedule(this._startLoading, .3)
    },
    onEnter: function() { cc.Node.prototype.onEnter.call(this) },
    onExit: function() { cc.Node.prototype.onExit.call(this) },
    initWithResources: function(a, b) { "string" == typeof a && (a = [a]);
        this.resources = a || [];
        this.cb = b },
    _startLoading: function() {
        var a = this;
        a.unschedule(a._startLoading);
        cc.loader.load(a.resources, function(b, c, d) { a.ProcessBarUp.setTextureRect(cc.rect(0, 0, (1 + d) / c * a.loadingBarWidth, a.loadingBarHeight)) }, function() { a.cb && a.scheduleOnce(a.cb, .2) }) }
});
MyLoaderScene.preload = function(a, b) {
    var c = new MyLoaderScene;
    c.init();
    c.initWithResources(a, b);
    cc.director.runScene(c);
    return c };
var const_length = 60,
    const_dis1 = 10,
    const_dis2 = 45,
    const_sanJiaoLength = 40,
    const_length2 = 150,
    const_lightDis = 7,
    const_gold = 1E3,
    const_playerDisTime = .4,
    const_footballTime = .5,
    const_totalCount = 10,
    PlayingLayer = cc.Layer.extend({
        m_bg: null,
        m_layerUpdate: null,
        m_drawNode: null,
        m_listener: null,
        m_rectFoot: null,
        m_point0: null,
        m_point1: null,
        m_point2: null,
        m_arrayAct: [],
        m_btnPreLight: null,
        m_lblGold: null,
        m_curGold: const_gold,
        m_curCount: const_totalCount,
        m_keeper: null,
        m_shooter: null,
        m_football: null,
        m_chooseIndex: 0,
        m_arrayGold: [100,
            200, 500, 1E3
        ],
        m_layerPlayer: null,
        m_layerPlayer2: null,
        ctor: function() { this._super();
            this.initUI() },
        initUI: function() {
            var a = this.m_bg = new cc.Sprite(res.bg_playing_jpg);
            a.setAnchorPoint(0, 0);
            a.setPosition(0, 0);
            this.addChild(a, 0);
            var b = a.getContentSize(),
                c = new cc.Sprite(cc.spriteFrameCache.getSpriteFrame(res_name.topGoldBg_png));
            c.setAnchorPoint(.5, 1);
            c.setPosition(.5 * b.width, b.height);
            a.addChild(c, 10);
            var d = c.getContentSize(),
                e = new cc.Sprite(cc.spriteFrameCache.getSpriteFrame(res_name.btn_addGold_png)),
                f = new cc.Sprite(cc.spriteFrameCache.getSpriteFrame(res_name.btn_addGold_png));
            f.setOpacity(150);
            e = new cc.MenuItemSprite(e, f, this.addGold, this);
            e.setAnchorPoint(.5, 1);
            e.setPosition(.67 * d.width, d.height);
            f = this.m_lblGold = new cc.LabelTTF(this.m_curGold + "", "Arial", 40);
            f.setColor(cc.color(0, 0, 0, 255));
            f.setAnchorPoint(.5, .5);
            f.setPosition(.5 * d.width, .5 * d.height);
            c.addChild(f);
            d = new cc.Menu(e);
            d.setPosition(0, 0);
            c.addChild(d);
            e = new cc.Sprite(cc.spriteFrameCache.getSpriteFrame(res_name.bottomBg_png));
            e.setAnchorPoint(.5,
                0);
            e.setPosition(.5 * b.width, 0);
            a.addChild(e, 10);
            c = e.getContentSize();
            d = new cc.Menu;
            d.setPosition(0, 0);
            e.addChild(d);
            for (e = 1; 6 > e; e++) {
                var f = new cc.Sprite(cc.spriteFrameCache.getSpriteFrame("light" + e + "_1.png")),
                    h = new cc.Sprite(cc.spriteFrameCache.getSpriteFrame("light" + e + "_2.png")),
                    n = new cc.Sprite(cc.spriteFrameCache.getSpriteFrame("light" + e + "_2.png")),
                    f = new cc.MenuItemSprite(f, h, n, this.light, this);
                f.setAnchorPoint(.5, .5);
                f.setTag(e);
                h = .5 * (c.width - 5 * f.getContentSize().width - 4 * const_lightDis);
                f.setPosition(h +
                    .5 * f.getContentSize().width + (e - 1) * (f.getContentSize().width + const_lightDis), .5 * c.height);
                d.addChild(f);
                1 == e && (this.m_btnPreLight = f, f.setEnabled(!1), this.m_chooseIndex = 1)
            }
            d = new cc.Sprite(res.footballDoor_png);
            d.setAnchorPoint(.5, .5);
            d.setPosition(.52 * b.width, .75 * b.height);
            a.addChild(d);
            c = d.getContentSize();
            d = d.getPosition();
            this.m_rectFoot = cc.rect(d.x - .5 * c.width, d.y - .5 * c.height, .95 * c.width, c.height);
            this.m_point0 = cc.p(.5 * cc.winSize.width, .3 * cc.winSize.height);
            this.m_point1 = cc.p(.5 * cc.winSize.width -
                const_dis2, .3 * cc.winSize.height);
            this.m_point2 = cc.p(.5 * cc.winSize.width + const_dis2, .3 * cc.winSize.height);
            c = new cc.Sprite(cc.spriteFrameCache.getSpriteFrame(res_name.btn_shoot_png));
            d = new cc.Sprite(cc.spriteFrameCache.getSpriteFrame(res_name.btn_shoot_2_png));
            c = new cc.MenuItemSprite(c, d, this.shoot, this);
            c.setAnchorPoint(.5, .5);
            c.setPosition(.85 * b.width, .22 * b.height);
            b = new cc.Menu(c);
            b.setPosition(0, 0);
            a.addChild(b);
            this.initPlayer();
            b = this.m_drawNode = new cc.DrawNode;
            b.setPosition(0, 0);
            a.addChild(b,
                3);
            this.drawBezier(this.m_drawNode, cc.p(this.m_rectFoot.x + .5 * const_sanJiaoLength, this.m_rectFoot.y + .8 * this.m_rectFoot.height));
            this.addTouch()
        },
        initPlayer: function() {
            var a = this.m_bg.getContentSize(),
                b = this.m_layerPlayer = new cc.Layer;
            b.setPosition(0, 0);
            this.m_bg.addChild(b, 2);
            var c = this.m_keeper = new cc.Sprite(cc.spriteFrameCache.getSpriteFrame("keeper_1.png"));
            c.setAnchorPoint(.5, 0);
            c.setPosition(.5 * a.width, .61 * a.height);
            b.addChild(c, 1);
            var d = [cc.spriteFrameCache.getSpriteFrame("keeper_1.png"), cc.spriteFrameCache.getSpriteFrame("keeper_2.png"),
                    cc.spriteFrameCache.getSpriteFrame("keeper_3.png")
                ],
                d = new cc.Animation(d);
            d.setDelayPerUnit(const_playerDisTime);
            c.runAction((new cc.Animate(d)).repeatForever());
            for (d = 1; 4 > d; d++) {
                var e = new cc.Sprite(cc.spriteFrameCache.getSpriteFrame("QY" + d + "_1.png"));
                e.setAnchorPoint(.5, 0);
                e.setPosition(.45 * a.width + (d - 1) * c.getContentSize().width * 1.12, .45 * a.height);
                b.addChild(e, 3);
                e.setTag(d);
                e.scheduleOnce(function() {
                    var a = this.getTag(),
                        a = [cc.spriteFrameCache.getSpriteFrame("QY" + a + "_1.png"), cc.spriteFrameCache.getSpriteFrame("QY" +
                            a + "_2.png"), cc.spriteFrameCache.getSpriteFrame("QY" + a + "_3.png")],
                        a = new cc.Animation(a);
                    a.setDelayPerUnit(const_playerDisTime);
                    this.runAction((new cc.Animate(a)).repeatForever())
                }, .5 * Math.random())
            }
            b = this.m_layerPlayer2 = new cc.Layer;
            b.setPosition(0, 0);
            this.m_bg.addChild(b, 4);
            c = this.m_football = new cc.Sprite(cc.spriteFrameCache.getSpriteFrame(res_name.football_png));
            c.setAnchorPoint(.5, .5);
            c.setPosition(this.m_point0);
            b.addChild(c, 5);
            c = this.m_shooter = new cc.Sprite(cc.spriteFrameCache.getSpriteFrame("player_1.png"));
            c.setAnchorPoint(.5, .5);
            c.setPosition(.2 * a.width, .2 * a.height);
            b.addChild(c, 6);
            this.shooterAnc()
        },
        shooterAnc: function() {
            var a = [cc.spriteFrameCache.getSpriteFrame("player_1.png"), cc.spriteFrameCache.getSpriteFrame("player_2.png"), cc.spriteFrameCache.getSpriteFrame("player_3.png")],
                a = new cc.Animation(a);
            a.setDelayPerUnit(const_playerDisTime);
            this.m_shooter.runAction((new cc.Animate(a)).repeatForever()) },
        keeper: function(a) {
            var b = a,
                c = this,
                d = this.m_rectFoot,
                e = cc.rect(d.x + .2 * d.width, d.y, .6 * d.width, .6 * d.height),
                f = cc.rect(d.x, d.y, .2 * d.width, .15 * d.height),
                h = cc.rect(d.x, d.y + .15 * d.height, .2 * d.width, d.height * (.6 - .15)),
                n = cc.rect(d.x + .8 * d.width, d.y, .2 * d.width, .15 * d.height),
                u = cc.rect(d.x + .8 * d.width, d.y + .15 * d.height, .2 * d.width, d.height * (.6 - .15)),
                t = cc.rect(d.x, d.y + .6 * d.height, .5 * d.width, .4 * d.height),
                r = cc.rect(d.x + .5 * d.width, d.y + .6 * d.height, .5 * d.width, .4 * d.height),
                k = this.m_keeper.getPosition();
            this.m_keeper.stopAllActions();
            var m = !1;
            if (.4 > Math.random()) {
                var m = !0,
                    d = Math.random() * this.m_rectFoot.width * .2,
                    v = Math.random() *
                    this.m_rectFoot.height + this.m_rectFoot.y,
                    d = a.x <= this.m_rectFoot.x + .5 * this.m_rectFoot.width ? d + (this.m_rectFoot.x + .8 * this.m_rectFoot.width) : d + this.m_rectFoot.x;
                a = cc.p(d, v)
            }
            var s = function() {
                var a = c.m_curGold;
                c.m_chooseIndex <= c.m_arrayGold.length && (a = c.m_arrayGold[c.m_chooseIndex - 1]);
                m ? (cc.audioEngine.playEffect(res.effect_cheer_mp3), c.changeGold(a)) : (cc.audioEngine.playEffect(res.effect_xu_mp3), c.changeGold(-a));
                c.result() };
            setTimeout(function() {
                var d = .4 * const_footballTime;
                if (cc.rectContainsPoint(e,
                        a)) {
                    var g = new cc.MoveBy(d, a.x - k.x, 0),
                        p = [cc.spriteFrameCache.getSpriteFrame("keeperAct_1.png"), cc.spriteFrameCache.getSpriteFrame("keeperAct_2.png")],
                        q = new cc.Animation(p);
                    q.setDelayPerUnit(d / p.length);
                    d = new cc.Animate(q);
                    c.m_keeper.runAction(cc.sequence(cc.spawn(g, d), cc.callFunc(function() { s();
                        m = !0;
                        c.footballDrop(m, b) }, c))) } else if (cc.rectContainsPoint(t, a)) g = c.m_keeper.getContentSize(), c.m_keeper.setAnchorPoint(0, .85), c.m_keeper.setPosition(k.x - .5 * g.width, k.y + .85 * g.height), g = new cc.MoveTo(d, a), p = [cc.spriteFrameCache.getSpriteFrame("keeperAct_3.png"), cc.spriteFrameCache.getSpriteFrame("keeperAct_4.png")], q = new cc.Animation(p), q.setDelayPerUnit(d / p.length), d = new cc.Animate(q), c.m_keeper.runAction(cc.sequence(cc.spawn(g, d), cc.callFunc(function() { s();
                    c.footballDrop(m, b) }, c)));
                else if (cc.rectContainsPoint(r, a)) g = c.m_keeper.getContentSize(), c.m_keeper.setScaleX(-1), c.m_keeper.setAnchorPoint(0, .85), c.m_keeper.setPosition(k.x + .5 * g.width, k.y + .85 * g.height), g = new cc.MoveTo(d, a), p = [cc.spriteFrameCache.getSpriteFrame("keeperAct_3.png"),
                    cc.spriteFrameCache.getSpriteFrame("keeperAct_4.png")
                ], q = new cc.Animation(p), q.setDelayPerUnit(d / p.length), d = new cc.Animate(q), c.m_keeper.runAction(cc.sequence(cc.spawn(g, d), cc.callFunc(function() { s();
                    c.footballDrop(m, b) }, c)));
                else if (cc.rectContainsPoint(f, a)) {
                    g = c.m_keeper.getContentSize();
                    c.m_keeper.setAnchorPoint(0, .85);
                    g = cc.p(k.x - .5 * g.width, k.y + .85 * g.height);
                    c.m_keeper.setPosition(g);
                    var l = 3;
                    c.m_keeper.schedule(function() {
                        this.initWithSpriteFrameName("keeperAct_" + l + ".png");
                        5 > l ? this.setAnchorPoint(0,
                            .85) : 5 == l ? this.setAnchorPoint(0, .7) : 6 == l ? this.setAnchorPoint(0, .5) : this.setAnchorPoint(.1, .15);
                        l++
                    }, d / 7, 6, d / 7);
                    g = new cc.MoveTo(d, a);
                    c.m_keeper.runAction(cc.sequence(g, cc.callFunc(function() { s();
                        c.footballDrop(m, b) }, c)))
                } else cc.rectContainsPoint(n, a) ? (g = c.m_keeper.getContentSize(), c.m_keeper.setScaleX(-1), c.m_keeper.setAnchorPoint(0, .85), g = cc.p(k.x + .5 * g.width, k.y + .85 * g.height), c.m_keeper.setPosition(g), l = 3, c.m_keeper.schedule(function() {
                    this.initWithSpriteFrameName("keeperAct_" + l + ".png");
                    5 > l ? this.setAnchorPoint(0,
                        .85) : 5 == l ? this.setAnchorPoint(0, .7) : 6 == l ? this.setAnchorPoint(0, .5) : this.setAnchorPoint(.1, .15);
                    l++
                }, d / 7, 6, d / 7), g = new cc.MoveTo(d, a), c.m_keeper.runAction(cc.sequence(g, cc.callFunc(function() { s();
                    c.footballDrop(m, b) }, c)))) : cc.rectContainsPoint(h, a) ? (g = c.m_keeper.getContentSize(), c.m_keeper.setAnchorPoint(0, .85), c.m_keeper.setPosition(k.x - .5 * g.width, k.y + .85 * g.height), l = 3, c.m_keeper.schedule(function() {
                    this.initWithSpriteFrameName("keeperAct_" + l + ".png");
                    5 > l ? this.setAnchorPoint(0, .85) : this.setAnchorPoint(0,
                        .7);
                    l++
                }, d / 3, 2, d / 3), g = new cc.MoveTo(d, a), c.m_keeper.runAction(cc.sequence(g, cc.callFunc(function() { s();
                    c.footballDrop(m, b) }, c)))) : cc.rectContainsPoint(u, a) && (g = c.m_keeper.getContentSize(), c.m_keeper.setScaleX(-1), c.m_keeper.setAnchorPoint(0, .85), c.m_keeper.setPosition(k.x + .5 * g.width, k.y + .85 * g.height), l = 3, c.m_keeper.schedule(function() { this.initWithSpriteFrameName("keeperAct_" + l + ".png");
                    5 > l ? this.setAnchorPoint(0, .85) : this.setAnchorPoint(0, .7);
                    l++ }, d / 3, 2, d / 3), g = new cc.MoveTo(d, a), c.m_keeper.runAction(cc.sequence(g,
                    cc.callFunc(function() { s();
                        c.footballDrop(m, b) }, c))))
            }, 600 * const_footballTime)
        },
        footballDrop: function(a, b) {
            if (a) var c = b.y - this.m_rectFoot.y,
                c = new cc.MoveBy(c / 140, 0, -c),
                c = new cc.EaseBounceOut(c);
            else var c = cc.p(this.m_rectFoot.x + .5 * this.m_rectFoot.width, this.m_rectFoot.y),
                d = cc.p(b.x - c.x, b.y - c.y),
                d = cc.p(5 * d.x, 5 * d.y),
                c = cc.p(d.x + c.x, d.y + c.y),
                c = new cc.MoveTo(1, c);
            this.m_football.runAction(c);
            this.scheduleOnce(function() {
                var a = this.m_keeper;
                a.initWithSpriteFrameName("keeper_1.png");
                a.setAnchorPoint(.5,
                    0);
                a.setPosition(.5 * cc.winSize.width, .61 * cc.winSize.height);
                var b = [cc.spriteFrameCache.getSpriteFrame("keeper_1.png"), cc.spriteFrameCache.getSpriteFrame("keeper_2.png"), cc.spriteFrameCache.getSpriteFrame("keeper_3.png")],
                    b = new cc.Animation(b);
                b.setDelayPerUnit(const_playerDisTime);
                a.runAction((new cc.Animate(b)).repeatForever())
            }, .5)
        },
        addGold: function(a) {},
        shoot: function(a) {
            if (0 == this.m_chooseIndex) alert("请选择游戏币...");
            else if (0 >= this.m_arrayAct.length) alert("请选择射门的方向...");
            else if (this.m_chooseIndex <=
                this.m_arrayGold.length && this.m_curGold < this.m_arrayGold[this.m_chooseIndex - 1]) alert("您没有足够的金币");
            else {
                cc.audioEngine.playEffect(res.effect_shoot_mp3);
                this.m_curCount--;
                var b = this;
                b.addLayerUpdate();
                a = this.m_bg.getContentSize();
                this.m_shooter.stopAllActions();
                this.m_shooter.setPosition(.4 * a.width, .35 * a.height);
                a = [cc.spriteFrameCache.getSpriteFrame("shoot_1.png"), cc.spriteFrameCache.getSpriteFrame("shoot_2.png"), cc.spriteFrameCache.getSpriteFrame("shoot_3.png"), cc.spriteFrameCache.getSpriteFrame("shoot_4.png")];
                a = new cc.Animation(a);
                a.setDelayPerUnit(.08);
                a.setLoops(1);
                a = new cc.TargetedAction(this.m_shooter, new cc.Animate(a));
                var c = new cc.BezierTo(const_footballTime, this.m_arrayAct),
                    c = new cc.EaseCircleActionOut(c),
                    d = new cc.ScaleTo(const_footballTime, .4);
                this.m_football.runAction(cc.sequence(a, cc.callFunc(function() { b.shooterAnc();
                    b.keeper(b.m_arrayAct[2]) }, this.m_shooter), cc.spawn(c, d), cc.callFunc(function() { this.removeFromParent(!1);
                    b.m_layerPlayer.addChild(this, 2) }, this.m_football)))
            }
        },
        changeGold: function(a) {
            a =
                this.m_curGold + a;
            0 <= a ? (this.m_curGold = a, this.m_lblGold.setString(a + "")) : alert("金币不足...")
        },
        result: function() {
            this.scheduleOnce(function() {
                var a = 1;
                if (0 < this.m_curCount) {
                    if (0 < this.m_curGold) { this.m_layerPlayer.removeFromParent(!0);
                        this.m_layerPlayer2.removeFromParent(!0);
                        this.initPlayer();
                        this.delLayerUpdate();
                        return }
                    a = 1 } else a = this.m_curGold > const_gold ? 2 : 3;
                this.delLayerUpdate();
                var b = new cc.LayerColor(cc.color(0, 0, 0, 150), cc.winSize.width, cc.winSize.height);
                b.setPosition(0, 0);
                this.addChild(b, 10);
                var c =
                    new cc.Sprite(res.bg_index_jpg);
                c.setOpacity(0);
                var d = new cc.Sprite(res.bg_index_jpg);
                d.setOpacity(0);
                c = new cc.MenuItemSprite(c, d, function() {}, this);
                c.setAnchorPoint(0, 0);
                c.setPosition(0, 0);
                c = new cc.Menu(c);
                c.setPosition(0, 0);
                b.addChild(c, 1);
                d = new cc.Sprite(res.bg_overBox_png);
                d.setAnchorPoint(.5, .5);
                d.setPosition(.5 * cc.winSize.width, .65 * cc.winSize.height);
                b.addChild(d);
                var e = d.getContentSize(),
                    c = new cc.Sprite(res["T_" + a + "_png"]);
                c.setAnchorPoint(.5, .5);
                c.setPosition(.5 * e.width, .5 * e.height);
                d.addChild(c);
                d = c.getContentSize();
                1 != a && (a = new cc.LabelTTF(this.m_curGold + "", "Arial", 30), a.setAnchorPoint(.5, .5), a.setPosition(.5 * d.width, .72 * d.height), c.addChild(a));
                a = new cc.Menu;
                a.setPosition(0, 0);
                b.addChild(a, 3);
                b = new cc.Sprite(cc.spriteFrameCache.getSpriteFrame(res_name.btn_again_png));
                c = new cc.Sprite(cc.spriteFrameCache.getSpriteFrame(res_name.btn_again_png));
                c.setOpacity(150);
                b = new cc.MenuItemSprite(b, c, this.again, this);
                b.setAnchorPoint(.5, .5);
                b.setPosition(.25 * cc.winSize.width, .28 * cc.winSize.height);
                a.addChild(b);
                b = new cc.Sprite(cc.spriteFrameCache.getSpriteFrame(res_name.btn_share_png));
                c = new cc.Sprite(cc.spriteFrameCache.getSpriteFrame(res_name.btn_share_png));
                c.setOpacity(150);
                b = new cc.MenuItemSprite(b, c, this.share, this);
                b.setAnchorPoint(.5, .5);
                b.setPosition(.75 * cc.winSize.width, .28 * cc.winSize.height);
                a.addChild(b)
            }, 1)
        },
        again: function(a) { cc.director.runScene(new PlayingScene) },
        share: function(a) {
            var b = new cc.Menu;
            b.setPosition(0, 0);
            this.addChild(b, 20);
            a = new cc.MenuItemImage(res.bg_share_png, res.bg_share_png,
                function() { b.removeFromParent() }, this);
            a.setAnchorPoint(0, 0);
            a.setPosition(0, 0);
            b.addChild(a)
        },
        light: function(a) {
            if (0 >= this.m_curGold) alert("您没有足够的金币");
            else {
                var b = a.getTag();
                b <= this.m_arrayGold.length && this.m_curGold < this.m_arrayGold[b - 1] ? alert("您没有足够的金币") : (a.setEnabled(!1), this.m_chooseIndex = b, this.m_btnPreLight && this.m_btnPreLight.setEnabled(!0), this.m_btnPreLight = a) } },
        drawBezier: function(a, b) {
            a.clear();
            var c = [b, cc.p(b.x - .5 * const_sanJiaoLength, b.y - const_sanJiaoLength), cc.p(b.x + .5 * const_sanJiaoLength,
                b.y - const_sanJiaoLength)];
            a.drawPoly(c, cc.color(255, 255, 0, 150), 2, cc.color(255, 255, 0, 150));
            var c = b.y - 1.5 * (b.y - this.m_rectFoot.y) - const_length2,
                d = cc.p(b.x, .5 * (this.m_rectFoot.y + b.y)),
                e = 2.5 * Math.atan((d.x - this.m_point0.x) / (d.y - this.m_point0.y)),
                d = const_length * Math.sin(e),
                e = const_length * Math.cos(e),
                d = cc.p(this.m_point0.x + d, this.m_point0.y + e),
                c = cc.p(b.x, c);
            this.m_arrayAct[0] = d;
            this.m_arrayAct[1] = c;
            this.m_arrayAct[2] = b;
            b = cc.p(b.x, b.y - const_sanJiaoLength);
            c = b.y - 1.5 * (b.y - (this.m_rectFoot.y - const_sanJiaoLength)) -
                const_length2;
            d = cc.p(b.x - const_dis1, .5 * (this.m_rectFoot.y - const_sanJiaoLength + b.y));
            e = 2.5 * Math.atan((d.x - this.m_point1.x) / (d.y - this.m_point1.y));
            d = const_length * Math.sin(e);
            e = const_length * Math.cos(e);
            d = cc.p(this.m_point1.x + d, this.m_point1.y + e);
            a.drawCubicBezier(this.m_point1, d, cc.p(b.x - const_dis1, c), cc.p(b.x - const_dis1, b.y), 50, 5, cc.color(255, 255, 0, 150));
            var e = cc.p(b.x + const_dis1, this.m_rectFoot.y - const_sanJiaoLength),
                f = 2.5 * Math.atan((e.x - this.m_point2.x) / (e.y - this.m_point2.y)),
                e = const_length * Math.sin(f),
                f = const_length * Math.cos(f),
                e = cc.p(this.m_point2.x + e, this.m_point2.y + f);
            a.drawCubicBezier(this.m_point2, e, cc.p(b.x + const_dis1, c), cc.p(b.x + const_dis1, b.y), 50, 5, cc.color(255, 255, 0, 150));
            a.drawCubicBezier(this.m_point1, d, e, this.m_point2, 50, 5, cc.color(255, 255, 0, 150))
        },
        addTouch: function() {
            var a = this,
                b = null,
                c = cc.EventListener.create({
                    event: cc.EventListener.TOUCH_ONE_BY_ONE,
                    onTouchBegan: function(c, e) {
                        var f = c.getLocation();
                        if (f.x >= a.m_rectFoot.x + .5 * const_sanJiaoLength && f.x <= a.m_rectFoot.x + a.m_rectFoot.width -
                            .5 * const_sanJiaoLength && f.y >= a.m_rectFoot.y && f.y <= a.m_rectFoot.y + a.m_rectFoot.height) {
                            var h = e.getCurrentTarget();
                            a.drawBezier(h, f);
                            b = f }
                        return !0
                    },
                    onTouchMoved: function(c, e) {
                        var f = c.getDelta();
                        if (b && (f = cc.p(b.x + f.x, b.y + f.y), f.x >= a.m_rectFoot.x + .5 * const_sanJiaoLength && f.x <= a.m_rectFoot.x + a.m_rectFoot.width - .5 * const_sanJiaoLength && f.y >= a.m_rectFoot.y && f.y <= a.m_rectFoot.y + a.m_rectFoot.height)) {
                            var h = e.getCurrentTarget();
                            a.drawBezier(h, f);
                            b = f } },
                    onTouchEnded: function(a, b) {},
                    onTouchCanceled: function(a, b) {}
                });
            cc.eventManager.addListener(c, this.m_drawNode)
        },
        addLayerUpdate: function(a) { a = this.m_layerUpdate = new cc.LayerColor(cc.color(0, 0, 0, 0), cc.winSize.width, cc.winSize.height);
            a.setPosition(0, 0);
            this.addChild(a, 100);
            a.getContentSize();
            var b = new cc.Sprite(res.bg_index_jpg);
            b.setOpacity(0);
            var c = new cc.Sprite(res.bg_index_jpg);
            c.setOpacity(0);
            b = new cc.MenuItemSprite(b, c, function() {}, this);
            b.setAnchorPoint(0, 0);
            b.setPosition(0, 0);
            c = new cc.Menu(b);
            c.setPosition(0, 0);
            a.addChild(c, 1);
            b.getContentSize() },
        delLayerUpdate: function() {
            this.m_layerUpdate &&
                (this.m_layerUpdate.removeFromParent(!0), this.m_layerUpdate = null)
        }
    }),
    PlayingScene = cc.Scene.extend({ ctor: function() { this._super();
            var a = new PlayingLayer;
            this.addChild(a) } });
var MyLayer = cc.Layer.extend({
        m_bg: null,
        m_layerUpdate: null,
        m_drawNode: null,
        m_listener: null,
        m_rectFoot: null,
        m_point0: null,
        m_point1: null,
        m_point2: null,
        m_arrayAct: [],
        ctor: function() { this._super();
            this.initUI() },
        initUI: function() {
            var a = this.m_bg = new cc.Sprite(res.bg_index_jpg);
            a.setAnchorPoint(0, 0);
            a.setPosition(0, 0);
            this.addChild(a, 0);
            var b = a.getContentSize(),
                c = new cc.Menu;
            c.setPosition(0, 0);
            a.addChild(c, 0);
            var a = new cc.Sprite(cc.spriteFrameCache.getSpriteFrame(res_name.btn_start_png)),
                d = new cc.Sprite(cc.spriteFrameCache.getSpriteFrame(res_name.btn_start_png));
            d.setOpacity(150);
            a = new cc.MenuItemSprite(a, d, this.start, this);
            a.setAnchorPoint(.5, .5);
            a.setPosition(.5 * b.width, .6 * b.height);
            c.addChild(a);
            a = new cc.Sprite(cc.spriteFrameCache.getSpriteFrame(res_name.btn_rule_png));
            d = new cc.Sprite(cc.spriteFrameCache.getSpriteFrame(res_name.btn_rule_png));
            d.setOpacity(150);
            a = new cc.MenuItemSprite(a, d, this.rule, this);
            a.setAnchorPoint(.5, .5);
            a.setPosition(.5 * b.width, .5 * b.height);
            c.addChild(a)
        },
        start: function() {
            var a = this.m_bg;
            a.removeAllChildren(!0);
            a.initWithFile(res.bg_guide_jpg);
            a.setAnchorPoint(0, 0);
            var b = a.getContentSize(),
                c = new cc.Menu;
            c.setPosition(0, 0);
            a.addChild(c);
            var a = new cc.Sprite(cc.spriteFrameCache.getSpriteFrame(res_name.btn_know_png)),
                d = new cc.Sprite(cc.spriteFrameCache.getSpriteFrame(res_name.btn_know_png));
            d.setOpacity(150);
            a = new cc.MenuItemSprite(a, d, function() { cc.director.runScene(new PlayingScene) }, this);
            a.setAnchorPoint(.5, .5);
            a.setPosition(.5 * b.width, .08 * b.height);
            c.addChild(a, 1)
        },
        award: function() {
            var a = new cc.Menu;
            a.setPosition(0, 0);
            this.addChild(a,
                10);
            var b = new cc.MenuItemImage(res.bg_award_jpg, res.bg_award_jpg, function() {}, this);
            b.setAnchorPoint(0, 0);
            b.setPosition(0, 0);
            a.addChild(b, 0);
            var b = new cc.Sprite(cc.spriteFrameCache.getSpriteFrame(res_name.btn_return_png)),
                c = new cc.Sprite(cc.spriteFrameCache.getSpriteFrame(res_name.btn_return_png));
            c.setOpacity(150);
            b = new cc.MenuItemSprite(b, c, function() { a.removeFromParent(!0) }, this);
            b.setAnchorPoint(.5, .5);
            b.setPosition(.5 * cc.winSize.width, .08 * cc.winSize.height);
            a.addChild(b, 1)
        },
        rule: function() {
            var a =
                new cc.Menu;
            a.setPosition(0, 0);
            this.addChild(a, 10);
            var b = new cc.MenuItemImage(res.bg_rule_jpg, res.bg_rule_jpg, function() {}, this);
            b.setAnchorPoint(0, 0);
            b.setPosition(0, 0);
            a.addChild(b, 0);
            var b = new cc.Sprite(cc.spriteFrameCache.getSpriteFrame(res_name.btn_return_png)),
                c = new cc.Sprite(cc.spriteFrameCache.getSpriteFrame(res_name.btn_return_png));
            c.setOpacity(150);
            b = new cc.MenuItemSprite(b, c, function() { a.removeFromParent(!0) }, this);
            b.setAnchorPoint(.5, .5);
            b.setPosition(.5 * cc.winSize.width, .08 * cc.winSize.height);
            a.addChild(b, 1)
        },
        addLayerUpdate: function(a) { a = this.m_layerUpdate = new cc.LayerColor(cc.color(0, 0, 0, 150), cc.winSize.width, cc.winSize.height);
            a.setPosition(0, 0);
            this.addChild(a, 100);
            a.getContentSize();
            var b = new cc.Sprite(res.bg_index_jpg);
            b.setOpacity(0);
            var c = new cc.Sprite(res.bg_index_jpg);
            c.setOpacity(0);
            b = new cc.MenuItemSprite(b, c, function() {}, this);
            b.setAnchorPoint(0, 0);
            b.setPosition(0, 0);
            c = new cc.Menu(b);
            c.setPosition(0, 0);
            a.addChild(c, 1);
            b.getContentSize() },
        delLayerUpdate: function() {
            this.m_layerUpdate &&
                (this.m_layerUpdate.removeFromParent(!0), this.m_layerUpdate = null)
        }
    }),
    MyScene = cc.Scene.extend({ ctor: function() { this._super();
            var a = new MyLayer;
            this.addChild(a) } });
