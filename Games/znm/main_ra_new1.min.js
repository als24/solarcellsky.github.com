var loadCanvas = {
    step: 0,
    animation_interval: 60,
    init: function() {
        var _this = this;
        _this.loadImg(pics, _this.callback)
    },
    callback: function() {
        $(".loadPage").hide();
        layout.init()
    },
    load_width: function(n, callback) {
        var _this = this;
        var varName;
        var animation = function() {
            var step = _this.step;
            if (step <= n) {
                $(".loadbar").css("width", step + "%");
                if (step >= 100) {
                    setTimeout(function() {
                        console.log("load end");
                        callback()
                    }, 500)
                }
                _this.step++
            } else {
                clearInterval(varName)
            }
        };
        clearInterval(_this.varName);
        _this.varName = setInterval(animation, _this.animation_interval)
    },
    loadImg: function(pics, callback) {
        var _this = this;
        var index = 0;
        var len = pics.length;
        var img = new Image();
        var flag = false;
        var load = function() {
            img.src = pics[index];
            img.onload = function() {
                var _w = Math.floor((index + 1) / len * 100);
                _this.load_width(_w, callback);
                index++;
                if (index < len) {
                    load()
                } else {}
            };
            return img
        };
        if (len > 0) {
            load()
        } else {
            progress("100%")
        }
        return {
            pics: pics,
            load: load
        }
    }
};
loadCanvas.init();

function randomsort(a, b) {
    return Math.random() > 0.5 ? -1 : 1
}
layout = {
    _len: $(".layout").length,
    currPage: 0,
    score: 0,
    totalTopic: 0,
    curTopic: 0,
    preLoadLen: 10,
    topic: [],
    time: topicTime,
    init: function() {
        var _this = this;
        _this._w = $(window).width();
        _this._h = $(window).height();
        $(".global,.screen,.layout,#fixedBg,.layout .inner").width(_this._w).height(_this._h);
        _this.page();
        _this.getData();
        _this.active();
        setTimeout(function() {
            _this.currPage++;
            _this.page()
        }, 4000)
    },
    page: function(i) {
        var _this = this;
        var _h = _h || _this._h;
        $(".layout").removeClass("animate");
        $(".layout").eq(_this.currPage).addClass("animate")
    },
    getData: function() {
        var _this = this;
        $.getScript("./d.js?0", function() {
            _this.topic1 = _this.getArrayItems(d.data, d.data.length);
            _this.topic2 = _this.getArrayItems(d.data1, d.data1.length);
            _this.topic = _this.topic1.concat(_this.topic2);
            _this.totalTopic = _this.totalTopic == 0 ? _this.topic.length : _this.totalTopic;
            for (var i = 0; i < _this.preLoadLen; i++) {
                _this.loadNextImg(i)
            }
            _this.nextTopic();
            _this.share = d.share;
            _this.percent = d.percent
        })
    },
    nextTopic: function() {
        var _this = this;
        console.log(_this.curTopic);
        if (_this.curTopic < _this.totalTopic) {
            _this.loadNextImg(_this.curTopic + _this.preLoadLen);
            $(".processWrap .process").css("width", parseInt((_this.curTopic + 1) * 100 / _this.totalTopic) + "%");
            $(".proportion").html((_this.curTopic + 1) + "/" + _this.totalTopic);
            var t = _this.topic[_this.curTopic];
            var h = "";
            h += "<h2>" + t.title + "</h2>" + '<div class="bd"><ul class="piclist">';
            var s = t.images;
            var newImages = s.sort(randomsort);
            for (var i = 0; i < newImages.length; i++) {
                h += '<li data-type="' + newImages[i].selected + '"><img src="' + newImages[i].img + '"></li>'
            }
            h += "</ul></div>";
            $(".topics").html(h);
            t.images.length == 6 ? $(".topics").addClass("six") : $(".topics").removeClass("six");
            _this.curTopic++;
            $(".piclist li").off().on("tap", function() {
                $(this).toggleClass("select")
            })
        } else {
            _this.time = 0
        }
    },
    loadNextImg: function(idx) {
        var _this = this;
        if (idx < _this.topic.length) {
            var t = _this.topic[idx];
            for (var i = 0; i < t.images.length; i++) {
                var img = new Image();
                img.src = t.images[i].img;
                var load = function() {
                    img.onload = function() {
                        console.log(img.src + "被预加载")
                    };
                    return img
                }
            }
        }
    },
    getArrayItems: function(arr, num) {
        var temp_array = new Array();
        for (var index in arr) {
            temp_array.push(arr[index])
        }
        var return_array = new Array();
        for (var i = 0; i < num; i++) {
            if (temp_array.length > 0) {
                var arrIndex = Math.floor(Math.random() * temp_array.length);
                return_array[i] = temp_array[arrIndex];
                temp_array.splice(arrIndex, 1)
            } else {
                break
            }
        }
        return return_array
    },
    countDown: function() {
        var _this = this;
        $(".time").html(_this.time);
        _this.time--;
        if (_this.time >= 0) {
            setTimeout(function() {
                _this.countDown()
            }, 1000)
        } else {
            _this.showEnd()
        }
    },
    checkTopic: function() {
        var isRight = true;
        $(".piclist li[data-type=true]").each(function() {
            if (!$(this).hasClass("select")) {
                $(this).addClass("miss");
                isRight = false
            } else {
                $(this).addClass("right")
            }
        });
        $(".piclist li[data-type=false]").each(function() {
            if ($(this).hasClass("select")) {
                isRight = false;
                $(this).addClass("wrong")
            }
        });
        return isRight
    },
    showEnd: function() {
        var _this = this;
        var share = {};
        for (var i = 0; i < _this.share.length; i++) {
            if (_this.score >= _this.share[i].min && _this.score <= _this.share[i].max) {
                share = _this.share[i]
            }
        }
        $(".result .pass").append('<img src="' + share.resultImg + '">');
        $(".result .passNum p").html(_this.score);
        $(".result .passPer p").html("打败全国" + _this.percent[_this.score] + "%用户");
        $(".result .info").html("<p>" + share.resultDesc + "</p>");
        shareData.desc = share.shareDesc;
        _this.currPage = _this._len - 1;
        _this.page()
    },
    active: function() {
        var _this = this;
        $(".start").on("tap", function() {
            _this.currPage++;
            _this.page();
            $(".time_layout").show();
            setTimeout(function() {
                $(".time_layout").hide()
            }, 2000);
            setTimeout(function() {
                _this.countDown()
            }, 1000)
        });
        $(".time_layout").on("tap", function() {
            $(this).hide()
        });
        $(".submit").on("tap", function() {
            if ($(".piclist li.select").length > 0) {
                var isRight = _this.checkTopic();
                isRight && _this.score++;
                $(".score").html("答对: " + _this.score + " 题");
                setTimeout(function() {
                    _this.nextTopic()
                }, 500)
            }
        });
        $(".reflash").on("tap", function() {
            _this.nextTopic()
        });
        $(".reStart").on("tap", function() {
            window.location.href = window.location.href
        });
        $(".piclist li").off().on("tap", function() {
            $(this).toggleClass("select")
        });
        $(".btn").on("touchstart", function() {
            $(this).addClass("down")
        }).on("touchend", function() {
            $(this).removeClass("down")
        })
    }
};
(function() {
    var _getScript = function(url, callback) {
        var head = document.getElementsByTagName("head")[0],
            js = document.createElement("script");
        js.setAttribute("type", "text/javascript");
        js.setAttribute("src", url);
        head.appendChild(js);
        var callbackFn = function() {
            if (typeof callback === "function") {
                callback()
            }
        };
        if (document.all) {
            js.onreadystatechange = function() {
                if (js.readyState == "loaded" || js.readyState == "complete") {
                    callbackFn()
                }
            }
        } else {
            js.onload = function() {
                callbackFn()
            }
        }
    };
    if (Zepto) {
        $.getScript = _getScript
    }
})();
var shareB = document.querySelector(".share_btn");
shareB.addEventListener("click", function() {
    alert('分享提示')
});
var UA = function() {
    var userAgent = navigator.userAgent.toLowerCase();
    return {
        ipad: /ipad/.test(userAgent),
        iphone: /iphone/.test(userAgent),
        android: /android/.test(userAgent),
        qqnews: /qqnews/.test(userAgent),
        weixin: /micromessenger/.test(userAgent),
        qqnews_version: userAgent.match(/qqnews/i) == "qqnews" ? userAgent.split("qqnews/")[1] : ""
    }
};

function compareVersions(v1, comparator, v2) {
    comparator = comparator == "=" ? "==" : comparator;
    var v1parts = v1.split("."),
        v2parts = v2.split(".");
    var maxLen = Math.max(v1parts.length, v2parts.length);
    var part1, part2;
    var cmp = 0;
    for (var i = 0; i < maxLen && !cmp; i++) {
        part1 = parseInt(v1parts[i], 10) || 0;
        part2 = parseInt(v2parts[i], 10) || 0;
        if (part1 < part2) {
            cmp = 1
        }
        if (part1 > part2) {
            cmp = -1
        }
    }
    return eval("0" + comparator + cmp)
}

function compareVersions(v1, comparator, v2) {
    comparator = comparator == "=" ? "==" : comparator;
    var v1parts = v1.split("."),
        v2parts = v2.split(".");
    var maxLen = Math.max(v1parts.length, v2parts.length);
    var part1, part2;
    var cmp = 0;
    for (var i = 0; i < maxLen && !cmp; i++) {
        part1 = parseInt(v1parts[i], 10) || 0;
        part2 = parseInt(v2parts[i], 10) || 0;
        if (part1 < part2) {
            cmp = 1
        }
        if (part1 > part2) {
            cmp = -1
        }
    }
    return eval("0" + comparator + cmp)
}

function onBridgeReady() {
    WeixinJSBridge.on("menu:share:timeline", function(e) {
        var data = {
            img_width: "120",
            img_height: "120",
            img_url: shareData.img,
            link: shareData.link,
            desc: shareData.title,
            title: shareData.desc
        };
        WeixinJSBridge.invoke("shareTimeline", data, function(res) {
            WeixinJSBridge.log(res.err_msg)
        })
    });
    WeixinJSBridge.on("menu:share:weibo", function() {
        WeixinJSBridge.invoke("shareWeibo", {
            "content": shareData.desc,
            "url": shareData.link
        }, function(res) {
            WeixinJSBridge.log(res.err_msg)
        })
    });
    WeixinJSBridge.on("menu:share:appmessage", function(argv) {
        WeixinJSBridge.invoke("sendAppMessage", {
            img_width: "120",
            img_height: "120",
            img_url: shareData.img,
            link: shareData.link,
            desc: shareData.desc,
            title: shareData.title
        }, function(res) {
            WeixinJSBridge.log(res.err_msg)
        })
    })
}
document.addEventListener("WeixinJSBridgeReady", function() {
    onBridgeReady()
});