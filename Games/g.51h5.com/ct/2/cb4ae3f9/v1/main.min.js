var LoadingPanel = function(t) {
    function e() {
        t.call(this),
        this.bg = new egret.Sprite,
        this.w = 0,
        this.h = 0,
        this.mySheet = RES.getRes("load"),
        this.createView()
    }
    __extends(e, t);
    var i = (__define, e);
    return p = i.prototype,
    p.createView = function() {
        this.w = egret.MainContext.instance.stage.stageWidth,
        this.h = egret.MainContext.instance.stage.stageHeight,
        this.bg.graphics.beginFill(3223857, 1),
        this.bg.graphics.drawRect(0, 0, this.w, this.h),
        this.bg.graphics.endFill(),
        this.bg.width = this.w,
        this.bg.height = this.h,
        this.addChild(this.bg),
        this.touchEnabled = !0,
        this.pgBg = new egret.Bitmap,
        this.pgBg.anchorOffsetX = .5 * this.pgBg.width,
        this.pgBg.anchorOffsetY = .5 * this.pgBg.height,
        this.pgBg.texture = this.mySheet.getTexture("pgBg"),
        this.pgBg.x = this.w / 2,
        this.pgBg.y = this.h / 2,
        this.addChild(this.pgBg),
        this.pgBar = new egret.Bitmap,
        this.pgBar.anchorOffsetX = .5 * this.pgBg.width,
        this.pgBar.anchorOffsetY = .5 * this.pgBg.height,
        this.pgBar.texture = this.mySheet.getTexture("pgBar"),
        this.pgBar.x = this.w / 2 - 34,
        this.pgBar.y = this.h / 2,
        this.addChild(this.pgBar),
        this.textField = new egret.TextField,
        this.textField.size = 24,
        this.textField.textColor = 16777215,
        this.textField.bold = !0,
        this.textField.stroke = 1,
        this.textField.strokeColor = 0,
        this.addChild(this.textField),
        this.textField.width = 100,
        this.textField.x = this.w / 2 - this.textField.width / 2,
        this.textField.y = this.h / 2 - this.textField.height / 2 - 10,
        this.textField.textAlign = "center",
        this.textField.text = "0%"
    },
    p.setProgress = function(t, e) {
        var i = Math.round(t / e * 100);
        this.textField.text = i + "%",
        this.pgBar.width = 282 * (t / e)
    },
    e
} (egret.Sprite);
egret.registerClass(LoadingPanel, "LoadingPanel");
var BasePanel = function(t) {
    function e() {
        t.call(this),
        this.w = 0,
        this.h = 0,
        this.w = GameConfig.curWidth(),
        this.h = GameConfig.curHeight(),
        this.initPanel()
    }
    __extends(e, t);
    var i = (__define, e);
    return p = i.prototype,
    p.initPanel = function() {},
    p.initData = function() {},
    p.onEnter = function() {},
    p.onExit = function() {},
    p.closePanel = function() {
        PopUpManager.removePopUp(this)
    },
    p.getWidth = function() {
        return this.width
    },
    p.getHeight = function() {
        return this.height
    },
    e
} (egret.DisplayObjectContainer);
egret.registerClass(BasePanel, "BasePanel");
var ShareIconPanel = function(t) {
    function e() {
        t.call(this),
        this.bg = new egret.Sprite,
        this.shareIconRender = new ShareIconRender,
        this.initUI()
    }
    __extends(e, t);
    var i = (__define, e);
    return p = i.prototype,
    p.initUI = function() {
        this.bg.graphics.beginFill(0, .5),
        this.bg.graphics.drawRect(0, 0, this.w, this.h),
        this.bg.graphics.endFill(),
        this.bg.width = this.w,
        this.bg.height = this.h,
        this.addChild(this.bg),
        this.bg.alpha = 0,
        this.bg.touchEnabled = !0,
        this.bg.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onBgBtnTouchTap, this),
        egret.Tween.get(this.bg).to({
            alpha: 1
        },
        300),
        this.shareIconRender = new ShareIconRender,
        this.shareIconRender.y = this.h,
        this.addChild(this.shareIconRender),
        egret.Tween.get(this.shareIconRender).to({
            y: this.h - this.shareIconRender.height + 60
        },
        300, egret.Ease.backOut),
        this.descTF = new egret.TextField,
        this.descTF.size = 24,
        this.descTF.height = 140,
        this.descTF.width = 230,
        this.descTF.lineSpacing = 10,
        this.descTF.text = "请点击右上角\n将它发送给指定朋友\n或分享到朋友圈",
        this.descTF.x = this.w - this.descTF.width - 40,
        this.descTF.y = 120,
        this.descTF.textAlign = egret.HorizontalAlign.CENTER,
        this.addChild(this.descTF),
        this.descTF.alpha = 0,
        this.arrowImg = new egret.Bitmap,
        this.arrowImg.texture = RES.getRes("arrow_png"),
        this.arrowImg.x = this.w - this.arrowImg.width - 30,
        this.arrowImg.y = 20,
        this.addChild(this.arrowImg),
        this.arrowImg.alpha = 0,
        Global.addEventListener(MainNotify.updateShareNotify, this.onUpdateShare, this)
    },
    p.onBgBtnTouchTap = function() {
        var t = function() {
            Global.dispatchEvent(MainNotify.closeShareNotify)
        };
        this.descTF.alpha = 0,
        this.arrowImg.alpha = 0,
        egret.Tween.get(this.bg).to({
            alpha: 0
        },
        150).call(t, this),
        egret.Tween.get(this.shareIconRender).to({
            y: this.h
        },
        300)
    },
    p.onUpdateShare = function(t) {
        var e = GameConfig.platformType(),
        i = t.param;
        switch (e) {
        case "micromessenger":
            "micromessenger" == i ? (this.descTF.text = "请点击右上角\n将它发送给指定朋友\n或分享到朋友圈", this.descTF.x = this.w - this.descTF.width - 40, this.descTF.y = 120, egret.Tween.get(this.descTF).to({
                alpha: 1
            },
            150), egret.Tween.get(this.arrowImg).to({
                alpha: 1
            },
            150)) : (Global.shareUtils(i), egret.Tween.get(this.bg).to({
                alpha: 0
            },
            150));
            break;
        case "qzone":
            "micromessenger" == i ? (EffectUtils.showTips("抱歉，暂不支持从空间直接分享到微信！"), egret.Tween.get(this.bg).to({
                alpha: 0
            },
            150)) : "qzone" == i ? (this.descTF.text = "退出应用后\n从全部动态中转发吧", this.descTF.x = this.w / 2 - this.descTF.width / 2, this.descTF.y = this.h / 2 - this.descTF.height / 2, egret.Tween.get(this.descTF).to({
                alpha: 1
            },
            150)) : (Global.shareUtils(i), egret.Tween.get(this.bg).to({
                alpha: 0
            },
            150));
            break;
        case "weibo":
            "micromessenger" == i ? (this.descTF.text = "请点击右上角\n将它发送给指定朋友\n或分享到朋友圈", this.descTF.x = this.w - this.descTF.width - 40, this.descTF.y = 120, egret.Tween.get(this.descTF).to({
                alpha: 1
            },
            150), egret.Tween.get(this.arrowImg).to({
                alpha: 1
            },
            150)) : "weibo" == i ? (this.descTF.text = "退出应用后\n转发正文\n与朋友一块玩吧", this.descTF.x = this.w / 2 - this.descTF.width / 2, this.descTF.y = this.h / 2 - this.descTF.height / 2, egret.Tween.get(this.descTF).to({
                alpha: 1
            },
            150)) : (Global.shareUtils(i), egret.Tween.get(this.bg).to({
                alpha: 0
            },
            150));
            break;
        case "qq":
            "micromessenger" == i || "qzone" == i || "qq" == i ? (this.descTF.text = "请点击右上角\n将它发送给朋友\n与朋友一块玩吧", this.descTF.x = this.w - this.descTF.width - 40, this.descTF.y = 120, egret.Tween.get(this.descTF).to({
                alpha: 1
            },
            150), egret.Tween.get(this.arrowImg).to({
                alpha: 1
            },
            150)) : (Global.shareUtils(i), egret.Tween.get(this.bg).to({
                alpha: 0
            },
            150));
            break;
        case "renren":
            "micromessenger" == i ? (EffectUtils.showTips("抱歉，暂不支持从空间直接分享到微信！"), egret.Tween.get(this.bg).to({
                alpha: 0
            },
            150)) : "renren" == i ? (this.descTF.text = "请点击右上角\n将它发送给朋友\n与朋友一块玩吧", this.descTF.x = this.w - this.descTF.width - 40, this.descTF.y = 120, egret.Tween.get(this.descTF).to({
                alpha: 1
            },
            150), egret.Tween.get(this.arrowImg).to({
                alpha: 1
            },
            150)) : (Global.shareUtils(i), egret.Tween.get(this.bg).to({
                alpha: 0
            },
            150));
            break;
        case "txmicroblog":
            "micromessenger" == i || "qzone" == i || "qq" == i ? (this.descTF.text = "请点击右上角\n将它发送给朋友\n与朋友一块玩吧", this.descTF.x = this.w - this.descTF.width - 40, this.descTF.y = 120, egret.Tween.get(this.descTF).to({
                alpha: 1
            },
            150), egret.Tween.get(this.arrowImg).to({
                alpha: 1
            },
            150)) : (Global.shareUtils(i), egret.Tween.get(this.bg).to({
                alpha: 0
            },
            150));
            break;
        case "douban":
            "micromessenger" == i ? (EffectUtils.showTips("抱歉，暂不支持从空间直接分享到微信！"), egret.Tween.get(this.bg).to({
                alpha: 0
            },
            150)) : (this.descTF.text = "请点击右上角\n将它发送给朋友\n与朋友一块玩吧", this.descTF.x = this.w - this.descTF.width - 40, this.descTF.y = 120, egret.Tween.get(this.descTF).to({
                alpha: 1
            },
            150), egret.Tween.get(this.arrowImg).to({
                alpha: 1
            },
            150));
            break;
        case "other":
            Global.shareUtils(i),
            egret.Tween.get(this.bg).to({
                alpha: 0
            },
            150)
        }
        egret.Tween.get(this.shareIconRender).to({
            y: this.h
        },
        300)
    },
    e
} (BasePanel);
egret.registerClass(ShareIconPanel, "ShareIconPanel");
var VerticalTipsPanel = function(t) {
    function e(e) {
        void 0 === e && (e = !1),
        t.call(this),
        this.bg = new egret.Sprite,
        this.w = 0,
        this.h = 0,
        this.needExchange = !1,
        this.needExchange = e,
        this.createView()
    }
    __extends(e, t);
    var i = (__define, e);
    return p = i.prototype,
    p.createView = function() {
        this.w = egret.MainContext.instance.stage.stageWidth,
        this.h = egret.MainContext.instance.stage.stageHeight,
        this.textField = new egret.TextField,
        this.textField.size = 36,
        this.textField.textColor = 16777215,
        this.textField.bold = !0,
        this.textField.stroke = 1,
        this.textField.strokeColor = 0,
        this.addChild(this.textField),
        this.textField.width = 480,
        this.textField.textAlign = "center",
        this.textField.text = "亲，请开启手机横屏体验哦！",
        this.needExchange ? (this.textField.x = 4, this.textField.y = this.h / 2 - this.textField.height / 2 - 10) : (this.textField.x = this.w / 2 - this.textField.width / 2, this.textField.y = this.h / 2 - this.textField.height / 2 - 10)
    },
    e
} (egret.Sprite);
egret.registerClass(VerticalTipsPanel, "VerticalTipsPanel");
var WaitPanel = function(t) {
    function e(e) {
        switch (void 0 === e && (e = 1), t.call(this), this.bg = new egret.Sprite, this.cartoonType = "loadingCircle1", this.w = 0, this.h = 0, e) {
        case 1:
            this.cartoonType = "loadingCircle1";
            break;
        case 2:
            this.cartoonType = "loadingCircle2"
        }
        this.mySheet = RES.getRes("assets"),
        this.createView()
    }
    __extends(e, t);
    var i = (__define, e);
    return p = i.prototype,
    p.createView = function() {
        this.w = egret.MainContext.instance.stage.stageWidth,
        this.h = egret.MainContext.instance.stage.stageHeight,
        this.bg.graphics.beginFill(0, .2),
        this.bg.graphics.drawRect(0, 0, this.w, this.h),
        this.bg.graphics.endFill(),
        this.bg.width = this.w,
        this.bg.height = this.h,
        this.addChild(this.bg),
        this.touchEnabled = !0,
        this.waitImg = new egret.Bitmap,
        this.waitImg.anchorOffsetX = .5 * this.waitImg.width,
        this.waitImg.anchorOffsetY = .5 * this.waitImg.height,
        this.waitImg.texture = this.mySheet.getTexture(this.cartoonType),
        this.waitImg.x = this.w / 2,
        this.waitImg.y = this.h / 2,
        this.addChild(this.waitImg),
        EffectUtils.rotationEffect(this.waitImg, 1e3)
    },
    e
} (egret.Sprite);
egret.registerClass(WaitPanel, "WaitPanel");
var AlertPanel = function(t) {
    function e(e, i, n, s, a) {
        void 0 === e && (e = ""),
        void 0 === i && (i = ""),
        void 0 === n && (n = null),
        void 0 === s && (s = null),
        void 0 === a && (a = 1),
        t.call(this),
        this.titleStr = "",
        this.descStr = "",
        this.type = 1,
        this.titleStr = e,
        this.descStr = i,
        this.cancelFun = n,
        this.acceptFun = s,
        this.type = a,
        this.initUI()
    }
    __extends(e, t);
    var i = (__define, e);
    return p = i.prototype,
    p.initUI = function() {
        this.bg = new egret.Bitmap,
        this.bg.texture = RES.getRes("alertBg"),
        this.addChild(this.bg),
        this.bg.touchEnabled = !0,
        "" != this.titleStr && (this.titleTF = new egret.TextField, this.addChild(this.titleTF), this.titleTF.textColor = 0, this.titleTF.size = 24, this.titleTF.width = this.bg.width, this.titleTF.height = 24, this.titleTF.y = 23, this.titleTF.textAlign = "center", this.titleTF.text = this.titleStr),
        "" != this.descStr && (this.descTF = new egret.TextField, this.addChild(this.descTF), this.descTF.textColor = 0, this.descTF.size = 20, this.descTF.width = this.bg.width, this.descTF.height = 24, this.descTF.y = this.bg.height / 2 - this.descTF.height / 2 + 10, this.descTF.textAlign = "center", this.descTF.text = this.descStr);
        var t = this,
        e = function() {
            null != t.cancelFun && t.cancelFun(),
            Global.dispatchEvent(MainNotify.closeAlertNotify)
        },
        i = function() {
            null != t.acceptFun && t.acceptFun(),
            Global.dispatchEvent(MainNotify.closeAlertNotify)
        };
        this.acceptBtn = new EButton(this, "acceptBtn", i),
        this.addChild(this.acceptBtn),
        1 == this.type ? (this.acceptBtn.x = this.bg.width / 2 - this.acceptBtn.width / 2, this.acceptBtn.y = this.bg.height - this.acceptBtn.height / 2 - 10) : (this.cancelBtn = new EButton(this, "cancelBtn", e), this.cancelBtn.x = 110, this.cancelBtn.y = this.bg.height - this.cancelBtn.height / 2 - 10, this.addChild(this.cancelBtn), this.acceptBtn.x = this.bg.width - this.acceptBtn.width - 60 - 50, this.acceptBtn.y = this.bg.height - this.acceptBtn.height / 2 - 10)
    },
    p.getWidth = function() {
        return this.bg.width
    },
    p.getHeight = function() {
        return this.bg.height
    },
    e
} (BasePanel);
egret.registerClass(AlertPanel, "AlertPanel");
var EButton = function(t) {
    function e(e, i, n, s, a, r, h) {
        void 0 === n && (n = null),
        void 0 === s && (s = ""),
        void 0 === a && (a = 30),
        void 0 === r && (r = 1),
        void 0 === h && (h = "assets"),
        t.call(this),
        this.isPlayCartoon = !1,
        this.cartoonType = 1,
        this.param = {
            context: null,
            data: null
        },
        this.param.context = e,
        this.init(i, n, s, a, r, h)
    }
    __extends(e, t);
    var i = (__define, e);
    return p = i.prototype,
    p.init = function(t, e, i, n, s, a) {
        void 0 === e && (e = null),
        void 0 === i && (i = ""),
        void 0 === n && (n = 30),
        void 0 === s && (s = 1),
        void 0 === a && (a = "assets"),
        this.cartoonType = s,
        this.backFun = e,
        this.btnImg = new egret.Bitmap,
        this.btnImg.texture = RES.getRes(t),
        this.addChild(this.btnImg),
        "" != i && (this.textField = new egret.TextField, this.addChild(this.textField), this.textField.size = n, this.textField.textAlign = "center", this.textField.stroke = 1, this.textField.strokeColor = 0, this.textField.text = i, this.textField.width = this.btnImg.width, this.textField.x = this.btnImg.width / 2 - this.textField.width / 2, this.textField.y = this.btnImg.height / 2 - this.textField.height / 2),
        this.touchEnabled = !0,
        this.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onbuttonTouchTap, this)
    },
    p.onbuttonTouchTap = function() {
        if (!this.isPlayCartoon) {
            this.isPlayCartoon = !0;
            var t = function() {
                this.isPlayCartoon = !1
            },
            e = function() {
                1 == this.cartoonType ? egret.Tween.get(this).to({
                    scaleX: 1,
                    scaleY: 1,
                    x: this.x - this.btnImg.width / 4,
                    y: this.y - this.btnImg.height / 4
                },
                500, egret.Ease.elasticOut).call(t, this) : 2 == this.cartoonType ? egret.Tween.get(this).to({
                    scaleX: 1,
                    scaleY: 1,
                    x: this.x - this.btnImg.width / 4,
                    y: this.y - this.btnImg.height / 4
                },
                500, egret.Ease.backOut).call(t, this) : 3 == this.cartoonType && egret.Tween.get(this).to({
                    scaleX: 1,
                    scaleY: 1,
                    x: this.x - this.btnImg.width / 4,
                    y: this.y - this.btnImg.height / 4
                },
                100).call(t, this)
            };
            egret.Tween.get(this).to({
                scaleX: .5,
                scaleY: .5,
                x: this.x + this.btnImg.width / 4,
                y: this.y + this.btnImg.height / 4
            },
            100, egret.Ease.sineIn).call(e, this),
            egret.setTimeout(function() {
                null != this.backFun && this.backFun.apply(this.param.context, [this.param.data])
            },
            this, 300)
        }
    },
    p.setBindData = function(t) {
        this.param.data = t
    },
    p.getBindData = function() {
        return this.param.data
    },
    p.getBitmap = function() {
        return this.btnImg
    },
    e
} (egret.DisplayObjectContainer);
egret.registerClass(EButton, "EButton");
var EImage = function(t) {
    function e(e) {
        t.call(this),
        this._src = null,
        this._comp = !1,
        null != e && this.load(e)
    }
    __extends(e, t);
    var i = __define,
    n = e;
    return p = n.prototype,
    i(p, "src",
    function() {
        return this._src
    },
    function(t) {
        this.load(t)
    }),
    e.$ = function(t) {
        var e = t.$;
        return delete t.$,
        t.onload = null,
        t.onerror = null,
        e
    },
    p.onLoadBack = function(t, e) {
        if (e == this._src) {
            if (t) {
                var i = new egret.Texture;
                i._setBitmapData(t),
                this.texture = i
            } else this.texture = null;
            this._comp = !0
        }
    },
    p.load = function(t) {
        if (this._src != t || !this._comp) if (this._src = t, null != t && t.length > 0) {
            this._comp = !1;
            var i = new Image;
            i.$ = this,
            i.onload = function() {
                e.$(this).onLoadBack(this, this.src)
            },
            i.onerror = function() {
                e.$(this).onLoadBack(this, this.src)
            },
            i.src = t
        } else this.texture = null,
        this._comp = !0
    },
    p.size = function(t, e) {
        this.width = t,
        this.height = e
    },
    p.move = function(t, e) {
        this.x = t,
        this.y = e
    },
    e.loadAsync = function(t, e, i) {
        void 0 === e && (e = null),
        void 0 === i && (i = null);
        var n = new Image,
        s = new egret.Bitmap;
        return n.$ = s,
        n.onload = function() {
            var t = this.$;
            delete this.$,
            this.onload = null,
            this.onerror = null;
            var n = new egret.Texture;
            n._setBitmapData(this),
            t.texture = n,
            null != e && e.apply(i, [t])
        },
        n.onerror = function() {
            var t = this.$;
            delete this.$,
            this.onload = null,
            this.onerror = null,
            t.texture = null,
            null != e && e.apply(i, null)
        },
        n.src = t,
        s
    },
    e
} (egret.Bitmap);
egret.registerClass(EImage, "EImage");
var ETabBar = function(t) {
    function e(e, i, n, s, a, r, h, o) {
        void 0 === s && (s = null),
        void 0 === a && (a = []),
        void 0 === r && (r = 30),
        void 0 === h && (h = 1),
        void 0 === o && (o = "assets"),
        t.call(this),
        this.assets = RES.getRes("assets"),
        this.btnArr = [],
        this.descStrArr = [],
        this.isPlayCartoon = !1,
        this.cartoonType = 1,
        this.isSelectIndex = 0,
        this.imgNormalName = "",
        this.imgSelectName = "",
        this.param = {
            context: null,
            data: null
        },
        this.param.context = e,
        this.imgNormalName = i,
        this.imgSelectName = n,
        this.descStrArr = a,
        this.init(e, s, a, r, h, o)
    }
    __extends(e, t);
    var i = (__define, e);
    return p = i.prototype,
    p.init = function(t, e, i, n, s, a) {
        void 0 === e && (e = null),
        void 0 === i && (i = []),
        void 0 === n && (n = 30),
        void 0 === s && (s = 1),
        void 0 === a && (a = "assets"),
        this.cartoonType = s,
        this.backFun = e,
        "assets" != a && (this.assets = RES.getRes(a));
        for (var r = 0; r < i.length; r++) {
            var h = new EToggleButton(this, this.imgNormalName, this.imgSelectName, this.onSelectBack, i[r], n, s, a);
            h.setBindData(r),
            h.x = h.width * r,
            this.addChild(h),
            this.btnArr.push(h),
            0 == r && (h.setSelected(!0), h.setEnable(!1))
        }
    },
    p.onSelectBack = function(t) {
        this.retset(),
        this.param.data = t,
        this.setSelectedIndex(t),
        this.backFun.apply(this.param.context, [this.param.data])
    },
    p.getSelectedIndex = function() {
        return this.isSelectIndex
    },
    p.setSelectedIndex = function(t) {
        void 0 === t && (t = 0),
        this.retset(),
        this.btnArr[t].setSelected(!0),
        this.isSelectIndex = t,
        this.btnArr[t].setEnable(!1)
    },
    p.setBindData = function(t) {
        this.param.data = t
    },
    p.getBindData = function() {
        return this.param.data
    },
    p.retset = function() {
        for (var t = 0; t < this.descStrArr.length; t++) {
            var e = this.btnArr[t];
            e.setSelected(!1),
            e.setEnable(!0)
        }
    },
    e
} (egret.DisplayObjectContainer);
egret.registerClass(ETabBar, "ETabBar");
var ETextField = function(t) {
    function e() {
        t.call(this)
    }
    __extends(e, t);
    var i = (__define, e);
    return p = i.prototype,
    p.setText = function(t) {
        void 0 === t && (t = "");
        var e = new egret.HtmlTextParser;
        this.textFlow = e.parser(t)
    },
    e
} (egret.TextField);
egret.registerClass(ETextField, "ETextField");
var EToggleButton = function(t) {
    function e(e, i, n, s, a, r, h, o) {
        void 0 === s && (s = null),
        void 0 === a && (a = ""),
        void 0 === r && (r = 30),
        void 0 === h && (h = 1),
        void 0 === o && (o = "assets"),
        t.call(this),
        this.isPlayCartoon = !1,
        this.cartoonType = 1,
        this.isSelected = !1,
        this.imgNormalName = "",
        this.imgSelectName = "",
        this.param = {
            context: null,
            data: null
        },
        this.param.context = e,
        this.imgNormalName = i,
        this.imgSelectName = n,
        this.init(s, a, r, h, o)
    }
    __extends(e, t);
    var i = (__define, e);
    return p = i.prototype,
    p.init = function(t, e, i, n, s) {
        void 0 === t && (t = null),
        void 0 === e && (e = ""),
        void 0 === i && (i = 30),
        void 0 === n && (n = 1),
        void 0 === s && (s = "assets"),
        this.cartoonType = n,
        this.backFun = t,
        this.btnImg = new egret.Bitmap,
        this.btnImg.texture = RES.getRes(this.imgNormalName),
        this.addChild(this.btnImg),
        "" != e && (this.textField = new egret.TextField, this.addChild(this.textField), this.textField.size = i, this.textField.textAlign = "center", this.textField.bold = !0, this.textField.stroke = 1, this.textField.strokeColor = 6705737, this.textField.textColor = 12432042, this.textField.text = e, this.textField.width = this.btnImg.width, this.textField.x = this.btnImg.width / 2 - this.textField.width / 2, this.textField.y = this.btnImg.height / 2 - this.textField.height / 2),
        this.touchEnabled = !0,
        this.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onbuttonTouchTap, this)
    },
    p.onbuttonTouchTap = function() {
        if (!this.isPlayCartoon) {
            this.isPlayCartoon = !0;
            var t = function() {
                this.isPlayCartoon = !1
            },
            e = function() {
                this.btnImg.texture = RES.getRes(this.isSelected ? this.imgNormalName: this.imgSelectName),
                this.isSelected = !this.isSelected,
                1 == this.cartoonType ? egret.Tween.get(this).to({
                    scaleX: 1,
                    scaleY: 1,
                    x: this.x - this.btnImg.width / 4,
                    y: this.y - this.btnImg.height / 4
                },
                500, egret.Ease.elasticOut).call(t, this) : 2 == this.cartoonType ? egret.Tween.get(this).to({
                    scaleX: 1,
                    scaleY: 1,
                    x: this.x - this.btnImg.width / 4,
                    y: this.y - this.btnImg.height / 4
                },
                500, egret.Ease.backOut).call(t, this) : 3 == this.cartoonType && egret.Tween.get(this).to({
                    scaleX: 1,
                    scaleY: 1,
                    x: this.x - this.btnImg.width / 4,
                    y: this.y - this.btnImg.height / 4
                },
                100).call(t, this)
            };
            egret.Tween.get(this).to({
                scaleX: .5,
                scaleY: .5,
                x: this.x + this.btnImg.width / 4,
                y: this.y + this.btnImg.height / 4
            },
            100, egret.Ease.sineIn).call(e, this),
            egret.setTimeout(function() {
                null != this.backFun && this.backFun.apply(this.param.context, [this.param.data])
            },
            this, 200)
        }
    },
    p.getBitmap = function() {
        return this.btnImg
    },
    p.setBindData = function(t) {
        this.param.data = t
    },
    p.getBindData = function() {
        return this.param.data
    },
    p.getSelected = function() {
        return this.isSelected
    },
    p.setEnable = function(t) {
        this.touchEnabled = t
    },
    p.setSelected = function(t) {
        this.isSelected = t,
        this.btnImg.texture = RES.getRes(t ? this.imgSelectName: this.imgNormalName)
    },
    e
} (egret.DisplayObjectContainer);
egret.registerClass(EToggleButton, "EToggleButton");
var EToggleSwitch = function(t) {
    function e(e, i, n, s, a, r) {
        void 0 === i && (i = ""),
        void 0 === n && (n = ""),
        void 0 === s && (s = ""),
        void 0 === a && (a = null),
        void 0 === r && (r = "assets"),
        t.call(this),
        this.assets = RES.getRes("assets"),
        this.isPlayCartoon = !1,
        this.isSelected = !1,
        this.switchOffName = "",
        this.switchOnName = "",
        this.switchBarName = "",
        this.param = {
            context: null,
            data: null
        },
        this.param.context = e,
        this.switchOffName = i,
        this.switchOnName = n,
        this.switchBarName = s,
        this.init(a, r)
    }
    __extends(e, t);
    var i = (__define, e);
    return p = i.prototype,
    p.init = function(t, e) {
        void 0 === t && (t = null),
        void 0 === e && (e = "assets"),
        this.backFun = t,
        this.switchOffImg = new egret.Bitmap,
        this.switchOnImg = new egret.Bitmap,
        this.switchBarImg = new egret.Bitmap,
        "assets" != e && (this.assets = RES.getRes(e)),
        this.switchOffImg.texture = this.assets.getTexture(this.switchOffName),
        this.addChild(this.switchOffImg),
        this.switchOnImg.texture = this.assets.getTexture(this.switchOnName),
        this.addChild(this.switchOnImg),
        this.switchOnImg.alpha = 0,
        this.switchBarImg.texture = this.assets.getTexture(this.switchBarName),
        this.switchBarImg.x = 5,
        this.switchBarImg.y = this.switchOffImg.height / 2 - this.switchBarImg.height / 2 + 4,
        this.addChild(this.switchBarImg),
        this.touchEnabled = !0,
        this.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onbuttonTouchTap, this)
    },
    p.onbuttonTouchTap = function() {
        if (!this.isPlayCartoon) {
            this.isPlayCartoon = !0;
            var t = function() {
                this.isPlayCartoon = !1,
                this.isSelected = !this.isSelected,
                null != this.backFun && this.backFun.apply(this.param.context, [this.param.data])
            };
            this.isSelected ? (egret.Tween.get(this.switchBarImg).to({
                x: 5
            },
            400).call(t, this), egret.Tween.get(this.switchOffImg).to({
                alpha: 1
            },
            400), egret.Tween.get(this.switchOnImg).to({
                alpha: 0
            },
            400)) : (egret.Tween.get(this.switchBarImg).to({
                x: this.switchOffImg.width - this.switchBarImg.width - 6
            },
            400).call(t, this), egret.Tween.get(this.switchOffImg).to({
                alpha: 0
            },
            400), egret.Tween.get(this.switchOnImg).to({
                alpha: 1
            },
            400))
        }
    },
    p.setBindData = function(t) {
        this.param.data = t
    },
    p.getBindData = function() {
        return this.param.data
    },
    p.getSelected = function() {
        return this.isSelected
    },
    e
} (egret.DisplayObjectContainer);
egret.registerClass(EToggleSwitch, "EToggleSwitch");
var ShareIconRender = function(t) {
    function e() {
        t.call(this),
        this.titleTF = new egret.TextField,
        this.weixinTF = new egret.TextField,
        this.qqzoneTF = new egret.TextField,
        this.sinaweiboTF = new egret.TextField,
        this.qqTF = new egret.TextField,
        this.renrenTF = new egret.TextField,
        this.qqweiboTF = new egret.TextField,
        this.doubanTF = new egret.TextField,
        this.assets = RES.getRes("socialIcon"),
        this.bg = new egret.Sprite,
        this.w = 0,
        this.h = 0,
        this.w = GameConfig.curWidth(),
        this.h = GameConfig.curHeight(),
        this.init()
    }
    __extends(e, t);
    var i = (__define, e);
    return p = i.prototype,
    p.init = function() {
        this.bg.graphics.beginFill(16777215, .9),
        this.bg.graphics.drawRect(0, 0, this.w, 300),
        this.bg.graphics.endFill(),
        this.bg.width = this.w,
        this.bg.height = 300,
        this.addChild(this.bg),
        this.bg.alpha = 1,
        this.bg.touchEnabled = !0,
        this.titleTF.size = 24,
        this.titleTF.textColor = 0,
        this.titleTF.text = "分享到",
        this.titleTF.x = this.w / 2 - this.titleTF.width / 2,
        this.titleTF.y = 10,
        this.titleTF.bold = !0,
        this.titleTF.textAlign = egret.HorizontalAlign.CENTER,
        this.addChild(this.titleTF);
        var t = 40,
        e = 130;
        this.weixinBtn = new EButton(this, "weixin", null, "", 30, 1, "socialIcon"),
        this.weixinBtn.x = 20,
        this.weixinBtn.y = t,
        this.addChild(this.weixinBtn),
        this.weixinBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onWeixinBtnTouchTap, this),
        this.qqzoneBtn = new EButton(this, "qqzone", null, "", 30, 1, "socialIcon"),
        this.qqzoneBtn.x = this.weixinBtn.x + this.qqzoneBtn.width + 20,
        this.qqzoneBtn.y = t,
        this.addChild(this.qqzoneBtn),
        this.qqzoneBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onQQzoneBtnTouchTap, this),
        this.sinaweiboBtn = new EButton(this, "sinaweibo", null, "", 30, 1, "socialIcon"),
        this.sinaweiboBtn.x = this.qqzoneBtn.x + this.sinaweiboBtn.width + 20,
        this.sinaweiboBtn.y = t,
        this.addChild(this.sinaweiboBtn),
        this.sinaweiboBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onSinaweiboBtnTouchTap, this),
        this.qqBtn = new EButton(this, "qq", null, "", 30, 1, "socialIcon"),
        this.qqBtn.x = this.sinaweiboBtn.x + this.qqBtn.width + 20,
        this.qqBtn.y = t,
        this.addChild(this.qqBtn),
        this.qqBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onQQBtnTouchTap, this),
        this.renrenBtn = new EButton(this, "renren", null, "", 30, 1, "socialIcon"),
        this.renrenBtn.x = this.qqBtn.x + this.renrenBtn.width + 20,
        this.renrenBtn.y = t,
        this.addChild(this.renrenBtn),
        this.renrenBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onRenrenBtnTouchTap, this),
        this.qqweiboBtn = new EButton(this, "qqweibo", null, "", 30, 1, "socialIcon"),
        this.qqweiboBtn.x = 20,
        this.qqweiboBtn.y = e,
        this.addChild(this.qqweiboBtn),
        this.qqweiboBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onQQweiboBtnTouchTap, this),
        this.doubanBtn = new EButton(this, "douban", null, "", 30, 1, "socialIcon"),
        this.doubanBtn.x = this.qqweiboBtn.x + this.doubanBtn.width + 20,
        this.doubanBtn.y = e,
        this.addChild(this.doubanBtn),
        this.doubanBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onDoubanBtnTouchTap, this);
        var i = 16;
        this.weixinTF.size = i,
        this.weixinTF.textColor = 0,
        this.weixinTF.text = "微信",
        this.weixinTF.x = this.weixinBtn.x + this.weixinBtn.width / 2 - this.weixinTF.width / 2,
        this.weixinTF.y = t + this.weixinBtn.height,
        this.weixinTF.textAlign = egret.HorizontalAlign.CENTER,
        this.addChild(this.weixinTF),
        this.qqzoneTF.size = i,
        this.qqzoneTF.textColor = 0,
        this.qqzoneTF.text = "QQ空间",
        this.qqzoneTF.x = this.qqzoneBtn.x + this.qqzoneBtn.width / 2 - this.qqzoneTF.width / 2,
        this.qqzoneTF.y = t + this.qqzoneBtn.height,
        this.qqzoneTF.textAlign = egret.HorizontalAlign.CENTER,
        this.addChild(this.qqzoneTF),
        this.sinaweiboTF.size = i,
        this.sinaweiboTF.textColor = 0,
        this.sinaweiboTF.text = "新浪微博",
        this.sinaweiboTF.x = this.sinaweiboBtn.x + this.sinaweiboBtn.width / 2 - this.sinaweiboTF.width / 2,
        this.sinaweiboTF.y = t + this.sinaweiboBtn.height,
        this.sinaweiboTF.textAlign = egret.HorizontalAlign.CENTER,
        this.addChild(this.sinaweiboTF),
        this.qqTF.size = i,
        this.qqTF.textColor = 0,
        this.qqTF.text = "QQ好友",
        this.qqTF.x = this.qqBtn.x + this.qqBtn.width / 2 - this.qqTF.width / 2,
        this.qqTF.y = t + this.qqBtn.height,
        this.qqTF.textAlign = egret.HorizontalAlign.CENTER,
        this.addChild(this.qqTF),
        this.renrenTF.size = i,
        this.renrenTF.textColor = 0,
        this.renrenTF.text = "人人网",
        this.renrenTF.x = this.renrenBtn.x + this.renrenBtn.width / 2 - this.renrenTF.width / 2,
        this.renrenTF.y = t + this.renrenBtn.height,
        this.renrenTF.textAlign = egret.HorizontalAlign.CENTER,
        this.addChild(this.renrenTF),
        this.qqweiboTF.size = i,
        this.qqweiboTF.textColor = 0,
        this.qqweiboTF.text = "QQ微博",
        this.qqweiboTF.x = this.qqweiboBtn.x + this.qqweiboBtn.width / 2 - this.qqweiboTF.width / 2,
        this.qqweiboTF.y = e + this.qqweiboBtn.height,
        this.qqweiboTF.textAlign = egret.HorizontalAlign.CENTER,
        this.addChild(this.qqweiboTF),
        this.doubanTF.size = i,
        this.doubanTF.textColor = 0,
        this.doubanTF.text = "豆瓣广播",
        this.doubanTF.x = this.doubanBtn.x + this.doubanBtn.width / 2 - this.doubanTF.width / 2,
        this.doubanTF.y = e + this.doubanBtn.height,
        this.doubanTF.textAlign = egret.HorizontalAlign.CENTER,
        this.addChild(this.doubanTF)
    },
    p.onWeixinBtnTouchTap = function() {
        Global.dispatchEvent(MainNotify.updateShareNotify, "micromessenger")
    },
    p.onQQzoneBtnTouchTap = function() {
        Global.dispatchEvent(MainNotify.updateShareNotify, "qzone")
    },
    p.onSinaweiboBtnTouchTap = function() {
        Global.dispatchEvent(MainNotify.updateShareNotify, "weibo")
    },
    p.onQQBtnTouchTap = function() {
        Global.dispatchEvent(MainNotify.updateShareNotify, "qq")
    },
    p.onRenrenBtnTouchTap = function() {
        Global.dispatchEvent(MainNotify.updateShareNotify, "renren")
    },
    p.onQQweiboBtnTouchTap = function() {
        Global.dispatchEvent(MainNotify.updateShareNotify, "txmicroblog")
    },
    p.onDoubanBtnTouchTap = function() {
        Global.dispatchEvent(MainNotify.updateShareNotify, "douban")
    },
    e
} (egret.DisplayObjectContainer);
egret.registerClass(ShareIconRender, "ShareIconRender");
var TipsManager; !
function(t) {
    function e(t, e, i) {
        void 0 === e && (e = ""),
        void 0 === i && (i = 0),
        null == this._dict && (this._dict = []),
        t.addEventListener(egret.TouchEvent.TOUCH_BEGIN, this.showTips, this),
        t.addEventListener(egret.TouchEvent.TOUCH_END, this.removeTips, this),
        t.addEventListener(egret.TouchEvent.TOUCH_RELEASE_OUTSIDE, this.removeTips, this),
        null == this._dict[t.hashCode] && (this._dict[t.hashCode] = [], this._dict[t.hashCode].descStr = e, this._dict[t.hashCode].effectType = i)
    }
    function i(t) {
        var e = t.currentTarget,
        i = "",
        n = 0;
        if (null == this._tips) {
            null != this._dict[e.hashCode] && (i = this._dict[e.hashCode].descStr, n = this._dict[e.hashCode].effectType),
            this._tips = new TipsPanel(this._dict[e.hashCode].descStr),
            GameConfig.gameScene().topLayer.contains(this._tips) || GameConfig.gameScene().topLayer.addChild(this._tips);
            var s = e.parent.localToGlobal(e.x, e.y);
            switch (s.x = s.x + e.width / 2, s.y = s.y - this._tips.height, s.x + this._tips.width > GameConfig.curWidth() ? s.x = GameConfig.curWidth() - this._tips.width: s.x < 0 && (s.x = 0), s.y + this._tips.height > GameConfig.curHeight() ? s.y = GameConfig.curHeight() - this._tips.height: s.y < 0 && (s.y = 0), this._tips.x = s.x, this._tips.y = s.y, n) {
            case 0:
                this._tips.alpha = 0,
                egret.Tween.get(this._tips).to({
                    alpha: 1
                },
                300);
                break;
            case 1:
                this._tips.alpha = 0,
                this._tips.y += this._tips.height,
                egret.Tween.get(this._tips).to({
                    alpha: 1,
                    y: this._tips.y - this._tips.height
                },
                500, egret.Ease.backOut);
                break;
            case 2:
                this._tips.alpha = 0,
                this._tips.x -= this._tips.width,
                egret.Tween.get(this._tips).to({
                    alpha: 1,
                    x: this._tips.x + this._tips.width
                },
                500, egret.Ease.backOut);
                break;
            case 3:
                this._tips.alpha = 0,
                this._tips.x += this._tips.width,
                egret.Tween.get(this._tips).to({
                    alpha: 1,
                    x: this._tips.x - this._tips.width
                },
                500, egret.Ease.backOut)
            }
        }
    }
    function n(t) {
        t.currentTarget;
        if (null != this._tips) {
            var e = function() {
                GameConfig.gameScene().topLayer.contains(this._tips) && (GameConfig.gameScene().topLayer.removeChild(this._tips), this._tips = null)
            };
            egret.Tween.get(this._tips).to({
                alpha: 0
            },
            300).call(e, this)
        }
    }
    t.addTips = e,
    t.showTips = i,
    t.removeTips = n
} (TipsManager || (TipsManager = {}));
var TipsPanel = function(t) {
    function e(e) {
        void 0 === e && (e = ""),
        t.call(this),
        this.descStr = "",
        this.descStr = e,
        this.initUI()
    }
    __extends(e, t);
    var i = (__define, e);
    return p = i.prototype,
    p.initUI = function() {
        this.bg = new egret.Bitmap,
        this.bg.texture = RES.getRes("tipsBg"),
        this.addChild(this.bg),
        this.bg.touchEnabled = !0,
        this.descTF = new egret.TextField,
        this.addChild(this.descTF),
        this.descTF.textColor = 0,
        this.descTF.size = 20,
        this.descTF.x = 5,
        this.descTF.textAlign = "center",
        this.descTF.text = this.descStr;
        var t = new egret.Rectangle(5, 5, 5, 5);
        this.bg.scale9Grid = t,
        this.bg.width = this.descTF.width + 10,
        this.bg.height = 3 * this.descTF.height,
        this.descTF.y = this.bg.height / 2 - this.descTF.height / 2 + 2
    },
    e
} (BasePanel);
egret.registerClass(TipsPanel, "TipsPanel");
var GameConfig; !
function(t) {
    function e() {
        var t = window.navigator.userAgent.toLowerCase(),
        e = "" + t.match(/MicroMessenger/i);
        return "null" == e ? !1 : "micromessenger" == e ? !0 : void 0
    }
    function i() {
        return document.body.clientHeight / document.body.clientWidth > 1.32
    }
    function n() {
        {
            var t = window.navigator.userAgent.toLowerCase();
            "" + t.match(/MicroMessenger/i)
        }
        return "" + t.match(/windows nt/i) == "windows nt" ? "windows": "" + t.match(/iphone/i) == "iphone" ? "ios": "" + t.match(/android/i) == "android" ? "android": "" + t.match(/ipad/i) == "ipad" ? "ipad": "" + t.match(/linux/i) == "linux" ? "linux": "" + t.match(/mac/i) == "mac" ? "mac": "" + t.match(/ucbrower/i) == "ucbrower" ? "ucbrower": void console.log("未知系统类型")
    }
    function s() {
        var t = window.navigator.userAgent.toLowerCase();
        return "" + t.match(/micromessenger/i) == "micromessenger" ? "micromessenger": "" + t.match(/qzone/i) == "qzone" ? "qzone": "" + t.match(/weibo/i) == "weibo" ? "weibo": "" + t.match(/qq/i) == "qq" ? "qq": "" + t.match(/renren/i) == "renren" ? "renren": "" + t.match(/txmicroblog/i) == "txmicroblog" ? "txmicroblog": "" + t.match(/douban/i) == "douban" ? "douban": "other"
    }
    function a() {
        return null == this.curScene && (this.curScene = new GameScene),
        this.curScene
    }
    function r() {
        return egret.MainContext.instance.stage
    }
    function h() {
        return egret.MainContext.instance.stage.stageWidth
    }
    function o() {
        return egret.MainContext.instance.stage.stageHeight
    }
    function c() {
        var t = window.orientation;
        return 90 == t ? !1 : !0
    }
    t.GAMEID = "exm0001",
    t.APPID = "wxbfe24127e960b06d",
    t.CHANNEL = "demo",
    t.SAVEKEY = "",
    t.IS_MUSIC = !0,
    t.THIS_OPENID = "",
    t.isDebug = !1,
    t.URLHEAD = "http://www.mun-u.com/",
    function(t) {
        t[t.CAR = 0] = "CAR",
        t[t.ROADSTER = 1] = "ROADSTER",
        t[t.LAONN = 2] = "LAONN",
        t[t.DOG = 3] = "DOG"
    } (t.BarrierType || (t.BarrierType = {}));
    t.BarrierType;
    t.barrier_box_config = [[50, 26], [50, 26], [30, 40], [40, 26]],
    t.barrier_config = [.3, .7, .5, .1],
    t.barrier_speed_config = [3, 5.5, 1.5, 2.3],
    t.MAN_MAX_Y = 730,
    t.MAN_MIN_Y = 150,
    t.LANE_HEIGHT = 70,
    t.MAN_INIT_SPEED = 7,
    t.TextColors = {
        white: 16777215,
        milkWhite: 16511407,
        grayWhite: 13547170,
        yellow: 16776960,
        lightYellow: 16765813,
        orangeYellow: 16750848,
        red: 15799040,
        green: 58624,
        blue: 1742039,
        grayBlue: 3101047,
        purple: 15284466,
        pink: 16724016,
        black: 3026221,
        golden: 16766720
    },
    t.LabelFontSize = {
        littleSize: 12,
        middleSize: 18,
        normalSize: 24,
        bigSize: 36
    },
    t.isWeiXin = e,
    t.isBigScreen = i,
    t.systemType = n,
    t.platformType = s;
    t.gameScene = a,
    t.curStage = r,
    t.curWidth = h,
    t.curHeight = o,
    t.isVertical = c
} (GameConfig || (GameConfig = {}));
var GameLangs; !
function(t) {
    t.game_over_tip2 = "撞到过路老太，被讹破产了......",
    t.game_over_tip3 = "路遇疯狗被咬，送医抢救ing......",
    t.game_over_tip0 = "快递员发生车祸，包裹未能成功派送......",
    t.game_over_tip1 = "快递员发生车祸，包裹未能成功派送......",
    t.share_title = "亲，您的快递到啦！",
    t.share_desc = "恭喜你成功签收{0}份快递，击败了全国{1}％的人。"
} (GameLangs || (GameLangs = {}));
var GlobalData; !
function(t) {
    t.jssdk = null,
    t.title = decodeURIComponent(GameLangs.share_title),
    t.desc = decodeURIComponent(GameLangs.share_desc.format(0, 0)),
    t.link = decodeURIComponent("http://mp.weixin.qq.com/s?__biz=MzA3MTU4MjI1Mg==&mid=408941538&idx=1&sn=4448972789d12ed39f379b82cbc26722&scene=18#wechat_redirect"),
    t.imgUrl = decodeURIComponent("http://www.mun-u.com/h5/10000003/resource/assets/icon.png"),
    t.initIsVertical = !1,
    t.isVerticalGame = !1
} (GlobalData || (GlobalData = {}));
var JsonpReq = function() {
    function t() {}
    var e = (__define, t);
    return p = e.prototype,
    t.process = function(e) {
        t.completeCall["call_" + t._regID] = function(i) {
            var n = t._regID;
            e.data = i,
            e.dispatchEvent(new egret.Event(egret.Event.COMPLETE)),
            delete t.completeCall["call_" + n]
        },
        t.startLoader(e, t._regID++)
    },
    t.startLoader = function(t, e) {
        var i = document.createElement("script");
        i.src = t._request.url + "JsonpReq.completeCall.call_" + e,
        document.body.appendChild(i)
    },
    t._regID = 0,
    t.completeCall = {},
    t
} ();
egret.registerClass(JsonpReq, "JsonpReq");
var Network; !
function(Network) {
    function sendInfo(t, e) {
        void 0 === t && (t = ""),
        void 0 === e && (e = ""),
        Global.waitPanel = new WaitPanel(1),
        GameConfig.gameScene().maskLayer.removeChildren(),
        GameConfig.gameScene().maskLayer.addChild(Global.waitPanel);
        var i = new egret.URLLoader;
        i.dataFormat = egret.URLLoaderDataFormat.TEXT,
        i.addEventListener(egret.Event.COMPLETE, this.onGetComplete, this);
        var n = new egret.URLRequest(t);
        n.method = egret.URLRequestMethod.GET,
        n.data = new egret.URLVariables(e),
        i.load(n)
    }
    function getSign(t) {
        var e = [];
        for (var i in t) {
            var n = t[i];
            "sign" != i && "" != n && e.push(i + "=" + n + "&")
        }
        e.sort();
        var s = "";
        for (var i in e) s += e[i];
        return s = s.substr(0, s.length - 1),
        [(new md5).hex_md5(s + "munu-hw"), s]
    }
    function JsonpServerData(t, e, i, n) {
        void 0 === n && (n = "http://www.mun-u.com/huowu_game/huowu_api.php");
        var s = getSign(t),
        a = new egret.URLLoader;
        n = n + "?" + s[1] + "&sign=" + s[0] + "&callback=";
        var r = new egret.URLRequest(n);
        a._request = r,
        a.addEventListener(egret.Event.COMPLETE, e, i),
        JsonpReq.process(a)
    }
    function onGetComplete(event) {
        GameConfig.gameScene().maskLayer.removeChild(Global.waitPanel),
        Global.waitPanel = null;
        var loader = event.target;
        loader.dataFormat = egret.URLLoaderDataFormat.TEXT;
        var data = loader.data,
        data2 = eval("(" + data + ")"),
        notify = loader._eventTarget._request.url;
        lcp.LListener.getInstance().dispatchEvent(new lcp.LEvent(notify, data2, !1))
    }
    Network.sendInfo = sendInfo,
    Network.getSign = getSign,
    Network.JsonpServerData = JsonpServerData,
    Network.onGetComplete = onGetComplete
} (Network || (Network = {}));
var MainNotify; !
function(t) {
    t.onOrientationChange = "onOrientationChange",
    t.onDeviceOrientation = "onDeviceOrientation",
    t.onDeviceMotion = "onDeviceMotion",
    t.closeAlertNotify = "closeAlertNotify",
    t.closeShareNotify = "closeAlertNotify",
    t.updateShareNotify = "updateShareNotify",
    t.confirmationPackNotify = "confirmationPackNotify",
    t.openStartPanelNotify = "openStartPanelNotify",
    t.closeStartPanelNotify = "closeStartPanelNotify",
    t.openGamePanelNotify = "openGamePanelNotify",
    t.closeGamePanelNotify = "closeGamePanelNotify",
    t.openGameOverPanelNotify = "openGameOverPanelNotify",
    t.closeGameOverPanelNotify = "closeGameOverPanelNotify",
    t.openSetPanelNotify = "openSetPanelNotify",
    t.closeSetPanelNotify = "closeSetPanelNotify",
    t.openAlertPanelNotify = "openAlertPanelNotify",
    t.closeAlertPanelNotify = "closeAlertPanelNotify"
} (MainNotify || (MainNotify = {}));
var EffectUtils; !
function(t) {
    function e(t, e) {
        if (void 0 === e && (e = 1e3), null == this.rotationArr && (this.rotationArr = []), !this.rotationArr[t.hashCode]) {
            null != this.rotationArr[t.hashCode] && this.rotationArr[t.hashCode] || (this.rotationArr[t.hashCode] = !0);
            var i = function() {
                this.rotationArr[t.hashCode] && null != t && (t.rotation = 0, egret.Tween.get(t).to({
                    rotation: 360
                },
                e).call(i, this))
            };
            t.rotation = 0,
            egret.Tween.get(t).to({
                rotation: 360
            },
            e).call(i, this)
        }
    }
    function i(t) {
        null == this.rotationArr && (this.rotationArr = []),
        this.rotationArr[t.hashCode] = !1
    }
    function n(t, e) {
        void 0 === e && (e = 1e3),
        new BitmapBlink(t, e)
    }
    function s(t) {
        var e = 80,
        i = t.x;
        egret.Tween.get(t).to({
            x: t.x - 10
        },
        e),
        egret.setTimeout(function() {
            egret.Tween.get(t).to({
                x: t.x + 20
            },
            e)
        },
        this, 2 * e),
        egret.setTimeout(function() {
            egret.Tween.get(t).to({
                x: t.x - 20
            },
            e)
        },
        this, 3 * e),
        egret.setTimeout(function() {
            egret.Tween.get(t).to({
                x: t.x + 20
            },
            e)
        },
        this, 4 * e),
        egret.setTimeout(function() {
            egret.Tween.get(t).to({
                x: i
            },
            e)
        },
        this, 5 * e)
    }
    function a(t) {
        void 0 === t && (t = 1);
        var e = GameConfig.curPanel,
        i = 40,
        n = e.x,
        s = e.y;
        1 == t ? (egret.Tween.get(e).to({
            x: e.x - 10
        },
        i), egret.setTimeout(function() {
            egret.Tween.get(e).to({
                x: e.x + 20
            },
            i)
        },
        this, 2 * i), egret.setTimeout(function() {
            egret.Tween.get(e).to({
                x: e.x - 20
            },
            i)
        },
        this, 3 * i), egret.setTimeout(function() {
            egret.Tween.get(e).to({
                x: e.x + 20
            },
            i)
        },
        this, 4 * i), egret.setTimeout(function() {
            egret.Tween.get(e).to({
                x: n
            },
            i)
        },
        this, 5 * i)) : (egret.Tween.get(e).to({
            x: e.x - 10,
            y: e.y
        },
        i), egret.setTimeout(function() {
            egret.Tween.get(e).to({
                x: e.x + 20,
                y: e.y
            },
            i)
        },
        this, 2 * i), egret.setTimeout(function() {
            egret.Tween.get(e).to({
                x: e.x,
                y: e.y + 15
            },
            i)
        },
        this, 3 * i), egret.setTimeout(function() {
            egret.Tween.get(e).to({
                x: e.x,
                y: e.y - 20
            },
            i)
        },
        this, 4 * i), egret.setTimeout(function() {
            egret.Tween.get(e).to({
                x: e.x,
                y: e.y + 10
            },
            i)
        },
        this, 5 * i), egret.setTimeout(function() {
            egret.Tween.get(e).to({
                x: n,
                y: s
            },
            i)
        },
        this, 6 * i))
    }
    function r(t, e, i) {
        switch (void 0 === t && (t = ""), void 0 === e && (e = 1), void 0 === i && (i = !1), e) {
        case 1:
            TipsUtils.showTipsDownToUp(t, i);
            break;
        case 2:
            TipsUtils.showTipsLeftOrRight(t, i, !0);
            break;
        case 3:
            TipsUtils.showTipsLeftOrRight(t, i, !1);
            break;
        case 4:
            TipsUtils.showTipsFromCenter(t, i);
            break;
        case 5:
            TipsUtils.showTipsBigToSmall(t, i)
        }
    }
    function h(t, e) {
        if (void 0 === e && (e = 1), !this.isPlayEffectPlay) {
            this.isPlayEffectPlay = !0;
            var i = function() {
                this.isPlayEffectPlay = !1
            },
            n = function() {
                1 == e ? egret.Tween.get(t).to({
                    scaleX: 1,
                    scaleY: 1,
                    x: t.x - t.width / 4,
                    y: t.y - t.height / 4
                },
                500, egret.Ease.elasticOut).call(i, this) : 2 == e ? egret.Tween.get(t).to({
                    scaleX: 1,
                    scaleY: 1,
                    x: t.x - t.width / 4,
                    y: t.y - t.height / 4
                },
                500, egret.Ease.backOut).call(i, this) : 3 == e && egret.Tween.get(t).to({
                    scaleX: 1,
                    scaleY: 1,
                    x: t.x - t.width / 4,
                    y: t.y - t.height / 4
                },
                100).call(i, this)
            };
            egret.Tween.get(t).to({
                scaleX: .5,
                scaleY: .5,
                x: t.x + t.width / 4,
                y: t.y + t.height / 4
            },
            100, egret.Ease.sineIn).call(n, this)
        }
    }
    function o(t) {
        var e = function() {
            if (null != t) {
                var i = function() {
                    t.scaleX = 1,
                    t.scaleY = 1,
                    egret.Tween.get(t).to({
                        alpha: 1
                    },
                    1e3).call(e, self)
                };
                t.alpha = 1,
                egret.Tween.get(t).to({
                    scaleX: 1.5,
                    scaleY: 1.5,
                    alpha: 0
                },
                1e3).call(i, self)
            }
        };
        e()
    }
    function c(t, e, i) {
        void 0 === i && (i = 50);
        var n = function() {
            if (null != t) {
                var s = function() {
                    egret.Tween.get(t).to({
                        y: t.y - i
                    },
                    e).call(n, this)
                };
                egret.Tween.get(t).to({
                    y: t.y + i
                },
                e).call(s, this)
            }
        };
        n()
    }
    function l(t, e, i) {
        void 0 === i && (i = 20);
        var n = function() {
            if (null != t) {
                var s = function() {
                    egret.Tween.get(t).to({
                        rotation: -i
                    },
                    e).call(n, this)
                };
                egret.Tween.get(t).to({
                    rotation: i
                },
                e).call(s, this)
            }
        };
        n()
    }
    function g(t, e, i) {
        void 0 === e && (e = ""),
        void 0 === i && (i = 200);
        for (var n = e.split(""), s = n.length, a = 0; s > a; a++) egret.setTimeout(function() {
            t.appendText(n[Number(this)])
        },
        a, i * a)
    }
    t.rotationEffect = e,
    t.removeRotationEffect = i,
    t.blinkEffect = n,
    t.shakeObj = s,
    t.shakeScreen = a,
    t.showTips = r;
    t.playEffect = h,
    t.playScaleEffect = o,
    t.flyObj = c,
    t.rockObj = l,
    t.typerEffect = g
} (EffectUtils || (EffectUtils = {}));
var Global; !
function(t) {
    function e(t, e, i, n) {
        return void 0 === e && (e = null),
        void 0 === i && (i = !1),
        void 0 === n && (n = !1),
        new lcp.LEvent(t, e, i, n)
    }
    function i(t, e, i, n) {
        void 0 === e && (e = null),
        void 0 === i && (i = !1),
        void 0 === n && (n = !1);
        var s = new lcp.LEvent(t, e, i, n);
        lcp.LListener.getInstance().dispatchEvent(s)
    }
    function n(t, e, i, n, s) {
        void 0 === n && (n = !1),
        void 0 === s && (s = 0),
        lcp.LListener.getInstance().addEventListener(t, e, i, n, s)
    }
    function s(t, e, i, n) {
        void 0 === n && (n = !1),
        lcp.LListener.getInstance().removeEventListener(t, e, i, n)
    }
    function a(t) {
        {
            var e = GlobalData.desc,
            i = GlobalData.link,
            n = GlobalData.imgUrl;
            GlobalData.title
        }
        if ("weibo" == t) {
            var s = "http://v.t.sina.com.cn/share/share.php?title=" + e + "&url=" + i + "&content=utf-8&sourceUrl=" + i + "&pic=" + n;
            window.open(s)
        } else if ("txmicroblog" == t) {
            var s = "http://v.t.qq.com/share/share.php?title=" + e + "&url=" + i + "&pic=" + n;
            window.open(s)
        } else if ("qzone" == t) {
            var s = "http://sns.qzone.qq.com/cgi-bin/qzshare/cgi_qzshare_onekey?summary=" + e + "&url=" + i + "&pics=" + n;
            window.open(s)
        } else if ("qq" == t) {
            var s = "http://connect.qq.com/widget/shareqq/index.html?title=" + e + "&url=" + i + "&pic=" + n;
            window.open(s)
        } else if ("renren" == t) {
            var s = "http://share.renren.com/share/buttonshare.do?link=" + i + "&title=" + e;
            window.open(s)
        } else if ("kaixin" == t) {
            var s = "http://www.kaixin001.com/repaste/share.php?rurl=" + i + "&rcontent=" + e;
            window.open(s)
        } else if ("douban" == t) {
            var s = "http://www.douban.com/recommend/?url=" + i + "&title=" + e;
            window.open(s)
        } else if ("tieba" == t) {
            var s = "http://tieba.baidu.com/f/commit/share/openShareApi?url=" + i + "&title=" + e;
            window.open(s)
        } else "micromessenger" == t && (egret.log("micromessenger"), GlobalData.jssdk.share())
    }
    function r(t, e) {
        return t && e ? !(t.x >= e.x || t.y >= e.y || t.x + t.width <= e.x + e.width || t.y + t.height <= e.y + e.height) : !1
    }
    function h(t, e) {
        var i = t.x + t.width,
        n = t.y + t.height,
        s = e.x + e.width,
        a = e.y + e.height;
        return ! (i < e.x || s < t.x || n < e.y || a < t.y)
    }
    function o(t) {
        void 0 === t && (t = !1)
    }
    function c(e, i, n, s) {
        void 0 === e && (e = ""),
        void 0 === i && (i = ""),
        void 0 === n && (n = null),
        void 0 === s && (s = 1),
        null == this._alert && (this._alert = new AlertPanel(e, i, null, n), PopUpManager.addPopUp(this._alert, !0, this._alert.getWidth(), this._alert.getHeight(), s, !0), t.addEventListener(MainNotify.closeAlertNotify, this.closeAlertPanel, this))
    }
    function l(e, i, n, s, a) {
        void 0 === e && (e = ""),
        void 0 === i && (i = ""),
        void 0 === n && (n = null),
        void 0 === s && (s = null),
        void 0 === a && (a = 1),
        null == this._alert && (this._alert = new AlertPanel(e, i, n, s, 2), PopUpManager.addPopUp(this._alert, !0, this._alert.getWidth(), this._alert.getHeight(), a, !0), t.addEventListener(MainNotify.closeAlertNotify, this.closeAlertPanel, this))
    }
    function g() {
        null != this._alert && (PopUpManager.removePopUp(this._alert, 1), this._alert = null)
    }
    function d() {
        null == this._share && (this._share = new ShareIconPanel, PopUpManager.addPopUp(this._share, !1, GameConfig.curWidth(), GameConfig.curHeight()), t.addEventListener(MainNotify.closeShareNotify, this.closeSharePanel, this))
    }
    function u() {
        null != this._share && (PopUpManager.removePopUp(this._share, 0), this._share = null)
    }
    t.Event = e,
    t.dispatchEvent = i,
    t.addEventListener = n,
    t.removeEventListener = s,
    t.shareUtils = a,
    t.rectContainsRect = r,
    t.rectIntersectsRect = h,
    t.rotationResize = o;
    t.alert = c,
    t.confirm = l,
    t.closeAlertPanel = g;
    t.share = d,
    t.closeSharePanel = u
} (Global || (Global = {}));
var utils; !
function(t) {
    var e = function() {
        function t() {
            this.init()
        }
        var e = (__define, t);
        return p = e.prototype,
        p.getRade = function(t) {
            return 0 == t ? 1 : 1 == t ? 20 : 2 == t ? 30 : 3 == t ? 40 : 9 >= t ? 40 + 3 * (t - 3) : 15 >= t ? 58 + 2 * (t - 9) : 70 + (t - 9)
        },
        p.init = function() {
            this.title = GameLangs.share_title,
            this.desc = GameLangs.share_desc.format(0, 0),
            this.link = "http://mp.weixin.qq.com/s?__biz=MzA3MTU4MjI1Mg==&mid=408941538&idx=1&sn=4448972789d12ed39f379b82cbc26722&scene=18#wechat_redirect",
            this.imgUrl = "http://www.mun-u.com/h5/10000003/resource/assets/icon.png",
            this.desc_source = GameLangs.share_desc,
            this.getSignPackage()
        },
        p.share = function() {
            this.desc = GlobalData.desc,
            this.getWeiXinShareTimeline(),
            this.getWeiXinShareAppMessage(),
            this.getWeiXinShareQQ(),
            this.getWeiXinShareWeiBo()
        },
        p.getSignPackage = function() {
            var t = this,
            e = new egret.URLLoader,
            i = GameConfig.URLHEAD + "munu_h5/munu_sign.php",
            n = {
                url: encodeURIComponent(location.href.split("#")[0])
            },
            s = new egret.URLVariables;
            s.variables = n;
            var a = new egret.URLRequest(i);
            a.data = s,
            a.method = egret.URLRequestMethod.POST,
            e.load(a),
            e.addEventListener(egret.Event.COMPLETE,
            function(e) {
                var i = e.target.data,
                n = JSON.parse(i);
                void 0 != typeof n.appId && (window.wx_config = n, t.getWeiXinConfig())
            },
            this)
        },
        p.getWeiXinConfig = function() {
            var t = new BodyConfig;
            t.appId = window.wx_config.appId,
            t.timestamp = window.wx_config.timestamp,
            t.nonceStr = window.wx_config.nonceStr,
            t.signature = window.wx_config.signature,
            t.jsApiList = ["checkJsApi", "onMenuShareTimeline", "onMenuShareAppMessage", "onMenuShareQQ", "onMenuShareWeibo"],
            wx.ready(function() {
                this.getWeiXinShareTimeline(),
                this.getWeiXinShareAppMessage(),
                this.getWeiXinShareQQ(),
                this.getWeiXinShareWeiBo()
            }.bind(this)),
            wx.config(t)
        },
        p.getWeiXinShareTimeline = function() {
            var t = new BodyMenuShareTimeline;
            t.title = this.desc,
            t.link = this.link,
            t.imgUrl = this.imgUrl,
            t.trigger = function() {},
            t.success = function() {},
            t.cancel = function() {},
            t.fail = function() {},
            wx.onMenuShareTimeline(t)
        },
        p.getWeiXinShareAppMessage = function() {
            var t = new BodyMenuShareAppMessage;
            t.title = this.title,
            t.desc = this.desc,
            t.link = this.link,
            t.imgUrl = this.imgUrl,
            t.trigger = function() {},
            t.success = function() {},
            t.cancel = function() {},
            t.fail = function() {},
            wx.onMenuShareAppMessage(t)
        },
        p.getWeiXinShareQQ = function() {
            var t = new BodyMenuShareQQ;
            t.title = this.title,
            t.desc = this.desc,
            t.link = this.link,
            t.imgUrl = this.imgUrl,
            t.trigger = function() {},
            t.complete = function() {},
            t.success = function() {},
            t.cancel = function() {},
            t.fail = function() {},
            wx.onMenuShareQQ(t)
        },
        p.getWeiXinShareWeiBo = function() {
            var t = new BodyMenuShareWeibo;
            t.title = this.title,
            t.desc = this.desc,
            t.link = this.link,
            t.imgUrl = this.imgUrl,
            t.trigger = function() {},
            t.complete = function() {},
            t.success = function() {},
            t.cancel = function() {},
            t.fail = function() {},
            wx.onMenuShareWeibo(t)
        },
        t
    } ();
    t.JSSDK = e,
    egret.registerClass(e, "utils.JSSDK")
} (utils || (utils = {}));
var md5 = function() {
    function t() {
        this.hexcase = 0,
        this.b64pad = ""
    }
    var e = (__define, t);
    return p = e.prototype,
    p.hex_md5 = function(t) {
        return this.rstr2hex(this.rstr_md5(this.str2rstr_utf8(t)))
    },
    p.b64_md5 = function(t) {
        return this.rstr2b64(this.rstr_md5(this.str2rstr_utf8(t)))
    },
    p.any_md5 = function(t, e) {
        return this.rstr2any(this.rstr_md5(this.str2rstr_utf8(t)), e)
    },
    p.hex_hmac_md5 = function(t, e) {
        return this.rstr2hex(this.rstr_hmac_md5(this.str2rstr_utf8(t), this.str2rstr_utf8(e)))
    },
    p.b64_hmac_md5 = function(t, e) {
        return this.rstr2b64(this.rstr_hmac_md5(this.str2rstr_utf8(t), this.str2rstr_utf8(e)))
    },
    p.any_hmac_md5 = function(t, e, i) {
        return this.rstr2any(this.rstr_hmac_md5(this.str2rstr_utf8(t), this.str2rstr_utf8(e)), i)
    },
    p.md5_vm_test = function() {
        return "900150983cd24fb0d6963f7d28e17f72" == this.hex_md5("abc").toLowerCase()
    },
    p.rstr_md5 = function(t) {
        return this.binl2rstr(this.binl_md5(this.rstr2binl(t), 8 * t.length))
    },
    p.rstr_hmac_md5 = function(t, e) {
        var i = this.rstr2binl(t);
        i.length > 16 && (i = this.binl_md5(i, 8 * t.length));
        for (var n = Array(16), s = Array(16), a = 0; 16 > a; a++) n[a] = 909522486 ^ i[a],
        s[a] = 1549556828 ^ i[a];
        var r = this.binl_md5(n.concat(this.rstr2binl(e)), 512 + 8 * e.length);
        return this.binl2rstr(this.binl_md5(s.concat(r), 640))
    },
    p.rstr2hex = function(t) {
        try {
            this.hexcase
        } catch(e) {
            this.hexcase = 0
        }
        for (var i, n = this.hexcase ? "0123456789ABCDEF": "0123456789abcdef", s = "", a = 0; a < t.length; a++) i = t.charCodeAt(a),
        s += n.charAt(i >>> 4 & 15) + n.charAt(15 & i);
        return s
    },
    p.rstr2b64 = function(t) {
        try {
            this.b64pad
        } catch(e) {
            this.b64pad = ""
        }
        for (var i = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",
        n = "",
        s = t.length,
        a = 0; s > a; a += 3) for (var r = t.charCodeAt(a) << 16 | (s > a + 1 ? t.charCodeAt(a + 1) << 8 : 0) | (s > a + 2 ? t.charCodeAt(a + 2) : 0), h = 0; 4 > h; h++) n += 8 * a + 6 * h > 8 * t.length ? this.b64pad: i.charAt(r >>> 6 * (3 - h) & 63);
        return n
    },
    p.rstr2any = function(t, e) {
        var i, n, s, a, r, h = e.length,
        o = Array(Math.ceil(t.length / 2));
        for (i = 0; i < o.length; i++) o[i] = t.charCodeAt(2 * i) << 8 | t.charCodeAt(2 * i + 1);
        var c = Math.ceil(8 * t.length / (Math.log(e.length) / Math.log(2))),
        l = Array(c);
        for (n = 0; c > n; n++) {
            for (r = Array(), a = 0, i = 0; i < o.length; i++) a = (a << 16) + o[i],
            s = Math.floor(a / h),
            a -= s * h,
            (r.length > 0 || s > 0) && (r[r.length] = s);
            l[n] = a,
            o = r
        }
        var g = "";
        for (i = l.length - 1; i >= 0; i--) g += e.charAt(l[i]);
        return g
    },
    p.str2rstr_utf8 = function(t) {
        for (var e, i, n = "",
        s = -1; ++s < t.length;) e = t.charCodeAt(s),
        i = s + 1 < t.length ? t.charCodeAt(s + 1) : 0,
        e >= 55296 && 56319 >= e && i >= 56320 && 57343 >= i && (e = 65536 + ((1023 & e) << 10) + (1023 & i), s++),
        127 >= e ? n += String.fromCharCode(e) : 2047 >= e ? n += String.fromCharCode(192 | e >>> 6 & 31, 128 | 63 & e) : 65535 >= e ? n += String.fromCharCode(224 | e >>> 12 & 15, 128 | e >>> 6 & 63, 128 | 63 & e) : 2097151 >= e && (n += String.fromCharCode(240 | e >>> 18 & 7, 128 | e >>> 12 & 63, 128 | e >>> 6 & 63, 128 | 63 & e));
        return n
    },
    p.str2rstr_utf16le = function(t) {
        for (var e = "",
        i = 0; i < t.length; i++) e += String.fromCharCode(255 & t.charCodeAt(i), t.charCodeAt(i) >>> 8 & 255);
        return e
    },
    p.str2rstr_utf16be = function(t) {
        for (var e = "",
        i = 0; i < t.length; i++) e += String.fromCharCode(t.charCodeAt(i) >>> 8 & 255, 255 & t.charCodeAt(i));
        return e
    },
    p.rstr2binl = function(t) {
        for (var e = Array(t.length >> 2), i = 0; i < e.length; i++) e[i] = 0;
        for (var i = 0; i < 8 * t.length; i += 8) e[i >> 5] |= (255 & t.charCodeAt(i / 8)) << i % 32;
        return e
    },
    p.binl2rstr = function(t) {
        for (var e = "",
        i = 0; i < 32 * t.length; i += 8) e += String.fromCharCode(t[i >> 5] >>> i % 32 & 255);
        return e
    },
    p.binl_md5 = function(t, e) {
        t[e >> 5] |= 128 << e % 32,
        t[(e + 64 >>> 9 << 4) + 14] = e;
        for (var i = 1732584193,
        n = -271733879,
        s = -1732584194,
        a = 271733878,
        r = 0; r < t.length; r += 16) {
            var h = i,
            o = n,
            c = s,
            l = a;
            i = this.md5_ff(i, n, s, a, t[r + 0], 7, -680876936),
            a = this.md5_ff(a, i, n, s, t[r + 1], 12, -389564586),
            s = this.md5_ff(s, a, i, n, t[r + 2], 17, 606105819),
            n = this.md5_ff(n, s, a, i, t[r + 3], 22, -1044525330),
            i = this.md5_ff(i, n, s, a, t[r + 4], 7, -176418897),
            a = this.md5_ff(a, i, n, s, t[r + 5], 12, 1200080426),
            s = this.md5_ff(s, a, i, n, t[r + 6], 17, -1473231341),
            n = this.md5_ff(n, s, a, i, t[r + 7], 22, -45705983),
            i = this.md5_ff(i, n, s, a, t[r + 8], 7, 1770035416),
            a = this.md5_ff(a, i, n, s, t[r + 9], 12, -1958414417),
            s = this.md5_ff(s, a, i, n, t[r + 10], 17, -42063),
            n = this.md5_ff(n, s, a, i, t[r + 11], 22, -1990404162),
            i = this.md5_ff(i, n, s, a, t[r + 12], 7, 1804603682),
            a = this.md5_ff(a, i, n, s, t[r + 13], 12, -40341101),
            s = this.md5_ff(s, a, i, n, t[r + 14], 17, -1502002290),
            n = this.md5_ff(n, s, a, i, t[r + 15], 22, 1236535329),
            i = this.md5_gg(i, n, s, a, t[r + 1], 5, -165796510),
            a = this.md5_gg(a, i, n, s, t[r + 6], 9, -1069501632),
            s = this.md5_gg(s, a, i, n, t[r + 11], 14, 643717713),
            n = this.md5_gg(n, s, a, i, t[r + 0], 20, -373897302),
            i = this.md5_gg(i, n, s, a, t[r + 5], 5, -701558691),
            a = this.md5_gg(a, i, n, s, t[r + 10], 9, 38016083),
            s = this.md5_gg(s, a, i, n, t[r + 15], 14, -660478335),
            n = this.md5_gg(n, s, a, i, t[r + 4], 20, -405537848),
            i = this.md5_gg(i, n, s, a, t[r + 9], 5, 568446438),
            a = this.md5_gg(a, i, n, s, t[r + 14], 9, -1019803690),
            s = this.md5_gg(s, a, i, n, t[r + 3], 14, -187363961),
            n = this.md5_gg(n, s, a, i, t[r + 8], 20, 1163531501),
            i = this.md5_gg(i, n, s, a, t[r + 13], 5, -1444681467),
            a = this.md5_gg(a, i, n, s, t[r + 2], 9, -51403784),
            s = this.md5_gg(s, a, i, n, t[r + 7], 14, 1735328473),
            n = this.md5_gg(n, s, a, i, t[r + 12], 20, -1926607734),
            i = this.md5_hh(i, n, s, a, t[r + 5], 4, -378558),
            a = this.md5_hh(a, i, n, s, t[r + 8], 11, -2022574463),
            s = this.md5_hh(s, a, i, n, t[r + 11], 16, 1839030562),
            n = this.md5_hh(n, s, a, i, t[r + 14], 23, -35309556),
            i = this.md5_hh(i, n, s, a, t[r + 1], 4, -1530992060),
            a = this.md5_hh(a, i, n, s, t[r + 4], 11, 1272893353),
            s = this.md5_hh(s, a, i, n, t[r + 7], 16, -155497632),
            n = this.md5_hh(n, s, a, i, t[r + 10], 23, -1094730640),
            i = this.md5_hh(i, n, s, a, t[r + 13], 4, 681279174),
            a = this.md5_hh(a, i, n, s, t[r + 0], 11, -358537222),
            s = this.md5_hh(s, a, i, n, t[r + 3], 16, -722521979),
            n = this.md5_hh(n, s, a, i, t[r + 6], 23, 76029189),
            i = this.md5_hh(i, n, s, a, t[r + 9], 4, -640364487),
            a = this.md5_hh(a, i, n, s, t[r + 12], 11, -421815835),
            s = this.md5_hh(s, a, i, n, t[r + 15], 16, 530742520),
            n = this.md5_hh(n, s, a, i, t[r + 2], 23, -995338651),
            i = this.md5_ii(i, n, s, a, t[r + 0], 6, -198630844),
            a = this.md5_ii(a, i, n, s, t[r + 7], 10, 1126891415),
            s = this.md5_ii(s, a, i, n, t[r + 14], 15, -1416354905),
            n = this.md5_ii(n, s, a, i, t[r + 5], 21, -57434055),
            i = this.md5_ii(i, n, s, a, t[r + 12], 6, 1700485571),
            a = this.md5_ii(a, i, n, s, t[r + 3], 10, -1894986606),
            s = this.md5_ii(s, a, i, n, t[r + 10], 15, -1051523),
            n = this.md5_ii(n, s, a, i, t[r + 1], 21, -2054922799),
            i = this.md5_ii(i, n, s, a, t[r + 8], 6, 1873313359),
            a = this.md5_ii(a, i, n, s, t[r + 15], 10, -30611744),
            s = this.md5_ii(s, a, i, n, t[r + 6], 15, -1560198380),
            n = this.md5_ii(n, s, a, i, t[r + 13], 21, 1309151649),
            i = this.md5_ii(i, n, s, a, t[r + 4], 6, -145523070),
            a = this.md5_ii(a, i, n, s, t[r + 11], 10, -1120210379),
            s = this.md5_ii(s, a, i, n, t[r + 2], 15, 718787259),
            n = this.md5_ii(n, s, a, i, t[r + 9], 21, -343485551),
            i = this.safe_add(i, h),
            n = this.safe_add(n, o),
            s = this.safe_add(s, c),
            a = this.safe_add(a, l)
        }
        return [i, n, s, a]
    },
    p.md5_cmn = function(t, e, i, n, s, a) {
        return this.safe_add(this.bit_rol(this.safe_add(this.safe_add(e, t), this.safe_add(n, a)), s), i)
    },
    p.md5_ff = function(t, e, i, n, s, a, r) {
        return this.md5_cmn(e & i | ~e & n, t, e, s, a, r)
    },
    p.md5_gg = function(t, e, i, n, s, a, r) {
        return this.md5_cmn(e & n | i & ~n, t, e, s, a, r)
    },
    p.md5_hh = function(t, e, i, n, s, a, r) {
        return this.md5_cmn(e ^ i ^ n, t, e, s, a, r)
    },
    p.md5_ii = function(t, e, i, n, s, a, r) {
        return this.md5_cmn(i ^ (e | ~n), t, e, s, a, r)
    },
    p.safe_add = function(t, e) {
        var i = (65535 & t) + (65535 & e),
        n = (t >> 16) + (e >> 16) + (i >> 16);
        return n << 16 | 65535 & i
    },
    p.bit_rol = function(t, e) {
        return t << e | t >>> 32 - e
    },
    t
} ();
egret.registerClass(md5, "md5");
var NativeApi; !
function(t) {
    function e() {
        var e = JSON.stringify(t.datas);
        egret.localStorage.setItem(t.key, e)
    }
    function i() {
        var i = null;
        i = egret.localStorage.getItem(t.key),
        null == i || "" == i ? (t.datas = {
            maxScore: 0,
            is_music: 1
        },
        e()) : t.datas = JSON.parse(i)
    }
    function n(t, e) {
        egret.localStorage.setItem(t, e)
    }
    function s(t) {
        return egret.localStorage.getItem(t)
    }
    function a(t) {
        egret.localStorage.removeItem(t)
    }
    function r() {
        egret.localStorage.clear()
    }
    function h(e) {
        if ("undefined" != typeof FileReader && /image/i.test(e.type)) {
            var i = new FileReader;
            i.onload = function() {
                alert("数据读取完成");
                var e = document.getElementById("result");
                e.innerHTML = '<img id="photoImg" src="' + this.result + '" alt="" />';
                var i = new egret.Texture;
                i._setBitmapData(document.getElementById("photoImg")),
                t.srcImg.texture = i
            },
            i.readAsDataURL(e)
        }
    }
    function o(t) {
        "undefined" != typeof t && t.length > 0 ? h(t[0]) : alert("抱歉！当前系统不支持此功能！")
    }
    function c(t) {
        this.srcImg = t;
        var e = document.getElementById("files-upload");
        e.click();
        var i = this;
        e.addEventListener("change",
        function() {
            i.traverseFiles(this.files)
        },
        !1)
    }
    function l() {}
    function g() {}
    function d(t) {
        window.open("tel:" + t, "_self")
    }
    function u(t) {
        window.open("sms:" + t, "_self")
    }
    function p() {
        return window.location.href
    }
    function m(t) {
        void 0 === t && (t = !1),
        GameConfig.gameScene().uiLayer.visible = !1,
        GameConfig.gameScene().topLayer.visible = !1,
        GameConfig.gameScene().effectLayer.visible = !1,
        GameConfig.gameScene().mainUILayer.visible = !1,
        Global.verticalTipsPanel = new VerticalTipsPanel(t),
        GameConfig.gameScene().rotationTipsLayer.removeChildren(),
        GameConfig.gameScene().rotationTipsLayer.addChild(Global.verticalTipsPanel)
    }
    function f() {
        GameConfig.gameScene().uiLayer.visible = !0,
        GameConfig.gameScene().topLayer.visible = !0,
        GameConfig.gameScene().effectLayer.visible = !0,
        GameConfig.gameScene().mainUILayer.visible = !0,
        GameConfig.gameScene().rotationTipsLayer.contains(Global.verticalTipsPanel) && GameConfig.gameScene().rotationTipsLayer.removeChild(Global.verticalTipsPanel),
        Global.verticalTipsPanel = null
    }
    t.key = "test_key111",
    t.saveData = e,
    i(),
    t.setLocalData = n,
    t.getLocalData = s,
    t.deleteLocalData = a,
    t.clearLocalData = r,
    t.srcImg = new egret.Bitmap,
    t.uploadFile = h,
    t.traverseFiles = o,
    t.fileUpload = c,
    t.getMic = l,
    t.getScreen = g,
    t.callPhone = d,
    t.sendMessage = u,
    t.getCurUrl = p,
    t.curAngle = window.orientation,
    t.showVerticalTips = m,
    t.removeVerticalTips = f
} (NativeApi || (NativeApi = {}));
var RegUtils; !
function(t) {
    function e(t) {
        var e = /^[\w-]+(\.[\w-]+)*@[\w-]+(\.[\w-]+)+$/;
        return e.test(t) ? !0 : (alert("您输入的Email地址格式不正确！"), !1)
    }
    function i(t) {
        if (a(t)) return ! 1;
        var e = /^(\d+)\.(\d+)\.(\d+)\.(\d+)$/g;
        return e.test(t) && Number(RegExp.$1) < 256 && Number(RegExp.$2) < 256 && Number(RegExp.$3) < 256 && Number(RegExp.$4) < 256 ? !0 : !1
    }
    function n(t) {
        var e = "/^[1][3][0-9]{9}$/",
        i = new RegExp(e);
        return i.test(t) ? !0 : !1
    }
    function s(t) {
        var e = /^[0][1-9]{2,3}-[0-9]{5,10}$/,
        i = /^[1-9]{1}[0-9]{5,8}$/,
        n = "您输入的电话号码不正确!";
        return t.length > 9 ? e.test(t) ? !0 : (alert(n), !1) : i.test(t) ? !0 : (alert(n), !1)
    }
    function a(t) {
        if ("" == t) return ! 0;
        var e = "^[ ]+$",
        i = new RegExp(e);
        return i.test(t)
    }
    function r(t) {
        var e = /^[-]{0,1}[0-9]{1,}$/;
        return e.test(t)
    }
    function h(t) {
        var e = "^[0-9]+$",
        i = new RegExp(e);
        return - 1 != t.search(i) ? !0 : !1
    }
    function o(t) {
        var e = "^[0-9]+[.][0-9]{0,3}$",
        i = new RegExp(e);
        return i.test(t) ? !0 : !1
    }
    function c(t, e) {
        var i = " ",
        n = -1;
        if (0 == e || 1 == e) {
            for (;
            " " == i;)++n,
            i = t.substr(n, 1);
            t = t.substring(n)
        }
        if (0 == e || 2 == e) {
            for (i = " ", n = t.length;
            " " == i;)--n,
            i = t.substr(n, 1);
            t = t.substring(0, n + 1)
        }
        return t
    }
    t.checkEmail = e,
    t.isIP = i,
    t.checkMobile = n,
    t.checkPhone = s,
    t.isNull = a,
    t.isInteger = r,
    t.isNumber = h,
    t.isMoney = o,
    t.cTrim = c
} (RegUtils || (RegUtils = {}));
var BitmapBlink = function(t) {
    function e(e, i, n) {
        void 0 === n && (n = !0),
        t.call(this),
        this._target = e,
        this._time = i,
        n && this.start()
    }
    __extends(e, t);
    var i = (__define, e);
    return p = i.prototype,
    p.start = function() {
        this._currTime = egret.getTimer(),
        this._target.addEventListener(egret.Event.ENTER_FRAME, this.runDown, this)
    },
    p.runDown = function() {
        this._target.alpha -= .045,
        this.checkOver() || this._target.alpha <= .6 && (this._target.removeEventListener(egret.Event.ENTER_FRAME, this.runDown, this), this._target.addEventListener(egret.Event.ENTER_FRAME, this.runUp, this))
    },
    p.runUp = function() {
        this._target.alpha += .045,
        this.checkOver() || this._target.alpha >= 1 && (this._target.removeEventListener(egret.Event.ENTER_FRAME, this.runUp, this), this._target.addEventListener(egret.Event.ENTER_FRAME, this.runDown, this))
    },
    p.checkOver = function() {
        var t = egret.getTimer();
        return t - this._currTime >= this._time ? (this.destroy(), !0) : !1
    },
    p.destroy = function() {
        this._target.alpha = 1,
        this._target.removeEventListener(egret.Event.ENTER_FRAME, this.runDown, this),
        this._target.removeEventListener(egret.Event.ENTER_FRAME, this.runUp, this),
        this.dispatchEventWith(egret.Event.COMPLETE, !1, this._target),
        this._target = null
    },
    e
} (egret.EventDispatcher);
egret.registerClass(BitmapBlink, "BitmapBlink");
var lcp; !
function(t) {
    var e = function(t) {
        function e(e, i, n, s) {
            void 0 === i && (i = null),
            void 0 === n && (n = !1),
            void 0 === s && (s = !1),
            t.call(this, e, n, s),
            this.CLASS_NAME = "LEvent",
            i && (this._obj = i)
        }
        __extends(e, t);
        var i = __define,
        n = e;
        return p = n.prototype,
        p.clone = function(t) {
            return new e(this.type, t ? t: this._obj, this.bubbles, this.cancelable)
        },
        p.toString = function() {
            console.log(this.CLASS_NAME, "type", "bubbles", "cancelable")
        },
        i(p, "param",
        function() {
            return this._obj
        }),
        e
    } (egret.Event);
    t.LEvent = e,
    egret.registerClass(e, "lcp.LEvent")
} (lcp || (lcp = {}));
var lcp; !
function(t) {
    var e = function() {
        function t() {
            this.CLASS_NAME = "LListener",
            this.isInit = !1,
            this.isInit,
            null == this._dispatcher && (this._dispatcher = new egret.EventDispatcher, this.isInit = !0)
        }
        var e = (__define, t);
        return p = e.prototype,
        t.getInstance = function() {
            return null == this._instance && (this._instance = new t),
            this._instance
        },
        p.addEventListener = function(t, e, i, n, s) {
            void 0 === n && (n = !1),
            void 0 === s && (s = 0),
            this._dispatcher.addEventListener(t, e, i, n, s)
        },
        p.removeEventListener = function(t, e, i, n) {
            void 0 === n && (n = !1),
            this._dispatcher.removeEventListener(t, e, i, n)
        },
        p.hasEventListener = function(t) {
            return this._dispatcher.hasEventListener(t)
        },
        p.willTrigger = function(t) {
            return this._dispatcher.willTrigger(t)
        },
        p.dispatchEvent = function(t) {
            return this._dispatcher.dispatchEvent(t)
        },
        p.toString = function() {
            return this._dispatcher.toString()
        },
        t
    } ();
    t.LListener = e,
    egret.registerClass(e, "lcp.LListener")
} (lcp || (lcp = {}));
var TipsUtils; !
function(t) {
    function e(t, e) {
        void 0 === t && (t = ""),
        void 0 === e && (e = !1);
        var i = new egret.TextField;
        i.size = 24,
        i.y = GameConfig.curHeight() / 2,
        i.textColor = e ? GameConfig.TextColors.red: GameConfig.TextColors.green,
        i.alpha = 0,
        i.text = t,
        i.strokeColor = 0,
        i.x = GameConfig.curWidth() / 2 - i.width / 2,
        i.stroke = 2,
        i.bold = !0,
        i.textAlign = egret.HorizontalAlign.CENTER,
        GameConfig.gameScene().topLayer.contains(i) || GameConfig.gameScene().topLayer.addChild(i);
        var n = function() {
            GameConfig.gameScene().topLayer.contains(i) && (GameConfig.gameScene().topLayer.removeChild(i), i = null)
        },
        s = function() {
            egret.Tween.get(i).to({
                alpha: 0
            },
            500).call(n, this)
        };
        i.visible = !0,
        egret.Tween.get(i).to({
            y: i.y - 120,
            alpha: 1
        },
        800, egret.Ease.backOut).call(s, this)
    }
    function i(t, e, i) {
        void 0 === t && (t = ""),
        void 0 === e && (e = !1),
        void 0 === i && (i = !0);
        var n = new egret.TextField;
        n.size = 32,
        n.y = GameConfig.curHeight() / 2,
        n.textColor = e ? GameConfig.TextColors.red: GameConfig.TextColors.white,
        n.alpha = 0,
        n.text = t,
        n.strokeColor = GameConfig.TextColors.black,
        n.x = i ? -n.width: GameConfig.curWidth(),
        n.stroke = 2,
        n.bold = !0,
        n.textAlign = egret.HorizontalAlign.CENTER,
        GameConfig.gameScene().topLayer.contains(n) || GameConfig.gameScene().topLayer.addChild(n),
        i ? egret.Tween.get(n).to({
            x: GameConfig.curWidth() / 2 - n.width / 2,
            alpha: 1
        },
        300, egret.Ease.sineInOut) : egret.Tween.get(n).to({
            x: GameConfig.curWidth() / 2 - n.width / 2,
            alpha: 1
        },
        300, egret.Ease.sineInOut);
        var s = 1e3;
        egret.setTimeout(function() {
            i ? egret.Tween.get(n).to({
                x: n.x + 100
            },
            500) : egret.Tween.get(n).to({
                x: n.x - 100
            },
            500)
        },
        this, 300 + s),
        egret.setTimeout(function() {
            i ? egret.Tween.get(n).to({
                x: GameConfig.curWidth()
            },
            300, egret.Ease.sineIn) : egret.Tween.get(n).to({
                x: -n.width
            },
            300, egret.Ease.sineIn)
        },
        this, 800 + s),
        egret.setTimeout(function() {
            GameConfig.gameScene().topLayer.contains(n) && (GameConfig.gameScene().topLayer.removeChild(n), n = null)
        },
        this, 1100 + s)
    }
    function n(t, e) {
        void 0 === t && (t = ""),
        void 0 === e && (e = !1);
        var i = new egret.TextField;
        i.size = 24,
        i.y = GameConfig.curHeight() / 2,
        i.textColor = e ? GameConfig.TextColors.red: GameConfig.TextColors.green,
        i.alpha = 0,
        i.text = t,
        i.strokeColor = 0,
        i.x = GameConfig.curWidth() / 2,
        i.stroke = 2,
        i.bold = !0,
        i.textAlign = egret.HorizontalAlign.CENTER,
        i.anchorOffsetX = .5 * i.width,
        i.anchorOffsetY = .5 * i.height,
        i.scaleX = 0,
        i.scaleY = 0,
        GameConfig.gameScene().topLayer.contains(i) || GameConfig.gameScene().topLayer.addChild(i);
        var n = function() {
            GameConfig.gameScene().topLayer.contains(i) && (GameConfig.gameScene().topLayer.removeChild(i), i = null)
        };
        egret.Tween.get(i).to({
            scaleX: 1,
            scaleY: 1,
            alpha: 1
        },
        200),
        egret.setTimeout(function() {
            egret.Tween.get(i).to({
                alpha: 0
            },
            500).call(n, this)
        },
        this, 1e3)
    }
    function s(t, e) {
        void 0 === t && (t = ""),
        void 0 === e && (e = !1);
        var i = new egret.TextField;
        i.size = 24,
        i.y = GameConfig.curHeight() / 2,
        i.textColor = e ? GameConfig.TextColors.red: GameConfig.TextColors.green,
        i.alpha = 0,
        i.text = t,
        i.strokeColor = 0,
        i.x = GameConfig.curWidth() / 2,
        i.stroke = 2,
        i.bold = !0,
        i.textAlign = egret.HorizontalAlign.CENTER,
        i.anchorOffsetX = .5 * i.width,
        i.anchorOffsetY = .5 * i.height,
        i.scaleX = 4,
        i.scaleY = 4,
        GameConfig.gameScene().topLayer.contains(i) || GameConfig.gameScene().topLayer.addChild(i);
        var n = function() {
            GameConfig.gameScene().topLayer.contains(i) && (GameConfig.gameScene().topLayer.removeChild(i), i = null)
        };
        egret.Tween.get(i).to({
            scaleX: 1,
            scaleY: 1,
            alpha: 1
        },
        200),
        egret.setTimeout(function() {
            egret.Tween.get(i).to({
                alpha: 0
            },
            500).call(n, this)
        },
        this, 1e3)
    }
    t.showTipsDownToUp = e,
    t.showTipsLeftOrRight = i,
    t.showTipsFromCenter = n,
    t.showTipsBigToSmall = s
} (TipsUtils || (TipsUtils = {}));
var GameScene = function(t) {
    function e() {
        t.call(this),
        this.uiLayer = new egret.DisplayObjectContainer,
        this.topLayer = new egret.DisplayObjectContainer,
        this.effectLayer = new egret.DisplayObjectContainer,
        this.mainUILayer = new egret.DisplayObjectContainer,
        this.maskLayer = new egret.DisplayObjectContainer,
        this.rotationTipsLayer = new egret.DisplayObjectContainer,
        this.init()
    }
    __extends(e, t);
    var i = (__define, e);
    return p = i.prototype,
    p.init = function() {
        this.addChild(this.uiLayer),
        this.addChild(this.topLayer),
        this.addChild(this.effectLayer),
        this.addChild(this.mainUILayer),
        this.addChild(this.maskLayer),
        this.addChild(this.rotationTipsLayer)
    },
    e
} (egret.DisplayObjectContainer);
egret.registerClass(GameScene, "GameScene");
var PanelManager; !
function(t) {
    function e() {
        var t = document.documentElement.clientWidth,
        e = document.documentElement.clientHeight;
        e > t && (GlobalData.initIsVertical = !0),
        Global.addEventListener(MainNotify.openStartPanelNotify, this.openStartPanel, this),
        Global.addEventListener(MainNotify.closeStartPanelNotify, this.closeStartPanel, this),
        Global.addEventListener(MainNotify.openGamePanelNotify, this.openGamePanel, this),
        Global.addEventListener(MainNotify.closeGamePanelNotify, this.closeGamePanel, this),
        Global.addEventListener(MainNotify.openGameOverPanelNotify, this.openGameOverPanel, this),
        Global.addEventListener(MainNotify.closeGameOverPanelNotify, this.closeGameOverPanel, this)
    }
    function i() {
        egret.log("openStartPanel"),
        null == this.startPanel && (this.startPanel = new StartPanel, PopUpManager.addPopUp(this.startPanel, !0, 0, 0, 0))
    }
    function n() {
        null != this.startPanel && (PopUpManager.removePopUp(this.startPanel, 3), this.startPanel = null)
    }
    function s() {
        null == this.gamePanel && (this.gamePanel = new GamePanel, PopUpManager.addPopUp(this.gamePanel, !1, 0, 0, 0))
    }
    function a() {
        null != this.gamePanel && (PopUpManager.removePopUp(this.gamePanel, 3), this.gamePanel = null)
    }
    function r(t) {
        null == this.gameOverPanel && (this.gameOverPanel = new GameOverPanel(t.param), PopUpManager.addPopUp(this.gameOverPanel, !1, 0, 0, 3))
    }
    function h() {
        null != this.gameOverPanel && (PopUpManager.removePopUp(this.gameOverPanel, 3), this.gameOverPanel = null)
    }
    t.initPanel = e,
    t.openStartPanel = i,
    t.closeStartPanel = n,
    t.openGamePanel = s,
    t.closeGamePanel = a,
    t.openGameOverPanel = r,
    t.closeGameOverPanel = h
} (PanelManager || (PanelManager = {}));
var PopUpManager; !
function(t) {
    function e(t, e, i, n, s, a) {
        if (void 0 === e && (e = !1), void 0 === i && (i = 0), void 0 === n && (n = 0), void 0 === s && (s = 0), void 0 === a && (a = !1), !GameConfig.gameScene().uiLayer.contains(t)) {
            e && (this.darkSprite = new egret.Sprite, this.darkSprite.graphics.clear(), this.darkSprite.graphics.beginFill(0, .3), this.darkSprite.graphics.drawRect(0, 0, GameConfig.curWidth(), GameConfig.curHeight()), this.darkSprite.graphics.endFill(), this.darkSprite.width = GameConfig.curWidth(), this.darkSprite.height = GameConfig.curHeight(), GameConfig.gameScene().uiLayer.contains(this.darkSprite) || GameConfig.gameScene().uiLayer.addChild(this.darkSprite), this.darkSprite.touchEnabled = !0, egret.Tween.get(this.darkSprite).to({
                alpha: 1
            },
            150), this.darkSprite.visible = !0),
            GameConfig.gameScene().uiLayer.addChild(t),
            GameConfig.curPanel = t,
            0 != i ? (t.x = GameConfig.curWidth() / 2 - i / 2, t.y = GameConfig.curHeight() / 2 - n / 2) : (i = t.width, n = t.height);
            var r = GameConfig.curWidth() / 2 - i / 2,
            h = GameConfig.curHeight() / 2 - n / 2;
            switch (s) {
            case 0:
                break;
            case 1:
                t.alpha = 0,
                t.scaleX = .5,
                t.scaleY = .5,
                t.x = t.x + i / 4,
                t.y = t.y + n / 4,
                egret.Tween.get(t).to({
                    alpha: 1,
                    scaleX: 1,
                    scaleY: 1,
                    x: t.x - i / 4,
                    y: t.y - n / 4
                },
                300, egret.Ease.backOut);
                break;
            case 2:
                t.alpha = 0,
                t.scaleX = .5,
                t.scaleY = .5,
                t.x = t.x + i / 4,
                t.y = t.y + n / 4,
                egret.Tween.get(t).to({
                    alpha: 1,
                    scaleX: 1,
                    scaleY: 1,
                    x: t.x - i / 4,
                    y: t.y - n / 4
                },
                600, egret.Ease.elasticOut);
                break;
            case 3:
                a ? (t.x = -i, egret.Tween.get(t).to({
                    x: r
                },
                500, egret.Ease.cubicOut)) : (t.x = -i, egret.Tween.get(t).to({
                    x: 0
                },
                500, egret.Ease.cubicOut));
                break;
            case 4:
                a ? (t.x = i, egret.Tween.get(t).to({
                    x: r
                },
                500, egret.Ease.cubicOut)) : (t.x = i, egret.Tween.get(t).to({
                    x: 0
                },
                500, egret.Ease.cubicOut));
                break;
            case 5:
                a ? (t.y = -n, egret.Tween.get(t).to({
                    y: h
                },
                500, egret.Ease.cubicOut)) : (t.y = -n, egret.Tween.get(t).to({
                    y: 0
                },
                500, egret.Ease.cubicOut));
                break;
            case 6:
                a ? (t.y = GameConfig.curHeight(), egret.Tween.get(t).to({
                    y: h
                },
                500, egret.Ease.cubicOut)) : (t.y = n, egret.Tween.get(t).to({
                    y: 0
                },
                500, egret.Ease.cubicOut))
            }
        }
    }
    function i(t, e) {
        void 0 === e && (e = 0);
        var i = function() {
            GameConfig.gameScene().uiLayer.contains(this.darkSprite) && GameConfig.gameScene().uiLayer.removeChild(this.darkSprite)
        };
        switch (this.darkSprite && egret.Tween.get(this.darkSprite).to({
            alpha: 0
        },
        100).call(i, this), e) {
        case 0:
            break;
        case 1:
            egret.Tween.get(t).to({
                alpha:
                0,
                scaleX: 0,
                scaleY: 0,
                x: t.x + t.getWidth() / 2,
                y: t.y + t.getHeight() / 2
            },
            300);
            break;
        case 2:
            break;
        case 3:
            egret.Tween.get(t).to({
                x:
                t.getWidth()
            },
            500, egret.Ease.cubicOut);
            break;
        case 4:
            egret.Tween.get(t).to({
                x:
                -t.getWidth()
            },
            500, egret.Ease.cubicOut);
            break;
        case 5:
            egret.Tween.get(t).to({
                y:
                t.getHeight()
            },
            500, egret.Ease.cubicOut);
            break;
        case 6:
            egret.Tween.get(t).to({
                y:
                -t.getHeight()
            },
            500, egret.Ease.cubicOut)
        }
        egret.setTimeout(function() {
            GameConfig.gameScene().uiLayer.contains(t) && GameConfig.gameScene().uiLayer.removeChild(t)
        },
        this, 500)
    }
    t.addPopUp = e,
    t.removePopUp = i
} (PopUpManager || (PopUpManager = {}));
var game; !
function(t) {
    var e = function(t) {
        function e() {
            t.call(this);
            var e = RES.getRes("bar_skeleton_json"),
            i = RES.getRes("bar_texture_json"),
            n = RES.getRes("bar_texture_png"),
            s = new dragonBones.EgretFactory;
            s.addDragonBonesData(dragonBones.DataParser.parseDragonBonesData(e)),
            s.addTextureAtlas(new dragonBones.EgretTextureAtlas(n, i)),
            this.armature = s.buildFastArmature("kuaidi"),
            this.armature.enableAnimationCache(30),
            this.addChild(this.armature.display),
            dragonBones.WorldClock.clock.add(this.armature),
            this.armature.animation.gotoAndPlay("che1"),
            this.width = .7 * this.armature.display.width,
            this.height = .7 * this.armature.display.height,
            this.anchorOffsetX = this.width / 2,
            this.anchorOffsetY = this.height / 2,
            this.y = .3 * GameConfig.LANE_HEIGHT,
            this.armature.display.x = this.width / 2,
            this.armature.display.y = this.height / 2,
            this.rect = new egret.Rectangle,
            this.rect.x = this.x - this.anchorOffsetX,
            this.rect.width = this.width,
            this.rect.height = this.height
        }
        __extends(e, t);
        var i = (__define, e);
        return p = i.prototype,
        p.getRect = function() {
            return this.rect.x = this.x - this.anchorOffsetX,
            this.rect
        },
        p.playAction = function() {},
        p.init = function(t, e, i) {
            this.x = e,
            this.type = i,
            this.scaleX = t,
            this.speed = GameConfig.barrier_speed_config[i] * t,
            this.width = GameConfig.barrier_box_config[i][0],
            this.height = GameConfig.barrier_box_config[i][1],
            this.rect.width = this.width,
            this.rect.height = this.height,
            this.anchorOffsetX = this.width / 2,
            this.anchorOffsetY = this.height / 2,
            this.armature.display.x = this.width / 2,
            this.armature.display.y = this.height / 2,
            0 == i ? this.armature.animation.gotoAndPlay("che1") : 1 == i ? this.armature.animation.gotoAndPlay("che2") : 2 == i ? this.armature.animation.gotoAndPlay("nainai") : 3 == i && this.armature.animation.gotoAndPlay("gougou"),
            this.rect.y = this.y + this.parent.y - this.anchorOffsetY - this.parent.anchorOffsetY
        },
        p.move = function() {
            this.x += this.speed
        },
        e.create = function() {
            return e.barrierObjectPool.length ? e.barrierObjectPool.pop() : new e
        },
        p.destory = function() {
            this.parent.removeChild(this),
            e.barrierObjectPool.push(this)
        },
        e.barrierObjectPool = [],
        e
    } (egret.Sprite);
    t.BarrierObject = e,
    egret.registerClass(e, "game.BarrierObject")
} (game || (game = {}));
var game; !
function(t) {
    var e = function(t) {
        function e() {
            t.call(this),
            this.width = GameConfig.curWidth(),
            this.height = GameConfig.LANE_HEIGHT,
            this.anchorOffsetX = this.width / 2,
            this.anchorOffsetY = this.height / 2,
            this.destroy_min_x = -50,
            this.destroy_max_x = GameConfig.curWidth() + 200
        }
        __extends(e, t);
        var i = (__define, e);
        return p = i.prototype,
        p.tick = function() {
            for (var t = 0; t < this.numChildren; t++) {
                var e = this.getChildAt(t);
                e.x <= this.destroy_max_x && e.x >= this.destroy_min_x ? e.move() : e.destory()
            }
        },
        p.checkCollision = function(t) {
            for (var e = 0; e < this.numChildren; e++) {
                var i = this.getChildAt(e),
                n = i.getRect(),
                s = t.intersects(n);
                if (s) return i.type
            }
            return - 1
        },
        p.setDirction = function(t) {
            this.dirction = t
        },
        p.getDirction = function() {
            return this.dirction
        },
        p.setPosition = function(t, e) {
            this.x = t,
            this.y = e
        },
        e
    } (egret.Sprite);
    t.LaneObject = e,
    egret.registerClass(e, "game.LaneObject")
} (game || (game = {}));
var game; !
function(t) {
    var e = function(t) {
        function e() {
            t.call(this, RES.getRes("pack_png")),
            this.alpha = 0
        }
        __extends(e, t);
        var i = (__define, e);
        return p = i.prototype,
        p.apper = function(t) {
            this.y = t,
            egret.Tween.get(this).to({
                alpha: 1
            },
            300).to({
                alpha: 0
            },
            1e3)
        },
        e
    } (egret.Bitmap);
    t.PackObject = e,
    egret.registerClass(e, "game.PackObject")
} (game || (game = {}));
var game; !
function(t) {
    var e = function(t) {
        function e() {
            t.call(this),
            this.run_speed = GameConfig.MAN_INIT_SPEED,
            this.is_run = !0,
            this.direction = 1,
            this.onAddToStage()
        }
        __extends(e, t);
        var i = (__define, e);
        return p = i.prototype,
        p.destroy = function() {
            dragonBones.WorldClock.clock.remove(this.armature),
            this.armature.dispose()
        },
        p.onAddToStage = function() {
            var t = RES.getRes("skeleton_json"),
            e = RES.getRes("texture_json"),
            i = RES.getRes("texture_png"),
            n = new dragonBones.EgretFactory;
            n.addDragonBonesData(dragonBones.DataParser.parseDragonBonesData(t)),
            n.addTextureAtlas(new dragonBones.EgretTextureAtlas(i, e)),
            this.armature = n.buildFastArmature("kuaidiyuang"),
            this.armature.enableAnimationCache(30),
            this.addChild(this.armature.display),
            dragonBones.WorldClock.clock.add(this.armature),
            this.armature.animation.gotoAndPlay("ren"),
            this.width = 20,
            this.height = 30,
            this.anchorOffsetX = .5 * this.width,
            this.anchorOffsetY = this.height / 2,
            this.armature.display.x = .75 * this.width,
            this.armature.display.y = this.height / 2
        },
        p.init = function() {
            this.rect = new egret.Rectangle,
            this.rect.x = this.x - this.anchorOffsetY,
            this.rect.y = this.y - this.anchorOffsetY,
            this.rect.width = this.width,
            this.rect.height = this.height;
            new egret.Rectangle(332, 681, 72, 37),
            new egret.Rectangle(345, 655, 30, 50)
        },
        p.getRect = function() {
            return this.rect.y = this.y - this.anchorOffsetY,
            this.rect
        },
        p.changeDirection = function() {
            this.direction = -this.direction,
            this.armature.animation.gotoAndPlay(1 == this.direction ? "ren": "renbei")
        },
        p.tick = function() {
            this.is_run && (1 == this.direction ? this.y < GameConfig.MAN_MAX_Y ? this.y += this.run_speed: (Global.dispatchEvent(MainNotify.confirmationPackNotify, {
                is_top: !1
            }), this.changeDirection()) : this.y > GameConfig.MAN_MIN_Y ? this.y -= this.run_speed: (Global.dispatchEvent(MainNotify.confirmationPackNotify, {
                is_top: !0
            }), this.changeDirection()))
        },
        e
    } (egret.Sprite);
    t.RunMan = e,
    egret.registerClass(e, "game.RunMan")
} (game || (game = {}));
var LoadingUI = function(t) {
    function e() {
        t.call(this),
        this.createView()
    }
    __extends(e, t);
    var i = (__define, e);
    return p = i.prototype,
    p.createView = function() {
        var t = new egret.Bitmap(RES.getRes("loading_bg_jpg"));
        this.addChild(t),
        this.textField = new egret.TextField,
        this.addChild(this.textField),
        this.textField.y = 780,
        this.textField.textColor = 16711680,
        this.textField.width = 640,
        this.textField.height = 100,
        this.textField.textAlign = "center"
    },
    p.createBg = function(t) {},
    p.setProgress = function(t, e) {
        "huowu" == GameConfig.CHANNEL || (this.textField.text = "Loading..." + t + "/" + e)
    },
    e
} (egret.Sprite);
egret.registerClass(LoadingUI, "LoadingUI");
var Main = function(t) {
    function e() {
        t.call(this),
        GameConfig.CHANNEL = window.game_config.channel,
        "huowu" == GameConfig.CHANNEL || (GameConfig.isWeiXin() ? GlobalData.jssdk = new utils.JSSDK: (window.mobShare.ui.open(), window.share_sdk(0, 0)));
        var e = new DCAgentInitConfig;
        e.appId = "85D26FF6097B7D13239EA65D1A3EDB70",
        e.appVer = "v1.0.0",
        e.channel = GameConfig.CHANNEL,
        e.interval = 20,
        e.virus = !1,
        DCAgent.init(e),
        this.addEventListener(egret.Event.ADDED_TO_STAGE, this.onAddToStage, this)
    }
    __extends(e, t);
    var i = (__define, e);
    return p = i.prototype,
    p.onAddToStage = function() {
        this.addChild(GameConfig.gameScene()),
        RES.addEventListener(RES.ResourceEvent.CONFIG_COMPLETE, this.onConfigComplete, this),
        RES.loadConfig("resource/default.res.json", "resource/")
    },
    p.onConfigComplete = function() {
        RES.removeEventListener(RES.ResourceEvent.CONFIG_COMPLETE, this.onConfigComplete, this),
        RES.addEventListener(RES.ResourceEvent.GROUP_COMPLETE, this.onResourceLoadComplete, this),
        RES.addEventListener(RES.ResourceEvent.GROUP_LOAD_ERROR, this.onResourceLoadError, this),
        RES.addEventListener(RES.ResourceEvent.GROUP_PROGRESS, this.onResourceProgress, this),
        RES.loadGroup("login")
    },
    p.onResourceLoadComplete = function(t) {
        if ("preload" == t.groupName) {
            if (this.stage.removeChild(this.loadingView), RES.removeEventListener(RES.ResourceEvent.GROUP_COMPLETE, this.onResourceLoadComplete, this), RES.removeEventListener(RES.ResourceEvent.GROUP_LOAD_ERROR, this.onResourceLoadError, this), RES.removeEventListener(RES.ResourceEvent.GROUP_PROGRESS, this.onResourceProgress, this), this.createGameScene(), RES.destroyRes("login"), NativeApi.datas.is_music) {
                var e = RES.getRes("bg_music_mp3");
                Global.bg_music = e.play(0, 0)
            }
        } else "login" == t.groupName && (RES.loadGroup("preload"), this.loadingView = new LoadingUI, this.stage.addChild(this.loadingView))
    },
    p.onResourceLoadError = function(t) {
        console.warn("Group:" + t.groupName + " has failed to load"),
        this.onResourceLoadComplete(t)
    },
    p.onResourceProgress = function(t) {
        "preload" == t.groupName && this.loadingView.setProgress(t.itemsLoaded, t.itemsTotal)
    },
    p.createGameScene = function() {
        PanelManager.initPanel(),
        egret.Ticker.getInstance().register(function() {
            dragonBones.WorldClock.clock.advanceTime()
        },
        this),
        Global.dispatchEvent(MainNotify.openGamePanelNotify, null, !1)
    },
    p.createBitmapByName = function(t) {
        var e = new egret.Bitmap,
        i = RES.getRes(t);
        return e.texture = i,
        e
    },
    e
} (egret.DisplayObjectContainer);
egret.registerClass(Main, "Main");
var GameOverPanel = function(t) {
    function e(e) {
        this.score = e.score,
        this.score > NativeApi.datas.maxScore && (NativeApi.datas.maxScore = this.score, NativeApi.saveData()),
        t.call(this)
    }
    __extends(e, t);
    var i = (__define, e);
    return p = i.prototype,
    p.getRade = function(t) {
        var e = 0;
        return 0 == t ? e = 1 : 1 == t ? e = 15 : 2 == t ? e = 20 : 3 == t ? e = 30 : 18 >= t ? e = 30 + 2 * (t - 3) : 27 >= t ? e = 60 + (t - 9) : 59 >= t && (e = 78 + Math.floor((t - 9) / 2)),
        e >= 100 ? 99 : e
    },
    p.initPanel = function() {
        var t = GameConfig.curWidth(),
        e = GameConfig.curHeight();
        this.bg = new egret.Shape,
        this.bg.graphics.beginFill(0),
        this.bg.graphics.drawRect(0, 0, t, e),
        this.bg.graphics.endFill(),
        this.bg.alpha = .5,
        this.addChild(this.bg);
        var i = new egret.Bitmap(RES.getRes("game_over_label_png"));
        this.addChild(i),
        i.x = t / 2 - i.width / 2,
        i.y = 194;
        var n = new egret.Bitmap(RES.getRes("line_png"));
        this.addChild(n),
        n.x = t / 2 - n.width / 2,
        n.y = 766;
        var s = new EButton(this, "btn_replay_png", this.replayGame, "", 30, 1);
        s.x = 60,
        s.y = 672,
        this.addChild(s);
        var a = new EButton(this, "btn_share_png", this.share, "", 30, 1);
        a.x = 380,
        a.y = 672,
        this.addChild(a);
        var r = new ETextField;
        r.text = this.getRade(this.score).toString(),
        r.width = 50,
        r.height = 25,
        r.textAlign = egret.HorizontalAlign.CENTER,
        r.textColor = 16777215,
        r.size = 25,
        r.x = 302,
        r.y = 568,
        this.addChild(r);
        var h = new ETextField;
        h.text = this.score.toString(),
        h.height = 35,
        h.anchorOffsetX = h.width,
        h.textColor = 16777215,
        h.size = 35,
        h.x = 325,
        h.y = 495,
        this.addChild(h),
        GlobalData.desc = decodeURIComponent(GameLangs.share_desc.format(this.score, this.getRade(this.score))),
        "huowu" == GameConfig.CHANNEL ? window.ih5game.setShare({
            link: "index.html",
            img: "resource/assets/icon.png",
            title: GlobalData.title,
            desc: GlobalData.desc
        }) : GameConfig.isWeiXin() ? GlobalData.jssdk.share() : window.share_sdk(this.score, this.getRade(this.score))
    },
    p.createGuideLayer = function() {
        var t = this,
        e = new egret.Sprite;
        e.graphics.beginFill(0, .5),
        e.graphics.drawRect(0, 0, GameConfig.curWidth(), GameConfig.curHeight()),
        e.graphics.endFill(),
        e.width = GameConfig.curWidth(),
        e.height = GameConfig.curHeight(),
        this.addChild(e),
        e.touchEnabled = !0,
        e.addEventListener(egret.TouchEvent.TOUCH_TAP,
        function() {
            t.removeChild(e)
        },
        this);
        var i = new egret.Bitmap(RES.getRes("icon_arrows2_png"));
        e.addChild(i),
        i.x = 473,
        i.y = 13;
        var n = new egret.Bitmap(RES.getRes("share_label_png"));
        e.addChild(n),
        n.x = (GameConfig.curWidth() - n.width) / 2,
        n.y = 130
    },
    p.replayGame = function() {
        Global.dispatchEvent(MainNotify.closeGamePanelNotify, null, !1),
        Global.dispatchEvent(MainNotify.openGamePanelNotify, null, !1),
        Global.dispatchEvent(MainNotify.closeGameOverPanelNotify, null, !1)
    },
    p.share = function() {
        "huowu" == GameConfig.CHANNEL ? window.ih5game.share() : GameConfig.isWeiXin() ? this.createGuideLayer() : window.mobShare.ui.open()
    },
    p.initEffect = function() {},
    p.onStartBtnTouchTap = function() {
        Global.dispatchEvent(MainNotify.closeGameOverPanelNotify, null, !1)
    },
    e
} (BasePanel);
egret.registerClass(GameOverPanel, "GameOverPanel");
var GamePanel = function(t) {
    function e() {
        t.call(this)
    }
    __extends(e, t);
    var i = (__define, e);
    return p = i.prototype,
    p.initPanel = function() {
        this.bg = new egret.Bitmap,
        this.bg.texture = RES.getRes("game_bg_png"),
        this.addChild(this.bg),
        this.barrier_config = [];
        for (var t in GameConfig.barrier_config) this.barrier_config[t] = GameConfig.barrier_config[t];
        this.initGame(),
        this.createLane(),
        this.score = 0,
        this.combo_sound = RES.getRes("combo_mp3"),
        this.sound0 = RES.getRes("crash_mp3"),
        this.sound1 = RES.getRes("crash_mp3"),
        this.sound2 = RES.getRes("shriek_mp3"),
        this.sound3 = RES.getRes("bite_mp3"),
        this.btn_effect = RES.getRes("btn_effect_mp3")
    },
    p.checkIsPack = function(t) {
        var e = t.param;
        if (e.is_top == this.pack_is_top) {
            this.pack_is_top = !this.pack_is_top,
            this.score++,
            this.score_label.text = this.score.toString(),
            NativeApi.datas.is_music && this.combo_sound.play(0, 1);
            for (var i in this.barrier_config) this.barrier_config[i] *= 1.01;
            this.pack_is_top ? (this.pack.apper(GameConfig.MAN_MAX_Y), this.icon_arrows.y = GameConfig.MAN_MIN_Y + 27.5) : (this.pack.apper(GameConfig.MAN_MIN_Y), this.icon_arrows.y = GameConfig.MAN_MAX_Y + 33.5)
        }
    },
    p.initGame = function() {
        var t = GameConfig.curWidth(),
        e = GameConfig.curHeight();
        this.runMan = new game.RunMan,
        this.pack = new game.PackObject,
        this.pack_is_top = !0,
        this.addChild(this.pack),
        this.pack.x = .53 * t,
        this.icon_arrows = new egret.Bitmap(RES.getRes("icon_arrows_png")),
        this.addChild(this.icon_arrows),
        this.icon_arrows.x = .57 * t,
        this.icon_arrows.y = GameConfig.MAN_MIN_Y + 27.5,
        this.icon_arrows.scaleY = 1,
        this.icon_arrows.anchorOffsetX = this.icon_arrows.width / 2,
        this.icon_arrows.anchorOffsetY = this.icon_arrows.height / 2,
        egret.Tween.get(this.icon_arrows, {
            loop: !0
        }).to({
            scaleX: .8,
            scaleY: .8
        },
        600).to({
            scaleX: 1,
            scaleY: 1
        },
        600),
        Global.addEventListener(MainNotify.confirmationPackNotify, this.checkIsPack, this),
        this.runMan.x = .565 * t,
        this.runMan.y = GameConfig.MAN_MAX_Y,
        this.runMan.init(),
        this.bg.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onTouchTap, this),
        this.bg.touchEnabled = !0,
        this.startPanel = new StartPanel,
        this.addChild(this.startPanel),
        Global.addEventListener("GameBegin", this.gameStart, this);
        var i = new egret.Bitmap(RES.getRes("score_bar_png"));
        this.addChild(i),
        i.x = .71 * t,
        i.y = .02 * e,
        this.score_label = new ETextField,
        this.score_label.text = "0",
        this.score_label.width = 80,
        this.score_label.textColor = 16777215,
        this.score_label.size = 26,
        this.score_label.x = .84 * t,
        this.score_label.y = .035 * e,
        this.addChild(this.score_label);
        var n = new ETextField;
        n.text = NativeApi.datas.maxScore.toString(),
        n.width = 80,
        n.textColor = 16777215,
        n.size = 26,
        n.x = this.score_label.x,
        n.y = this.score_label.y + 33,
        this.addChild(n)
    },
    p.gameStart = function() {
        Global.removeEventListener("GameBegin", this.gameStart, this),
        this.removeChild(this.startPanel),
        this.addTimer(),
        this.createBarrier(),
        this.createLNN(),
        this.addChild(this.runMan)
    },
    p.onTouchTap = function() {
        NativeApi.datas.is_music && this.btn_effect.play(0, 1),
        this.runMan.changeDirection()
    },
    p.createTip = function(t) {
        EffectUtils.showTips(GameLangs["game_over_tip" + t], 3)
    },
    p.createPack = function() {},
    p.createLane = function() {
        this.laneObjectList = [];
        for (var t = 742 - GameConfig.LANE_HEIGHT / 2,
        e = GameConfig.curWidth() / 2, i = 0; 3 > i; i++) {
            var n = new game.LaneObject;
            this.addChild(n),
            n.setPosition(e, t),
            t -= n.height,
            this.laneObjectList.push(n)
        }
        var n = new game.LaneObject;
        this.addChild(n),
        n.setPosition(e, 488),
        t -= n.height;
        var t = 440 - GameConfig.LANE_HEIGHT / 2;
        this.laneObjectList.push(n);
        for (var i = 0; 3 > i; i++) {
            var n = new game.LaneObject;
            this.addChild(n),
            n.setPosition(e, t),
            t -= n.height,
            this.laneObjectList.push(n)
        }
    },
    p.createLNN = function() {
        var t = Math.random(),
        e = GameConfig.BarrierType.DOG;
        t <= this.barrier_config[2] && (e = GameConfig.BarrierType.LAONN);
        var i = game.BarrierObject.create();
        this.laneObjectList[3].addChild(i),
        Math.random() >= .5 ? i.init(1, -40, e) : i.init( - 1, GameConfig.curWidth() - 40, e);
        var n = 4e3 * Math.random() + 4e3;
        this.time_out_id2 = egret.setTimeout(this.createLNN, this, n)
    },
    p.createBarrier = function() {
        var t = Math.random(),
        e = GameConfig.BarrierType.ROADSTER;
        t <= this.barrier_config[0] && (e = GameConfig.BarrierType.CAR);
        var i = game.BarrierObject.create(),
        n = Math.floor(6 * Math.random());
        n > 2 ? (n++, this.laneObjectList[n].addChild(i), i.init(1, -40, e)) : (this.laneObjectList[n].addChild(i), i.init( - 1, GameConfig.curWidth() - 40, e));
        var s = 1500 * Math.random() + 1e3;
        this.time_out_id = egret.setTimeout(this.createBarrier, this, s, "egret")
    },
    p.addTimer = function() {
        this.tick_timer = new egret.Timer(25),
        this.tick_timer.addEventListener(egret.TimerEvent.TIMER, this.tick, this),
        this.tick_timer.start()
    },
    p.collision = function() {
        for (var t = this.runMan.y,
        e = (GameConfig.LANE_HEIGHT + this.runMan.height) / 2, i = 0; i < this.laneObjectList.length; i++) if (Math.abs(t - this.laneObjectList[i].y) < e) {
            var n = this.laneObjectList[i].checkCollision(this.runMan.getRect()); - 1 != n && (this.createTip(n), NativeApi.datas.is_music && this["sound" + n].play(0, 1), this.gameOver())
        }
    },
    p.gameOver = function() {
        var t = this;
        egret.setTimeout(function() {
            Global.dispatchEvent(MainNotify.openGameOverPanelNotify, {
                score: t.score
            },
            !1)
        },
        this, 3e3),
        this.bg.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.onTouchTap, this),
        Global.removeEventListener(MainNotify.confirmationPackNotify, this.checkIsPack, this),
        egret.clearTimeout(this.time_out_id),
        egret.clearTimeout(this.time_out_id2),
        this.tick_timer.stop(),
        this.tick_timer = null,
        this.runMan.destroy()
    },
    p.tick = function() {
        this.collision(),
        this.runMan.tick(),
        this.laneObjectList[0].tick(),
        this.laneObjectList[1].tick(),
        this.laneObjectList[2].tick(),
        this.laneObjectList[3].tick(),
        this.laneObjectList[4].tick(),
        this.laneObjectList[5].tick(),
        this.laneObjectList[6].tick()
    },
    p.initEffect = function() {},
    p.onStartBtnTouchTap = function() {
        Global.dispatchEvent(MainNotify.openGameOverPanelNotify, null, !1),
        Global.dispatchEvent(MainNotify.closeGamePanelNotify, null, !1)
    },
    e
} (BasePanel);
egret.registerClass(GamePanel, "GamePanel");
var SharePanel = function(t) {
    function e() {
        t.call(this)
    }
    __extends(e, t);
    var i = (__define, e);
    return p = i.prototype,
    p.initPanel = function() {
        this.bg = new egret.Bitmap,
        this.bg.texture = RES.getRes("bg"),
        this.addChild(this.bg),
        this.bg.touchEnabled = !0,
        this.startBtn = new egret.Bitmap,
        this.startBtn.texture = RES.getRes("startBtn"),
        this.startBtn.x = this.w / 2 - this.startBtn.width / 2,
        this.startBtn.y = this.h / 2 - this.startBtn.height / 2,
        this.addChild(this.startBtn),
        this.startBtn.touchEnabled = !0,
        this.startBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onStartBtnTouchTap, this)
    },
    p.onStartBtnTouchTap = function() {
        Global.dispatchEvent(MainNotify.openGamePanelNotify, null, !1),
        Global.dispatchEvent(MainNotify.closeStartPanelNotify, null, !1)
    },
    e
} (BasePanel);
egret.registerClass(SharePanel, "SharePanel");
var StartPanel = function(t) {
    function e() {
        t.call(this)
    }
    __extends(e, t);
    var i = (__define, e);
    return p = i.prototype,
    p.initPanel = function() {
        var t = GameConfig.curWidth(),
        e = GameConfig.curHeight();
        this.bg = new egret.Shape,
        this.bg.graphics.beginFill(0),
        this.bg.graphics.drawRect(0, 0, t, e),
        this.bg.graphics.endFill(),
        this.bg.alpha = .3,
        this.addChild(this.bg),
        this.bg.touchEnabled = !0,
        this.width = t,
        this.height = e;
        var i = new egret.Bitmap(RES.getRes("game_start_tip_png"));
        this.addChild(i),
        i.x = t / 2 - i.width / 2,
        i.y = 220;
        var n = new egret.Bitmap(RES.getRes("game_start_label_png"));
        this.addChild(n),
        n.x = t / 2,
        n.y = 740,
        n.anchorOffsetX = n.width / 2,
        n.anchorOffsetY = n.height / 2,
        egret.Tween.get(n, {
            loop: !0
        }).to({
            scaleX: .8,
            scaleY: .8
        },
        600).to({
            scaleX: 1,
            scaleY: 1
        },
        600),
        this.bg.addEventListener(egret.TouchEvent.TOUCH_TAP, this.gameBegin, this),
        this.touchEnabled = !0;
        var s = new EToggleButton(this, "music_close_png", "music_open_png",
        function() {
            egret.log("ddd"),
            NativeApi.datas.is_music ? (NativeApi.datas.is_music = 0, Global.bg_music && (Global.bg_music.stop(), Global.bg_music = null)) : (NativeApi.datas.is_music = 1, Global.bg_music = RES.getRes("bg_music_mp3").play()),
            NativeApi.saveData()
        });
        NativeApi.datas.is_music && s.setSelected(!0),
        this.addChild(s),
        s.touchEnabled = !0,
        s.x = 560,
        s.y = 570
    },
    p.gameBegin = function() {
        egret.log("gameBegin"),
        Global.dispatchEvent("GameBegin")
    },
    e
} (BasePanel);
egret.registerClass(StartPanel, "StartPanel");