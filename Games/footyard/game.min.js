var isNeedFpsMeter = !1,
isLevelEditor = !1,
isSkipMenus = !1,
isSkipReadyWin = !0,
autoLevelToLoad = 7,
isLastLevelLoad = !1,
isDisableWin = !1,
isOpenAllLevels = !0,
openedLevels = 20,
isPhysicsDebugDraw = !1,
isGetAllProperties = !1,
isLoadAnimFromJSON = !1,
isSkipSplash = !1,
isShowLogo = !0,
isLevelSelectShow = !1,
spriteScale = 1,
isWithCache = !1,
isTimerUpdateMode = !1,
isPageLeaved = !1,
isNeedHelperLabel = !1,
isDesktopBrowser = !1,
isLowQuality = !1,
isDesignerSettingsPreferred = !0,
STORAGE_PREFIX = "FootYard134",
isMobileOnlyResize = !1,
SPONSOR_URL = "#",
PRELOADER_LOGO = "logo_spele.png",
isHidePreloaderLogo = !1,
BALL_TYPE = 0,
HERO_DOC_TYPE = 1,
HERO_WOMAN_TYPE = 2,
MONSTER_TYPE = 3,
PUSHER_TYPE = 4,
DECOR_BALK_1_TYPE = 21,
DECOR_BALK_2_TYPE = 22,
DECOR_BALK_3_TYPE = 23,
DECOR_BALK_4_TYPE = 24,
DECOR_BALK_5_TYPE = 25,
DECOR_LAND_TYPE = 26,
DECOR_HOUSE_TYPE = 27,
DECOR_KUST_TYPE = 28,
DECOR_ZABOR_TYPE = 29,
DECOR_MELNICA_TYPE = 30,
DECOR_MELNICA_ROT_TYPE = 31,
DECOR_ARROW_TYPE = 32,
DECOR_HOUSE_2_TYPE = 33,
DECOR_COW_TYPE = 34,
DECOR_CIRCUS_TYPE = 35,
DECOR_HOUSE_3_TYPE = 36,
DECOR_HOUSE_4_TYPE = 37,
DECOR_BALK_6_TYPE = 38,
DECOR_WINDOW_TYPE = 39,
DECOR_CAT_1_TYPE = 40,
DECOR_CAT_2_TYPE = 41,
DECOR_GRAM_TYPE = 42,
DECOR_PICT_1_TYPE = 43,
DECOR_FLOWER_1_TYPE = 44,
DECOR_VENT_TYPE = 45,
DECOR_ELECTR_TYPE = 46,
DECOR_DOOR_TYPE = 47,
DECOR_PICT_2_TYPE = 48,
DECOR_SVECHA_TYPE = 49,
DECOR_TABLE_TYPE = 50,
DECOR_STUL_TYPE = 51,
DECOR_PICT_3_TYPE = 52,
DECOR_VESHALKA_TYPE = 53,
DECOR_VELO_TYPE = 54,
DECOR_COVER_TYPE = 55,
DECOR_BALK_7_TYPE = 56,
DECOR_HELP_1_TYPE = 57,
DECOR_OZERO_TYPE = 58,
PHYSICS_RECT_TYPE = 100,
DYNAMIC_BOX_TYPE = 101,
TELEPORT_TYPE = 102,
BOMB_TYPE = 103,
DANGER_TYPE = 104,
PHYSICS_MAN_BLOCK_TYPE = 105,
PHYSICS_WOMAN_BLOCK_TYPE = 106,
GLASS_BLOCK_TYPE = 107,
ACTIVATOR_TYPE = 108,
DOOR_TYPE = 109,
DYNAMIC_CIRCLE_TYPE = 110,
DYNAMIC_RECT_TYPE = 111,
TELEGA_TYPE = 112,
DYNAMIC_TRIANGLE_TYPE = 113,
MOVABLE_BALK_TYPE = 114,
FAN_TYPE = 115,
GLASS_BOX_TYPE = 116,
GLASS_TRIANGLE_TYPE = 117,
HARD_BOX_TYPE = 118,
HARD_RECT_TYPE = 119,
HARD_TRIANGLE_TYPE = 120,
STATIC_BALK_1_TYPE = 121,
LAND_TYPE = 122,
STATIC_BOX_TYPE = 123,
DANGER_KUST_TYPE = 124,
STATIC_CIRCLE_TYPE = 125,
BONUS_DIAMOND_TYPE = 201,
BONUS_MONEY_TYPE = 202,
BONUS_STAR_TYPE = 203,
BONUS_GHOST_TYPE = 204,
BONUS_DANGER_KUST_TYPE = 205,
BONUS_KAKTUS_TYPE = 206,
BONUS_HOLE_TYPE = 207,
BONUS_DANGER_ACTIV_TYPE = 208,
AIM_TYPE = 301,
STATIC_CATEGORY = 1,
WOMAN_CATEGORY = 2,
MAN_CATEGORY = 4,
WOMAN_BLOCK_CATEGORY = 8,
MAN_BLOCK_CATEGORY = 16,
FAN_ACTIV_DISTANCE = 130,
FAN_MAX_FORCE = 40,
GLASS_BREAK_VELOCITY = 70,
TELEPORT_OUT_STRENGHT = 100;
this.createjs = this.createjs || {}; (function() {
    var c = function(a, c, b) {
        this.initialize(a, c, b)
    },
    b = c.prototype;
    b.type = null;
    b.target = null;
    b.currentTarget = null;
    b.eventPhase = 0;
    b.bubbles = !1;
    b.cancelable = !1;
    b.timeStamp = 0;
    b.defaultPrevented = !1;
    b.propagationStopped = !1;
    b.immediatePropagationStopped = !1;
    b.removed = !1;
    b.initialize = function(a, c, b) {
        this.type = a;
        this.bubbles = c;
        this.cancelable = b;
        this.timeStamp = (new Date).getTime()
    };
    b.preventDefault = function() {
        this.defaultPrevented = !0
    };
    b.stopPropagation = function() {
        this.propagationStopped = !0
    };
    b.stopImmediatePropagation = function() {
        this.immediatePropagationStopped = this.propagationStopped = !0
    };
    b.remove = function() {
        this.removed = !0
    };
    b.clone = function() {
        return new c(this.type, this.bubbles, this.cancelable)
    };
    b.toString = function() {
        return "[Event (type=" + this.type + ")]"
    };
    createjs.Event = c
})();
this.createjs = this.createjs || {}; (function() {
    var c = function() {},
    b = c.prototype;
    c.initialize = function(a) {
        a.addEventListener = b.addEventListener;
        a.on = b.on;
        a.removeEventListener = a.off = b.removeEventListener;
        a.removeAllEventListeners = b.removeAllEventListeners;
        a.hasEventListener = b.hasEventListener;
        a.dispatchEvent = b.dispatchEvent;
        a._dispatchEvent = b._dispatchEvent
    };
    b._listeners = null;
    b._captureListeners = null;
    b.initialize = function() {};
    b.addEventListener = function(a, c, b) {
        var d;
        d = b ? this._captureListeners = this._captureListeners || {}: this._listeners = this._listeners || {};
        var e = d[a];
        e && this.removeEventListener(a, c, b); (e = d[a]) ? e.push(c) : d[a] = [c];
        return c
    };
    b.on = function(a, c, b, d, e, g) {
        c.handleEvent && (b = b || c, c = c.handleEvent);
        b = b || this;
        return this.addEventListener(a,
        function(a) {
            c.call(b, a, e);
            d && a.remove()
        },
        g)
    };
    b.removeEventListener = function(a, c, b) {
        if (b = b ? this._captureListeners: this._listeners) {
            var d = b[a];
            if (d) for (var e = 0,
            g = d.length; e < g; e++) if (d[e] == c) {
                1 == g ? delete b[a] : d.splice(e, 1);
                break
            }
        }
    };
    b.off = b.removeEventListener;
    b.removeAllEventListeners = function(a) {
        a ? (this._listeners && delete this._listeners[a], this._captureListeners && delete this._captureListeners[a]) : this._listeners = this._captureListeners = null
    };
    b.dispatchEvent = function(a, c) {
        if ("string" == typeof a) {
            var b = this._listeners;
            if (!b || !b[a]) return ! 1;
            a = new createjs.Event(a)
        }
        a.target = c || this;
        if (a.bubbles && this.parent) {
            for (var d = this,
            b = [d]; d.parent;) b.push(d = d.parent);
            for (var e = b.length,
            d = e - 1; 0 <= d && !a.propagationStopped; d--) b[d]._dispatchEvent(a, 1 + (0 == d));
            for (d = 1; d < e && !a.propagationStopped; d++) b[d]._dispatchEvent(a, 3)
        } else this._dispatchEvent(a, 2);
        return a.defaultPrevented
    };
    b.hasEventListener = function(a) {
        var c = this._listeners,
        b = this._captureListeners;
        return !! (c && c[a] || b && b[a])
    };
    b.toString = function() {
        return "[EventDispatcher]"
    };
    b._dispatchEvent = function(a, c) {
        var b, d = 1 == c ? this._captureListeners: this._listeners;
        if (a && d && (d = d[a.type]) && (b = d.length)) {
            a.currentTarget = this;
            a.eventPhase = c;
            a.removed = !1;
            for (var d = d.slice(), e = 0; e < b && !a.immediatePropagationStopped; e++) {
                var g = d[e];
                g.handleEvent ? g.handleEvent(a) : g(a);
                a.removed && (this.off(a.type, g, 1 == c), a.removed = !1)
            }
        }
    };
    createjs.EventDispatcher = c
})();
this.createjs = this.createjs || {}; (function() {
    createjs.indexOf = function(c, b) {
        for (var a = 0,
        h = c.length; a < h; a++) if (b === c[a]) return a;
        return - 1
    }
})();
this.createjs = this.createjs || {}; (function() {
    var c = function() {
        throw "UID cannot be instantiated";
    };
    c._nextID = 0;
    c.get = function() {
        return c._nextID++
    };
    createjs.UID = c
})();
this.createjs = this.createjs || {}; (function() {
    var c = function() {
        throw "Ticker cannot be instantiated.";
    };
    c.RAF_SYNCHED = "synched";
    c.RAF = "raf";
    c.TIMEOUT = "timeout";
    c.useRAF = !1;
    c.timingMode = null;
    c.maxDelta = 60;
    c.removeEventListener = null;
    c.removeAllEventListeners = null;
    c.dispatchEvent = null;
    c.hasEventListener = null;
    c._listeners = null;
    createjs.EventDispatcher.initialize(c);
    c._addEventListener = c.addEventListener;
    c.addEventListener = function() { ! c._inited && c.init();
        return c._addEventListener.apply(c, arguments)
    };
    c._paused = !1;
    c._inited = !1;
    c._startTime = 0;
    c._pausedTime = 0;
    c._ticks = 0;
    c._pausedTicks = 0;
    c._interval = 50;
    c._lastTime = 0;
    c._times = [];
    c._tickTimes = [];
    c._timerId = null;
    c._raf = !0;
    c._isFirstInit = !0;
    c.init = function() {
        c._inited || (c._timerId = null, c._inited = !0, c._isFirstInit = !1, c._times = [], c._tickTimes = [], c._startTime = c._getTime(), c._times.push(c._lastTime = 0), c.setInterval(c._interval))
    };
    c.reset = function() {
        c._inited = !1;
        if (c._raf) {
            var a = window.cancelAnimationFrame || window.webkitCancelAnimationFrame || window.mozCancelAnimationFrame || window.oCancelAnimationFrame || window.msCancelAnimationFrame;
            a && a(c._timerId)
        } else clearTimeout(c._timerId)
    };
    c.setInterval = function(a) {
        c._interval = a;
        c._inited && c._setupTick()
    };
    c.getInterval = function() {
        return c._interval
    };
    c.setFPS = function(a) {
        c.setInterval(1E3 / a)
    };
    c.getFPS = function() {
        return 1E3 / c._interval
    };
    c.getMeasuredTickTime = function(a) {
        var b = 0,
        f = c._tickTimes;
        if (1 > f.length) return - 1;
        a = Math.min(f.length, a || c.getFPS() | 0);
        for (var d = 0; d < a; d++) b += f[d];
        return b / a
    };
    c.getMeasuredFPS = function(a) {
        var b = c._times;
        if (2 > b.length) return - 1;
        a = Math.min(b.length - 1, a || c.getFPS() | 0);
        return 1E3 / ((b[0] - b[a]) / a)
    };
    c.setPaused = function(a) {
        c._paused = a
    };
    c.getPaused = function() {
        return c._paused
    };
    c.getTime = function(a) {
        return c._getTime() - c._startTime - (a ? c._pausedTime: 0)
    };
    c.getEventTime = function(a) {
        return (c._lastTime || c._startTime) - (a ? c._pausedTime: 0)
    };
    c.getTicks = function(a) {
        return c._ticks - (a ? c._pausedTicks: 0)
    };
    c._handleSynch = function() {
        var a = c._getTime() - c._startTime;
        c._timerId = null;
        c._setupTick();
        a - c._lastTime >= 0.97 * (c._interval - 1) && c._tick()
    };
    c._handleRAF = function() {
        c._timerId = null;
        c._setupTick();
        c._tick()
    };
    c._handleTimeout = function() {
        c._timerId = null;
        c._setupTick();
        c._tick()
    };
    c._setupTick = function() {
        if (null != c._timerId) trace("duplicate");
        else {
            var a = c.timingMode || c.useRAF && c.RAF_SYNCHED;
            if (a == c.RAF_SYNCHED || a == c.RAF) {
                var b = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame;
                if (b) {
                    c._timerId = b(a == c.RAF ? c._handleRAF: c._handleSynch);
                    c._raf = !0;
                    return
                }
            }
            c._raf = !1;
            c._timerId = setTimeout(c._handleTimeout, c._interval)
        }
    };
    c._tick = function() {
        var a = c._getTime() - c._startTime,
        b = a - c._lastTime,
        f = c._paused;
        c._ticks++;
        f && (c._pausedTicks++, c._pausedTime += b);
        c._lastTime = a;
        if (c.hasEventListener("tick")) {
            var d = new createjs.Event("tick"),
            e = c.maxDelta;
            d.delta = e && b > e ? e: b;
            d.paused = f;
            d.time = a;
            d.runTime = a - c._pausedTime;
            c.dispatchEvent(d)
        }
        for (c._tickTimes.unshift(c._getTime() - a); 100 < c._tickTimes.length;) c._tickTimes.pop();
        for (c._times.unshift(a); 100 < c._times.length;) c._times.pop()
    };
    var b = window.performance && (performance.now || performance.mozNow || performance.msNow || performance.oNow || performance.webkitNow);
    c._getTime = function() {
        return b && b.call(performance) || (new Date).getTime()
    };
    createjs.Ticker = c
})();
this.createjs = this.createjs || {}; (function() {
    var c = function(a, c, b, d, e, g, k, m, n, p) {
        this.initialize(a, c, b, d, e, g, k, m, n, p)
    },
    b = c.prototype = new createjs.Event;
    b.stageX = 0;
    b.stageY = 0;
    b.rawX = 0;
    b.rawY = 0;
    b.nativeEvent = null;
    b.pointerID = 0;
    b.primary = !1;
    b.addEventListener = null;
    b.removeEventListener = null;
    b.removeAllEventListeners = null;
    b.dispatchEvent = null;
    b.hasEventListener = null;
    b._listeners = null;
    createjs.EventDispatcher.initialize(b);
    b.Event_initialize = b.initialize;
    b.initialize = function(a, c, b, d, e, g, k, m, n, p) {
        this.Event_initialize(a, c, b);
        this.stageX = d;
        this.stageY = e;
        this.nativeEvent = g;
        this.pointerID = k;
        this.primary = m;
        this.rawX = null == n ? d: n;
        this.rawY = null == p ? e: p
    };
    b.clone = function() {
        return new c(this.type, this.bubbles, this.cancelable, this.stageX, this.stageY, this.target, this.nativeEvent, this.pointerID, this.primary, this.rawX, this.rawY)
    };
    b.toString = function() {
        return "[MouseEvent (type=" + this.type + " stageX=" + this.stageX + " stageY=" + this.stageY + ")]"
    };
    createjs.MouseEvent = c
})();
this.createjs = this.createjs || {}; (function() {
    var c = function(a, c, b, d, e, g) {
        this.initialize(a, c, b, d, e, g)
    },
    b = c.prototype;
    c.identity = null;
    c.DEG_TO_RAD = Math.PI / 180;
    b.a = 1;
    b.b = 0;
    b.c = 0;
    b.d = 1;
    b.tx = 0;
    b.ty = 0;
    b.alpha = 1;
    b.shadow = null;
    b.compositeOperation = null;
    b.initialize = function(a, c, b, d, e, g) {
        this.a = null == a ? 1 : a;
        this.b = c || 0;
        this.c = b || 0;
        this.d = null == d ? 1 : d;
        this.tx = e || 0;
        this.ty = g || 0;
        return this
    };
    b.prepend = function(a, c, b, d, e, g) {
        var k = this.tx;
        if (1 != a || 0 != c || 0 != b || 1 != d) {
            var m = this.a,
            n = this.c;
            this.a = m * a + this.b * b;
            this.b = m * c + this.b * d;
            this.c = n * a + this.d * b;
            this.d = n * c + this.d * d
        }
        this.tx = k * a + this.ty * b + e;
        this.ty = k * c + this.ty * d + g;
        return this
    };
    b.append = function(a, c, b, d, e, g) {
        var k = this.a,
        m = this.b,
        n = this.c,
        p = this.d;
        this.a = a * k + c * n;
        this.b = a * m + c * p;
        this.c = b * k + d * n;
        this.d = b * m + d * p;
        this.tx = e * k + g * n + this.tx;
        this.ty = e * m + g * p + this.ty;
        return this
    };
    b.prependMatrix = function(a) {
        this.prepend(a.a, a.b, a.c, a.d, a.tx, a.ty);
        this.prependProperties(a.alpha, a.shadow, a.compositeOperation);
        return this
    };
    b.appendMatrix = function(a) {
        this.append(a.a, a.b, a.c, a.d, a.tx, a.ty);
        this.appendProperties(a.alpha, a.shadow, a.compositeOperation);
        return this
    };
    b.prependTransform = function(a, b, f, d, e, g, k, m, n) {
        if (e % 360) {
            var p = e * c.DEG_TO_RAD;
            e = Math.cos(p);
            p = Math.sin(p)
        } else e = 1,
        p = 0;
        if (m || n) this.tx -= m,
        this.ty -= n;
        g || k ? (g *= c.DEG_TO_RAD, k *= c.DEG_TO_RAD, this.prepend(e * f, p * f, -p * d, e * d, 0, 0), this.prepend(Math.cos(k), Math.sin(k), -Math.sin(g), Math.cos(g), a, b)) : this.prepend(e * f, p * f, -p * d, e * d, a, b);
        return this
    };
    b.appendTransform = function(a, b, f, d, e, g, k, m, n) {
        if (e % 360) {
            var p = e * c.DEG_TO_RAD;
            e = Math.cos(p);
            p = Math.sin(p)
        } else e = 1,
        p = 0;
        g || k ? (g *= c.DEG_TO_RAD, k *= c.DEG_TO_RAD, this.append(Math.cos(k), Math.sin(k), -Math.sin(g), Math.cos(g), a, b), this.append(e * f, p * f, -p * d, e * d, 0, 0)) : this.append(e * f, p * f, -p * d, e * d, a, b);
        if (m || n) this.tx -= m * this.a + n * this.c,
        this.ty -= m * this.b + n * this.d;
        return this
    };
    b.rotate = function(a) {
        var c = Math.cos(a);
        a = Math.sin(a);
        var b = this.a,
        d = this.c,
        e = this.tx;
        this.a = b * c - this.b * a;
        this.b = b * a + this.b * c;
        this.c = d * c - this.d * a;
        this.d = d * a + this.d * c;
        this.tx = e * c - this.ty * a;
        this.ty = e * a + this.ty * c;
        return this
    };
    b.skew = function(a, b) {
        a *= c.DEG_TO_RAD;
        b *= c.DEG_TO_RAD;
        this.append(Math.cos(b), Math.sin(b), -Math.sin(a), Math.cos(a), 0, 0);
        return this
    };
    b.scale = function(a, c) {
        this.a *= a;
        this.d *= c;
        this.c *= a;
        this.b *= c;
        this.tx *= a;
        this.ty *= c;
        return this
    };
    b.translate = function(a, c) {
        this.tx += a;
        this.ty += c;
        return this
    };
    b.identity = function() {
        this.alpha = this.a = this.d = 1;
        this.b = this.c = this.tx = this.ty = 0;
        this.shadow = this.compositeOperation = null;
        return this
    };
    b.invert = function() {
        var a = this.a,
        c = this.b,
        b = this.c,
        d = this.d,
        e = this.tx,
        g = a * d - c * b;
        this.a = d / g;
        this.b = -c / g;
        this.c = -b / g;
        this.d = a / g;
        this.tx = (b * this.ty - d * e) / g;
        this.ty = -(a * this.ty - c * e) / g;
        return this
    };
    b.isIdentity = function() {
        return 0 == this.tx && 0 == this.ty && 1 == this.a && 0 == this.b && 0 == this.c && 1 == this.d
    };
    b.transformPoint = function(a, c, b) {
        b = b || {};
        b.x = a * this.a + c * this.c + this.tx;
        b.y = a * this.b + c * this.d + this.ty;
        return b
    };
    b.decompose = function(a) {
        null == a && (a = {});
        a.x = this.tx;
        a.y = this.ty;
        a.scaleX = Math.sqrt(this.a * this.a + this.b * this.b);
        a.scaleY = Math.sqrt(this.c * this.c + this.d * this.d);
        var b = Math.atan2( - this.c, this.d),
        f = Math.atan2(this.b, this.a);
        b == f ? (a.rotation = f / c.DEG_TO_RAD, 0 > this.a && 0 <= this.d && (a.rotation += 0 >= a.rotation ? 180 : -180), a.skewX = a.skewY = 0) : (a.skewX = b / c.DEG_TO_RAD, a.skewY = f / c.DEG_TO_RAD);
        return a
    };
    b.reinitialize = function(a, c, b, d, e, g, k, m, n) {
        this.initialize(a, c, b, d, e, g);
        this.alpha = null == k ? 1 : k;
        this.shadow = m;
        this.compositeOperation = n;
        return this
    };
    b.copy = function(a) {
        return this.reinitialize(a.a, a.b, a.c, a.d, a.tx, a.ty, a.alpha, a.shadow, a.compositeOperation)
    };
    b.appendProperties = function(a, c, b) {
        this.alpha *= a;
        this.shadow = c || this.shadow;
        this.compositeOperation = b || this.compositeOperation;
        return this
    };
    b.prependProperties = function(a, c, b) {
        this.alpha *= a;
        this.shadow = this.shadow || c;
        this.compositeOperation = this.compositeOperation || b;
        return this
    };
    b.clone = function() {
        return (new c).copy(this)
    };
    b.toString = function() {
        return "[Matrix2D (a=" + this.a + " b=" + this.b + " c=" + this.c + " d=" + this.d + " tx=" + this.tx + " ty=" + this.ty + ")]"
    };

    c.identity = new c;
    createjs.Matrix2D = c
})();
this.createjs = this.createjs || {}; (function() {
    var c = function(a, c) {
        this.initialize(a, c)
    },
    b = c.prototype;
    b.x = 0;
    b.y = 0;
    b.initialize = function(a, c) {
        this.x = null == a ? 0 : a;
        this.y = null == c ? 0 : c;
        return this
    };
    b.copy = function(a) {
        return this.initialize(a.x, a.y)
    };
    b.clone = function() {
        return new c(this.x, this.y)
    };
    b.toString = function() {
        return "[Point (x=" + this.x + " y=" + this.y + ")]"
    };
    createjs.Point = c
})();
this.createjs = this.createjs || {}; (function() {
    var c = function(a, c, b, d) {
        this.initialize(a, c, b, d)
    },
    b = c.prototype;
    b.x = 0;
    b.y = 0;
    b.width = 0;
    b.height = 0;
    b.initialize = function(a, c, b, d) {
        this.x = a || 0;
        this.y = c || 0;
        this.width = b || 0;
        this.height = d || 0;
        return this
    };
    b.copy = function(a) {
        return this.initialize(a.x, a.y, a.width, a.height)
    };
    b.clone = function() {
        return new c(this.x, this.y, this.width, this.height)
    };
    b.toString = function() {
        return "[Rectangle (x=" + this.x + " y=" + this.y + " width=" + this.width + " height=" + this.height + ")]"
    };
    createjs.Rectangle = c
})();
this.createjs = this.createjs || {}; (function() {
    var c = function(a, c, b, d, e, g, k) {
        this.initialize(a, c, b, d, e, g, k)
    },
    b = c.prototype;
    b.target = null;
    b.overLabel = null;
    b.outLabel = null;
    b.downLabel = null;
    b.play = !1;
    b._isPressed = !1;
    b._isOver = !1;
    b.initialize = function(a, c, b, d, e, g, k) {
        a.addEventListener && (this.target = a, a.cursor = "pointer", this.overLabel = null == b ? "over": b, this.outLabel = null == c ? "out": c, this.downLabel = null == d ? "down": d, this.play = e, this.setEnabled(!0), this.handleEvent({}), g && (k && (g.actionsEnabled = !1, g.gotoAndStop && g.gotoAndStop(k)), a.hitArea = g))
    };
    b.setEnabled = function(a) {
        var c = this.target;
        a ? (c.addEventListener("rollover", this), c.addEventListener("rollout", this), c.addEventListener("mousedown", this), c.addEventListener("pressup", this)) : (c.removeEventListener("rollover", this), c.removeEventListener("rollout", this), c.removeEventListener("mousedown", this), c.removeEventListener("pressup", this))
    };
    b.toString = function() {
        return "[ButtonHelper]"
    };
    b.handleEvent = function(a) {
        var c = this.target;
        a = a.type;
        "mousedown" == a ? (this._isPressed = !0, a = this.downLabel) : "pressup" == a ? (this._isPressed = !1, a = this._isOver ? this.overLabel: this.outLabel) : "rollover" == a ? (this._isOver = !0, a = this._isPressed ? this.downLabel: this.overLabel) : (this._isOver = !1, a = this._isPressed ? this.overLabel: this.outLabel);
        this.play ? c.gotoAndPlay && c.gotoAndPlay(a) : c.gotoAndStop && c.gotoAndStop(a)
    };
    createjs.ButtonHelper = c
})();
this.createjs = this.createjs || {}; (function() {
    var c = function(a, c, b, d) {
        this.initialize(a, c, b, d)
    },
    b = c.prototype;
    c.identity = null;
    b.color = null;
    b.offsetX = 0;
    b.offsetY = 0;
    b.blur = 0;
    b.initialize = function(a, c, b, d) {
        this.color = a;
        this.offsetX = c;
        this.offsetY = b;
        this.blur = d
    };
    b.toString = function() {
        return "[Shadow]"
    };
    b.clone = function() {
        return new c(this.color, this.offsetX, this.offsetY, this.blur)
    };
    c.identity = new c("transparent", 0, 0, 0);
    createjs.Shadow = c
})();
this.createjs = this.createjs || {}; (function() {
    var c = function(a) {
        this.initialize(a)
    },
    b = c.prototype = new createjs.EventDispatcher;
    b.complete = !0;
    b.framerate = 0;
    b._animations = null;
    b._frames = null;
    b._images = null;
    b._data = null;
    b._loadCount = 0;
    b._frameHeight = 0;
    b._frameWidth = 0;
    b._numFrames = 0;
    b._regX = 0;
    b._regY = 0;
    b.initialize = function(a) {
        var c, b, d;
        if (null != a) {
            this.framerate = a.framerate || 0;
            if (a.images && 0 < (b = a.images.length)) for (d = this._images = [], c = 0; c < b; c++) {
                var e = a.images[c];
                if ("string" == typeof e) {
                    var g = e,
                    e = document.createElement("img");
                    e.src = g
                }
                d.push(e);
                e.getContext || e.complete || (this._loadCount++, this.complete = !1,
                function(a) {
                    e.onload = function() {
                        a._handleImageLoad()
                    }
                } (this))
            }
            if (null != a.frames) if (a.frames instanceof Array) for (this._frames = [], d = a.frames, c = 0, b = d.length; c < b; c++) g = d[c],
            this._frames.push({
                image: this._images[g[4] ? g[4] : 0],
                rect: new createjs.Rectangle(g[0], g[1], g[2], g[3]),
                regX: g[5] || 0,
                regY: g[6] || 0
            });
            else b = a.frames,
            this._frameWidth = b.width,
            this._frameHeight = b.height,
            this._regX = b.regX || 0,
            this._regY = b.regY || 0,
            this._numFrames = b.count,
            0 == this._loadCount && this._calculateFrames();
            this._animations = [];
            if (null != (b = a.animations)) {
                this._data = {};
                for (var k in b) {
                    a = {
                        name: k
                    };
                    g = b[k];
                    if ("number" == typeof g) d = a.frames = [g];
                    else if (g instanceof Array) if (1 == g.length) a.frames = [g[0]];
                    else for (a.speed = g[3], a.next = g[2], d = a.frames = [], c = g[0]; c <= g[1]; c++) d.push(c);
                    else a.speed = g.speed,
                    a.next = g.next,
                    c = g.frames,
                    d = a.frames = "number" == typeof c ? [c] : c.slice(0);
                    if (!0 === a.next || void 0 === a.next) a.next = k;
                    if (!1 === a.next || 2 > d.length && a.next == k) a.next = null;
                    a.speed || (a.speed = 1);
                    this._animations.push(k);
                    this._data[k] = a
                }
            }
        }
    };
    b.getNumFrames = function(a) {
        if (null == a) return this._frames ? this._frames.length: this._numFrames;
        a = this._data[a];
        return null == a ? 0 : a.frames.length
    };
    b.getAnimations = function() {
        return this._animations.slice(0)
    };
    b.getAnimation = function(a) {
        return this._data[a]
    };
    b.getFrame = function(a) {
        var c;
        return this._frames && (c = this._frames[a]) ? c: null
    };
    b.getFrameBounds = function(a, c) {
        var b = this.getFrame(a);
        return b ? (c || new createjs.Rectangle).initialize( - b.regX, -b.regY, b.rect.width, b.rect.height) : null
    };
    b.toString = function() {
        return "[SpriteSheet]"
    };
    b.clone = function() {
        var a = new c;
        a.complete = this.complete;
        a._animations = this._animations;
        a._frames = this._frames;
        a._images = this._images;
        a._data = this._data;
        a._frameHeight = this._frameHeight;
        a._frameWidth = this._frameWidth;
        a._numFrames = this._numFrames;
        a._loadCount = this._loadCount;
        return a
    };
    b._handleImageLoad = function() {
        0 == --this._loadCount && (this._calculateFrames(), this.complete = !0, this.dispatchEvent("complete"))
    };
    b._calculateFrames = function() {
        if (!this._frames && 0 != this._frameWidth) {
            this._frames = [];
            for (var a = 0,
            c = this._frameWidth,
            b = this._frameHeight,
            d = 0,
            e = this._images; d < e.length; d++) {
                for (var g = e[d], k = (g.width + 1) / c | 0, m = (g.height + 1) / b | 0, m = 0 < this._numFrames ? Math.min(this._numFrames - a, k * m) : k * m, n = 0; n < m; n++) this._frames.push({
                    image: g,
                    rect: new createjs.Rectangle(n % k * c, (n / k | 0) * b, c, b),
                    regX: this._regX,
                    regY: this._regY
                });
                a += m
            }
            this._numFrames = a
        }
    };
    createjs.SpriteSheet = c
})();
this.createjs = this.createjs || {}; (function() {
    function c(a, c, b) {
        this.f = a;
        this.params = c;
        this.path = null == b ? !0 : b
    }
    c.prototype.exec = function(a) {
        this.f.apply(a, this.params)
    };
    var b = function() {
        this.initialize()
    },
    a = b.prototype;
    b.getRGB = function(a, c, b, h) {
        null != a && null == b && (h = c, b = a & 255, c = a >> 8 & 255, a = a >> 16 & 255);
        return null == h ? "rgb(" + a + "," + c + "," + b + ")": "rgba(" + a + "," + c + "," + b + "," + h + ")"
    };
    b.getHSL = function(a, c, b, h) {
        return null == h ? "hsl(" + a % 360 + "," + c + "%," + b + "%)": "hsla(" + a % 360 + "," + c + "%," + b + "%," + h + ")"
    };
    b.Command = c;
    b.BASE_64 = {
        A: 0,
        B: 1,
        C: 2,
        D: 3,
        E: 4,
        F: 5,
        G: 6,
        H: 7,
        I: 8,
        J: 9,
        K: 10,
        L: 11,
        M: 12,
        N: 13,
        O: 14,
        P: 15,
        Q: 16,
        R: 17,
        S: 18,
        T: 19,
        U: 20,
        V: 21,
        W: 22,
        X: 23,
        Y: 24,
        Z: 25,
        a: 26,
        b: 27,
        c: 28,
        d: 29,
        e: 30,
        f: 31,
        g: 32,
        h: 33,
        i: 34,
        j: 35,
        k: 36,
        l: 37,
        m: 38,
        n: 39,
        o: 40,
        p: 41,
        q: 42,
        r: 43,
        s: 44,
        t: 45,
        u: 46,
        v: 47,
        w: 48,
        x: 49,
        y: 50,
        z: 51,
        0 : 52,
        1 : 53,
        2 : 54,
        3 : 55,
        4 : 56,
        5 : 57,
        6 : 58,
        7 : 59,
        8 : 60,
        9 : 61,
        "+": 62,
        "/": 63
    };
    b.STROKE_CAPS_MAP = ["butt", "round", "square"];
    b.STROKE_JOINTS_MAP = ["miter", "round", "bevel"];
    var h = createjs.createCanvas ? createjs.createCanvas() : document.createElement("canvas");
    if (h.getContext) {
        var f = b._ctx = h.getContext("2d");
        b.beginCmd = new c(f.beginPath, [], !1);
        b.fillCmd = new c(f.fill, [], !1);
        b.strokeCmd = new c(f.stroke, [], !1);
        h.width = h.height = 1
    }
    a._strokeInstructions = null;
    a._strokeStyleInstructions = null;
    a._strokeIgnoreScale = !1;
    a._fillInstructions = null;
    a._fillMatrix = null;
    a._instructions = null;
    a._oldInstructions = null;
    a._activeInstructions = null;
    a._active = !1;
    a._dirty = !1;
    a.initialize = function() {
        this.clear();
        this._ctx = b._ctx
    };
    a.isEmpty = function() {
        return ! (this._instructions.length || this._oldInstructions.length || this._activeInstructions.length)
    };
    a.draw = function(a) {
        this._dirty && this._updateInstructions();
        for (var c = this._instructions,
        b = 0,
        h = c.length; b < h; b++) c[b].exec(a)
    };
    a.drawAsPath = function(a) {
        this._dirty && this._updateInstructions();
        for (var c, b = this._instructions,
        h = 0,
        f = b.length; h < f; h++)((c = b[h]).path || 0 == h) && c.exec(a)
    };
    a.moveTo = function(a, b) {
        this._activeInstructions.push(new c(this._ctx.moveTo, [a, b]));
        return this
    };
    a.lineTo = function(a, b) {
        this._dirty = this._active = !0;
        this._activeInstructions.push(new c(this._ctx.lineTo, [a, b]));
        return this
    };
    a.arcTo = function(a, b, h, f, m) {
        this._dirty = this._active = !0;
        this._activeInstructions.push(new c(this._ctx.arcTo, [a, b, h, f, m]));
        return this
    };
    a.arc = function(a, b, h, f, m, n) {
        this._dirty = this._active = !0;
        null == n && (n = !1);
        this._activeInstructions.push(new c(this._ctx.arc, [a, b, h, f, m, n]));
        return this
    };
    a.quadraticCurveTo = function(a, b, h, f) {
        this._dirty = this._active = !0;
        this._activeInstructions.push(new c(this._ctx.quadraticCurveTo, [a, b, h, f]));
        return this
    };
    a.bezierCurveTo = function(a, b, h, f, m, n) {
        this._dirty = this._active = !0;
        this._activeInstructions.push(new c(this._ctx.bezierCurveTo, [a, b, h, f, m, n]));
        return this
    };
    a.rect = function(a, b, h, f) {
        this._dirty = this._active = !0;
        this._activeInstructions.push(new c(this._ctx.rect, [a, b, h, f]));
        return this
    };
    a.closePath = function() {
        this._active && (this._dirty = !0, this._activeInstructions.push(new c(this._ctx.closePath, [])));
        return this
    };
    a.clear = function() {
        this._instructions = [];
        this._oldInstructions = [];
        this._activeInstructions = [];
        this._strokeStyleInstructions = this._strokeInstructions = this._fillInstructions = this._fillMatrix = null;
        this._active = this._dirty = this._strokeIgnoreScale = !1;
        return this
    };
    a.beginFill = function(a) {
        this._active && this._newPath();
        this._fillInstructions = a ? [new c(this._setProp, ["fillStyle", a], !1)] : null;
        this._fillMatrix = null;
        return this
    };
    a.beginLinearGradientFill = function(a, b, h, f, m, n) {
        this._active && this._newPath();
        h = this._ctx.createLinearGradient(h, f, m, n);
        f = 0;
        for (m = a.length; f < m; f++) h.addColorStop(b[f], a[f]);
        this._fillInstructions = [new c(this._setProp, ["fillStyle", h], !1)];
        this._fillMatrix = null;
        return this
    };
    a.beginRadialGradientFill = function(a, b, h, f, m, n, p, r) {
        this._active && this._newPath();
        h = this._ctx.createRadialGradient(h, f, m, n, p, r);
        f = 0;
        for (m = a.length; f < m; f++) h.addColorStop(b[f], a[f]);
        this._fillInstructions = [new c(this._setProp, ["fillStyle", h], !1)];
        this._fillMatrix = null;
        return this
    };
    a.beginBitmapFill = function(a, b, h) {
        this._active && this._newPath();
        a = this._ctx.createPattern(a, b || "");
        this._fillInstructions = [new c(this._setProp, ["fillStyle", a], !1)];
        this._fillMatrix = h ? [h.a, h.b, h.c, h.d, h.tx, h.ty] : null;
        return this
    };
    a.endFill = function() {
        return this.beginFill()
    };
    a.setStrokeStyle = function(a, h, f, k, m) {
        this._active && this._newPath();
        this._strokeStyleInstructions = [new c(this._setProp, ["lineWidth", null == a ? "1": a], !1), new c(this._setProp, ["lineCap", null == h ? "butt": isNaN(h) ? h: b.STROKE_CAPS_MAP[h]], !1), new c(this._setProp, ["lineJoin", null == f ? "miter": isNaN(f) ? f: b.STROKE_JOINTS_MAP[f]], !1), new c(this._setProp, ["miterLimit", null == k ? "10": k], !1)];
        this._strokeIgnoreScale = m;
        return this
    };
    a.beginStroke = function(a) {
        this._active && this._newPath();
        this._strokeInstructions = a ? [new c(this._setProp, ["strokeStyle", a], !1)] : null;
        return this
    };
    a.beginLinearGradientStroke = function(a, b, h, f, m, n) {
        this._active && this._newPath();
        h = this._ctx.createLinearGradient(h, f, m, n);
        f = 0;
        for (m = a.length; f < m; f++) h.addColorStop(b[f], a[f]);
        this._strokeInstructions = [new c(this._setProp, ["strokeStyle", h], !1)];
        return this
    };
    a.beginRadialGradientStroke = function(a, b, h, f, m, n, p, r) {
        this._active && this._newPath();
        h = this._ctx.createRadialGradient(h, f, m, n, p, r);
        f = 0;
        for (m = a.length; f < m; f++) h.addColorStop(b[f], a[f]);
        this._strokeInstructions = [new c(this._setProp, ["strokeStyle", h], !1)];
        return this
    };
    a.beginBitmapStroke = function(a, b) {
        this._active && this._newPath();
        var h = this._ctx.createPattern(a, b || "");
        this._strokeInstructions = [new c(this._setProp, ["strokeStyle", h], !1)];
        return this
    };
    a.endStroke = function() {
        this.beginStroke();
        return this
    };
    a.curveTo = a.quadraticCurveTo;
    a.drawRect = a.rect;
    a.drawRoundRect = function(a, c, b, h, f) {
        this.drawRoundRectComplex(a, c, b, h, f, f, f, f);
        return this
    };
    a.drawRoundRectComplex = function(a, b, h, f, m, n, p, r) {
        var s = (h < f ? h: f) / 2,
        t = 0,
        q = 0,
        w = 0,
        u = 0;
        0 > m && (m *= t = -1);
        m > s && (m = s);
        0 > n && (n *= q = -1);
        n > s && (n = s);
        0 > p && (p *= w = -1);
        p > s && (p = s);
        0 > r && (r *= u = -1);
        r > s && (r = s);
        this._dirty = this._active = !0;
        var s = this._ctx.arcTo,
        x = this._ctx.lineTo;
        this._activeInstructions.push(new c(this._ctx.moveTo, [a + h - n, b]), new c(s, [a + h + n * q, b - n * q, a + h, b + n, n]), new c(x, [a + h, b + f - p]), new c(s, [a + h + p * w, b + f + p * w, a + h - p, b + f, p]), new c(x, [a + r, b + f]), new c(s, [a - r * u, b + f + r * u, a, b + f - r, r]), new c(x, [a, b + m]), new c(s, [a - m * t, b - m * t, a + m, b, m]), new c(this._ctx.closePath));
        return this
    };
    a.drawCircle = function(a, c, b) {
        this.arc(a, c, b, 0, 2 * Math.PI);
        return this
    };
    a.drawEllipse = function(a, b, h, f) {
        this._dirty = this._active = !0;
        var m = 0.5522848 * (h / 2),
        n = 0.5522848 * (f / 2),
        p = a + h,
        r = b + f;
        h = a + h / 2;
        f = b + f / 2;
        this._activeInstructions.push(new c(this._ctx.moveTo, [a, f]), new c(this._ctx.bezierCurveTo, [a, f - n, h - m, b, h, b]), new c(this._ctx.bezierCurveTo, [h + m, b, p, f - n, p, f]), new c(this._ctx.bezierCurveTo, [p, f + n, h + m, r, h, r]), new c(this._ctx.bezierCurveTo, [h - m, r, a, f + n, a, f]));
        return this
    };
    a.inject = function(a, b) {
        this._dirty = this._active = !0;
        this._activeInstructions.push(new c(a, [b]));
        return this
    };
    a.drawPolyStar = function(a, b, h, f, m, n) {
        this._dirty = this._active = !0;
        null == m && (m = 0);
        m = 1 - m;
        n = null == n ? 0 : n / (180 / Math.PI);
        var p = Math.PI / f;
        this._activeInstructions.push(new c(this._ctx.moveTo, [a + Math.cos(n) * h, b + Math.sin(n) * h]));
        for (var r = 0; r < f; r++) n += p,
        1 != m && this._activeInstructions.push(new c(this._ctx.lineTo, [a + Math.cos(n) * h * m, b + Math.sin(n) * h * m])),
        n += p,
        this._activeInstructions.push(new c(this._ctx.lineTo, [a + Math.cos(n) * h, b + Math.sin(n) * h]));
        return this
    };
    a.decodePath = function(a) {
        for (var c = [this.moveTo, this.lineTo, this.quadraticCurveTo, this.bezierCurveTo, this.closePath], h = [2, 2, 4, 6, 0], f = 0, m = a.length, n = [], p = 0, r = 0, s = b.BASE_64; f < m;) {
            var t = a.charAt(f),
            q = s[t],
            w = q >> 3,
            u = c[w];
            if (!u || q & 3) throw "bad path data (@" + f + "): " + t;
            t = h[w];
            w || (p = r = 0);
            n.length = 0;
            f++;
            q = (q >> 2 & 1) + 2;
            for (w = 0; w < t; w++) {
                var x = s[a.charAt(f)],
                K = x >> 5 ? -1 : 1,
                x = (x & 31) << 6 | s[a.charAt(f + 1)];
                3 == q && (x = x << 6 | s[a.charAt(f + 2)]);
                x = K * x / 10;
                w % 2 ? p = x += p: r = x += r;
                n[w] = x;
                f += q
            }
            u.apply(this, n)
        }
        return this
    };
    a.clone = function() {
        var a = new b;
        a._instructions = this._instructions.slice();
        a._activeInstructions = this._activeInstructions.slice();
        a._oldInstructions = this._oldInstructions.slice();
        this._fillInstructions && (a._fillInstructions = this._fillInstructions.slice());
        this._strokeInstructions && (a._strokeInstructions = this._strokeInstructions.slice());
        this._strokeStyleInstructions && (a._strokeStyleInstructions = this._strokeStyleInstructions.slice());
        a._active = this._active;
        a._dirty = this._dirty;
        a._fillMatrix = this._fillMatrix;
        a._strokeIgnoreScale = this._strokeIgnoreScale;
        return a
    };
    a.toString = function() {
        return "[Graphics]"
    };
    a.mt = a.moveTo;
    a.lt = a.lineTo;
    a.at = a.arcTo;
    a.bt = a.bezierCurveTo;
    a.qt = a.quadraticCurveTo;
    a.a = a.arc;
    a.r = a.rect;
    a.cp = a.closePath;
    a.c = a.clear;
    a.f = a.beginFill;
    a.lf = a.beginLinearGradientFill;
    a.rf = a.beginRadialGradientFill;
    a.bf = a.beginBitmapFill;
    a.ef = a.endFill;
    a.ss = a.setStrokeStyle;
    a.s = a.beginStroke;
    a.ls = a.beginLinearGradientStroke;
    a.rs = a.beginRadialGradientStroke;
    a.bs = a.beginBitmapStroke;
    a.es = a.endStroke;
    a.dr = a.drawRect;
    a.rr = a.drawRoundRect;
    a.rc = a.drawRoundRectComplex;
    a.dc = a.drawCircle;
    a.de = a.drawEllipse;
    a.dp = a.drawPolyStar;
    a.p = a.decodePath;
    a._updateInstructions = function() {
        this._instructions = this._oldInstructions.slice();
        this._instructions.push(b.beginCmd);
        this._appendInstructions(this._fillInstructions);
        this._appendInstructions(this._strokeInstructions);
        this._appendInstructions(this._strokeInstructions && this._strokeStyleInstructions);
        this._appendInstructions(this._activeInstructions);
        this._fillInstructions && this._appendDraw(b.fillCmd, this._fillMatrix);
        this._strokeInstructions && this._appendDraw(b.strokeCmd, this._strokeIgnoreScale && [1, 0, 0, 1, 0, 0])
    };
    a._appendInstructions = function(a) {
        a && this._instructions.push.apply(this._instructions, a)
    };
    a._appendDraw = function(a, b) {
        b ? this._instructions.push(new c(this._ctx.save, [], !1), new c(this._ctx.transform, b, !1), a, new c(this._ctx.restore, [], !1)) : this._instructions.push(a)
    };
    a._newPath = function() {
        this._dirty && this._updateInstructions();
        this._oldInstructions = this._instructions;
        this._activeInstructions = [];
        this._active = this._dirty = !1
    };
    a._setProp = function(a, c) {
        this[a] = c
    };
    createjs.Graphics = b
})();
this.createjs = this.createjs || {}; (function() {
    var c = function() {
        this.initialize()
    },
    b = c.prototype = new createjs.EventDispatcher;
    c.suppressCrossDomainErrors = !1;
    var a = createjs.createCanvas ? createjs.createCanvas() : document.createElement("canvas");
    a.getContext && (c._hitTestCanvas = a, c._hitTestContext = a.getContext("2d"), a.width = a.height = 1);
    c._nextCacheID = 1;
    b.alpha = 1;
    b.cacheCanvas = null;
    b.id = -1;
    b.mouseEnabled = !0;
    b.name = null;
    b.parent = null;
    b.regX = 0;
    b.regY = 0;
    b.rotation = 0;
    b.scaleX = 1;
    b.scaleY = 1;
    b.skewX = 0;
    b.skewY = 0;
    b.shadow = null;
    b.visible = !0;
    b.x = 0;
    b.y = 0;
    b.compositeOperation = null;
    b.snapToPixel = !1;
    b.filters = null;
    b.cacheID = 0;
    b.mask = null;
    b.hitArea = null;
    b.cursor = null;
    b._cacheOffsetX = 0;
    b._cacheOffsetY = 0;
    b._cacheScale = 1;
    b._cacheDataURLID = 0;
    b._cacheDataURL = null;
    b._matrix = null;
    b._rectangle = null;
    b._bounds = null;
    b.initialize = function() {
        this.id = createjs.UID.get();
        this._matrix = new createjs.Matrix2D;
        this._rectangle = new createjs.Rectangle
    };
    b.isVisible = function() {
        return !! (this.visible && 0 < this.alpha && 0 != this.scaleX && 0 != this.scaleY)
    };
    b.draw = function(a, c) {
        var b = this.cacheCanvas;
        if (c || !b) return ! 1;
        var e = this._cacheScale,
        g = this._cacheOffsetX,
        k = this._cacheOffsetY,
        m;
        if (m = this._applyFilterBounds(g, k, 0, 0)) g = m.x,
        k = m.y;
        a.drawImage(b, g, k, b.width / e, b.height / e);
        return ! 0
    };
    b.updateContext = function(a) {
        var c, b = this.mask;
        b && b.graphics && !b.graphics.isEmpty() && (c = b.getMatrix(b._matrix), a.transform(c.a, c.b, c.c, c.d, c.tx, c.ty), b.graphics.drawAsPath(a), a.clip(), c.invert(), a.transform(c.a, c.b, c.c, c.d, c.tx, c.ty));
        c = this._matrix.identity().appendTransform(this.x, this.y, this.scaleX, this.scaleY, this.rotation, this.skewX, this.skewY, this.regX, this.regY);
        createjs.Stage._snapToPixelEnabled && this.snapToPixel ? a.transform(c.a, c.b, c.c, c.d, c.tx + 0.5 | 0, c.ty + 0.5 | 0) : a.transform(c.a, c.b, c.c, c.d, c.tx, c.ty);
        a.globalAlpha *= this.alpha;
        this.compositeOperation && (a.globalCompositeOperation = this.compositeOperation);
        this.shadow && this._applyShadow(a, this.shadow)
    };
    b.cache = function(a, c, b, e, g) {
        g = g || 1;
        this.cacheCanvas || (this.cacheCanvas = createjs.createCanvas ? createjs.createCanvas() : document.createElement("canvas"));
        this._cacheWidth = b;
        this._cacheHeight = e;
        this._cacheOffsetX = a;
        this._cacheOffsetY = c;
        this._cacheScale = g;
        this.updateCache()
    };
    b.updateCache = function(a) {
        var b = this.cacheCanvas,
        d = this._cacheScale,
        e = this._cacheOffsetX * d,
        g = this._cacheOffsetY * d,
        k = this._cacheWidth,
        m = this._cacheHeight,
        n;
        if (!b) throw "cache() must be called before updateCache()";
        var p = b.getContext("2d");
        if (n = this._applyFilterBounds(e, g, k, m)) e = n.x,
        g = n.y,
        k = n.width,
        m = n.height;
        k = Math.ceil(k * d);
        m = Math.ceil(m * d);
        k != b.width || m != b.height ? (b.width = k, b.height = m) : a || p.clearRect(0, 0, k + 1, m + 1);
        p.save();
        p.globalCompositeOperation = a;
        p.setTransform(d, 0, 0, d, -e, -g);
        this.draw(p, !0);
        this._applyFilters();
        p.restore();
        this.cacheID = c._nextCacheID++
    };
    b.uncache = function() {
        this._cacheDataURL = this.cacheCanvas = null;
        this.cacheID = this._cacheOffsetX = this._cacheOffsetY = 0;
        this._cacheScale = 1
    };
    b.getCacheDataURL = function() {
        if (!this.cacheCanvas) return null;
        this.cacheID != this._cacheDataURLID && (this._cacheDataURL = this.cacheCanvas.toDataURL());
        return this._cacheDataURL
    };
    b.getStage = function() {
        for (var a = this; a.parent;) a = a.parent;
        return a instanceof createjs.Stage ? a: null
    };
    b.localToGlobal = function(a, c) {
        var b = this.getConcatenatedMatrix(this._matrix);
        if (null == b) return null;
        b.append(1, 0, 0, 1, a, c);
        return new createjs.Point(b.tx, b.ty)
    };
    b.globalToLocal = function(a, c) {
        var b = this.getConcatenatedMatrix(this._matrix);
        if (null == b) return null;
        b.invert();
        b.append(1, 0, 0, 1, a, c);
        return new createjs.Point(b.tx, b.ty)
    };
    b.localToLocal = function(a, c, b) {
        a = this.localToGlobal(a, c);
        return b.globalToLocal(a.x, a.y)
    };
    b.setTransform = function(a, c, b, e, g, k, m, n, p) {
        this.x = a || 0;
        this.y = c || 0;
        this.scaleX = null == b ? 1 : b;
        this.scaleY = null == e ? 1 : e;
        this.rotation = g || 0;
        this.skewX = k || 0;
        this.skewY = m || 0;
        this.regX = n || 0;
        this.regY = p || 0;
        return this
    };
    b.getMatrix = function(a) {
        return (a ? a.identity() : new createjs.Matrix2D).appendTransform(this.x, this.y, this.scaleX, this.scaleY, this.rotation, this.skewX, this.skewY, this.regX, this.regY).appendProperties(this.alpha, this.shadow, this.compositeOperation)
    };
    b.getConcatenatedMatrix = function(a) {
        a ? a.identity() : a = new createjs.Matrix2D;
        for (var c = this; null != c;) a.prependTransform(c.x, c.y, c.scaleX, c.scaleY, c.rotation, c.skewX, c.skewY, c.regX, c.regY).prependProperties(c.alpha, c.shadow, c.compositeOperation),
        c = c.parent;
        return a
    };
    b.hitTest = function(a, b) {
        var d = c._hitTestContext;
        d.setTransform(1, 0, 0, 1, -a, -b);
        this.draw(d);
        var e = this._testHit(d);
        d.setTransform(1, 0, 0, 1, 0, 0);
        d.clearRect(0, 0, 2, 2);
        return e
    };
    b.set = function(a) {
        for (var c in a) this[c] = a[c];
        return this
    };
    b.getBounds = function() {
        if (this._bounds) return this._rectangle.copy(this._bounds);
        var a = this.cacheCanvas;
        if (a) {
            var c = this._cacheScale;
            return this._rectangle.initialize(this._cacheOffsetX, this._cacheOffsetY, a.width / c, a.height / c)
        }
        return null
    };
    b.getTransformedBounds = function() {
        return this._getBounds()
    };
    b.setBounds = function(a, c, b, e) {
        null == a && (this._bounds = a);
        this._bounds = (this._bounds || new createjs.Rectangle).initialize(a, c, b, e)
    };
    b.clone = function() {
        var a = new c;
        this.cloneProps(a);
        return a
    };
    b.toString = function() {
        return "[DisplayObject (name=" + this.name + ")]"
    };
    b.cloneProps = function(a) {
        a.alpha = this.alpha;
        a.name = this.name;
        a.regX = this.regX;
        a.regY = this.regY;
        a.rotation = this.rotation;
        a.scaleX = this.scaleX;
        a.scaleY = this.scaleY;
        a.shadow = this.shadow;
        a.skewX = this.skewX;
        a.skewY = this.skewY;
        a.visible = this.visible;
        a.x = this.x;
        a.y = this.y;
        a._bounds = this._bounds;
        a.mouseEnabled = this.mouseEnabled;
        a.compositeOperation = this.compositeOperation
    };
    b._applyShadow = function(a, c) {
        c = c || Shadow.identity;
        a.shadowColor = c.color;
        a.shadowOffsetX = c.offsetX;
        a.shadowOffsetY = c.offsetY;
        a.shadowBlur = c.blur
    };
    b._tick = function(a) {
        var c = this._listeners;
        c && c.tick && (c = new createjs.Event("tick"), c.params = a, this._dispatchEvent(c, this, 2))
    };
    b._testHit = function(a) {
        try {
            var b = 1 < a.getImageData(0, 0, 1, 1).data[3]
        } catch(d) {
            if (!c.suppressCrossDomainErrors) throw "An error has occurred. This is most likely due to security restrictions on reading canvas pixel data with local or cross-domain images.";
        }
        return b
    };
    b._applyFilters = function() {
        if (this.filters && 0 != this.filters.length && this.cacheCanvas) for (var a = this.filters.length,
        c = this.cacheCanvas.getContext("2d"), b = this.cacheCanvas.width, e = this.cacheCanvas.height, g = 0; g < a; g++) this.filters[g].applyFilter(c, 0, 0, b, e)
    };
    b._applyFilterBounds = function(a, c, b, e) {
        var g, k, m = this.filters;
        if (m && (k = m.length)) {
            for (m = 0; m < k; m++) {
                var n = this.filters[m];
                if (n = n.getBounds && n.getBounds()) g || (g = this._rectangle.initialize(a, c, b, e)),
                g.x += n.x,
                g.y += n.y,
                g.width += n.width,
                g.height += n.height
            }
            return g
        }
    };
    b._getBounds = function(a, c) {
        return this._transformBounds(this.getBounds(), a, c)
    };
    b._transformBounds = function(a, c, b) {
        if (!a) return a;
        var e = a.x,
        g = a.y,
        k = a.width,
        m = a.height,
        n = b ? this._matrix.identity() : this.getMatrix(this._matrix); (e || g) && n.appendTransform(0, 0, 1, 1, 0, 0, 0, -e, -g);
        c && n.prependMatrix(c);
        c = k * n.a;
        k *= n.b;
        b = m * n.c;
        var m = m * n.d,
        p = n.tx,
        n = n.ty,
        r = p,
        s = p,
        t = n,
        q = n; (e = c + p) < r ? r = e: e > s && (s = e); (e = c + b + p) < r ? r = e: e > s && (s = e); (e = b + p) < r ? r = e: e > s && (s = e); (g = k + n) < t ? t = g: g > q && (q = g); (g = k + m + n) < t ? t = g: g > q && (q = g); (g = m + n) < t ? t = g: g > q && (q = g);
        return a.initialize(r, t, s - r, q - t)
    };
    b.isRoot = !1;
    b.bounding_box = null;
    b.isCheckMouseWithDraw = !1;
    b.isOnlyBoundsCheck = !1;
    b.setBoundingBox = function(a, c, b, e) {
        return this.bounding_box = new createjs.Rectangle(a, c, b, e)
    };
    createjs.DisplayObject = c
})();
this.createjs = this.createjs || {}; (function() {
    var c = function() {
        this.initialize()
    },
    b = c.prototype = new createjs.DisplayObject;
    b.children = null;
    b.mouseChildren = !0;
    b.DisplayObject_initialize = b.initialize;
    b.initialize = function() {
        this.DisplayObject_initialize();
        this.children = []
    };
    b.isVisible = function() {
        var a = this.cacheCanvas || this.children.length;
        return !! (this.visible && 0 < this.alpha && 0 != this.scaleX && 0 != this.scaleY && a)
    };
    b.DisplayObject_draw = b.draw;
    b.draw = function(a, c) {
        if (this.DisplayObject_draw(a, c)) return ! 0;
        for (var b = this.children.slice(0), d = 0, e = b.length; d < e; d++) {
            var g = b[d];
            g.isVisible() && (a.save(), g.updateContext(a), g.draw(a), a.restore())
        }
        return ! 0
    };
    b.addChild = function(a) {
        if (null == a) return a;
        var c = arguments.length;
        if (1 < c) {
            for (var b = 0; b < c; b++) this.addChild(arguments[b]);
            return arguments[c - 1]
        }
        a.parent && a.parent.removeChild(a);
        a.parent = this;
        this.children.push(a);
        return a
    };
    b.addChildAt = function(a, c) {
        var b = arguments.length,
        d = arguments[b - 1];
        if (0 > d || d > this.children.length) return arguments[b - 2];
        if (2 < b) {
            for (var e = 0; e < b - 1; e++) this.addChildAt(arguments[e], d + e);
            return arguments[b - 2]
        }
        a.parent && a.parent.removeChild(a);
        a.parent = this;
        this.children.splice(c, 0, a);
        return a
    };
    b.removeChild = function(a) {
        var c = arguments.length;
        if (1 < c) {
            for (var b = !0,
            d = 0; d < c; d++) b = b && this.removeChild(arguments[d]);
            return b
        }
        return this.removeChildAt(createjs.indexOf(this.children, a))
    };
    b.removeChildAt = function(a) {
        var c = arguments.length;
        if (1 < c) {
            for (var b = [], d = 0; d < c; d++) b[d] = arguments[d];
            b.sort(function(a, c) {
                return c - a
            });
            for (var e = !0,
            d = 0; d < c; d++) e = e && this.removeChildAt(b[d]);
            return e
        }
        if (0 > a || a > this.children.length - 1) return ! 1;
        if (c = this.children[a]) c.parent = null;
        this.children.splice(a, 1);
        return ! 0
    };
    b.removeAllChildren = function() {
        for (var a = this.children; a.length;) a.pop().parent = null
    };
    b.getChildAt = function(a) {
        return this.children[a]
    };
    b.getChildByName = function(a) {
        for (var c = this.children,
        b = 0,
        d = c.length; b < d; b++) if (c[b].name == a) return c[b];
        return null
    };
    b.sortChildren = function(a) {
        this.children.sort(a)
    };
    b.getChildIndex = function(a) {
        return createjs.indexOf(this.children, a)
    };
    b.getNumChildren = function() {
        return this.children.length
    };
    b.swapChildrenAt = function(a, c) {
        var b = this.children,
        d = b[a],
        e = b[c];
        d && e && (b[a] = e, b[c] = d)
    };
    b.swapChildren = function(a, c) {
        for (var b = this.children,
        d, e, g = 0,
        k = b.length; g < k && (b[g] == a && (d = g), b[g] == c && (e = g), null == d || null == e); g++);
        g != k && (b[d] = c, b[e] = a)
    };
    b.setChildIndex = function(a, c) {
        var b = this.children,
        d = b.length;
        if (! (a.parent != this || 0 > c || c >= d)) {
            for (var e = 0; e < d && b[e] != a; e++);
            e != d && e != c && (b.splice(e, 1), b.splice(c, 0, a))
        }
    };
    b.contains = function(a) {
        for (; a;) {
            if (a == this) return ! 0;
            a = a.parent
        }
        return ! 1
    };
    b.hitTest = function(a, c) {
        return null != this.getObjectUnderPoint(a, c)
    };
    b.getObjectsUnderPoint = function(a, c) {
        var b = [],
        d = this.localToGlobal(a, c);
        this._getObjectsUnderPoint(d.x, d.y, b);
        return b
    };
    b.getObjectUnderPoint = function(a, c) {
        var b = this.localToGlobal(a, c);
        return this._getObjectsUnderPoint(b.x, b.y)
    };
    b.DisplayObject_getBounds = b.getBounds;
    b.getBounds = function() {
        return this._getBounds(null, !0)
    };
    b.getTransformedBounds = function() {
        return this._getBounds()
    };
    b.clone = function(a) {
        var b = new c;
        this.cloneProps(b);
        if (a) for (var f = b.children = [], d = 0, e = this.children.length; d < e; d++) {
            var g = this.children[d].clone(a);
            g.parent = b;
            f.push(g)
        }
        return b
    };
    b.toString = function() {
        return "[Container (name=" + this.name + ")]"
    };
    b.DisplayObject__tick = b._tick;
    b._tick = function(a) {
        for (var c = this.children.length - 1; 0 <= c; c--) {
            var b = this.children[c];
            b._tick && b._tick(a)
        }
        this.DisplayObject__tick(a)
    };
    b._getObjectsUnderPoint = function(a, b, f, d) {
        var e, g;
        e = this.children.length;
        if (!isDesktopBrowser) {
            var k, m;
            for (e -= 1; 0 <= e; e--) if (g = this.children[e], g.visible && g.mouseEnabled && !(0 >= g.alpha)) {
                if (k = g.bounding_box) {
                    if (m = g.isRoot ? g.x + k.x <= a && a < g.x + k.x + k.width && g.y + k.y <= b && b < g.y + k.y + k.height: (g.x + k.x) * scaleFactor <= a && a < scaleFactor * (g.x + k.x + k.width) && (g.y + k.y) * scaleFactor <= b && b < scaleFactor * (g.y + k.y + k.height)) if (f) {
                        f.push(g);
                        continue
                    } else return g
                } else if (g.isCheckMouseWithDraw) {
                    m = createjs.DisplayObject._hitTestContext;
                    var n = this._matrix;
                    k = d && g.hitArea;
                    g.getConcatenatedMatrix(n);
                    k && (n.appendTransform(k.x, k.y, k.scaleX, k.scaleY, k.rotation, k.skewX, k.skewY, k.regX, k.regY), n.alpha = k.alpha);
                    m.globalAlpha = n.alpha;
                    m.setTransform(n.a, n.b, n.c, n.d, n.tx - a, n.ty - b); (k || g).draw(m);
                    if (!this._testHit(m)) continue;
                    m.setTransform(1, 0, 0, 1, 0, 0);
                    m.clearRect(0, 0, 2, 2);
                    if (f) f.push(g);
                    else return d && !this.mouseChildren ? this: g
                }
                if (g instanceof c && (g = g.isRoot ? g._getObjectsUnderPoint(a - (g.x + g.regX), b - (g.y + g.regY), f, d) : g._getObjectsUnderPoint(a - (g.x + g.regX) * scaleFactor, b - (g.y + g.regY) * scaleFactor, f, d))) if (f) f.push(g);
                else return g
            }
            return null
        }
        m = createjs.DisplayObject._hitTestContext;
        n = this._matrix;
        for (e -= 1; 0 <= e; e--) if (g = this.children[e], k = d && g.hitArea, g.visible && (k || g.isVisible()) && (!d || g.mouseEnabled)) if (!k && g instanceof c) {
            if (g = g._getObjectsUnderPoint(a, b, f, d), !f && g) return d && !this.mouseChildren ? this: g
        } else {
            g.getConcatenatedMatrix(n);
            k && (n.appendTransform(k.x, k.y, k.scaleX, k.scaleY, k.rotation, k.skewX, k.skewY, k.regX, k.regY), n.alpha = k.alpha);
            if (g.isOnlyBoundsCheck) {
                if ((k = g.bounding_box) && !((a - n.tx) / scaleFactor >= k.x && (a - n.tx) / scaleFactor <= k.x + k.width && (b - n.ty) / scaleFactor >= k.y && (b - n.ty) / scaleFactor <= k.y + k.height)) continue
            } else {
                m.globalAlpha = n.alpha;
                m.setTransform(n.a, n.b, n.c, n.d, n.tx - a, n.ty - b); (k || g).draw(m);
                if (!this._testHit(m)) continue;
                m.setTransform(1, 0, 0, 1, 0, 0);
                m.clearRect(0, 0, 2, 2)
            }
            if (f) f.push(g);
            else return d && !this.mouseChildren ? this: g
        }
        return null
    };
    b._getBounds = function(a, c) {
        var b = this.DisplayObject_getBounds();
        if (b) return this._transformBounds(b, a, c);
        var d, e, g, k, m = c ? this._matrix.identity() : this.getMatrix(this._matrix);
        a && m.prependMatrix(a);
        for (var n = this.children.length,
        p = 0; p < n; p++) {
            var r = this.children[p];
            if (r.visible && (b = r._getBounds(m))) {
                var r = b.x,
                s = b.y,
                t = r + b.width,
                q = s + b.height;
                if (r < d || null == d) d = r;
                if (t > e || null == e) e = t;
                if (s < g || null == g) g = s;
                if (q > k || null == k) k = q
            }
        }
        return null == e ? null: this._rectangle.initialize(d, g, e - d, k - g)
    };
    createjs.Container = c
})();
this.createjs = this.createjs || {}; (function() {
    var c = function(a) {
        this.initialize(a)
    },
    b = c.prototype = new createjs.Container;
    c._snapToPixelEnabled = !1;
    b.autoClear = !0;
    b.canvas = null;
    b.mouseX = 0;
    b.mouseY = 0;
    b.snapToPixelEnabled = !1;
    b.mouseInBounds = !1;
    b.tickOnUpdate = !0;
    b.mouseMoveOutside = !1;
    b.nextStage = null;
    b._pointerData = null;
    b._pointerCount = 0;
    b._primaryPointerID = null;
    b._mouseOverIntervalID = null;
    b.Container_initialize = b.initialize;
    b.initialize = function(a) {
        this.Container_initialize();
        this.canvas = "string" == typeof a ? document.getElementById(a) : a;
        this._pointerData = {};
        this.enableDOMEvents(!0)
    };
    b.update = function(a) {
        if (this.canvas) {
            this.tickOnUpdate && (this.dispatchEvent("tickstart"), this._tick(arguments.length ? arguments: null), this.dispatchEvent("tickend"));
            this.dispatchEvent("drawstart");
            c._snapToPixelEnabled = this.snapToPixelEnabled;
            this.autoClear && this.clear();
            var b = this.canvas.getContext("2d");
            b.save();
            this.updateContext(b);
            this.draw(b, !1);
            b.restore();
            this.dispatchEvent("drawend")
        }
    };
    b.handleEvent = function(a) {
        "tick" == a.type && this.update(a)
    };
    b.clear = function() {
        if (this.canvas) {
            var a = this.canvas.getContext("2d");
            a.setTransform(1, 0, 0, 1, 0, 0);
            a.clearRect(0, 0, this.canvas.width + 1, this.canvas.height + 1)
        }
    };
    b.toDataURL = function(a, c) {
        c || (c = "image/png");
        var b = this.canvas.getContext("2d"),
        d = this.canvas.width,
        e = this.canvas.height,
        g;
        if (a) {
            g = b.getImageData(0, 0, d, e);
            var k = b.globalCompositeOperation;
            b.globalCompositeOperation = "destination-over";
            b.fillStyle = a;
            b.fillRect(0, 0, d, e)
        }
        var m = this.canvas.toDataURL(c);
        a && (b.clearRect(0, 0, d + 1, e + 1), b.putImageData(g, 0, 0), b.globalCompositeOperation = k);
        return m
    };
    b.enableMouseOver = function(a) {
        this._mouseOverIntervalID && (clearInterval(this._mouseOverIntervalID), this._mouseOverIntervalID = null, 0 == a && this._testMouseOver(!0));
        if (null == a) a = 20;
        else if (0 >= a) return;
        var c = this;
        this._mouseOverIntervalID = setInterval(function() {
            c._testMouseOver()
        },
        1E3 / Math.min(50, a))
    };
    b.enableDOMEvents = function(a) {
        null == a && (a = !0);
        var c, b = this._eventListeners;
        if (!a && b) {
            for (c in b) a = b[c],
            a.t.removeEventListener(c, a.f, !1);
            this._eventListeners = null
        } else if (a && !b && this.canvas) {
            a = window.addEventListener ? window: document;
            var d = this,
            b = this._eventListeners = {};
            b.mouseup = {
                t: a,
                f: function(a) {
                    d._handleMouseUp(a)
                }
            };
            b.mousemove = {
                t: a,
                f: function(a) {
                    d._handleMouseMove(a)
                }
            };
            b.dblclick = {
                t: a,
                f: function(a) {
                    d._handleDoubleClick(a)
                }
            };
            b.mousedown = {
                t: this.canvas,
                f: function(a) {
                    d._handleMouseDown(a)
                }
            };
            for (c in b) a = b[c],
            a.t.addEventListener(c, a.f, !1)
        }
    };
    b.clone = function() {
        var a = new c(null);
        this.cloneProps(a);
        return a
    };
    b.toString = function() {
        return "[Stage (name=" + this.name + ")]"
    };
    b._getElementRect = function(a) {
        var c;
        try {
            c = a.getBoundingClientRect()
        } catch(b) {
            c = {
                top: a.offsetTop,
                left: a.offsetLeft,
                width: a.offsetWidth,
                height: a.offsetHeight
            }
        }
        var d = (window.pageXOffset || document.scrollLeft || 0) - (document.clientLeft || document.body.clientLeft || 0),
        e = (window.pageYOffset || document.scrollTop || 0) - (document.clientTop || document.body.clientTop || 0),
        g = window.getComputedStyle ? getComputedStyle(a) : a.currentStyle;
        a = parseInt(g.paddingLeft) + parseInt(g.borderLeftWidth);
        var k = parseInt(g.paddingTop) + parseInt(g.borderTopWidth),
        m = parseInt(g.paddingRight) + parseInt(g.borderRightWidth),
        g = parseInt(g.paddingBottom) + parseInt(g.borderBottomWidth);
        return {
            left: c.left + d + a,
            right: c.right + d - m,
            top: c.top + e + k,
            bottom: c.bottom + e - g
        }
    };
    b._getPointerData = function(a) {
        var c = this._pointerData[a];
        c || (c = this._pointerData[a] = {
            x: 0,
            y: 0
        },
        null != this._primaryPointerID && -1 != this._primaryPointerID) || (this._primaryPointerID = a);
        return c
    };
    b._handleMouseMove = function(a) {
        a || (a = window.event);
        this._handlePointerMove( - 1, a, a.pageX, a.pageY)
    };
    b._handlePointerMove = function(a, c, b, d) {
        if (this.canvas) {
            var e = this._getPointerData(a),
            g = e.inBounds;
            this._updatePointerPosition(a, c, b, d);
            if (g || e.inBounds || this.mouseMoveOutside) - 1 == a && e.inBounds == !g && this._dispatchMouseEvent(this, g ? "mouseleave": "mouseenter", !1, a, e, c),
            this._dispatchMouseEvent(this, "stagemousemove", !1, a, e, c),
            this._dispatchMouseEvent(e.target, "pressmove", !0, a, e, c),
            (g = e.event) && g.hasEventListener("mousemove") && g.dispatchEvent(new createjs.MouseEvent("mousemove", !1, !1, e.x, e.y, c, a, a == this._primaryPointerID, e.rawX, e.rawY), oTarget),
            this.nextStage && this.nextStage._handlePointerMove(a, c, b, d)
        }
    };
    b._updatePointerPosition = function(a, c, b, d) {
        var e = this._getElementRect(this.canvas);
        b -= e.left;
        d -= e.top;
        var g = this.canvas.width,
        k = this.canvas.height;
        b /= (e.right - e.left) / g;
        d /= (e.bottom - e.top) / k;
        e = this._getPointerData(a); (e.inBounds = 0 <= b && 0 <= d && b <= g - 1 && d <= k - 1) ? (e.x = b, e.y = d) : this.mouseMoveOutside && (e.x = 0 > b ? 0 : b > g - 1 ? g - 1 : b, e.y = 0 > d ? 0 : d > k - 1 ? k - 1 : d);
        e.posEvtObj = c;
        e.rawX = b;
        e.rawY = d;
        a == this._primaryPointerID && (this.mouseX = e.x, this.mouseY = e.y, this.mouseInBounds = e.inBounds)
    };
    b._handleMouseUp = function(a) {
        this._handlePointerUp( - 1, a, !1)
    };
    b._handlePointerUp = function(a, c, b) {
        var d = this._getPointerData(a),
        e = d.target;
        e && (e.hasEventListener("pressup") || e.hasEventListener("click")) ? (e.hasEventListener("click") && this._getObjectsUnderPoint(d.x, d.y, null, !0) == e && this._dispatchMouseEvent(e, "click", !0, a, d, c), this._dispatchMouseEvent(e, "pressup", !0, a, d, c)) : this._dispatchMouseEvent(this, "stagemouseup", !1, a, d, c);
        b ? (a == this._primaryPointerID && (this._primaryPointerID = null), delete this._pointerData[a]) : d.event = d.target = null;
        this.nextStage && this.nextStage._handlePointerUp(a, c, b)
    };
    b._handleMouseDown = function(a) {
        this._handlePointerDown( - 1, a, a.pageX, a.pageY)
    };
    b._handlePointerDown = function(a, c, b, d) {
        null != d && this._updatePointerPosition(a, c, b, d);
        var e = this._getPointerData(a);
        e.target = this._getObjectsUnderPoint(e.x, e.y, null, !0);
        this._dispatchMouseEvent(e.target, "mousedown", !0, a, e, c);
        e.target && e.target.hasEventListener("mousedown") || this._dispatchMouseEvent(this, "stagemousedown", !1, a, e, c);
        this.nextStage && this.nextStage._handlePointerDown(a, c, b, d)
    };
    b._testMouseOver = function(a) {
        if ( - 1 == this._primaryPointerID && (a || this.mouseX != this._mouseOverX || this.mouseY != this._mouseOverY || !this.mouseInBounds)) {
            var c = this._getPointerData( - 1),
            b = c.posEvtObj,
            d,
            e = -1,
            g = "",
            k;
            if (a || this.mouseInBounds && b && b.target == this.canvas) d = this._getObjectsUnderPoint(this.mouseX, this.mouseY, null, !0),
            this._mouseOverX = this.mouseX,
            this._mouseOverY = this.mouseY;
            a = this._mouseOverTarget || [];
            var m = a[a.length - 1],
            n = this._mouseOverTarget = [];
            for (k = d; k;) n.unshift(k),
            null != k.cursor && (g = k.cursor),
            k = k.parent;
            this.canvas.style.cursor = g;
            g = 0;
            for (k = n.length; g < k && n[g] == a[g]; g++) e = g;
            m != d && this._dispatchMouseEvent(m, "mouseout", !0, -1, c, b);
            for (g = a.length - 1; g > e; g--) this._dispatchMouseEvent(a[g], "rollout", !1, -1, c, b);
            for (g = n.length - 1; g > e; g--) this._dispatchMouseEvent(n[g], "rollover", !1, -1, c, b);
            m != d && this._dispatchMouseEvent(d, "mouseover", !0, -1, c, b)
        }
    };
    b._handleDoubleClick = function(a) {
        var c = this._getPointerData( - 1),
        b = this._getObjectsUnderPoint(c.x, c.y, null, !0);
        this._dispatchMouseEvent(b, "dblclick", !0, -1, c, a);
        this.nextStage && this.nextStage._handleDoubleClick(a)
    };
    b._dispatchMouseEvent = function(a, c, b, d, e, g) {
        a && (b || a.hasEventListener(c)) && (c = new createjs.MouseEvent(c, b, !1, e.x, e.y, g, d, d == this._primaryPointerID, e.rawX, e.rawY), a.dispatchEvent(c))
    };
    createjs.Stage = c
})();
this.createjs = this.createjs || {}; (function() {
    var c = function(a) {
        this.initialize(a)
    },
    b = c.prototype = new createjs.DisplayObject;
    b.image = null;
    b.snapToPixel = !0;
    b.sourceRect = null;
    b.DisplayObject_initialize = b.initialize;
    b.initialize = function(a) {
        this.DisplayObject_initialize();
        "string" == typeof a ? (this.image = document.createElement("img"), this.image.src = a) : this.image = a
    };
    b.isVisible = function() {
        var a = this.cacheCanvas || this.image && (this.image.complete || this.image.getContext || 2 <= this.image.readyState);
        return !! (this.visible && 0 < this.alpha && 0 != this.scaleX && 0 != this.scaleY && a)
    };
    b.DisplayObject_draw = b.draw;
    b.draw = function(a, c) {
        if (this.DisplayObject_draw(a, c)) return ! 0;
        var b = this.sourceRect;
        b ? a.drawImage(this.image, b.x, b.y, b.width, b.height, 0, 0, b.width, b.height) : a.drawImage(this.image, 0, 0);
        return ! 0
    };
    b.DisplayObject_getBounds = b.getBounds;
    b.getBounds = function() {
        var a = this.DisplayObject_getBounds();
        if (a) return a;
        a = this.sourceRect || this.image;
        return this.image && (this.image.complete || this.image.getContext || 2 <= this.image.readyState) ? this._rectangle.initialize(0, 0, a.width, a.height) : null
    };
    b.clone = function() {
        var a = new c(this.image);
        this.sourceRect && (a.sourceRect = this.sourceRect.clone());
        this.cloneProps(a);
        return a
    };
    b.toString = function() {
        return "[Bitmap (name=" + this.name + ")]"
    };
    createjs.Bitmap = c
})();
this.createjs = this.createjs || {}; (function() {
    var c = function(a, c) {
        this.initialize(a, c)
    },
    b = c.prototype = new createjs.DisplayObject;
    b.currentFrame = 0;
    b.currentAnimation = null;
    b.paused = !0;
    b.spriteSheet = null;
    b.snapToPixel = !0;
    b.isLoop = !0;
    b.offset = 0;
    b.currentAnimationFrame = 0;
    b.framerate = 0;
    b._advanceCount = 0;
    b._animation = null;
    b._currentFrame = null;
    b.rectMask = null;
    b.DisplayObject_initialize = b.initialize;
    b.initialize = function(a, c) {
        this.DisplayObject_initialize();
        this.spriteSheet = a;
        c && this.gotoAndPlay(c)
    };
    b.isVisible = function() {
        var a = this.cacheCanvas || this.spriteSheet.complete;
        return !! (this.visible && 0 < this.alpha && 0 != this.scaleX && 0 != this.scaleY && a)
    };
    b.DisplayObject_draw = b.draw;
    b.draw = function(a, c) {
        if (this.DisplayObject_draw(a, c)) return ! 0;
        this._normalizeFrame();
        var b = this.spriteSheet.getFrame(this._currentFrame | 0);
        if (!b) return ! 1;
        var d = b.rect;
        this.rectMask ? a.drawImage(b.image, d.x + this.rectMask.x, d.y + this.rectMask.y, d.width + this.rectMask.width, d.height + this.rectMask.height, -b.regX + this.rectMask.x, -b.regY + this.rectMask.y, d.width + this.rectMask.width, d.height + this.rectMask.height) : 1 <= d.width && 1 <= d.height && a.drawImage(b.image, d.x, d.y, d.width, d.height, -b.regX, -b.regY, d.width, d.height);
        return ! 0
    };
    b.play = function() {
        this.paused = !1
    };
    b.stop = function() {
        this.paused = !0
    };
    b.gotoAndPlay = function(a) {
        this.paused = !1;
        this._goto(a)
    };
    b.gotoAndStop = function(a) {
        this.paused = !0;
        this._goto(a)
    };
    b.advance = function(a) {
        var c = this._animation && this._animation.speed || 1,
        b = this.framerate || this.spriteSheet.framerate;
        a = b && null != a ? a / (1E3 / b) : 1;
        this._animation ? this.currentAnimationFrame += a * c: this._currentFrame += a * c;
        this._normalizeFrame()
    };
    b.DisplayObject_getBounds = b.getBounds;
    b.getBounds = function() {
        return this.DisplayObject_getBounds() || this.spriteSheet.getFrameBounds(this.currentFrame, this._rectangle)
    };
    b.clone = function() {
        var a = new c(this.spriteSheet);
        this.cloneProps(a);
        return a
    };
    b.toString = function() {
        return "[Sprite (name=" + this.name + ")]"
    };
    b.DisplayObject__tick = b._tick;
    b._tick = function(a) {
        this.paused || this.advance(a && a[0] && a[0].delta);
        this.DisplayObject__tick(a)
    };
    b._normalizeFrame = function() {
        var a = this._animation,
        c = this.paused,
        b = this._currentFrame,
        d = this.currentAnimationFrame,
        e;
        if (a) if (e = a.frames.length, (d | 0) >= e) {
            var g = a.next;
            if (!this._dispatchAnimationEnd(a, b, c, g, e - 1)) {
                if (g && this.isLoop) return this._goto(g, d - e);
                this.paused = !0;
                d = this.currentAnimationFrame = a.frames.length - 1;
                this._currentFrame = a.frames[d]
            }
        } else this._currentFrame = a.frames[d | 0];
        else if (e = this.spriteSheet.getNumFrames(), b >= e && !this._dispatchAnimationEnd(a, b, c, e - 1) && (this._currentFrame -= e) >= e) return this._normalizeFrame();
        this.currentFrame = this._currentFrame | 0
    };
    b._dispatchAnimationEnd = function(a, c, b, d, e) {
        var g = a ? a.name: null;
        if (this.hasEventListener("animationend")) {
            var k = new createjs.Event("animationend");
            k.name = g;
            k.next = d;
            this.dispatchEvent(k)
        }
        a = this._animation != a || this._currentFrame != c;
        a || b || !this.paused || (this.currentAnimationFrame = e, a = !0);
        return a
    };
    b.DisplayObject_cloneProps = b.cloneProps;
    b.cloneProps = function(a) {
        this.DisplayObject_cloneProps(a);
        a.currentFrame = this.currentFrame;
        a._currentFrame = this._currentFrame;
        a.currentAnimation = this.currentAnimation;
        a.paused = this.paused;
        a._animation = this._animation;
        a.currentAnimationFrame = this.currentAnimationFrame;
        a.framerate = this.framerate
    };
    b._goto = function(a, c) {
        if (isNaN(a)) {
            var b = this.spriteSheet.getAnimation(a);
            b && (this.currentAnimationFrame = c || 0, this._animation = b, this.currentAnimation = a, this._normalizeFrame())
        } else this.currentAnimationFrame = 0,
        this.currentAnimation = this._animation = null,
        this._currentFrame = a,
        this._normalizeFrame()
    };
    createjs.Sprite = c
})();
this.createjs = this.createjs || {}; (function() {
    if (!createjs.Sprite) throw "BitmapAnimation is deprecated in favour of Sprite. See VERSIONS file for info on changes."; (createjs.BitmapAnimation = function(c) {
        console.log("BitmapAnimation is deprecated in favour of Sprite. See VERSIONS file for info on changes.");
        this.initialize(c)
    }).prototype = new createjs.Sprite
})();
this.createjs = this.createjs || {}; (function() {
    var c = function(a) {
        this.initialize(a)
    },
    b = c.prototype = new createjs.DisplayObject;
    b.graphics = null;
    b.DisplayObject_initialize = b.initialize;
    b.initialize = function(a) {
        this.DisplayObject_initialize();
        this.graphics = a ? a: new createjs.Graphics
    };
    b.isVisible = function() {
        var a = this.cacheCanvas || this.graphics && !this.graphics.isEmpty();
        return !! (this.visible && 0 < this.alpha && 0 != this.scaleX && 0 != this.scaleY && a)
    };
    b.DisplayObject_draw = b.draw;
    b.draw = function(a, c) {
        if (this.DisplayObject_draw(a, c)) return ! 0;
        this.graphics.draw(a);
        return ! 0
    };
    b.clone = function(a) {
        a = new c(a && this.graphics ? this.graphics.clone() : this.graphics);
        this.cloneProps(a);
        return a
    };
    b.toString = function() {
        return "[Shape (name=" + this.name + ")]"
    };
    createjs.Shape = c
})();
this.createjs = this.createjs || {}; (function() {
    var c = function(a, c, b) {
        this.initialize(a, c, b)
    },
    b = c.prototype = new createjs.DisplayObject,
    a = createjs.createCanvas ? createjs.createCanvas() : document.createElement("canvas");
    a.getContext && (c._workingContext = a.getContext("2d"), a.width = a.height = 1);
    c.H_OFFSETS = {
        start: 0,
        left: 0,
        center: -0.5,
        end: -1,
        right: -1
    };
    c.V_OFFSETS = {
        top: 0,
        hanging: -0.01,
        middle: -0.4,
        alphabetic: -0.8,
        ideographic: -0.85,
        bottom: -1
    };
    b.text = "";
    b.font = null;
    b.color = null;
    b.textAlign = "left";
    b.textBaseline = "top";
    b.maxWidth = null;
    b.outline = 0;
    b.lineHeight = 0;
    b.lineWidth = null;
    b.DisplayObject_initialize = b.initialize;
    b.initialize = function(a, c, b) {
        this.DisplayObject_initialize();
        this.text = a;
        this.font = c;
        this.color = b
    };
    b.isVisible = function() {
        var a = this.cacheCanvas || null != this.text && "" !== this.text;
        return !! (this.visible && 0 < this.alpha && 0 != this.scaleX && 0 != this.scaleY && a)
    };
    b.DisplayObject_draw = b.draw;
    b.draw = function(a, c) {
        if (this.DisplayObject_draw(a, c)) return ! 0;
        var b = this.color || "#000";
        this.outline ? (a.strokeStyle = b, a.lineWidth = 1 * this.outline) : a.fillStyle = b;
        this._drawText(this._prepContext(a));
        return ! 0
    };
    b.getMeasuredWidth = function() {
        return this._prepContext(c._workingContext).measureText(this.text).width
    };
    b.getMeasuredLineHeight = function() {
        return 1.2 * this._prepContext(c._workingContext).measureText("M").width
    };
    b.getMeasuredHeight = function() {
        return this._drawText(null, {}).height
    };
    b.DisplayObject_getBounds = b.getBounds;
    b.getBounds = function() {
        var a = this.DisplayObject_getBounds();
        if (a) return a;
        if (null == this.text || "" == this.text) return null;
        var a = this._drawText(null, {}),
        b = this.maxWidth && this.maxWidth < a.width ? this.maxWidth: a.width,
        d = b * c.H_OFFSETS[this.textAlign || "left"],
        e = (this.lineHeight || this.getMeasuredLineHeight()) * c.V_OFFSETS[this.textBaseline || "top"];
        return this._rectangle.initialize(d, e, b, a.height)
    };
    b.clone = function() {
        var a = new c(this.text, this.font, this.color);
        this.cloneProps(a);
        return a
    };
    b.toString = function() {
        return "[Text (text=" + (20 < this.text.length ? this.text.substr(0, 17) + "...": this.text) + ")]"
    };
    b.DisplayObject_cloneProps = b.cloneProps;
    b.cloneProps = function(a) {
        this.DisplayObject_cloneProps(a);
        a.textAlign = this.textAlign;
        a.textBaseline = this.textBaseline;
        a.maxWidth = this.maxWidth;
        a.outline = this.outline;
        a.lineHeight = this.lineHeight;
        a.lineWidth = this.lineWidth
    };
    b._prepContext = function(a) {
        a.font = this.font;
        a.textAlign = this.textAlign || "left";
        a.textBaseline = this.textBaseline || "top";
        return a
    };
    b._drawText = function(a, b) {
        var d = !!a;
        d || (a = this._prepContext(c._workingContext));
        for (var e = this.lineHeight || this.getMeasuredLineHeight(), g = 0, k = 0, m = String(this.text).split(/(?:\r\n|\r|\n)/), n = 0, p = m.length; n < p; n++) {
            var r = m[n],
            s = null;
            if (null != this.lineWidth && (s = a.measureText(r).width) > this.lineWidth) for (var t = r.split(/(\s)/), r = t[0], s = a.measureText(r).width, q = 1, w = t.length; q < w; q += 2) {
                var u = a.measureText(t[q] + t[q + 1]).width;
                s + u > this.lineWidth ? (d && this._drawTextLine(a, r, k * e), s > g && (g = s), r = t[q + 1], s = a.measureText(r).width, k++) : (r += t[q] + t[q + 1], s += u)
            }
            d && this._drawTextLine(a, r, k * e);
            b && null == s && (s = a.measureText(r).width);
            s > g && (g = s);
            k++
        }
        b && (b.count = k, b.width = g, b.height = k * e);
        return b
    };
    b._drawTextLine = function(a, c, b) {
        this.outline ? a.strokeText(c, 0, b, this.maxWidth || 65535) : a.fillText(c, 0, b, this.maxWidth || 65535)
    };
    createjs.Text = c
})();
this.createjs = this.createjs || {}; (function() {
    function c(a, c) {
        this.initialize(a, c)
    }
    var b = c.prototype = new createjs.DisplayObject;
    b.text = "";
    b.spriteSheet = null;
    b.lineHeight = 0;
    b.letterSpacing = 0;
    b.isNeedCenter = !1;
    b.centerX = 0;
    b.centerY = 0;
    b.textBounds;
    b.spaceWidth = 0;
    b.postfix = "";
    b.DisplayObject_initialize = b.initialize;
    b.initialize = function(a, c) {
        this.DisplayObject_initialize();
        this.text = a;
        this.spriteSheet = c;
        b.textBounds = new createjs.Rectangle
    };
    b.DisplayObject_draw = b.draw;
    b.draw = function(a, c) {
        if (this.DisplayObject_draw(a, c)) return ! 0;
        this._drawText(a)
    };
    b.isVisible = function() {
        var a = this.cacheCanvas || this.spriteSheet && this.spriteSheet.complete && this.text;
        return !! (this.visible && 0 < this.alpha && 0 != this.scaleX && 0 != this.scaleY && a)
    };
    b.getBounds = function() {
        var a = this._rectangle;
        this._drawText(null, a);
        return a.width ? a: null
    };
    b._getFrame = function(a, c) {
        var b, d = c.getAnimation(a + this.postfix);
        d || (a != (b = a.toUpperCase()) || a != (b = a.toLowerCase()) || (b = null), b && (d = c.getAnimation(b + this.postfix)));
        return d && c.getFrame(d.frames[0])
    };
    b._getLineHeight = function(a) {
        return (a = this._getFrame("1", a) || this._getFrame("T", a) || this._getFrame("L", a) || a.getFrame(0)) ? a.rect.height: 1
    };
    b._getSpaceWidth = function(a) {
        return (a = this._getFrame("1", a) || this._getFrame("l", a) || this._getFrame("e", a) || this._getFrame("a", a) || a.getFrame(0)) ? a.rect.width: 1
    };
    b._drawText = function(a, c) {
        var b, d, e, g = 0,
        k = 0,
        m = this.spaceWidth,
        n = this.lineHeight,
        p = this.spriteSheet;
        0 == m && (m = this._getSpaceWidth(p));
        0 == n && (n = this._getLineHeight(p));
        for (var r = 0,
        s = 0,
        t = this.text.length; s < t; s++) if (b = this.text.charAt(s), " " == b) g += m;
        else if ("\n" == b || "\r" == b)"\r" == b && "\n" == this.text.charAt(s + 1) && s++,
        g - e > r && (r = g - e),
        g = 0,
        k += n;
        else {
            var q = this._getFrame(b, p);
            if (q) {
                var w = q.rect;
                e = q.regX;
                b = w.width;
                a && a.drawImage(q.image, w.x, w.y, b, d = w.height, g - e, k - q.regY, b, d);
                g += b + this.letterSpacing
            }
        }
        g - e > r && (r = g - e);
        c && (c.width = r - this.letterSpacing, c.height = k + n);
        this.textBounds.width = r - this.letterSpacing;
        this.textBounds.height = k + n
    };
    createjs.BitmapText = c
})();
this.createjs = this.createjs || {}; (function() {
    var c = function() {
        throw "SpriteSheetUtils cannot be instantiated";
    },
    b = createjs.createCanvas ? createjs.createCanvas() : document.createElement("canvas");
    b.getContext && (c._workingCanvas = b, c._workingContext = b.getContext("2d"), b.width = b.height = 1);
    c.addFlippedFrames = function(a, b, f, d) {
        if (b || f || d) {
            var e = 0;
            b && c._flip(a, ++e, !0, !1);
            f && c._flip(a, ++e, !1, !0);
            d && c._flip(a, ++e, !0, !0)
        }
    };
    c.extractFrame = function(a, b) {
        isNaN(b) && (b = a.getAnimation(b).frames[0]);
        var f = a.getFrame(b);
        if (!f) return null;
        var d = f.rect,
        e = c._workingCanvas;
        e.width = d.width;
        e.height = d.height;
        c._workingContext.drawImage(f.image, d.x, d.y, d.width, d.height, 0, 0, d.width, d.height);
        f = document.createElement("img");
        f.src = e.toDataURL("image/png");
        return f
    };
    c.mergeAlpha = function(a, c, b) {
        b || (b = createjs.createCanvas ? createjs.createCanvas() : document.createElement("canvas"));
        b.width = Math.max(c.width, a.width);
        b.height = Math.max(c.height, a.height);
        var d = b.getContext("2d");
        d.save();
        d.drawImage(a, 0, 0);
        d.globalCompositeOperation = "destination-in";
        d.drawImage(c, 0, 0);
        d.restore();
        return b
    };
    c._flip = function(a, b, f, d) {
        for (var e = a._images,
        g = c._workingCanvas,
        k = c._workingContext,
        m = e.length / b,
        n = 0; n < m; n++) {
            var p = e[n];
            p.__tmp = n;
            k.setTransform(1, 0, 0, 1, 0, 0);
            k.clearRect(0, 0, g.width + 1, g.height + 1);
            g.width = p.width;
            g.height = p.height;
            k.setTransform(f ? -1 : 1, 0, 0, d ? -1 : 1, f ? p.width: 0, d ? p.height: 0);
            k.drawImage(p, 0, 0);
            var r = document.createElement("img");
            r.src = g.toDataURL("image/png");
            r.width = p.width;
            r.height = p.height;
            e.push(r)
        }
        k = a._frames;
        g = k.length / b;
        for (n = 0; n < g; n++) {
            var p = k[n],
            s = p.rect.clone(),
            r = e[p.image.__tmp + m * b],
            t = {
                image: r,
                rect: s,
                regX: p.regX,
                regY: p.regY
            };
            f && (s.x = r.width - s.x - s.width, t.regX = s.width - p.regX);
            d && (s.y = r.height - s.y - s.height, t.regY = s.height - p.regY);
            k.push(t)
        }
        f = "_" + (f ? "h": "") + (d ? "v": "");
        d = a._animations;
        a = a._data;
        e = d.length / b;
        for (n = 0; n < e; n++) {
            k = d[n];
            p = a[k];
            m = {
                name: k + f,
                frequency: p.frequency,
                next: p.next,
                frames: []
            };
            p.next && (m.next += f);
            k = p.frames;
            p = 0;
            for (r = k.length; p < r; p++) m.frames.push(k[p] + g * b);
            a[m.name] = m;
            d.push(m.name)
        }
    };
    createjs.SpriteSheetUtils = c
})();
this.createjs = this.createjs || {}; (function() {
    var c = function() {
        this.initialize()
    },
    b = c.prototype = new createjs.EventDispatcher;
    c.ERR_DIMENSIONS = "frame dimensions exceed max spritesheet dimensions";
    c.ERR_RUNNING = "a build is already running";
    b.maxWidth = 2048;
    b.maxHeight = 2048;
    b.spriteSheet = null;
    b.scale = 1;
    b.padding = 1;
    b.timeSlice = 0.3;
    b.progress = -1;
    b._frames = null;
    b._animations = null;
    b._data = null;
    b._nextFrameIndex = 0;
    b._index = 0;
    b._timerID = null;
    b._scale = 1;
    b.initialize = function() {
        this._frames = [];
        this._animations = {}
    };
    b.addFrame = function(a, b, f, d, e, g) {
        if (this._data) throw c.ERR_RUNNING;
        b = b || a.bounds || a.nominalBounds; ! b && a.getBounds && (b = a.getBounds());
        if (!b) return null;
        f = f || 1;
        return this._frames.push({
            source: a,
            sourceRect: b,
            scale: f,
            funct: d,
            params: e,
            scope: g,
            index: this._frames.length,
            height: b.height * f
        }) - 1
    };
    b.addAnimation = function(a, b, f, d) {
        if (this._data) throw c.ERR_RUNNING;
        this._animations[a] = {
            frames: b,
            next: f,
            frequency: d
        }
    };
    b.addMovieClip = function(a, b, f) {
        if (this._data) throw c.ERR_RUNNING;
        var d = a.frameBounds,
        e = b || a.bounds || a.nominalBounds; ! e && a.getBounds && (e = a.getBounds());
        if (!e && !d) return null;
        b = this._frames.length;
        for (var g = a.timeline.duration,
        k = 0; k < g; k++) this.addFrame(a, d && d[k] ? d[k] : e, f,
        function(a) {
            var b = this.actionsEnabled;
            this.actionsEnabled = !1;
            this.gotoAndStop(a);
            this.actionsEnabled = b
        },
        [k], a);
        k = a.timeline._labels;
        a = [];
        for (var m in k) a.push({
            index: k[m],
            label: m
        });
        if (a.length) for (a.sort(function(a, b) {
            return a.index - b.index
        }), k = 0, m = a.length; k < m; k++) {
            f = a[k].label;
            for (var d = b + (k == m - 1 ? g: a[k + 1].index), e = [], n = b + a[k].index; n < d; n++) e.push(n);
            this.addAnimation(f, e, !0)
        }
    };
    b.build = function() {
        if (this._data) throw c.ERR_RUNNING;
        for (this._startBuild(); this._drawNext(););
        this._endBuild();
        return this.spriteSheet
    };
    b.buildAsync = function(a) {
        if (this._data) throw c.ERR_RUNNING;
        this.timeSlice = a;
        this._startBuild();
        var b = this;
        this._timerID = setTimeout(function() {
            b._run()
        },
        50 - 50 * Math.max(0.01, Math.min(0.99, this.timeSlice || 0.3)))
    };
    b.stopAsync = function() {
        clearTimeout(this._timerID);
        this._data = null
    };
    b.clone = function() {
        throw "SpriteSheetBuilder cannot be cloned.";
    };
    b.toString = function() {
        return "[SpriteSheetBuilder]"
    };
    b._startBuild = function() {
        var a = this.padding || 0;
        this.progress = 0;
        this.spriteSheet = null;
        this._index = 0;
        this._scale = this.scale;
        var b = [];
        this._data = {
            images: [],
            frames: b,
            animations: this._animations
        };
        var f = this._frames.slice();
        f.sort(function(a, b) {
            return a.height <= b.height ? -1 : 1
        });
        if (f[f.length - 1].height + 2 * a > this.maxHeight) throw c.ERR_DIMENSIONS;
        for (var d = 0,
        e = 0,
        g = 0; f.length;) {
            var k = this._fillRow(f, d, g, b, a);
            k.w > e && (e = k.w);
            d += k.h;
            if (!k.h || !f.length) {
                var m = createjs.createCanvas ? createjs.createCanvas() : document.createElement("canvas");
                m.width = this._getSize(e, this.maxWidth);
                m.height = this._getSize(d, this.maxHeight);
                this._data.images[g] = m;
                k.h || (e = d = 0, g++)
            }
        }
    };
    b._getSize = function(a, b) {
        for (var c = 4; Math.pow(2, ++c) < a;);
        return Math.min(b, Math.pow(2, c))
    };
    b._fillRow = function(a, b, f, d, e) {
        var g = this.maxWidth,
        k = this.maxHeight;
        b += e;
        for (var k = k - b,
        m = e,
        n = 0,
        p = a.length - 1; 0 <= p; p--) {
            var r = a[p],
            s = this._scale * r.scale,
            t = r.sourceRect,
            q = r.source,
            w = Math.floor(s * t.x - e),
            u = Math.floor(s * t.y - e),
            x = Math.ceil(s * t.height + 2 * e),
            t = Math.ceil(s * t.width + 2 * e);
            if (t > g) throw c.ERR_DIMENSIONS;
            x > k || m + t > g || (r.img = f, r.rect = new createjs.Rectangle(m, b, t, x), n = n || x, a.splice(p, 1), d[r.index] = [m, b, t, x, f, Math.round( - w + s * q.regX - e), Math.round( - u + s * q.regY - e)], m += t)
        }
        return {
            w: m,
            h: n
        }
    };
    b._endBuild = function() {
        this.spriteSheet = new createjs.SpriteSheet(this._data);
        this._data = null;
        this.progress = 1;
        this.dispatchEvent("complete")
    };
    b._run = function() {
        for (var a = 50 * Math.max(0.01, Math.min(0.99, this.timeSlice || 0.3)), b = (new Date).getTime() + a, c = !1; b > (new Date).getTime();) if (!this._drawNext()) {
            c = !0;
            break
        }
        if (c) this._endBuild();
        else {
            var d = this;
            this._timerID = setTimeout(function() {
                d._run()
            },
            50 - a)
        }
        a = this.progress = this._index / this._frames.length;
        this.hasEventListener("progress") && (b = new createjs.Event("progress"), b.progress = a, this.dispatchEvent(b))
    };
    b._drawNext = function() {
        var a = this._frames[this._index],
        b = a.scale * this._scale,
        c = a.rect,
        d = a.sourceRect,
        e = this._data.images[a.img].getContext("2d");
        a.funct && a.funct.apply(a.scope, a.params);
        e.save();
        e.beginPath();
        e.rect(c.x, c.y, c.width, c.height);
        e.clip();
        e.translate(Math.ceil(c.x - d.x * b), Math.ceil(c.y - d.y * b));
        e.scale(b, b);
        a.source.draw(e);
        e.restore();
        return++this._index < this._frames.length
    };
    createjs.SpriteSheetBuilder = c
})();
this.createjs = this.createjs || {}; (function() {
    var c = function(a) {
        this.initialize(a)
    },
    b = c.prototype = new createjs.DisplayObject;
    b.htmlElement = null;
    b._oldMtx = null;
    b._visible = !1;
    b.DisplayObject_initialize = b.initialize;
    b.initialize = function(a) {
        "string" == typeof a && (a = document.getElementById(a));
        this.DisplayObject_initialize();
        this.mouseEnabled = !1;
        this.htmlElement = a;
        a = a.style;
        a.position = "absolute";
        a.transformOrigin = a.WebkitTransformOrigin = a.msTransformOrigin = a.MozTransformOrigin = a.OTransformOrigin = "0% 0%"
    };
    b.isVisible = function() {
        return null != this.htmlElement
    };
    b.draw = function(a, b) {
        this.visible && (this._visible = !0);
        return ! 0
    };
    b.cache = function() {};
    b.uncache = function() {};
    b.updateCache = function() {};
    b.hitTest = function() {};
    b.localToGlobal = function() {};
    b.globalToLocal = function() {};
    b.localToLocal = function() {};
    b.clone = function() {
        throw "DOMElement cannot be cloned.";
    };
    b.toString = function() {
        return "[DOMElement (name=" + this.name + ")]"
    };
    b.DisplayObject__tick = b._tick;
    b._tick = function(a) {
        var b = this.getStage();
        this._visible = !1;
        b && b.on("drawend", this._handleDrawEnd, this, !0);
        this.DisplayObject__tick(a)
    };
    b._handleDrawEnd = function(a) {
        if (a = this.htmlElement) {
            a = a.style;
            var b = this._visible ? "visible": "hidden";
            b != a.visibility && (a.visibility = b);
            if (this._visible) {
                var b = this.getConcatenatedMatrix(this._matrix),
                c = this._oldMtx;
                c && c.alpha == b.alpha || (a.opacity = "" + (1E4 * b.alpha | 0) / 1E4, c && (c.alpha = b.alpha));
                if (!c || c.tx != b.tx || c.ty != b.ty || c.a != b.a || c.b != b.b || c.c != b.c || c.d != b.d) {
                    var d = "matrix(" + (1E4 * b.a | 0) / 1E4 + "," + (1E4 * b.b | 0) / 1E4 + "," + (1E4 * b.c | 0) / 1E4 + "," + (1E4 * b.d | 0) / 1E4 + "," + (b.tx + 0.5 | 0);
                    a.transform = a.WebkitTransform = a.OTransform = a.msTransform = d + "," + (b.ty + 0.5 | 0) + ")";
                    a.MozTransform = d + "px," + (b.ty + 0.5 | 0) + "px)";
                    this._oldMtx = c ? c.copy(b) : b.clone()
                }
            }
        }
    };
    createjs.DOMElement = c
})();
this.createjs = this.createjs || {}; (function() {
    var c = function() {
        this.initialize()
    },
    b = c.prototype;
    b.initialize = function() {};
    b.getBounds = function() {
        return null
    };
    b.applyFilter = function(a, b, c, d, e, g, k, m) {};
    b.toString = function() {
        return "[Filter]"
    };
    b.clone = function() {
        return new c
    };
    createjs.Filter = c
})();
this.createjs = this.createjs || {}; (function() {
    var c = function(a, b, c) {
        this.initialize(a, b, c)
    },
    b = c.prototype = new createjs.Filter;
    b.initialize = function(a, b, c) {
        if (isNaN(a) || 0 > a) a = 0;
        this.blurX = a | 0;
        if (isNaN(b) || 0 > b) b = 0;
        this.blurY = b | 0;
        if (isNaN(c) || 1 > c) c = 1;
        this.quality = c | 0
    };
    b.blurX = 0;
    b.blurY = 0;
    b.quality = 1;
    b.mul_table = [1, 171, 205, 293, 57, 373, 79, 137, 241, 27, 391, 357, 41, 19, 283, 265, 497, 469, 443, 421, 25, 191, 365, 349, 335, 161, 155, 149, 9, 278, 269, 261, 505, 245, 475, 231, 449, 437, 213, 415, 405, 395, 193, 377, 369, 361, 353, 345, 169, 331, 325, 319, 313, 307, 301, 37, 145, 285, 281, 69, 271, 267, 263, 259, 509, 501, 493, 243, 479, 118, 465, 459, 113, 446, 55, 435, 429, 423, 209, 413, 51, 403, 199, 393, 97, 3, 379, 375, 371, 367, 363, 359, 355, 351, 347, 43, 85, 337, 333, 165, 327, 323, 5, 317, 157, 311, 77, 305, 303, 75, 297, 294, 73, 289, 287, 71, 141, 279, 277, 275, 68, 135, 67, 133, 33, 262, 260, 129, 511, 507, 503, 499, 495, 491, 61, 121, 481, 477, 237, 235, 467, 232, 115, 457, 227, 451, 7, 445, 221, 439, 218, 433, 215, 427, 425, 211, 419, 417, 207, 411, 409, 203, 202, 401, 399, 396, 197, 49, 389, 387, 385, 383, 95, 189, 47, 187, 93, 185, 23, 183, 91, 181, 45, 179, 89, 177, 11, 175, 87, 173, 345, 343, 341, 339, 337, 21, 167, 83, 331, 329, 327, 163, 81, 323, 321, 319, 159, 79, 315, 313, 39, 155, 309, 307, 153, 305, 303, 151, 75, 299, 149, 37, 295, 147, 73, 291, 145, 289, 287, 143, 285, 71, 141, 281, 35, 279, 139, 69, 275, 137, 273, 17, 271, 135, 269, 267, 133, 265, 33, 263, 131, 261, 130, 259, 129, 257, 1];
    b.shg_table = [0, 9, 10, 11, 9, 12, 10, 11, 12, 9, 13, 13, 10, 9, 13, 13, 14, 14, 14, 14, 10, 13, 14, 14, 14, 13, 13, 13, 9, 14, 14, 14, 15, 14, 15, 14, 15, 15, 14, 15, 15, 15, 14, 15, 15, 15, 15, 15, 14, 15, 15, 15, 15, 15, 15, 12, 14, 15, 15, 13, 15, 15, 15, 15, 16, 16, 16, 15, 16, 14, 16, 16, 14, 16, 13, 16, 16, 16, 15, 16, 13, 16, 15, 16, 14, 9, 16, 16, 16, 16, 16, 16, 16, 16, 16, 13, 14, 16, 16, 15, 16, 16, 10, 16, 15, 16, 14, 16, 16, 14, 16, 16, 14, 16, 16, 14, 15, 16, 16, 16, 14, 15, 14, 15, 13, 16, 16, 15, 17, 17, 17, 17, 17, 17, 14, 15, 17, 17, 16, 16, 17, 16, 15, 17, 16, 17, 11, 17, 16, 17, 16, 17, 16, 17, 17, 16, 17, 17, 16, 17, 17, 16, 16, 17, 17, 17, 16, 14, 17, 17, 17, 17, 15, 16, 14, 16, 15, 16, 13, 16, 15, 16, 14, 16, 15, 16, 12, 16, 15, 16, 17, 17, 17, 17, 17, 13, 16, 15, 17, 17, 17, 16, 15, 17, 17, 17, 16, 15, 17, 17, 14, 16, 17, 17, 16, 17, 17, 16, 15, 17, 16, 14, 17, 16, 15, 17, 16, 17, 17, 16, 17, 15, 16, 17, 14, 17, 16, 15, 17, 16, 17, 13, 17, 16, 17, 17, 16, 17, 14, 17, 16, 17, 16, 17, 16, 17, 9];
    b.getBounds = function() {
        var a = 0.5 * Math.pow(this.quality, 0.6);
        return new createjs.Rectangle( - this.blurX * a, -this.blurY * a, 2 * this.blurX * a, 2 * this.blurY * a)
    };
    b.applyFilter = function(a, b, c, d, e, g, k, m) {
        g = g || a;
        null == k && (k = b);
        null == m && (m = c);
        try {
            var n = a.getImageData(b, c, d, e)
        } catch(p) {
            return ! 1
        }
        a = this.blurX / 2;
        if (isNaN(a) || 0 > a) return ! 1;
        a |= 0;
        var r = this.blurY / 2;
        if (isNaN(r) || 0 > r) return ! 1;
        r |= 0;
        if (0 == a && 0 == r) return ! 1;
        var s = this.quality;
        if (isNaN(s) || 1 > s) s = 1;
        s |= 0;
        3 < s && (s = 3);
        1 > s && (s = 1);
        var t = n.data,
        q, w, u, x, K, A, y, C, z, F, J, P, E = a + a + 1;
        x = r + r + 1;
        var S = d - 1,
        N = e - 1,
        Z = a + 1,
        T = r + 1,
        Q = {
            r: 0,
            b: 0,
            g: 0,
            a: 0,
            next: null
        };
        b = Q;
        for (q = 1; q < E; q++) b = b.next = {
            r: 0,
            b: 0,
            g: 0,
            a: 0,
            next: null
        };
        b.next = Q;
        c = E = {
            r: 0,
            b: 0,
            g: 0,
            a: 0,
            next: null
        };
        for (q = 1; q < x; q++) c = c.next = {
            r: 0,
            b: 0,
            g: 0,
            a: 0,
            next: null
        };
        c.next = E;
        for (q = null; 0 < s--;) {
            K = x = 0;
            var G = this.mul_table[a],
            M = this.shg_table[a];
            for (c = e; - 1 < --c;) {
                A = Z * (F = t[x]);
                y = Z * (J = t[x + 1]);
                C = Z * (P = t[x + 2]);
                z = Z * (u = t[x + 3]);
                b = Q;
                for (q = Z; - 1 < --q;) b.r = F,
                b.g = J,
                b.b = P,
                b.a = u,
                b = b.next;
                for (q = 1; q < Z; q++) w = x + ((S < q ? S: q) << 2),
                A += b.r = t[w],
                y += b.g = t[w + 1],
                C += b.b = t[w + 2],
                z += b.a = t[w + 3],
                b = b.next;
                q = Q;
                for (b = 0; b < d; b++) t[x++] = A * G >>> M,
                t[x++] = y * G >>> M,
                t[x++] = C * G >>> M,
                t[x++] = z * G >>> M,
                w = K + ((w = b + a + 1) < S ? w: S) << 2,
                A -= q.r - (q.r = t[w]),
                y -= q.g - (q.g = t[w + 1]),
                C -= q.b - (q.b = t[w + 2]),
                z -= q.a - (q.a = t[w + 3]),
                q = q.next;
                K += d
            }
            G = this.mul_table[r];
            M = this.shg_table[r];
            for (b = 0; b < d; b++) {
                x = b << 2;
                A = T * (F = t[x]);
                y = T * (J = t[x + 1]);
                C = T * (P = t[x + 2]);
                z = T * (u = t[x + 3]);
                c = E;
                for (q = 0; q < T; q++) c.r = F,
                c.g = J,
                c.b = P,
                c.a = u,
                c = c.next;
                u = d;
                for (q = 1; q <= r; q++) x = u + b << 2,
                A += c.r = t[x],
                y += c.g = t[x + 1],
                C += c.b = t[x + 2],
                z += c.a = t[x + 3],
                c = c.next,
                q < N && (u += d);
                x = b;
                q = E;
                if (0 < s) for (c = 0; c < e; c++) w = x << 2,
                t[w + 3] = u = z * G >>> M,
                0 < u ? (t[w] = A * G >>> M, t[w + 1] = y * G >>> M, t[w + 2] = C * G >>> M) : t[w] = t[w + 1] = t[w + 2] = 0,
                w = b + ((w = c + T) < N ? w: N) * d << 2,
                A -= q.r - (q.r = t[w]),
                y -= q.g - (q.g = t[w + 1]),
                C -= q.b - (q.b = t[w + 2]),
                z -= q.a - (q.a = t[w + 3]),
                q = q.next,
                x += d;
                else for (c = 0; c < e; c++) w = x << 2,
                t[w + 3] = u = z * G >>> M,
                0 < u ? (u = 255 / u, t[w] = (A * G >>> M) * u, t[w + 1] = (y * G >>> M) * u, t[w + 2] = (C * G >>> M) * u) : t[w] = t[w + 1] = t[w + 2] = 0,
                w = b + ((w = c + T) < N ? w: N) * d << 2,
                A -= q.r - (q.r = t[w]),
                y -= q.g - (q.g = t[w + 1]),
                C -= q.b - (q.b = t[w + 2]),
                z -= q.a - (q.a = t[w + 3]),
                q = q.next,
                x += d
            }
        }
        g.putImageData(n, k, m);
        return ! 0
    };
    b.clone = function() {
        return new c(this.blurX, this.blurY, this.quality)
    };
    b.toString = function() {
        return "[BlurFilter]"
    };
    createjs.BlurFilter = c
})();
this.createjs = this.createjs || {}; (function() {
    var c = function(a) {
        this.initialize(a)
    },
    b = c.prototype = new createjs.Filter;
    b.initialize = function(a) {
        this.alphaMap = a
    };
    b.alphaMap = null;
    b._alphaMap = null;
    b._mapData = null;
    b.applyFilter = function(a, b, c, d, e, g, k, m) {
        if (!this.alphaMap) return ! 0;
        if (!this._prepAlphaMap()) return ! 1;
        g = g || a;
        null == k && (k = b);
        null == m && (m = c);
        try {
            var n = a.getImageData(b, c, d, e)
        } catch(p) {
            return ! 1
        }
        a = n.data;
        b = this._mapData;
        c = a.length;
        for (d = 0; d < c; d += 4) a[d + 3] = b[d] || 0;
        n.data = a;
        g.putImageData(n, k, m);
        return ! 0
    };
    b.clone = function() {
        return new c(this.alphaMap)
    };
    b.toString = function() {
        return "[AlphaMapFilter]"
    };
    b._prepAlphaMap = function() {
        if (!this.alphaMap) return ! 1;
        if (this.alphaMap == this._alphaMap && this._mapData) return ! 0;
        this._mapData = null;
        var a = this._alphaMap = this.alphaMap,
        b = a;
        a instanceof HTMLCanvasElement ? b = b.getContext("2d") : (b = createjs.createCanvas ? createjs.createCanvas() : document.createElement("canvas"), b.width = a.width, b.height = a.height, b = b.getContext("2d"), b.drawImage(a, 0, 0));
        try {
            var c = b.getImageData(0, 0, a.width, a.height)
        } catch(d) {
            return ! 1
        }
        this._mapData = c.data;
        return ! 0
    };
    createjs.AlphaMapFilter = c
})();
this.createjs = this.createjs || {}; (function() {
    var c = function(a) {
        this.initialize(a)
    },
    b = c.prototype = new createjs.Filter;
    b.initialize = function(a) {
        this.mask = a
    };
    b.mask = null;
    b.applyFilter = function(a, b, c, d, e, g, k, m) {
        if (!this.mask) return ! 0;
        g = g || a;
        null == k && (k = b);
        null == m && (m = c);
        g.save();
        g.globalCompositeOperation = "destination-in";
        g.drawImage(this.mask, k, m);
        g.restore();
        return ! 0
    };
    b.clone = function() {
        return new c(this.mask)
    };
    b.toString = function() {
        return "[AlphaMaskFilter]"
    };
    createjs.AlphaMaskFilter = c
})();
this.createjs = this.createjs || {}; (function() {
    var c = function(a, b, c, d, e, g, k, m) {
        this.initialize(a, b, c, d, e, g, k, m)
    },
    b = c.prototype = new createjs.Filter;
    b.redMultiplier = 1;
    b.greenMultiplier = 1;
    b.blueMultiplier = 1;
    b.alphaMultiplier = 1;
    b.redOffset = 0;
    b.greenOffset = 0;
    b.blueOffset = 0;
    b.alphaOffset = 0;
    b.initialize = function(a, b, c, d, e, g, k, m) {
        this.redMultiplier = null != a ? a: 1;
        this.greenMultiplier = null != b ? b: 1;
        this.blueMultiplier = null != c ? c: 1;
        this.alphaMultiplier = null != d ? d: 1;
        this.redOffset = e || 0;
        this.greenOffset = g || 0;
        this.blueOffset = k || 0;
        this.alphaOffset = m || 0
    };
    b.applyFilter = function(a, b, c, d, e, g, k, m) {
        g = g || a;
        null == k && (k = b);
        null == m && (m = c);
        try {
            var n = a.getImageData(b, c, d, e)
        } catch(p) {
            return ! 1
        }
        a = n.data;
        b = a.length;
        for (c = 0; c < b; c += 4) a[c] = a[c] * this.redMultiplier + this.redOffset,
        a[c + 1] = a[c + 1] * this.greenMultiplier + this.greenOffset,
        a[c + 2] = a[c + 2] * this.blueMultiplier + this.blueOffset,
        a[c + 3] = a[c + 3] * this.alphaMultiplier + this.alphaOffset;
        g.putImageData(n, k, m);
        return ! 0
    };
    b.toString = function() {
        return "[ColorFilter]"
    };
    b.clone = function() {
        return new c(this.redMultiplier, this.greenMultiplier, this.blueMultiplier, this.alphaMultiplier, this.redOffset, this.greenOffset, this.blueOffset, this.alphaOffset)
    };
    createjs.ColorFilter = c
})();
this.createjs = this.createjs || {}; (function() {
    var c = function(a, b, c, d) {
        this.initialize(a, b, c, d)
    },
    b = c.prototype = [];
    c.DELTA_INDEX = [0, 0.01, 0.02, 0.04, 0.05, 0.06, 0.07, 0.08, 0.1, 0.11, 0.12, 0.14, 0.15, 0.16, 0.17, 0.18, 0.2, 0.21, 0.22, 0.24, 0.25, 0.27, 0.28, 0.3, 0.32, 0.34, 0.36, 0.38, 0.4, 0.42, 0.44, 0.46, 0.48, 0.5, 0.53, 0.56, 0.59, 0.62, 0.65, 0.68, 0.71, 0.74, 0.77, 0.8, 0.83, 0.86, 0.89, 0.92, 0.95, 0.98, 1, 1.06, 1.12, 1.18, 1.24, 1.3, 1.36, 1.42, 1.48, 1.54, 1.6, 1.66, 1.72, 1.78, 1.84, 1.9, 1.96, 2, 2.12, 2.25, 2.37, 2.5, 2.62, 2.75, 2.87, 3, 3.2, 3.4, 3.6, 3.8, 4, 4.3, 4.7, 4.9, 5, 5.5, 6, 6.5, 6.8, 7, 7.3, 7.5, 7.8, 8, 8.4, 8.7, 9, 9.4, 9.6, 9.8, 10];
    c.IDENTITY_MATRIX = [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1];
    c.LENGTH = c.IDENTITY_MATRIX.length;
    b.initialize = function(a, b, c, d) {
        this.reset();
        this.adjustColor(a, b, c, d);
        return this
    };
    b.reset = function() {
        return this.copyMatrix(c.IDENTITY_MATRIX)
    };
    b.adjustColor = function(a, b, c, d) {
        this.adjustHue(d);
        this.adjustContrast(b);
        this.adjustBrightness(a);
        return this.adjustSaturation(c)
    };
    b.adjustBrightness = function(a) {
        if (0 == a || isNaN(a)) return this;
        a = this._cleanValue(a, 255);
        this._multiplyMatrix([1, 0, 0, 0, a, 0, 1, 0, 0, a, 0, 0, 1, 0, a, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1]);
        return this
    };
    b.adjustContrast = function(a) {
        if (0 == a || isNaN(a)) return this;
        a = this._cleanValue(a, 100);
        var b;
        0 > a ? b = 127 + 127 * (a / 100) : (b = a % 1, b = 0 == b ? c.DELTA_INDEX[a] : c.DELTA_INDEX[a << 0] * (1 - b) + c.DELTA_INDEX[(a << 0) + 1] * b, b = 127 * b + 127);
        this._multiplyMatrix([b / 127, 0, 0, 0, 0.5 * (127 - b), 0, b / 127, 0, 0, 0.5 * (127 - b), 0, 0, b / 127, 0, 0.5 * (127 - b), 0, 0, 0, 1, 0, 0, 0, 0, 0, 1]);
        return this
    };
    b.adjustSaturation = function(a) {
        if (0 == a || isNaN(a)) return this;
        a = this._cleanValue(a, 100);
        a = 1 + (0 < a ? 3 * a / 100 : a / 100);
        this._multiplyMatrix([0.3086 * (1 - a) + a, 0.6094 * (1 - a), 0.082 * (1 - a), 0, 0, 0.3086 * (1 - a), 0.6094 * (1 - a) + a, 0.082 * (1 - a), 0, 0, 0.3086 * (1 - a), 0.6094 * (1 - a), 0.082 * (1 - a) + a, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1]);
        return this
    };
    b.adjustHue = function(a) {
        if (0 == a || isNaN(a)) return this;
        a = this._cleanValue(a, 180) / 180 * Math.PI;
        var b = Math.cos(a);
        a = Math.sin(a);
        this._multiplyMatrix([0.213 + 0.787 * b + -0.213 * a, 0.715 + -0.715 * b + -0.715 * a, 0.072 + -0.072 * b + 0.928 * a, 0, 0, 0.213 + -0.213 * b + 0.143 * a, 0.715 + b * (1 - 0.715) + 0.14 * a, 0.072 + -0.072 * b + -0.283 * a, 0, 0, 0.213 + -0.213 * b + -0.787 * a, 0.715 + -0.715 * b + 0.715 * a, 0.072 + 0.928 * b + 0.072 * a, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1]);
        return this
    };
    b.concat = function(a) {
        a = this._fixMatrix(a);
        if (a.length != c.LENGTH) return this;
        this._multiplyMatrix(a);
        return this
    };
    b.clone = function() {
        return new c(this)
    };
    b.toArray = function() {
        return this.slice(0, c.LENGTH)
    };
    b.copyMatrix = function(a) {
        for (var b = c.LENGTH,
        f = 0; f < b; f++) this[f] = a[f];
        return this
    };
    b._multiplyMatrix = function(a) {
        for (var b = [], c = 0; 5 > c; c++) {
            for (var d = 0; 5 > d; d++) b[d] = this[d + 5 * c];
            for (d = 0; 5 > d; d++) {
                for (var e = 0,
                g = 0; 5 > g; g++) e += a[d + 5 * g] * b[g];
                this[d + 5 * c] = e
            }
        }
    };
    b._cleanValue = function(a, b) {
        return Math.min(b, Math.max( - b, a))
    };
    b._fixMatrix = function(a) {
        a instanceof c && (a = a.slice(0));
        a.length < c.LENGTH ? a = a.slice(0, a.length).concat(c.IDENTITY_MATRIX.slice(a.length, c.LENGTH)) : a.length > c.LENGTH && (a = a.slice(0, c.LENGTH));
        return a
    };
    createjs.ColorMatrix = c
})();
this.createjs = this.createjs || {}; (function() {
    var c = function(a) {
        this.initialize(a)
    },
    b = c.prototype = new createjs.Filter;
    b.matrix = null;
    b.initialize = function(a) {
        this.matrix = a
    };
    b.applyFilter = function(a, b, c, d, e, g, k, m) {
        g = g || a;
        null == k && (k = b);
        null == m && (m = c);
        try {
            var n = a.getImageData(b, c, d, e)
        } catch(p) {
            return ! 1
        }
        a = n.data;
        b = a.length;
        var r, s, t, q;
        r = this.matrix;
        c = r[0];
        d = r[1];
        e = r[2];
        for (var w = r[3], u = r[4], x = r[5], K = r[6], A = r[7], y = r[8], C = r[9], z = r[10], F = r[11], J = r[12], P = r[13], E = r[14], S = r[15], N = r[16], Z = r[17], T = r[18], Q = r[19], G = 0; G < b; G += 4) r = a[G],
        s = a[G + 1],
        t = a[G + 2],
        q = a[G + 3],
        a[G] = r * c + s * d + t * e + q * w + u,
        a[G + 1] = r * x + s * K + t * A + q * y + C,
        a[G + 2] = r * z + s * F + t * J + q * P + E,
        a[G + 3] = r * S + s * N + t * Z + q * T + Q;
        g.putImageData(n, k, m);
        return ! 0
    };
    b.toString = function() {
        return "[ColorMatrixFilter]"
    };
    b.clone = function() {
        return new c(this.matrix)
    };
    createjs.ColorMatrixFilter = c
})();
this.createjs = this.createjs || {}; (function() {
    var c = function() {
        throw "Touch cannot be instantiated";
    };
    c.isSupported = function() {
        return "ontouchstart" in window || window.navigator.msPointerEnabled && 0 < window.navigator.msMaxTouchPoints
    };
    c.enable = function(b, a, h) {
        if (!b || !b.canvas || !c.isSupported()) return ! 1;
        b.__touch = {
            pointers: {},
            multitouch: !a,
            preventDefault: !h,
            count: 0
        };
        "ontouchstart" in window ? c._IOS_enable(b) : window.navigator.msPointerEnabled && c._IE_enable(b);
        return ! 0
    };
    c.disable = function(b) {
        b && ("ontouchstart" in window ? c._IOS_disable(b) : window.navigator.msPointerEnabled && c._IE_disable(b))
    };
    c._IOS_enable = function(b) {
        var a = b.canvas,
        h = b.__touch.f = function(a) {
            c._IOS_handleEvent(b, a)
        };
        a.addEventListener("touchstart", h, !1);
        a.addEventListener("touchmove", h, !1);
        a.addEventListener("touchend", h, !1);
        a.addEventListener("touchcancel", h, !1)
    };
    c._IOS_disable = function(b) {
        var a = b.canvas;
        a && (b = b.__touch.f, a.removeEventListener("touchstart", b, !1), a.removeEventListener("touchmove", b, !1), a.removeEventListener("touchend", b, !1), a.removeEventListener("touchcancel", b, !1))
    };
    c._IOS_handleEvent = function(b, a) {
        if (b) {
            b.__touch.preventDefault && a.preventDefault && a.preventDefault();
            for (var c = a.changedTouches,
            f = a.type,
            d = 0,
            e = c.length; d < e; d++) {
                var g = c[d],
                k = g.identifier;
                g.target == b.canvas && ("touchstart" == f ? this._handleStart(b, k, a, g.pageX, g.pageY) : "touchmove" == f ? this._handleMove(b, k, a, g.pageX, g.pageY) : "touchend" != f && "touchcancel" != f || this._handleEnd(b, k, a))
            }
        }
    };
    c._IE_enable = function(b) {
        var a = b.canvas,
        h = b.__touch.f = function(a) {
            c._IE_handleEvent(b, a)
        };
        a.addEventListener("MSPointerDown", h, !1);
        window.addEventListener("MSPointerMove", h, !1);
        window.addEventListener("MSPointerUp", h, !1);
        window.addEventListener("MSPointerCancel", h, !1);
        b.__touch.preventDefault && (a.style.msTouchAction = "none");
        b.__touch.activeIDs = {}
    };
    c._IE_disable = function(b) {
        var a = b.__touch.f;
        window.removeEventListener("MSPointerMove", a, !1);
        window.removeEventListener("MSPointerUp", a, !1);
        window.removeEventListener("MSPointerCancel", a, !1);
        b.canvas && b.canvas.removeEventListener("MSPointerDown", a, !1)
    };
    c._IE_handleEvent = function(b, a) {
        if (b) {
            b.__touch.preventDefault && a.preventDefault && a.preventDefault();
            var c = a.type,
            f = a.pointerId,
            d = b.__touch.activeIDs;
            if ("MSPointerDown" == c) a.srcElement == b.canvas && (d[f] = !0, this._handleStart(b, f, a, a.pageX, a.pageY));
            else if (d[f]) if ("MSPointerMove" == c) this._handleMove(b, f, a, a.pageX, a.pageY);
            else if ("MSPointerUp" == c || "MSPointerCancel" == c) delete d[f],
            this._handleEnd(b, f, a)
        }
    };
    c._handleStart = function(b, a, c, f, d) {
        var e = b.__touch;
        if (e.multitouch || !e.count) {
            var g = e.pointers;
            g[a] || (g[a] = !0, e.count++, b._handlePointerDown(a, c, f, d))
        }
    };
    c._handleMove = function(b, a, c, f, d) {
        b.__touch.pointers[a] && b._handlePointerMove(a, c, f, d)
    };
    c._handleEnd = function(b, a, c) {
        var f = b.__touch,
        d = f.pointers;
        d[a] && (f.count--, b._handlePointerUp(a, c, !0), delete d[a])
    };
    createjs.Touch = c
})();
this.createjs = this.createjs || {}; (function() {
    var c = createjs.EaselJS = createjs.EaselJS || {};
    c.version = "NEXT";
    c.buildDate = "Sun, 06 Oct 2013 10:56:52 GMT"
})(); (function() {
    var c = createjs.Stage.prototype._handlePointerDown,
    b = createjs.Stage.prototype._handlePointerUp,
    a = !1; - 1 < navigator.userAgent.indexOf("Android") && (createjs.Stage.prototype._handlePointerDown = function(b, f, d, e) {
        f.touches && (a = !0, this.enableDOMEvents(!1));
        a ? f.touches && "undefined" != typeof f.touches[0].pageX && (f.screenX = f.touches[0].pageX, f.screenY = f.touches[0].pageY, c.call(this, b, f, d, e)) : (f.screenX = f.x, f.screenY = f.y, c.call(this, b, f, d, e))
    },
    createjs.Stage.prototype._handlePointerUp = function(c, f, d) {
        f.changedTouches && (a = !0);
        a ? f.changedTouches && "undefined" != typeof f.changedTouches[0].pageX && (f.screenX = f.changedTouches[0].pageX, f.screenY = f.changedTouches[0].pageY, b.call(this, c, f, d)) : (f.screenX = f.x, f.screenY = f.y, b.call(this, c, f, d))
    })
})();
this.createjs = this.createjs || {}; (function() {
    var c = createjs.PreloadJS = createjs.PreloadJS || {};
    c.version = "0.4.0";
    c.buildDate = "Wed, 25 Sep 2013 17:09:35 GMT"
})();
this.createjs = this.createjs || {}; (function() {
    var c = function(a, b, c) {
        this.initialize(a, b, c)
    },
    b = c.prototype;
    b.type = null;
    b.target = null;
    b.currentTarget = null;
    b.eventPhase = 0;
    b.bubbles = !1;
    b.cancelable = !1;
    b.timeStamp = 0;
    b.defaultPrevented = !1;
    b.propagationStopped = !1;
    b.immediatePropagationStopped = !1;
    b.removed = !1;
    b.initialize = function(a, b, c) {
        this.type = a;
        this.bubbles = b;
        this.cancelable = c;
        this.timeStamp = (new Date).getTime()
    };
    b.preventDefault = function() {
        this.defaultPrevented = !0
    };
    b.stopPropagation = function() {
        this.propagationStopped = !0
    };
    b.stopImmediatePropagation = function() {
        this.immediatePropagationStopped = this.propagationStopped = !0
    };
    b.remove = function() {
        this.removed = !0
    };
    b.clone = function() {
        return new c(this.type, this.bubbles, this.cancelable)
    };
    b.toString = function() {
        return "[Event (type=" + this.type + ")]"
    };
    createjs.Event = c
})();
this.createjs = this.createjs || {}; (function() {
    var c = function() {},
    b = c.prototype;
    c.initialize = function(a) {
        a.addEventListener = b.addEventListener;
        a.on = b.on;
        a.removeEventListener = a.off = b.removeEventListener;
        a.removeAllEventListeners = b.removeAllEventListeners;
        a.hasEventListener = b.hasEventListener;
        a.dispatchEvent = b.dispatchEvent;
        a._dispatchEvent = b._dispatchEvent
    };
    b._listeners = null;
    b._captureListeners = null;
    b.initialize = function() {};
    b.addEventListener = function(a, b, c) {
        var d;
        d = c ? this._captureListeners = this._captureListeners || {}: this._listeners = this._listeners || {};
        var e = d[a];
        return e && this.removeEventListener(a, b, c),
        e = d[a],
        e ? e.push(b) : d[a] = [b],
        b
    };
    b.on = function(a, b, c, d, e, g) {
        return b.handleEvent && (c = c || b, b = b.handleEvent),
        c = c || this,
        this.addEventListener(a,
        function(a) {
            b.call(c, a, e);
            d && a.remove()
        },
        g)
    };
    b.removeEventListener = function(a, b, c) {
        if (c = c ? this._captureListeners: this._listeners) {
            var d = c[a];
            if (d) for (var e = 0,
            g = d.length; g > e; e++) if (d[e] == b) {
                1 == g ? delete c[a] : d.splice(e, 1);
                break
            }
        }
    };
    b.off = b.removeEventListener;
    b.removeAllEventListeners = function(a) {
        a ? (this._listeners && delete this._listeners[a], this._captureListeners && delete this._captureListeners[a]) : this._listeners = this._captureListeners = null
    };
    b.dispatchEvent = function(a, b) {
        if ("string" == typeof a) {
            var c = this._listeners;
            if (!c || !c[a]) return ! 1;
            a = new createjs.Event(a)
        }
        if (a.target = b || this, a.bubbles && this.parent) {
            for (var d = this,
            c = [d]; d.parent;) c.push(d = d.parent);
            for (var e = c.length,
            d = e - 1; 0 <= d && !a.propagationStopped; d--) c[d]._dispatchEvent(a, 1 + (0 == d));
            for (d = 1; e > d && !a.propagationStopped; d++) c[d]._dispatchEvent(a, 3)
        } else this._dispatchEvent(a, 2);
        return a.defaultPrevented
    };
    b.hasEventListener = function(a) {
        var b = this._listeners,
        c = this._captureListeners;
        return !! (b && b[a] || c && c[a])
    };
    b.toString = function() {
        return "[EventDispatcher]"
    };
    b._dispatchEvent = function(a, b) {
        var c, d = 1 == b ? this._captureListeners: this._listeners;
        if (a && d && (d = d[a.type]) && (c = d.length)) {
            a.currentTarget = this;
            a.eventPhase = b;
            a.removed = !1;
            for (var d = d.slice(), e = 0; c > e && !a.immediatePropagationStopped; e++) {
                var g = d[e];
                g.handleEvent ? g.handleEvent(a) : g(a);
                a.removed && (this.off(a.type, g, 1 == b), a.removed = !1)
            }
        }
    };
    createjs.EventDispatcher = c
})();
this.createjs = this.createjs || {}; (function() {
    createjs.indexOf = function(c, b) {
        for (var a = 0,
        h = c.length; h > a; a++) if (b === c[a]) return a;
        return - 1
    }
})();
this.createjs = this.createjs || {}; (function() {
    createjs.proxy = function(c, b) {
        var a = Array.prototype.slice.call(arguments, 2);
        return function() {
            return c.apply(b, Array.prototype.slice.call(arguments, 0).concat(a))
        }
    }
})();
this.createjs = this.createjs || {}; (function() {
    var c = function() {
        this.init()
    };
    c.prototype = {};
    var b = c.prototype;
    //c.FILE_PATTERN=/^(?:(\w+:)\/{2}(\w+(?:\.\w+)*\/?))?([/.]*?(?:[^?]+)?\/)?((?:[^/?]+)\.(\w+))(?:\?(\S+)?)?$/;
    c.FILE_PATTERN = /^(?:(\w+:)\/{2}(\w+(?:\.\w+)*\/?))?([/.]*?(?:[^?]+)?\/)?((?:[^/?]+)\.(\w+))(?:\?(\S+)?)?$/;
    b.loaded = !1; 
    b.canceled = !1;
    b.progress = 0;
    b._item = null;
    b._basePath = null;
    b.addEventListener = null;
    b.removeEventListener = null;
    b.removeAllEventListeners = null;
    b.dispatchEvent = null; 
    b.hasEventListener = null;
    b._listeners = null;
    createjs.EventDispatcher.initialize(b);
    b.getItem = function() {
        return this._item
    }; b.init = function() {}; b.load = function() {}; b.close = function() {}; b._sendLoadStart = function() {
        this._isCanceled() || this.dispatchEvent("loadstart")
    }; b._sendProgress = function(a) {
        if (!this._isCanceled()) {
            var b = null;
            "number" == typeof a ? (this.progress = a, b = new createjs.Event("progress"), b.loaded = this.progress, b.total = 1) : (b = a, this.progress = a.loaded / a.total, (isNaN(this.progress) || 1 / 0 == this.progress) && (this.progress = 0));
            b.progress = this.progress;
            this.hasEventListener("progress") && this.dispatchEvent(b)
        }
    }; b._sendComplete = function() {
        this._isCanceled() || this.dispatchEvent("complete")
    }; b._sendError = function(a) { ! this._isCanceled() && this.hasEventListener("error") && (null == a && (a = new createjs.Event("error")), this.dispatchEvent(a))
    }; b._isCanceled = function() {
        return null == window.createjs || this.canceled ? !0 : !1
    }; b._parseURI = function(a) {
        return a ? a.match(c.FILE_PATTERN) : null
    }; b._formatQueryString = function(a, b) {
        if (null == a) throw Error("You must specify data.");
        var c = [],
        d;
        for (d in a) c.push(d + "=" + escape(a[d]));
        return b && (c = c.concat(b)),
        c.join("&")
    }; b.buildPath = function(a, b, c) {
        if (null != b) {
            var d = this._parseURI(a);
            null != d && null != d[1] && "" != d[1] || (a = b + a)
        }
        if (null == c) return a;
        b = [];
        d = a.indexOf("?");
        if ( - 1 != d) {
            var e = a.slice(d + 1);
            b = b.concat(e.split("&"))
        }
        return - 1 != d ? a.slice(0, d) + "?" + this._formatQueryString(c, b) : a + "?" + this._formatQueryString(c, b)
    }; b.toString = function() {
        return "[PreloadJS AbstractLoader]"
    }; createjs.AbstractLoader = c
})(); this.createjs = this.createjs || {}; (function() {
    var c = function(a, b) {
        this.init(a, b)
    },
    b = c.prototype = new createjs.AbstractLoader;
    c.LOAD_TIMEOUT = 8E3;
    c.BINARY = "binary";
    c.CSS = "css";
    c.IMAGE = "image";
    c.JAVASCRIPT = "javascript";
    c.JSON = "json";
    c.JSONP = "jsonp";
    c.SOUND = "sound";
    c.SVG = "svg";
    c.TEXT = "text";
    c.XML = "xml";
    c.POST = "POST";
    c.GET = "GET";
    b.useXHR = !0;
    b.stopOnError = !1;
    b.maintainScriptOrder = !0;
    b.next = null;
    b._typeCallbacks = null;
    b._extensionCallbacks = null;
    b._loadStartWasDispatched = !1;
    b._maxConnections = 1;
    b._currentlyLoadingScript = null;
    b._currentLoads = null;
    b._loadQueue = null;
    b._loadQueueBackup = null;
    b._loadItemsById = null;
    b._loadItemsBySrc = null;
    b._loadedResults = null;
    b._loadedRawResults = null;
    b._numItems = 0;
    b._numItemsLoaded = 0;
    b._scriptOrder = null;
    b._loadedScripts = null;
    b.init = function(a, b) {
        this._numItems = this._numItemsLoaded = 0;
        this._loadStartWasDispatched = this._paused = !1;
        this._currentLoads = [];
        this._loadQueue = [];
        this._loadQueueBackup = [];
        this._scriptOrder = [];
        this._loadedScripts = [];
        this._loadItemsById = {};
        this._loadItemsBySrc = {};
        this._loadedResults = {};
        this._loadedRawResults = {};
        this._typeCallbacks = {};
        this._extensionCallbacks = {};
        this._basePath = b;
        this.setUseXHR(a)
    };
    b.setUseXHR = function(a) {
        return this.useXHR = 0 != a && null != window.XMLHttpRequest,
        this.useXHR
    };
    b.removeAll = function() {
        this.remove()
    };
    b.remove = function(a) {
        var b = null;
        if (!a || a instanceof Array) if (a) b = a;
        else {
            if (0 < arguments.length) return
        } else b = [a];
        var c = !1;
        if (b) {
            for (; b.length;) {
                for (var e = b.pop(), g = this.getResult(e), k = this._loadQueue.length - 1; 0 <= k; k--) if (m = this._loadQueue[k].getItem(), m.id == e || m.src == e) {
                    this._loadQueue.splice(k, 1)[0].cancel();
                    break
                }
                for (k = this._loadQueueBackup.length - 1; 0 <= k; k--) if (m = this._loadQueueBackup[k].getItem(), m.id == e || m.src == e) {
                    this._loadQueueBackup.splice(k, 1)[0].cancel();
                    break
                }
                if (g) delete this._loadItemsById[g.id],
                delete this._loadItemsBySrc[g.src],
                this._disposeItem(g);
                else for (var k = this._currentLoads.length - 1; 0 <= k; k--) {
                    var m = this._currentLoads[k].getItem();
                    if (m.id == e || m.src == e) {
                        this._currentLoads.splice(k, 1)[0].cancel();
                        c = !0;
                        break
                    }
                }
            }
            c && this._loadNext()
        } else {
            this.close();
            for (e in this._loadItemsById) this._disposeItem(this._loadItemsById[e]);
            this.init(this.useXHR)
        }
    };
    b.reset = function() {
        this.close();
        for (var a in this._loadItemsById) this._disposeItem(this._loadItemsById[a]);
        a = [];
        i = 0;
        for (l = this._loadQueueBackup.length; l > i; i++) a.push(this._loadQueueBackup[i].getItem());
        this.loadManifest(a, !1)
    };
    c.isBinary = function(a) {
        switch (a) {
        case createjs.LoadQueue.IMAGE:
        case createjs.LoadQueue.BINARY:
            return ! 0;
        default:
            return ! 1
        }
    };

    b.installPlugin = function(a) {
        if (null != a && null != a.getPreloadHandlers) {
            a = a.getPreloadHandlers();
            if (null != a.types) for (var b = 0,
            c = a.types.length; c > b; b++) this._typeCallbacks[a.types[b]] = a.callback;
            if (null != a.extensions) for (b = 0, c = a.extensions.length; c > b; b++) this._extensionCallbacks[a.extensions[b]] = a.callback
        }
    };
    b.setMaxConnections = function(a) {
        this._maxConnections = a; ! this._paused && 0 < this._loadQueue.length && this._loadNext()
    };
    b.loadFile = function(a, b, c) {
        if (null == a) return a = new createjs.Event("error"),
        a.text = "PRELOAD_NO_FILE",
        this._sendError(a),
        void 0;
        this._addItem(a, c); ! 1 !== b ? this.setPaused(!1) : this.setPaused(!0)
    };
    b.loadManifest = function(a, b, c) {
        var e = null;
        if (a instanceof Array) {
            if (0 == a.length) return b = new createjs.Event("error"),
            b.text = "PRELOAD_MANIFEST_EMPTY",
            this._sendError(b),
            void 0;
            e = a
        } else {
            if (null == a) return b = new createjs.Event("error"),
            b.text = "PRELOAD_MANIFEST_NULL",
            this._sendError(b),
            void 0;
            e = [a]
        }
        a = 0;
        for (var g = e.length; g > a; a++) this._addItem(e[a], c); ! 1 !== b ? this.setPaused(!1) : this.setPaused(!0)
    };
    b.load = function() {
        this.setPaused(!1)
    };
    b.getItem = function(a) {
        return this._loadItemsById[a] || this._loadItemsBySrc[a]
    };
    b.getResult = function(a, b) {
        var c = this._loadItemsById[a] || this._loadItemsBySrc[a];
        if (null == c) return null;
        c = c.id;
        return b && this._loadedRawResults[c] ? this._loadedRawResults[c] : this._loadedResults[c]
    };
    b.setPaused = function(a) { (this._paused = a) || this._loadNext()
    };
    b.close = function() {
        for (; this._currentLoads.length;) this._currentLoads.pop().cancel();
        this._scriptOrder.length = 0;
        this._loadedScripts.length = 0;
        this.loadStartWasDispatched = !1
    };
    b._addItem = function(a, b) {
        var c = this._createLoadItem(a);
        if (null != c) {
            var e = this._createLoader(c, b);
            null != e && (this._loadQueue.push(e), this._loadQueueBackup.push(e), this._numItems++, this._updateProgress(), this.maintainScriptOrder && c.type == createjs.LoadQueue.JAVASCRIPT && e instanceof createjs.XHRLoader && (this._scriptOrder.push(c), this._loadedScripts.push(null)))
        }
    };
    b._createLoadItem = function(a) {
        var b = null;
        switch (typeof a) {
        case "string":
            b = {
                src: a
            };
            break;
        case "object":
            b = window.HTMLAudioElement && a instanceof HTMLAudioElement ? {
                tag: a,
                src: b.tag.src,
                type: createjs.LoadQueue.SOUND
            }: a;
            break;
        default:
            return null
        }
        a = this._parseURI(b.src);
        if (null != a && (b.ext = a[5]), null == b.type && (b.type = this._getTypeByExtension(b.ext)), b.type == createjs.LoadQueue.JSON && null != b.callback && (b.type = createjs.LoadQueue.JSONP), b.type == createjs.LoadQueue.JSONP && null == b.callback) throw Error("callback is required for loading JSONP requests.");
        null == b.tag && (b.tag = this._createTag(b.type));
        null != b.id && "" != b.id || (b.id = b.src);
        if (a = this._typeCallbacks[b.type] || this._extensionCallbacks[b.ext]) {
            a = a(b.src, b.type, b.id, b.data);
            if (!1 === a) return null; ! 0 === a || (null != a.src && (b.src = a.src), null != a.id && (b.id = a.id), null != a.tag && a.tag.load instanceof Function && (b.tag = a.tag), null != a.completeHandler && (b.completeHandler = a.completeHandler));
            a.type && (b.type = a.type);
            a = this._parseURI(b.src);
            null != a && null != a[5] && (b.ext = a[5].toLowerCase())
        }
        return this._loadItemsById[b.id] = b,
        this._loadItemsBySrc[b.src] = b,
        b
    };
    b._createLoader = function(a, b) {
        var c = this.useXHR;
        switch (a.type) {
        case createjs.LoadQueue.JSON:
        case createjs.LoadQueue.XML:
        case createjs.LoadQueue.TEXT:
            c = !0;
            break;
        case createjs.LoadQueue.SOUND:
        case createjs.LoadQueue.JSONP:
            c = !1;
            break;
        case null:
            return null
        }
        return null == b && (b = this._basePath),
        c ? new createjs.XHRLoader(a, b) : new createjs.TagLoader(a, b)
    };
    b._loadNext = function() {
        if (!this._paused) {
            this._loadStartWasDispatched || (this._sendLoadStart(), this._loadStartWasDispatched = !0);
            this._numItems == this._numItemsLoaded ? (this.loaded = !0, this._sendComplete(), this.next && this.next.load && this.next.load()) : this.loaded = !1;
            for (var a = 0; a < this._loadQueue.length && !(this._currentLoads.length >= this._maxConnections); a++) {
                var b = this._loadQueue[a];
                if (this.maintainScriptOrder && b instanceof createjs.TagLoader && b.getItem().type == createjs.LoadQueue.JAVASCRIPT) {
                    if (this._currentlyLoadingScript) continue;
                    this._currentlyLoadingScript = !0
                }
                this._loadQueue.splice(a, 1);
                a--;
                this._loadItem(b)
            }
        }
    };
    b._loadItem = function(a) {
        a.addEventListener("progress", createjs.proxy(this._handleProgress, this));
        a.addEventListener("complete", createjs.proxy(this._handleFileComplete, this));
        a.addEventListener("error", createjs.proxy(this._handleFileError, this));
        this._currentLoads.push(a);
        this._sendFileStart(a.getItem());
        a.load()
    };
    b._handleFileError = function(a) {
        var b = a.target;
        this._numItemsLoaded++;
        this._updateProgress();
        a = new createjs.Event("error");
        a.text = "FILE_LOAD_ERROR";
        a.item = b.getItem();
        this._sendError(a);
        this.stopOnError || (this._removeLoadItem(b), this._loadNext())
    };
    b._handleFileComplete = function(a) {
        a = a.target;
        var b = a.getItem();
        if (this._loadedResults[b.id] = a.getResult(), a instanceof createjs.XHRLoader && (this._loadedRawResults[b.id] = a.getResult(!0)), this._removeLoadItem(a), this.maintainScriptOrder && b.type == createjs.LoadQueue.JAVASCRIPT) {
            if (! (a instanceof createjs.TagLoader)) return this._loadedScripts[createjs.indexOf(this._scriptOrder, b)] = b,
            this._checkScriptLoadOrder(a),
            void 0;
            this._currentlyLoadingScript = !1
        }
        this._processFinishedLoad(b, a)
    };
    b._processFinishedLoad = function(a, b) {
        this._numItemsLoaded++;
        this._updateProgress();
        this._sendFileComplete(a, b);
        this._loadNext()
    };
    b._checkScriptLoadOrder = function() {
        for (var a = this._loadedScripts.length,
        b = 0; a > b; b++) {
            var c = this._loadedScripts[b];
            if (null === c) break; ! 0 !== c && (this._processFinishedLoad(c), this._loadedScripts[b] = !0, b--, a--)
        }
    };
    b._removeLoadItem = function(a) {
        for (var b = this._currentLoads.length,
        c = 0; b > c; c++) if (this._currentLoads[c] == a) {
            this._currentLoads.splice(c, 1);
            break
        }
    };
    b._handleProgress = function(a) {
        a = a.target;
        this._sendFileProgress(a.getItem(), a.progress);
        this._updateProgress()
    };
    b._updateProgress = function() {
        var a = this._numItemsLoaded / this._numItems,
        b = this._numItems - this._numItemsLoaded;
        if (0 < b) {
            for (var c = 0,
            e = 0,
            g = this._currentLoads.length; g > e; e++) c += this._currentLoads[e].progress;
            a += c / b * (b / this._numItems)
        }
        this._sendProgress(a)
    };
    b._disposeItem = function(a) {
        delete this._loadedResults[a.id];
        delete this._loadedRawResults[a.id];
        delete this._loadItemsById[a.id];
        delete this._loadItemsBySrc[a.src]
    };
    b._createTag = function(a) {
        var b = null;
        switch (a) {
        case createjs.LoadQueue.IMAGE:
            return document.createElement("img");
        case createjs.LoadQueue.SOUND:
            return b = document.createElement("audio"),
            b.autoplay = !1,
            b;
        case createjs.LoadQueue.JSONP:
        case createjs.LoadQueue.JAVASCRIPT:
            return b = document.createElement("script"),
            b.type = "text/javascript",
            b;
        case createjs.LoadQueue.CSS:
            return b = this.useXHR ? document.createElement("style") : document.createElement("link"),
            b.rel = "stylesheet",
            b.type = "text/css",
            b;
        case createjs.LoadQueue.SVG:
            return this.useXHR ? b = document.createElement("svg") : (b = document.createElement("object"), b.type = "image/svg+xml"),
            b
        }
        return null
    };
    b._getTypeByExtension = function(a) {
        if (null == a) return createjs.LoadQueue.TEXT;
        switch (a.toLowerCase()) {
        case "jpeg":
        case "jpg":
        case "gif":
        case "png":
        case "webp":
        case "bmp":
            return createjs.LoadQueue.IMAGE;
        case "ogg":
        case "mp3":
        case "wav":
            return createjs.LoadQueue.SOUND;
        case "json":
            return createjs.LoadQueue.JSON;
        case "xml":
            return createjs.LoadQueue.XML;
        case "css":
            return createjs.LoadQueue.CSS;
        case "js":
            return createjs.LoadQueue.JAVASCRIPT;
        case "svg":
            return createjs.LoadQueue.SVG;
        default:
            return createjs.LoadQueue.TEXT
        }
    };
    b._sendFileProgress = function(a, b) {
        if (this._isCanceled()) return this._cleanUp(),
        void 0;
        if (this.hasEventListener("fileprogress")) {
            var c = new createjs.Event("fileprogress");
            c.progress = b;
            c.loaded = b;
            c.total = 1;
            c.item = a;
            this.dispatchEvent(c)
        }
    };
    b._sendFileComplete = function(a, b) {
        if (!this._isCanceled()) {
            var c = new createjs.Event("fileload");
            c.loader = b;
            c.item = a;
            c.result = this._loadedResults[a.id];
            c.rawResult = this._loadedRawResults[a.id];
            a.completeHandler && a.completeHandler(c);
            this.hasEventListener("fileload") && this.dispatchEvent(c)
        }
    };
    b._sendFileStart = function(a) {
        var b = new createjs.Event("filestart");
        b.item = a;
        this.hasEventListener("filestart") && this.dispatchEvent(b)
    };
    b.toString = function() {
        return "[PreloadJS LoadQueue]"
    };
    createjs.LoadQueue = c;
    var a = function() {};
    a.init = function() {
        var b = navigator.userAgent;
        a.isFirefox = -1 < b.indexOf("Firefox");
        a.isOpera = null != window.opera;
        a.isChrome = -1 < b.indexOf("Chrome");
        a.isIOS = -1 < b.indexOf("iPod") || -1 < b.indexOf("iPhone") || -1 < b.indexOf("iPad")
    };
    a.init();
    createjs.LoadQueue.BrowserDetect = a
})(); this.createjs = this.createjs || {}; (function() {
    var c = function(a, b) {
        this.init(a, b)
    },
    b = c.prototype = new createjs.AbstractLoader;
    b._loadTimeout = null;
    b._tagCompleteProxy = null;
    b._isAudio = !1;
    b._tag = null;
    b._jsonResult = null;
    b.init = function(a, b) {
        this._item = a;
        this._basePath = b;
        this._tag = a.tag;
        this._isAudio = window.HTMLAudioElement && a.tag instanceof HTMLAudioElement;
        this._tagCompleteProxy = createjs.proxy(this._handleLoad, this)
    };
    b.getResult = function() {
        return this._item.type == createjs.LoadQueue.JSONP ? this._jsonResult: this._tag
    };
    b.cancel = function() {
        this.canceled = !0;
        this._clean();
        this.getItem()
    };
    b.load = function() {
        var a = this._item,
        b = this._tag;
        clearTimeout(this._loadTimeout);
        this._loadTimeout = setTimeout(createjs.proxy(this._handleTimeout, this), createjs.LoadQueue.LOAD_TIMEOUT);
        this._isAudio && (b.src = null, b.preload = "auto");
        b.onerror = createjs.proxy(this._handleError, this);
        this._isAudio ? (b.onstalled = createjs.proxy(this._handleStalled, this), b.addEventListener("canplaythrough", this._tagCompleteProxy, !1)) : (b.onload = createjs.proxy(this._handleLoad, this), b.onreadystatechange = createjs.proxy(this._handleReadyStateChange, this));
        var c = this.buildPath(a.src, this._basePath, a.values);
        switch (a.type) {
        case createjs.LoadQueue.CSS:
            b.href = c;
            break;
        case createjs.LoadQueue.SVG:
            b.data = c;
            break;
        default:
            b.src = c
        }
        if (a.type == createjs.LoadQueue.JSONP) {
            if (null == a.callback) throw Error("callback is required for loading JSONP requests.");
            if (null != window[a.callback]) throw Error('JSONP callback "' + a.callback + '" already exists on window. You need to specify a different callback. Or re-name the current one.');
            window[a.callback] = createjs.proxy(this._handleJSONPLoad, this)
        }
        a.type != createjs.LoadQueue.SVG && a.type != createjs.LoadQueue.JSONP && a.type != createjs.LoadQueue.JSON && a.type != createjs.LoadQueue.JAVASCRIPT && a.type != createjs.LoadQueue.CSS || (this._startTagVisibility = b.style.visibility, b.style.visibility = "hidden", (document.body || document.getElementsByTagName("body")[0]).appendChild(b));
        null != b.load && b.load()
    };
    b._handleJSONPLoad = function(a) {
        this._jsonResult = a
    };
    b._handleTimeout = function() {
        this._clean();
        var a = new createjs.Event("error");
        a.text = "PRELOAD_TIMEOUT";
        this._sendError(a)
    };
    b._handleStalled = function() {};
    b._handleError = function() {
        this._clean();
        var a = new createjs.Event("error");
        this._sendError(a)
    };
    b._handleReadyStateChange = function() {
        clearTimeout(this._loadTimeout);
        var a = this.getItem().tag;
        "loaded" != a.readyState && "complete" != a.readyState || this._handleLoad()
    };
    b._handleLoad = function() {
        if (!this._isCanceled()) {
            var a = this.getItem(),
            b = a.tag;
            if (! (this.loaded || this.isAudio && 4 !== b.readyState)) {
                switch (this.loaded = !0, a.type) {
                case createjs.LoadQueue.SVG:
                case createjs.LoadQueue.JSONP:
                    b.style.visibility = this._startTagVisibility,
                    (document.body || document.getElementsByTagName("body")[0]).removeChild(b)
                }
                this._clean();
                this._sendComplete()
            }
        }
    };
    b._clean = function() {
        clearTimeout(this._loadTimeout);
        var a = this.getItem().tag;
        a.onload = null;
        a.removeEventListener && a.removeEventListener("canplaythrough", this._tagCompleteProxy, !1);
        a.onstalled = null;
        a.onprogress = null;
        a.onerror = null;
        a.parentNode && a.parentNode.removeChild(a);
        a = this.getItem();
        a.type == createjs.LoadQueue.JSONP && (window[a.callback] = null)
    };
    b.toString = function() {
        return "[PreloadJS TagLoader]"
    };
    createjs.TagLoader = c
})(); this.createjs = this.createjs || {}; (function() {
    var c = function(a, b) {
        this.init(a, b)
    },
    b = c.prototype = new createjs.AbstractLoader;
    b._request = null;
    b._loadTimeout = null;
    b._xhrLevel = 1;
    b._response = null;
    b._rawResponse = null;
    b.init = function(a, b) {
        this._item = a;
        this._basePath = b; ! this._createXHR(a)
    };
    b.getResult = function(a) {
        return a && this._rawResponse ? this._rawResponse: this._response
    };
    b.cancel = function() {
        this.canceled = !0;
        this._clean();
        this._request.abort()
    };
    b.load = function() {
        if (null == this._request) return this._handleError(),
        void 0;
        this._request.onloadstart = createjs.proxy(this._handleLoadStart, this);
        this._request.onprogress = createjs.proxy(this._handleProgress, this);
        this._request.onabort = createjs.proxy(this._handleAbort, this);
        this._request.onerror = createjs.proxy(this._handleError, this);
        this._request.ontimeout = createjs.proxy(this._handleTimeout, this);
        1 == this._xhrLevel && (this._loadTimeout = setTimeout(createjs.proxy(this._handleTimeout, this), createjs.LoadQueue.LOAD_TIMEOUT));
        this._request.onload = createjs.proxy(this._handleLoad, this);
        this._request.onreadystatechange = createjs.proxy(this._handleReadyStateChange, this);
        try {
            this._item.values && this._item.method != createjs.LoadQueue.GET ? this._item.method == createjs.LoadQueue.POST && this._request.send(this._formatQueryString(this._item.values)) : this._request.send()
        } catch(a) {
            var b = new createjs.Event("error");
            b.error = a;
            this._sendError(b)
        }
    };
    b.getAllResponseHeaders = function() {
        return this._request.getAllResponseHeaders instanceof Function ? this._request.getAllResponseHeaders() : null
    };
    b.getResponseHeader = function(a) {
        return this._request.getResponseHeader instanceof Function ? this._request.getResponseHeader(a) : null
    };
    b._handleProgress = function(a) {
        if (a && !(0 < a.loaded && 0 == a.total)) {
            var b = new createjs.Event("progress");
            b.loaded = a.loaded;
            b.total = a.total;
            this._sendProgress(b)
        }
    };
    b._handleLoadStart = function() {
        clearTimeout(this._loadTimeout);
        this._sendLoadStart()
    };
    b._handleAbort = function(a) {
        this._clean();
        a = new createjs.Event("error");
        a.text = "XHR_ABORTED";
        this._sendError(a)
    };
    b._handleError = function() {
        this._clean();
        var a = new createjs.Event("error");
        this._sendError(a)
    };
    b._handleReadyStateChange = function() {
        4 == this._request.readyState && this._handleLoad()
    };
    b._handleLoad = function() {
        if (!this.loaded) {
            if (this.loaded = !0, !this._checkError()) return this._handleError(),
            void 0;
            this._response = this._getResponse();
            this._clean();
            this._generateTag() && this._sendComplete()
        }
    };
    b._handleTimeout = function(a) {
        this._clean(); (new createjs.Event("error")).text = "PRELOAD_TIMEOUT";
        this._sendError(a)
    };
    b._checkError = function() {
        switch (parseInt(this._request.status)) {
        case 404:
        case 0:
            return ! 1
        }
        return ! 0
    };
    b._getResponse = function() {
        if (null != this._response) return this._response;
        if (null != this._request.response) return this._request.response;
        try {
            if (null != this._request.responseText) return this._request.responseText
        } catch(a) {}
        try {
            if (null != this._request.responseXML) return this._request.responseXML
        } catch(b) {}
        return null
    };
    b._createXHR = function(a) {
        var b = document.createElement("a");
        b.href = this.buildPath(a.src, this._basePath);
        var c = document.createElement("a");
        c.href = location.href;
        b = "" != b.hostname && (b.port != c.port || b.protocol != c.protocol || b.hostname != c.hostname);
        c = null;
        if (b && window.XDomainRequest) c = new XDomainRequest;
        else if (window.XMLHttpRequest) c = new XMLHttpRequest;
        else try {
            c = new ActiveXObject("Msxml2.XMLHTTP.6.0")
        } catch(d) {
            try {
                c = new ActiveXObject("Msxml2.XMLHTTP.3.0")
            } catch(e) {
                try {
                    c = new ActiveXObject("Msxml2.XMLHTTP")
                } catch(g) {
                    return ! 1
                }
            }
        }
        a.type == createjs.LoadQueue.TEXT && c.overrideMimeType && c.overrideMimeType("text/plain; charset=x-user-defined");
        this._xhrLevel = "string" == typeof c.responseType ? 2 : 1;
        var k = null;
        return k = a.method == createjs.LoadQueue.GET ? this.buildPath(a.src, this._basePath, a.values) : this.buildPath(a.src, this._basePath),
        c.open(a.method || createjs.LoadQueue.GET, k, !0),
        b && c instanceof XMLHttpRequest && 1 == this._xhrLevel && c.setRequestHeader("Origin", location.origin),
        a.values && a.method == createjs.LoadQueue.POST && c.setRequestHeader("Content-Type", "application/x-www-form-urlencoded"),
        createjs.LoadQueue.isBinary(a.type) && (c.responseType = "arraybuffer"),
        this._request = c,
        !0
    };
    b._clean = function() {
        clearTimeout(this._loadTimeout);
        var a = this._request;
        a.onloadstart = null;
        a.onprogress = null;
        a.onabort = null;
        a.onerror = null;
        a.onload = null;
        a.ontimeout = null;
        a.onloadend = null;
        a.onreadystatechange = null
    };
    b._generateTag = function() {
        var a = this._item.tag;
        switch (this._item.type) {
        case createjs.LoadQueue.IMAGE:
            return a.onload = createjs.proxy(this._handleTagReady, this),
            a.src = this.buildPath(this._item.src, this._basePath, this._item.values),
            this._rawResponse = this._response,
            this._response = a,
            !1;
        case createjs.LoadQueue.JAVASCRIPT:
            return a = document.createElement("script"),
            a.text = this._response,
            this._rawResponse = this._response,
            this._response = a,
            !0;
        case createjs.LoadQueue.CSS:
            if (document.getElementsByTagName("head")[0].appendChild(a), a.styleSheet) a.styleSheet.cssText = this._response;
            else {
                var b = document.createTextNode(this._response);
                a.appendChild(b)
            }
            return this._rawResponse = this._response,
            this._response = a,
            !0;
        case createjs.LoadQueue.XML:
            return b = this._parseXML(this._response, "text/xml"),
            this._response = b,
            !0;
        case createjs.LoadQueue.SVG:
            return b = this._parseXML(this._response, "image/svg+xml"),
            this._rawResponse = this._response,
            null != b.documentElement ? (a.appendChild(b.documentElement), this._response = a) : this._response = b,
            !0;
        case createjs.LoadQueue.JSON:
            a = {};
            try {
                a = JSON.parse(this._response)
            } catch(c) {
                a = c
            }
            return this._rawResponse = this._response,
            this._response = a,
            !0
        }
        return ! 0
    };
    b._parseXML = function(a, b) {
        var c = null;
        window.DOMParser ? c = (new DOMParser).parseFromString(a, b) : (c = new ActiveXObject("Microsoft.XMLDOM"), c.async = !1, c.loadXML(a));
        return c
    };
    b._handleTagReady = function() {
        this._sendComplete()
    };
    b.toString = function() {
        return "[PreloadJS XHRLoader]"
    };
    createjs.XHRLoader = c
})();
"object" != typeof JSON && (JSON = {}); (function() {
    function c(a) {
        return 10 > a ? "0" + a: a
    }
    function b(a) {
        return f.lastIndex = 0,
        f.test(a) ? '"' + a.replace(f,
        function(a) {
            var b = g[a];
            return "string" == typeof b ? b: "\\u" + ("0000" + a.charCodeAt(0).toString(16)).slice( - 4)
        }) + '"': '"' + a + '"'
    }
    function a(c, f) {
        var h, g, s, t, q, w = d,
        u = f[c];
        switch (u && "object" == typeof u && "function" == typeof u.toJSON && (u = u.toJSON(c)), "function" == typeof k && (u = k.call(f, c, u)), typeof u) {
        case "string":
            return b(u);
        case "number":
            return isFinite(u) ? String(u) : "null";
        case "boolean":
        case "null":
            return String(u);
        case "object":
            if (!u) return "null";
            if (d += e, q = [], "[object Array]" === Object.prototype.toString.apply(u)) {
                t = u.length;
                for (h = 0; t > h; h += 1) q[h] = a(h, u) || "null";
                return s = 0 === q.length ? "[]": d ? "[\n" + d + q.join(",\n" + d) + "\n" + w + "]": "[" + q.join(",") + "]",
                d = w,
                s
            }
            if (k && "object" == typeof k) for (t = k.length, h = 0; t > h; h += 1)"string" == typeof k[h] && (g = k[h], s = a(g, u), s && q.push(b(g) + (d ? ": ": ":") + s));
            else for (g in u) Object.prototype.hasOwnProperty.call(u, g) && (s = a(g, u), s && q.push(b(g) + (d ? ": ": ":") + s));
            return s = 0 === q.length ? "{}": d ? "{\n" + d + q.join(",\n" + d) + "\n" + w + "}": "{" + q.join(",") + "}",
            d = w,
            s
        }
    }
    "function" != typeof Date.prototype.toJSON && (Date.prototype.toJSON = function() {
        return isFinite(this.valueOf()) ? this.getUTCFullYear() + "-" + c(this.getUTCMonth() + 1) + "-" + c(this.getUTCDate()) + "T" + c(this.getUTCHours()) + ":" + c(this.getUTCMinutes()) + ":" + c(this.getUTCSeconds()) + "Z": null
    },
    String.prototype.toJSON = Number.prototype.toJSON = Boolean.prototype.toJSON = function() {
        return this.valueOf()
    });
    var h = /[\u0000\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,
    f = /[\\\"\x00-\x1f\x7f-\x9f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,
    d, e, g = {
        "\b": "\\b",
        "\t": "\\t",
        "\n": "\\n",
        "\f": "\\f",
        "\r": "\\r",
        '"': '\\"',
        "\\": "\\\\"
    },
    k;
    "function" != typeof JSON.stringify && (JSON.stringify = function(b, c, f) {
        var h;
        if (d = "", e = "", "number" == typeof f) for (h = 0; f > h; h += 1) e += " ";
        else "string" == typeof f && (e = f);
        if (k = c, c && "function" != typeof c && ("object" != typeof c || "number" != typeof c.length)) throw Error("JSON.stringify");
        return a("", {
            "": b
        })
    });
    "function" != typeof JSON.parse && (JSON.parse = function(a, b) {
        function c(a, e) {
            var f, d, h = a[e];
            if (h && "object" == typeof h) for (f in h) Object.prototype.hasOwnProperty.call(h, f) && (d = c(h, f), void 0 !== d ? h[f] = d: delete h[f]);
            return b.call(a, e, h)
        }
        var e;
        if (a = String(a), h.lastIndex = 0, h.test(a) && (a = a.replace(h,
        function(a) {
            return "\\u" + ("0000" + a.charCodeAt(0).toString(16)).slice( - 4)
        })), /^[\],:{}\s]*$/.test(a.replace(/\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g, "@").replace(/"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g, "]").replace(/(?:^|:|,)(?:\s*\[)+/g, ""))) return e = eval("(" + a + ")"),
        "function" == typeof b ? c({
            "": e
        },
        "") : e;
        throw new SyntaxError("JSON.parse");
    })
})(); this.createjs = this.createjs || {}; (function() {
    var c = function(a, b, c) {
        this.initialize(a, b, c)
    },
    b = c.prototype;
    b.type = null;
    b.target = null;
    b.currentTarget = null;
    b.eventPhase = 0;
    b.bubbles = !1;
    b.cancelable = !1;
    b.timeStamp = 0;
    b.defaultPrevented = !1;
    b.propagationStopped = !1;
    b.immediatePropagationStopped = !1;
    b.removed = !1;
    b.initialize = function(a, b, c) {
        this.type = a;
        this.bubbles = b;
        this.cancelable = c;
        this.timeStamp = (new Date).getTime()
    };
    b.preventDefault = function() {
        this.defaultPrevented = !0
    };
    b.stopPropagation = function() {
        this.propagationStopped = !0
    };
    b.stopImmediatePropagation = function() {
        this.immediatePropagationStopped = this.propagationStopped = !0
    };
    b.remove = function() {
        this.removed = !0
    };
    b.clone = function() {
        return new c(this.type, this.bubbles, this.cancelable)
    };
    b.toString = function() {
        return "[Event (type=" + this.type + ")]"
    };
    createjs.Event = c
})(); this.createjs = this.createjs || {}; (function() {
    var c = function() {
        this.initialize()
    },
    b = c.prototype;
    c.initialize = function(a) {
        a.addEventListener = b.addEventListener;
        a.on = b.on;
        a.removeEventListener = a.off = b.removeEventListener;
        a.removeAllEventListeners = b.removeAllEventListeners;
        a.hasEventListener = b.hasEventListener;
        a.dispatchEvent = b.dispatchEvent;
        a._dispatchEvent = b._dispatchEvent
    };
    b._listeners = null;
    b._captureListeners = null;
    b.initialize = function() {};
    b.addEventListener = function(a, b, c) {
        var d;
        d = c ? this._captureListeners = this._captureListeners || {}: this._listeners = this._listeners || {};
        var e = d[a];
        return e && this.removeEventListener(a, b, c),
        e = d[a],
        e ? e.push(b) : d[a] = [b],
        b
    };
    b.on = function(a, b, c, d, e, g) {
        return b.handleEvent && (c = c || b, b = b.handleEvent),
        c = c || this,
        this.addEventListener(a,
        function(a) {
            b.call(c, a, e);
            d && a.remove()
        },
        g)
    };
    b.removeEventListener = function(a, b, c) {
        if (c = c ? this._captureListeners: this._listeners) {
            var d = c[a];
            if (d) for (var e = 0,
            g = d.length; g > e; e++) if (d[e] == b) {
                1 == g ? delete c[a] : d.splice(e, 1);
                break
            }
        }
    };
    b.off = b.removeEventListener;
    b.removeAllEventListeners = function(a) {
        a ? (this._listeners && delete this._listeners[a], this._captureListeners && delete this._captureListeners[a]) : this._listeners = this._captureListeners = null
    };
    b.dispatchEvent = function(a, b) {
        if ("string" == typeof a) {
            var c = this._listeners;
            if (!c || !c[a]) return ! 1;
            a = new createjs.Event(a)
        }
        if (a.target = b || this, a.bubbles && this.parent) {
            for (var d = this,
            c = [d]; d.parent;) c.push(d = d.parent);
            for (var e = c.length,
            d = e - 1; 0 <= d && !a.propagationStopped; d--) c[d]._dispatchEvent(a, 1 + (0 == d));
            for (d = 1; e > d && !a.propagationStopped; d++) c[d]._dispatchEvent(a, 3)
        } else this._dispatchEvent(a, 2);
        return a.defaultPrevented
    };
    b.hasEventListener = function(a) {
        var b = this._listeners,
        c = this._captureListeners;
        return !! (b && b[a] || c && c[a])
    };
    b.toString = function() {
        return "[EventDispatcher]"
    };
    b._dispatchEvent = function(a, b) {
        var c, d = 1 == b ? this._captureListeners: this._listeners;
        if (a && d && (d = d[a.type]) && (c = d.length)) {
            a.currentTarget = this;
            a.eventPhase = b;
            a.removed = !1;
            for (var d = d.slice(), e = 0; c > e && !a.immediatePropagationStopped; e++) {
                var g = d[e];
                g.handleEvent ? g.handleEvent(a) : g(a);
                a.removed && (this.off(a.type, g, 1 == b), a.removed = !1)
            }
        }
    };
    createjs.EventDispatcher = c
})(); this.createjs = this.createjs || {}; (function() {
    var c = function(a, b, c) {
        this.initialize(a, b, c)
    },
    b = c.prototype = new createjs.EventDispatcher;
    c.NONE = 0;
    c.LOOP = 1;
    c.REVERSE = 2;
    c.IGNORE = {};
    c._tweens = [];
    c._plugins = {};
    c.get = function(a, b, f, d) {
        return d && c.removeTweens(a),
        new c(a, b, f)
    };
    c.tick = function(a, b) {
        for (var f = c._tweens.slice(), d = f.length - 1; 0 <= d; d--) {
            var e = f[d];
            b && !e.ignoreGlobalPause || e._paused || e.tick(e._useTicks ? 1 : a)
        }
    };
    c.handleEvent = function(a) {
        "tick" == a.type && this.tick(a.delta, a.paused)
    };
    c.removeTweens = function(a) {
        if (a.tweenjs_count) {
            for (var b = c._tweens,
            f = b.length - 1; 0 <= f; f--) b[f]._target == a && (b[f]._paused = !0, b.splice(f, 1));
            a.tweenjs_count = 0
        }
    };
    c.removeAllTweens = function() {
        for (var a = c._tweens,
        b = 0,
        f = a.length; f > b; b++) {
            var d = a[b];
            d.paused = !0;
            d.target.tweenjs_count = 0
        }
        a.length = 0
    };
    c.hasActiveTweens = function(a) {
        return a ? a.tweenjs_count: c._tweens && !!c._tweens.length
    };
    c.installPlugin = function(a, b) {
        var f = a.priority;
        null == f && (a.priority = f = 0);
        for (var d = 0,
        e = b.length,
        g = c._plugins; e > d; d++) {
            var k = b[d];
            if (g[k]) {
                for (var m = g[k], n = 0, p = m.length; p > n && !(f < m[n].priority); n++);
                g[k].splice(n, 0, a)
            } else g[k] = [a]
        }
    };
    c._register = function(a, b) {
        var f = a._target,
        d = c._tweens;
        if (b) f && (f.tweenjs_count = f.tweenjs_count ? f.tweenjs_count + 1 : 1),
        d.push(a),
        !c._inited && createjs.Ticker && (createjs.Ticker.addEventListener("tick", c), c._inited = !0);
        else for (f && f.tweenjs_count--, f = d.length; f--;) if (d[f] == a) return d.splice(f, 1),
        void 0
    };
    b.ignoreGlobalPause = !1;
    b.loop = !1;
    b.duration = 0;
    b.pluginData = null;
    b.target = null;
    b.position = null;
    b.passive = !1;
    b._paused = !1;
    b._curQueueProps = null;
    b._initQueueProps = null;
    b._steps = null;
    b._actions = null;
    b._prevPosition = 0;
    b._stepPosition = 0;
    b._prevPos = -1;
    b._target = null;
    b._useTicks = !1;
    b._inited = !1;
    b.initialize = function(a, b, f) {
        this.target = this._target = a;
        b && (this._useTicks = b.useTicks, this.ignoreGlobalPause = b.ignoreGlobalPause, this.loop = b.loop, b.onChange && this.addEventListener("change", b.onChange), b.override && c.removeTweens(a));
        this.pluginData = f || {};
        this._curQueueProps = {};
        this._initQueueProps = {};
        this._steps = [];
        this._actions = [];
        b && b.paused ? this._paused = !0 : c._register(this, !0);
        b && null != b.position && this.setPosition(b.position, c.NONE)
    };
    b.wait = function(a, b) {
        if (null == a || 0 >= a) return this;
        var c = this._cloneProps(this._curQueueProps);
        return this._addStep({
            d: a,
            p0: c,
            e: this._linearEase,
            p1: c,
            v: b
        })
    };
    b.to = function(a, b, c) {
        return (isNaN(b) || 0 > b) && (b = 0),
        this._addStep({
            d: b || 0,
            p0: this._cloneProps(this._curQueueProps),
            e: c,
            p1: this._cloneProps(this._appendQueueProps(a))
        })
    };
    b.call = function(a, b, c) {
        return this._addAction({
            f: a,
            p: b ? b: [this],
            o: c ? c: this._target
        })
    };
    b.set = function(a, b) {
        return this._addAction({
            f: this._set,
            o: this,
            p: [a, b ? b: this._target]
        })
    };
    b.play = function(a) {
        return a || (a = this),
        this.call(a.setPaused, [!1], a)
    };
    b.pause = function(a) {
        return a || (a = this),
        this.call(a.setPaused, [!0], a)
    };
    b.setPosition = function(a, b) {
        0 > a && (a = 0);
        null == b && (b = 1);
        var c = a,
        d = !1;
        if (c >= this.duration && (this.loop ? c %= this.duration: (c = this.duration, d = !0)), c == this._prevPos) return d;
        var e = this._prevPos;
        if (this.position = this._prevPos = c, this._prevPosition = a, this._target) if (d) this._updateTargetProps(null, 1);
        else if (0 < this._steps.length) {
            for (var g = 0,
            k = this._steps.length; k > g && !(this._steps[g].t > c); g++);
            g = this._steps[g - 1];
            this._updateTargetProps(g, (this._stepPosition = c - g.t) / g.d)
        }
        return 0 != b && 0 < this._actions.length && (this._useTicks ? this._runActions(c, c) : 1 == b && e > c ? (e != this.duration && this._runActions(e, this.duration), this._runActions(0, c, !0)) : this._runActions(e, c)),
        d && this.setPaused(!0),
        this.dispatchEvent("change"),
        d
    };
    b.tick = function(a) {
        this._paused || this.setPosition(this._prevPosition + a)
    };
    b.setPaused = function(a) {
        return this._paused = !!a,
        c._register(this, !a),
        this
    };
    b.w = b.wait;
    b.t = b.to;
    b.c = b.call;
    b.s = b.set;
    b.toString = function() {
        return "[Tween]"
    };
    b.clone = function() {
        throw "Tween can not be cloned.";
    };
    b._updateTargetProps = function(a, b) {
        var f, d, e, g;
        if (a || 1 != b) {
            if (this.passive = !!a.v, this.passive) return;
            a.e && (b = a.e(b, 0, 1, 1));
            f = a.p0;
            d = a.p1
        } else this.passive = !1,
        f = d = this._curQueueProps;
        for (var k in this._initQueueProps) {
            null == (e = f[k]) && (f[k] = e = this._initQueueProps[k]);
            null == (g = d[k]) && (d[k] = g = e);
            e = e == g || 0 == b || 1 == b || "number" != typeof e ? 1 == b ? g: e: e + (g - e) * b;
            var m = !1;
            if (g = c._plugins[k]) for (var n = 0,
            p = g.length; p > n; n++) {
                var r = g[n].tween(this, k, e, f, d, b, !!a && f == d, !a);
                r == c.IGNORE ? m = !0 : e = r
            }
            m || (this._target[k] = e)
        }
    };
    b._runActions = function(a, b, c) {
        var d = a,
        e = b,
        g = -1,
        k = this._actions.length,
        m = 1;
        for (a > b && (d = b, e = a, g = k, k = m = -1); (g += m) != k;) {
            b = this._actions[g];
            var n = b.t; (n == e || n > d && e > n || c && n == a) && b.f.apply(b.o, b.p)
        }
    };
    b._appendQueueProps = function(a) {
        var b, f, d, e, g, k;
        for (k in a) if (void 0 === this._initQueueProps[k]) {
            if (f = this._target[k], b = c._plugins[k]) for (d = 0, e = b.length; e > d; d++) f = b[d].init(this, k, f);
            this._initQueueProps[k] = this._curQueueProps[k] = void 0 === f ? null: f
        }
        for (k in a) {
            if (f = this._curQueueProps[k], b = c._plugins[k]) for (g = g || {},
            d = 0, e = b.length; e > d; d++) b[d].step && b[d].step(this, k, f, a[k], g);
            this._curQueueProps[k] = a[k]
        }
        return g && this._appendQueueProps(g),
        this._curQueueProps
    };
    b._cloneProps = function(a) {
        var b = {},
        c;
        for (c in a) b[c] = a[c];
        return b
    };
    b._addStep = function(a) {
        return 0 < a.d && (this._steps.push(a), a.t = this.duration, this.duration += a.d),
        this
    };
    b._addAction = function(a) {
        return a.t = this.duration,
        this._actions.push(a),
        this
    };
    b._set = function(a, b) {
        for (var c in a) b[c] = a[c]
    };
    createjs.Tween = c
})(); this.createjs = this.createjs || {}; (function() {
    var c = function(a, b, c) {
        this.initialize(a, b, c)
    },
    b = c.prototype = new createjs.EventDispatcher;
    b.ignoreGlobalPause = !1;
    b.duration = 0;
    b.loop = !1;
    b.position = null;
    b._paused = !1;
    b._tweens = null;
    b._labels = null;
    b._labelList = null;
    b._prevPosition = 0;
    b._prevPos = -1;
    b._useTicks = !1;
    b.initialize = function(a, b, c) {
        this._tweens = [];
        c && (this._useTicks = c.useTicks, this.loop = c.loop, this.ignoreGlobalPause = c.ignoreGlobalPause, c.onChange && this.addEventListener("change", c.onChange));
        a && this.addTween.apply(this, a);
        this.setLabels(b);
        c && c.paused ? this._paused = !0 : createjs.Tween._register(this, !0);
        c && null != c.position && this.setPosition(c.position, createjs.Tween.NONE)
    };
    b.addTween = function(a) {
        var b = arguments.length;
        if (1 < b) {
            for (var c = 0; b > c; c++) this.addTween(arguments[c]);
            return arguments[0]
        }
        return 0 == b ? null: (this.removeTween(a), this._tweens.push(a), a.setPaused(!0), a._paused = !1, a._useTicks = this._useTicks, a.duration > this.duration && (this.duration = a.duration), 0 <= this._prevPos && a.setPosition(this._prevPos, createjs.Tween.NONE), a)
    };
    b.removeTween = function(a) {
        var b = arguments.length;
        if (1 < b) {
            for (var c = !0,
            d = 0; b > d; d++) c = c && this.removeTween(arguments[d]);
            return c
        }
        if (0 == b) return ! 1;
        b = this._tweens;
        for (d = b.length; d--;) if (b[d] == a) return b.splice(d, 1),
        a.duration >= this.duration && this.updateDuration(),
        !0;
        return ! 1
    };
    b.addLabel = function(a, b) {
        this._labels[a] = b;
        var c = this._labelList;
        if (c) {
            for (var d = 0,
            e = c.length; e > d && !(b < c[d].position); d++);
            c.splice(d, 0, {
                label: a,
                position: b
            })
        }
    };
    b.setLabels = function(a) {
        this._labels = a ? a: {}
    };
    b.getLabels = function() {
        var a = this._labelList;
        if (!a) {
            var a = this._labelList = [],
            b = this._labels,
            c;
            for (c in b) a.push({
                label: c,
                position: b[c]
            });
            a.sort(function(a, b) {
                return a.position - b.position
            })
        }
        return a
    };
    b.getCurrentLabel = function() {
        var a = this.getLabels(),
        b = this.position,
        c = a.length;
        if (c) {
            for (var d = 0; c > d && !(b < a[d].position); d++);
            return 0 == d ? null: a[d - 1].label
        }
        return null
    };
    b.gotoAndPlay = function(a) {
        this.setPaused(!1);
        this._goto(a)
    };
    b.gotoAndStop = function(a) {
        this.setPaused(!0);
        this._goto(a)
    };
    b.setPosition = function(a, b) {
        0 > a && (a = 0);
        var c = this.loop ? a % this.duration: a,
        d = !this.loop && a >= this.duration;
        if (c == this._prevPos) return d;
        this._prevPosition = a;
        this.position = this._prevPos = c;
        for (var e = 0,
        g = this._tweens.length; g > e; e++) if (this._tweens[e].setPosition(c, b), c != this._prevPos) return ! 1;
        return d && this.setPaused(!0),
        this.dispatchEvent("change"),
        d
    };
    b.setPaused = function(a) {
        this._paused = !!a;
        createjs.Tween._register(this, !a)
    };
    b.updateDuration = function() {
        for (var a = this.duration = 0,
        b = this._tweens.length; b > a; a++) {
            var c = this._tweens[a];
            c.duration > this.duration && (this.duration = c.duration)
        }
    };
    b.tick = function(a) {
        this.setPosition(this._prevPosition + a)
    };
    b.resolve = function(a) {
        var b = parseFloat(a);
        return isNaN(b) && (b = this._labels[a]),
        b
    };
    b.toString = function() {
        return "[Timeline]"
    };
    b.clone = function() {
        throw "Timeline can not be cloned.";
    };
    b._goto = function(a) {
        a = this.resolve(a);
        null != a && this.setPosition(a)
    };
    createjs.Timeline = c
})(); this.createjs = this.createjs || {}; (function() {
    var c = function() {
        throw "Ease cannot be instantiated.";
    };
    c.linear = function(b) {
        return b
    };
    c.none = c.linear;
    c.get = function(b) {
        return - 1 > b && (b = -1),
        1 < b && (b = 1),
        function(a) {
            return 0 == b ? a: 0 > b ? a * (a * -b + 1 + b) : a * ((2 - a) * b + (1 - b))
        }
    };
    c.getPowIn = function(b) {
        return function(a) {
            return Math.pow(a, b)
        }
    };
    c.getPowOut = function(b) {
        return function(a) {
            return 1 - Math.pow(1 - a, b)
        }
    };
    c.getPowInOut = function(b) {
        return function(a) {
            return 1 > (a *= 2) ? 0.5 * Math.pow(a, b) : 1 - 0.5 * Math.abs(Math.pow(2 - a, b))
        }
    };
    c.quadIn = c.getPowIn(2);
    c.quadOut = c.getPowOut(2);
    c.quadInOut = c.getPowInOut(2);
    c.cubicIn = c.getPowIn(3);
    c.cubicOut = c.getPowOut(3);
    c.cubicInOut = c.getPowInOut(3);
    c.quartIn = c.getPowIn(4);
    c.quartOut = c.getPowOut(4);
    c.quartInOut = c.getPowInOut(4);
    c.quintIn = c.getPowIn(5);
    c.quintOut = c.getPowOut(5);
    c.quintInOut = c.getPowInOut(5);
    c.sineIn = function(b) {
        return 1 - Math.cos(b * Math.PI / 2)
    };
    c.sineOut = function(b) {
        return Math.sin(b * Math.PI / 2)
    };
    c.sineInOut = function(b) {
        return - 0.5 * (Math.cos(Math.PI * b) - 1)
    };
    c.getBackIn = function(b) {
        return function(a) {
            return a * a * ((b + 1) * a - b)
        }
    };
    c.backIn = c.getBackIn(1.7);
    c.getBackOut = function(b) {
        return function(a) {
            return--a * a * ((b + 1) * a + b) + 1
        }
    };
    c.backOut = c.getBackOut(1.7);
    c.getBackInOut = function(b) {
        return b *= 1.525,
        function(a) {
            return 1 > (a *= 2) ? 0.5 * a * a * ((b + 1) * a - b) : 0.5 * ((a -= 2) * a * ((b + 1) * a + b) + 2)
        }
    };
    c.backInOut = c.getBackInOut(1.7);
    c.circIn = function(b) {
        return - (Math.sqrt(1 - b * b) - 1)
    };
    c.circOut = function(b) {
        return Math.sqrt(1 - --b * b)
    };
    c.circInOut = function(b) {
        return 1 > (b *= 2) ? -0.5 * (Math.sqrt(1 - b * b) - 1) : 0.5 * (Math.sqrt(1 - (b -= 2) * b) + 1)
    };
    c.bounceIn = function(b) {
        return 1 - c.bounceOut(1 - b)
    };
    c.bounceOut = function(b) {
        return 1 / 2.75 > b ? 7.5625 * b * b: 2 / 2.75 > b ? 7.5625 * (b -= 1.5 / 2.75) * b + 0.75 : 2.5 / 2.75 > b ? 7.5625 * (b -= 2.25 / 2.75) * b + 0.9375 : 7.5625 * (b -= 2.625 / 2.75) * b + 0.984375
    };
    c.bounceInOut = function(b) {
        return 0.5 > b ? 0.5 * c.bounceIn(2 * b) : 0.5 * c.bounceOut(2 * b - 1) + 0.5
    };
    c.getElasticIn = function(b, a) {
        var c = 2 * Math.PI;
        return function(f) {
            if (0 == f || 1 == f) return f;
            var d = a / c * Math.asin(1 / b);
            return - (b * Math.pow(2, 10 * (f -= 1)) * Math.sin((f - d) * c / a))
        }
    };
    c.elasticIn = c.getElasticIn(1, 0.3);
    c.getElasticOut = function(b, a) {
        var c = 2 * Math.PI;
        return function(f) {
            if (0 == f || 1 == f) return f;
            var d = a / c * Math.asin(1 / b);
            return b * Math.pow(2, -10 * f) * Math.sin((f - d) * c / a) + 1
        }
    };
    c.elasticOut = c.getElasticOut(1, 0.3);
    c.getElasticInOut = function(b, a) {
        var c = 2 * Math.PI;
        return function(f) {
            var d = a / c * Math.asin(1 / b);
            return 1 > (f *= 2) ? -0.5 * b * Math.pow(2, 10 * (f -= 1)) * Math.sin((f - d) * c / a) : 0.5 * b * Math.pow(2, -10 * (f -= 1)) * Math.sin((f - d) * c / a) + 1
        }
    };
    c.elasticInOut = c.getElasticInOut(1, 0.3 * 1.5);
    createjs.Ease = c
})(); this.createjs = this.createjs || {}; (function() {
    var c = function() {
        throw "MotionGuidePlugin cannot be instantiated.";
    };
    c.priority = 0;
    c._rotOffS;
    c._rotOffE;
    c._rotNormS;
    c._rotNormE;
    c.install = function() {
        return createjs.Tween.installPlugin(c, ["guide", "x", "y", "rotation"]),
        createjs.Tween.IGNORE
    };
    c.init = function(b, a, c) {
        var f = b.target;
        return f.hasOwnProperty("x") || (f.x = 0),
        f.hasOwnProperty("y") || (f.y = 0),
        f.hasOwnProperty("rotation") || (f.rotation = 0),
        "rotation" == a && (b.__needsRot = !0),
        "guide" == a ? null: c
    };
    c.step = function(b, a, h, f, d) {
        if ("rotation" == a && (b.__rotGlobalS = h, b.__rotGlobalE = f, c.testRotData(b, d)), "guide" != a) return f;
        var e;
        f.hasOwnProperty("path") || (f.path = []);
        a = f.path;
        if (f.hasOwnProperty("end") || (f.end = 1), f.hasOwnProperty("start") || (f.start = h && h.hasOwnProperty("end") && h.path === a ? h.end: 0), f.hasOwnProperty("_segments") && f._length) return f;
        h = a.length;
        if (! (6 <= h && 0 == (h - 2) % 4)) throw "invalid 'path' data, please see documentation for valid paths";
        f._segments = [];
        f._length = 0;
        for (var g = 2; h > g; g += 4) {
            for (var k, m, n = a[g - 2], p = a[g - 1], r = a[g + 0], s = a[g + 1], t = a[g + 2], q = a[g + 3], w = n, u = p, x = 0, K = [], A = 1; 10 >= A; A++) {
                m = A / 10;
                var y = 1 - m;
                k = y * y * n + 2 * y * m * r + m * m * t;
                m = y * y * p + 2 * y * m * s + m * m * q;
                x += K[K.push(Math.sqrt((e = k - w) * e + (e = m - u) * e)) - 1];
                w = k;
                u = m
            }
            f._segments.push(x);
            f._segments.push(K);
            f._length += x
        }
        e = f.orient;
        f.orient = !0;
        a = {};
        return c.calc(f, f.start, a),
        b.__rotPathS = Number(a.rotation.toFixed(5)),
        c.calc(f, f.end, a),
        b.__rotPathE = Number(a.rotation.toFixed(5)),
        f.orient = !1,
        c.calc(f, f.end, d),
        f.orient = e,
        f.orient ? (b.__guideData = f, c.testRotData(b, d), f) : f
    };
    c.testRotData = function(b, a) {
        if (void 0 === b.__rotGlobalS || void 0 === b.__rotGlobalE) {
            if (b.__needsRot) return;
            b.__rotGlobalS = b.__rotGlobalE = void 0 !== b._curQueueProps.rotation ? b._curQueueProps.rotation: a.rotation = b.target.rotation || 0
        }
        if (void 0 !== b.__guideData) {
            var c = b.__guideData,
            f = b.__rotGlobalE - b.__rotGlobalS,
            d = b.__rotPathE - b.__rotPathS,
            e = f - d;
            if ("auto" == c.orient) 180 < e ? e -= 360 : -180 > e && (e += 360);
            else if ("cw" == c.orient) {
                for (; 0 > e;) e += 360;
                0 == e && 0 < f && 180 != f && (e += 360)
            } else if ("ccw" == c.orient) {
                for (e = f - (180 < d ? 360 - d: d); 0 < e;) e -= 360;
                0 == e && 0 > f && -180 != f && (e -= 360)
            }
            c.rotDelta = e;
            c.rotOffS = b.__rotGlobalS - b.__rotPathS;
            b.__rotGlobalS = b.__rotGlobalE = b.__guideData = b.__needsRot = void 0
        }
    };
    c.tween = function(b, a, h, f, d, e, g) {
        d = d.guide;
        if (void 0 == d || d === f.guide) return h;
        if (d.lastRatio != e) {
            switch (c.calc(d, (d.end - d.start) * (g ? d.end: e) + d.start, b.target), d.orient) {
            case "cw":
            case "ccw":
            case "auto":
                b.target.rotation += d.rotOffS + d.rotDelta * e;
                break;
            default:
                b.target.rotation += d.rotOffS
            }
            d.lastRatio = e
        }
        return "rotation" != a || d.orient && "false" != d.orient ? b.target[a] : h
    };
    c.calc = function(b, a, h) {
        void 0 == b._segments && c.validate(b);
        void 0 == h && (h = {
            x: 0,
            y: 0,
            rotation: 0
        });
        var f = b._segments,
        d = b.path,
        e = b._length * a,
        g = f.length - 2;
        for (a = 0; e > f[a] && g > a;) e -= f[a],
        a += 2;
        for (var f = f[a + 1], k = 0, g = f.length - 1; e > f[k] && g > k;) e -= f[k],
        k++;
        e = k / ++g + e / (g * f[k]);
        a = 2 * a + 2;
        g = 1 - e;
        return h.x = g * g * d[a - 2] + 2 * g * e * d[a + 0] + e * e * d[a + 2],
        h.y = g * g * d[a - 1] + 2 * g * e * d[a + 1] + e * e * d[a + 3],
        b.orient && (h.rotation = 57.2957795 * Math.atan2((d[a + 1] - d[a - 1]) * g + (d[a + 3] - d[a + 1]) * e, (d[a + 0] - d[a - 2]) * g + (d[a + 2] - d[a + 0]) * e)),
        h
    };
    createjs.MotionGuidePlugin = c
})(); this.createjs = this.createjs || {}; (function() {
    var c = createjs.TweenJS = createjs.TweenJS || {};
    c.version = "0.5.0";
    c.buildDate = "Wed, 25 Sep 2013 17:09:35 GMT"
})(); this.createjs = this.createjs || {}; (function() {
    var c = createjs.SoundJS = createjs.SoundJS || {};
    c.version = "0.5.0";
    c.buildDate = "Wed, 25 Sep 2013 17:09:35 GMT"
})(); this.createjs = this.createjs || {}; (function() {
    var c = function() {},
    b = c.prototype;
    c.initialize = function(a) {
        a.addEventListener = b.addEventListener;
        a.on = b.on;
        a.removeEventListener = a.off = b.removeEventListener;
        a.removeAllEventListeners = b.removeAllEventListeners;
        a.hasEventListener = b.hasEventListener;
        a.dispatchEvent = b.dispatchEvent;
        a._dispatchEvent = b._dispatchEvent
    };
    b._listeners = null;
    b._captureListeners = null;
    b.initialize = function() {};
    b.addEventListener = function(a, b, c) {
        var d;
        d = c ? this._captureListeners = this._captureListeners || {}: this._listeners = this._listeners || {};
        var e = d[a];
        return e && this.removeEventListener(a, b, c),
        e = d[a],
        e ? e.push(b) : d[a] = [b],
        b
    };
    b.on = function(a, b, c, d, e, g) {
        return b.handleEvent && (c = c || b, b = b.handleEvent),
        c = c || this,
        this.addEventListener(a,
        function(a) {
            b.call(c, a, e);
            d && a.remove()
        },
        g)
    };
    b.removeEventListener = function(a, b, c) {
        if (c = c ? this._captureListeners: this._listeners) {
            var d = c[a];
            if (d) for (var e = 0,
            g = d.length; g > e; e++) if (d[e] == b) {
                1 == g ? delete c[a] : d.splice(e, 1);
                break
            }
        }
    };
    b.off = b.removeEventListener;
    b.removeAllEventListeners = function(a) {
        a ? (this._listeners && delete this._listeners[a], this._captureListeners && delete this._captureListeners[a]) : this._listeners = this._captureListeners = null
    };
    b.dispatchEvent = function(a, b) {
        if ("string" == typeof a) {
            var c = this._listeners;
            if (!c || !c[a]) return ! 1;
            a = new createjs.Event(a)
        }
        if (a.target = b || this, a.bubbles && this.parent) {
            for (var d = this,
            c = [d]; d.parent;) c.push(d = d.parent);
            for (var e = c.length,
            d = e - 1; 0 <= d && !a.propagationStopped; d--) c[d]._dispatchEvent(a, 1 + (0 == d));
            for (d = 1; e > d && !a.propagationStopped; d++) c[d]._dispatchEvent(a, 3)
        } else this._dispatchEvent(a, 2);
        return a.defaultPrevented
    };
    b.hasEventListener = function(a) {
        var b = this._listeners,
        c = this._captureListeners;
        return !! (b && b[a] || c && c[a])
    };
    b.toString = function() {
        return "[EventDispatcher]"
    };
    b._dispatchEvent = function(a, b) {
        var c, d = 1 == b ? this._captureListeners: this._listeners;
        if (a && d && (d = d[a.type]) && (c = d.length)) {
            a.currentTarget = this;
            a.eventPhase = b;
            a.removed = !1;
            for (var d = d.slice(), e = 0; c > e && !a.immediatePropagationStopped; e++) {
                var g = d[e];
                g.handleEvent ? g.handleEvent(a) : g(a);
                a.removed && (this.off(a.type, g, 1 == b), a.removed = !1)
            }
        }
    };
    createjs.EventDispatcher = c
})(); this.createjs = this.createjs || {}; (function() {
    var c = function(a, b, c) {
        this.initialize(a, b, c)
    },
    b = c.prototype;
    b.type = null;
    b.target = null;
    b.currentTarget = null;
    b.eventPhase = 0;
    b.bubbles = !1;
    b.cancelable = !1;
    b.timeStamp = 0;
    b.defaultPrevented = !1;
    b.propagationStopped = !1;
    b.immediatePropagationStopped = !1;
    b.removed = !1;
    b.initialize = function(a, b, c) {
        this.type = a;
        this.bubbles = b;
        this.cancelable = c;
        this.timeStamp = (new Date).getTime()
    };
    b.preventDefault = function() {
        this.defaultPrevented = !0
    };
    b.stopPropagation = function() {
        this.propagationStopped = !0
    };
    b.stopImmediatePropagation = function() {
        this.immediatePropagationStopped = this.propagationStopped = !0
    };
    b.remove = function() {
        this.removed = !0
    };
    b.clone = function() {
        return new c(this.type, this.bubbles, this.cancelable)
    };
    b.toString = function() {
        return "[Event (type=" + this.type + ")]"
    };
    createjs.Event = c
})(); this.createjs = this.createjs || {}; (function() {
    createjs.indexOf = function(c, b) {
        for (var a = 0,
        h = c.length; h > a; a++) if (b === c[a]) return a;
        return - 1
    }
})(); this.createjs = this.createjs || {}; (function() {
    createjs.proxy = function(c, b) {
        var a = Array.prototype.slice.call(arguments, 2);
        return function() {
            return c.apply(b, Array.prototype.slice.call(arguments, 0).concat(a))
        }
    }
})(); this.createjs = this.createjs || {}; (function() {
    function c() {
        throw "Sound cannot be instantiated";
    }
    function b(a, b) {
        this.init(a, b)
    }
    function a() {}
    c.DELIMITER = "|";
    c.AUDIO_TIMEOUT = 8E3;
    c.INTERRUPT_ANY = "any";
    c.INTERRUPT_EARLY = "early";
    c.INTERRUPT_LATE = "late";
    c.INTERRUPT_NONE = "none";
    c.PLAY_INITED = "playInited";
    c.PLAY_SUCCEEDED = "playSucceeded";
    c.PLAY_INTERRUPTED = "playInterrupted";
    c.PLAY_FINISHED = "playFinished";
    c.PLAY_FAILED = "playFailed";
    c.SUPPORTED_EXTENSIONS = "mp3 ogg mpeg wav m4a mp4 aiff wma mid".split(" ");
    c.EXTENSION_MAP = {
        m4a: "mp4"
    };
    c.FILE_PATTERN = /^(?:(\w+:)\/{2}(\w+(?:\.\w+)*\/?))?([/.]*?(?:[^?]+)?\/)?(( ? :[ ^ /?]+)\.(\w+))(?:\?(\S+)?)?$/; c.defaultInterruptBehavior = c.INTERRUPT_NONE; c.lastId = 0; c.activePlugin = null; c.pluginsRegistered = !1; c.masterVolume = 1; c.masterMute = !1; c.instances = []; c.idHash = {}; c.preloadHash = {}; c.defaultSoundInstance = null; c.addEventListener = null; c.removeEventListener = null; c.removeAllEventListeners = null; c.dispatchEvent = null; c.hasEventListener = null; c._listeners = null; createjs.EventDispatcher.initialize(c); c.sendFileLoadEvent = function(a) {
        if (c.preloadHash[a]) for (var b = 0,
        e = c.preloadHash[a].length; e > b; b++) {
            var g = c.preloadHash[a][b];
            if (c.preloadHash[a][b] = !0, c.hasEventListener("fileload")) {
                var h = new createjs.Event("fileload");
                h.src = g.src;
                h.id = g.id;
                h.data = g.data;
                c.dispatchEvent(h)
            }
        }
    }; c.getPreloadHandlers = function() {
        return {
            callback: createjs.proxy(c.initLoad, c),
            types: ["sound"],
            extensions: c.SUPPORTED_EXTENSIONS
        }
    }; c.registerPlugin = function(a) {
        return c.pluginsRegistered = !0,
        null == a ? !1 : a.isSupported() ? (c.activePlugin = new a, !0) : !1
    }; c.registerPlugins = function(a) {
        for (var b = 0,
        e = a.length; e > b; b++) if (c.registerPlugin(a[b])) return ! 0;
        return ! 1
    }; c.initializeDefaultPlugins = function() {
        return null != c.activePlugin ? !0 : c.pluginsRegistered ? !1 : c.registerPlugins([createjs.WebAudioPlugin, createjs.HTMLAudioPlugin]) ? !0 : !1
    }; c.isReady = function() {
        return null != c.activePlugin
    }; c.getCapabilities = function() {
        return null == c.activePlugin ? null: c.activePlugin.capabilities
    }; c.getCapability = function(a) {
        return null == c.activePlugin ? null: c.activePlugin.capabilities[a]
    }; c.initLoad = function(a, b, e, g, h) {
        a = c.registerSound(a, e, g, !1, h);
        return null == a ? !1 : a
    }; c.registerSound = function(a, d, e, g, h) {
        if (!c.initializeDefaultPlugins()) return ! 1;
        a instanceof Object && (h = d, d = a.id, e = a.data, a = a.src);
        var m = c.parsePath(a, "sound", d, e);
        if (null == m) return ! 1;
        null != d && (c.idHash[d] = m.src);
        var n = null;
        null != e && (isNaN(e.channels) ? isNaN(e) || (n = parseInt(e)) : n = parseInt(e.channels));
        var p = c.activePlugin.register(m.src, n);
        if (null != p && (null != p.numChannels && (n = p.numChannels), b.create(m.src, n), null != e && isNaN(e) ? e.channels = m.data.channels = n || b.maxPerChannel() : e = m.data = n || b.maxPerChannel(), null != p.tag ? m.tag = p.tag: p.src && (m.src = p.src), null != p.completeHandler && (m.completeHandler = p.completeHandler), p.type && (m.type = p.type)), 0 != g) if (c.preloadHash[m.src] || (c.preloadHash[m.src] = []), c.preloadHash[m.src].push({
            src: a,
            id: d,
            data: e
        }), 1 == c.preloadHash[m.src].length) null == h && (h = ""),
        c.activePlugin.preload(m.src, p, h);
        else if (1 == c.preloadHash[m.src][0]) return ! 0;
        return m
    }; c.registerManifest = function(a, b) {
        for (var c = [], g = 0, h = a.length; h > g; g++) c[g] = createjs.Sound.registerSound(a[g].src, a[g].id, a[g].data, a[g].preload, b);
        return c
    }; c.removeSound = function(a) {
        if (null == c.activePlugin) return ! 1;
        a instanceof Object && (a = a.src);
        a = c.getSrcById(a);
        a = c.parsePath(a);
        if (null == a) return ! 1;
        a = a.src;
        for (var d in c.idHash) c.idHash[d] == a && delete c.idHash[d];
        return b.removeSrc(a),
        delete c.preloadHash[a],
        c.activePlugin.removeSound(a),
        !0
    }; c.removeManifest = function(a) {
        for (var b = [], c = 0, g = a.length; g > c; c++) b[c] = createjs.Sound.removeSound(a[c].src);
        return b
    }; c.removeAllSounds = function() {
        c.idHash = {};
        c.preloadHash = {};
        b.removeAll();
        c.activePlugin.removeAllSounds()
    }; c.loadComplete = function(a) {
        var b = c.parsePath(a, "sound");
        return a = b ? c.getSrcById(b.src) : c.getSrcById(a),
        1 == c.preloadHash[a][0]
    }; c.parsePath = function(a, b, e, g) {
        "string" != typeof a && (a = a.toString());
        a = a.split(c.DELIMITER);
        b = {
            type: b || "sound",
            id: e,
            data: g
        };
        e = c.getCapabilities();
        g = 0;
        for (var h = a.length; h > g; g++) {
            var m = a[g],
            n = m.match(c.FILE_PATTERN);
            if (null == n) return ! 1;
            var p = n[4],
            n = n[5];
            if (e[n] && -1 < createjs.indexOf(c.SUPPORTED_EXTENSIONS, n)) return b.name = p,
            b.src = m,
            b.extension = n,
            b
        }
        return null
    }; c.play = function(a, b, e, g, h, m, n) {
        a = c.createInstance(a);
        return c.playInstance(a, b, e, g, h, m, n) || a.playFailed(),
        a
    }; c.createInstance = function(a) {
        if (!c.initializeDefaultPlugins()) return c.defaultSoundInstance;
        a = c.getSrcById(a);
        a = c.parsePath(a, "sound");
        var d = null;
        return null != a && null != a.src ? (b.create(a.src), d = c.activePlugin.create(a.src)) : d = c.defaultSoundInstance,
        d.uniqueId = c.lastId++,
        d
    }; c.setVolume = function(a) {
        if (null == Number(a)) return ! 1;
        if (a = Math.max(0, Math.min(1, a)), c.masterVolume = a, !this.activePlugin || !this.activePlugin.setVolume || !this.activePlugin.setVolume(a)) for (var b = this.instances,
        e = 0,
        g = b.length; g > e; e++) b[e].setMasterVolume(a)
    }; c.getVolume = function() {
        return c.masterVolume
    }; c.setMute = function(a) {
        if (null == a || void 0 == a) return ! 1;
        if (this.masterMute = a, !this.activePlugin || !this.activePlugin.setMute || !this.activePlugin.setMute(a)) for (var b = this.instances,
        c = 0,
        g = b.length; g > c; c++) b[c].setMasterMute(a);
        return ! 0
    }; c.getMute = function() {
        return this.masterMute
    }; c.stop = function() {
        for (var a = this.instances,
        b = a.length; b--;) a[b].stop()
    }; c.playInstance = function(a, b, e, g, h, m, n) {
        if (b instanceof Object && (e = b.delay, g = b.offset, h = b.loop, m = b.volume, n = b.pan), b = b || c.defaultInterruptBehavior, null == e && (e = 0), null == g && (g = a.getPosition()), null == h && (h = 0), null == m && (m = a.volume), null == n && (n = a.pan), 0 == e) {
            if (!c.beginPlaying(a, b, g, h, m, n)) return ! 1
        } else e = setTimeout(function() {
            c.beginPlaying(a, b, g, h, m, n)
        },
        e),
        a.delayTimeoutId = e;
        return this.instances.push(a),
        !0
    }; c.beginPlaying = function(a, c, e, g, h, m) {
        return b.add(a, c) ? a.beginPlaying(e, g, h, m) ? !0 : (a = createjs.indexOf(this.instances, a), -1 < a && this.instances.splice(a, 1), !1) : !1
    }; c.getSrcById = function(a) {
        return null == c.idHash || null == c.idHash[a] ? a: c.idHash[a]
    }; c.playFinished = function(a) {
        b.remove(a);
        a = createjs.indexOf(this.instances, a); - 1 < a && this.instances.splice(a, 1)
    }; createjs.Sound = c; b.channels = {}; b.create = function(a, c) {
        return null == b.get(a) ? (b.channels[a] = new b(a, c), !0) : !1
    }; b.removeSrc = function(a) {
        var c = b.get(a);
        return null == c ? !1 : (c.removeAll(), delete b.channels[a], !0)
    }; b.removeAll = function() {
        for (var a in b.channels) b.channels[a].removeAll();
        b.channels = {}
    }; b.add = function(a, c) {
        var e = b.get(a.src);
        return null == e ? !1 : e.add(a, c)
    }; b.remove = function(a) {
        var c = b.get(a.src);
        return null == c ? !1 : (c.remove(a), !0)
    }; b.maxPerChannel = function() {
        return h.maxDefault
    }; b.get = function(a) {
        return b.channels[a]
    };
    var h = b.prototype; h.src = null; h.max = null; h.maxDefault = 100; h.length = 0; h.init = function(a, b) {
        this.src = a;
        this.max = b || this.maxDefault; - 1 == this.max && this.max == this.maxDefault;
        this.instances = []
    }; h.get = function(a) {
        return this.instances[a]
    }; h.add = function(a, b) {
        return this.getSlot(b, a) ? (this.instances.push(a), this.length++, !0) : !1
    }; h.remove = function(a) {
        a = createjs.indexOf(this.instances, a);
        return - 1 == a ? !1 : (this.instances.splice(a, 1), this.length--, !0)
    }; h.removeAll = function() {
        for (var a = this.length - 1; 0 <= a; a--) this.instances[a].stop()
    }; h.getSlot = function(a) {
        for (var b, e, g = 0,
        h = this.max; h > g; g++) {
            if (b = this.get(g), null == b) return ! 0; (a != c.INTERRUPT_NONE || b.playState == c.PLAY_FINISHED) && (0 != g ? b.playState == c.PLAY_FINISHED || b.playState == c.PLAY_INTERRUPTED || b.playState == c.PLAY_FAILED ? e = b: (a == c.INTERRUPT_EARLY && b.getPosition() < e.getPosition() || a == c.INTERRUPT_LATE && b.getPosition() > e.getPosition()) && (e = b) : e = b)
        }
        return null != e ? (e.interrupt(), this.remove(e), !0) : !1
    }; h.toString = function() {
        return "[Sound SoundChannel]"
    }; c.defaultSoundInstance = new
    function() {
        this.isDefault = !0;
        this.addEventListener = this.removeEventListener = this.removeAllEventListener = this.dispatchEvent = this.hasEventListener = this._listeners = this.interrupt = this.playFailed = this.pause = this.resume = this.play = this.beginPlaying = this.cleanUp = this.stop = this.setMasterVolume = this.setVolume = this.mute = this.setMute = this.getMute = this.setPan = this.getPosition = this.setPosition = function() {
            return ! 1
        };
        this.getVolume = this.getPan = this.getDuration = function() {
            return 0
        };
        this.playState = c.PLAY_FAILED;
        this.toString = function() {
            return "[Sound Default Sound Instance]"
        }
    }; null == createjs.proxy && (createjs.proxy = function() {
        throw "Proxy has been moved to an external file, and must be included separately.";
    }); a.init = function() {
        var b = window.navigator.userAgent;
        a.isFirefox = -1 < b.indexOf("Firefox");
        a.isOpera = null != window.opera;
        a.isChrome = -1 < b.indexOf("Chrome");
        a.isIOS = -1 < b.indexOf("iPod") || -1 < b.indexOf("iPhone") || -1 < b.indexOf("iPad");
        a.isAndroid = -1 < b.indexOf("Android");
        a.isBlackberry = -1 < b.indexOf("Blackberry")
    }; a.init(); createjs.Sound.BrowserDetect = a
})(); this.createjs = this.createjs || {}; (function() {
    function c() {
        this.init()
    }
    c.capabilities = null;
    c.isSupported = function() {
        var a = createjs.Sound.BrowserDetect.isIOS || createjs.Sound.BrowserDetect.isAndroid || createjs.Sound.BrowserDetect.isBlackberry;
        return "file:" != location.protocol || a || this.isFileXHRSupported() ? (c.generateCapabilities(), null == c.context ? !1 : !0) : !1
    };
    c.isFileXHRSupported = function() {
        var a = !0,
        b = new XMLHttpRequest;
        try {
            b.open("GET", "fail.fail", !1)
        } catch(c) {
            return a = !1
        }
        b.onerror = function() {
            a = !1
        };
        b.onload = function() {
            a = 404 == this.status || 200 == this.status || 0 == this.status && "" != this.response
        };
        try {
            b.send()
        } catch(d) {
            a = !1
        }
        return a
    };
    c.generateCapabilities = function() {
        if (null == c.capabilities) {
            var a = document.createElement("audio");
            if (null == a.canPlayType) return null;
            if (window.webkitAudioContext) c.context = new webkitAudioContext;
            else {
                if (!window.AudioContext) return null;
                c.context = new AudioContext
            }
            c.compatibilitySetUp();
            c.playEmptySound();
            c.capabilities = {
                panning: !0,
                volume: !0,
                tracks: -1
            };
            for (var b = createjs.Sound.SUPPORTED_EXTENSIONS,
            f = createjs.Sound.EXTENSION_MAP,
            d = 0,
            e = b.length; e > d; d++) {
                var g = b[d],
                k = f[g] || g;
                c.capabilities[g] = "no" != a.canPlayType("audio/" + g) && "" != a.canPlayType("audio/" + g) || "no" != a.canPlayType("audio/" + k) && "" != a.canPlayType("audio/" + k)
            }
            2 > c.context.destination.numberOfChannels && (c.capabilities.panning = !1);
            c.dynamicsCompressorNode = c.context.createDynamicsCompressor();
            c.dynamicsCompressorNode.connect(c.context.destination);
            c.gainNode = c.context.createGain();
            c.gainNode.connect(c.dynamicsCompressorNode)
        }
    };
    c.compatibilitySetUp = function() {
        if (!c.context.createGain) {
            c.context.createGain = c.context.createGainNode;
            var a = c.context.createBufferSource();
            a.__proto__.start = a.__proto__.noteGrainOn;
            a.__proto__.stop = a.__proto__.noteOff;
            this.panningModel = 0
        }
    };
    c.playEmptySound = function() {
        var a = this.context.createBuffer(1, 1, 22050),
        b = this.context.createBufferSource();
        b.buffer = a;
        b.connect(this.context.destination);
        b.start(0, 0, 0)
    };
    var b = c.prototype;
    b.capabilities = null;
    b.volume = 1;
    b.context = null;
    b.panningModel = "equalpower";
    b.dynamicsCompressorNode = null;
    b.gainNode = null;
    b.arrayBuffers = null;
    b.init = function() {
        this.capabilities = c.capabilities;
        this.arrayBuffers = {};
        this.context = c.context;
        this.gainNode = c.gainNode;
        this.dynamicsCompressorNode = c.dynamicsCompressorNode
    };
    b.register = function(a) {
        this.arrayBuffers[a] = !0;
        return {
            tag: new createjs.WebAudioPlugin.Loader(a, this)
        }
    };
    b.isPreloadStarted = function(a) {
        return null != this.arrayBuffers[a]
    };
    b.isPreloadComplete = function(a) {
        return ! (null == this.arrayBuffers[a] || 1 == this.arrayBuffers[a])
    };
    b.removeFromPreload = function(a) {
        delete this.arrayBuffers[a]
    };
    b.removeSound = function(a) {
        delete this.arrayBuffers[a]
    };
    b.removeAllSounds = function() {
        this.arrayBuffers = {}
    };
    b.addPreloadResults = function(a, b) {
        this.arrayBuffers[a] = b
    };
    b.handlePreloadComplete = function() {
        createjs.Sound.sendFileLoadEvent(this.src)
    };
    b.preload = function(a, b, c) {
        this.arrayBuffers[a] = !0;
        a = new createjs.WebAudioPlugin.Loader(a, this);
        a.onload = this.handlePreloadComplete;
        null != c && (a.src = c + a.src);
        a.load()
    };
    b.create = function(a) {
        return this.isPreloadStarted(a) || this.preload(a),
        new createjs.WebAudioPlugin.SoundInstance(a, this)
    };
    b.setVolume = function(a) {
        return this.volume = a,
        this.updateVolume(),
        !0
    };
    b.updateVolume = function() {
        var a = createjs.Sound.masterMute ? 0 : this.volume;
        a != this.gainNode.gain.value && (this.gainNode.gain.value = a)
    };
    b.getVolume = function() {
        return this.volume
    };
    b.setMute = function() {
        return this.updateVolume(),
        !0
    };
    b.toString = function() {
        return "[WebAudioPlugin]"
    };
    createjs.WebAudioPlugin = c
})(); (function() {
    function c(a, b) {
        this.init(a, b)
    }
    var b = c.prototype;
    b.src = null;
    b.uniqueId = -1;
    b.playState = null;
    b.owner = null;
    b.offset = 0;
    b.delay = 0;
    b._volume = 1;
    Object.defineProperty(b, "volume", {
        get: function() {
            return this._volume
        },
        set: function(a) {
            return null == Number(a) ? !1 : (a = Math.max(0, Math.min(1, a)), this._volume = a, this.updateVolume(), void 0)
        }
    });
    b._pan = 0;
    Object.defineProperty(b, "pan", {
        get: function() {
            return this._pan
        },
        set: function(a) {
            return this.owner.capabilities.panning && null != Number(a) ? (a = Math.max( - 1, Math.min(1, a)), this._pan = a, this.panNode.setPosition(a, 0, -0.5), void 0) : !1
        }
    });
    b.duration = 0;
    b.remainingLoops = 0;
    b.delayTimeoutId = null;
    b.soundCompleteTimeout = null;
    b.panNode = null;
    b.gainNode = null;
    b.sourceNode = null;
    b.sourceNodeNext = null;
    b.muted = !1;
    b.paused = !1;
    b.startTime = 0;
    b.addEventListener = null;
    b.removeEventListener = null;
    b.removeAllEventListeners = null;
    b.dispatchEvent = null;
    b.hasEventListener = null;
    b._listeners = null;
    b.endedHandler = null;
    b.readyHandler = null;
    b.stalledHandler = null;
    b.sendEvent = function(a) {
        a = new createjs.Event(a);
        this.dispatchEvent(a)
    };
    b.init = function(a, b) {
        this.owner = b;
        this.src = a;
        this.panNode = this.owner.context.createPanner();
        this.panNode.panningModel = this.owner.panningModel;
        this.gainNode = this.owner.context.createGain();
        this.gainNode.connect(this.panNode);
        this.owner.isPreloadComplete(this.src) && (this.duration = 1E3 * this.owner.arrayBuffers[this.src].duration);
        this.endedHandler = createjs.proxy(this.handleSoundComplete, this);
        this.readyHandler = createjs.proxy(this.handleSoundReady, this);
        this.stalledHandler = createjs.proxy(this.handleSoundStalled, this)
    };
    b.cleanUp = function() {
        this.sourceNode && this.sourceNode.playbackState != this.sourceNode.UNSCHEDULED_STATE && (this.sourceNode = this.cleanUpAudioNode(this.sourceNode), this.sourceNodeNext = this.cleanUpAudioNode(this.sourceNodeNext));
        0 != this.panNode.numberOfOutputs && this.panNode.disconnect(0);
        clearTimeout(this.delayTimeoutId);
        clearTimeout(this.soundCompleteTimeout);
        this.startTime = 0;
        null != window.createjs && createjs.Sound.playFinished(this)
    };
    b.cleanUpAudioNode = function(a) {
        return a && (a.stop(0), a.disconnect(this.gainNode), a = null),
        a
    };
    b.interrupt = function() {
        this.playState = createjs.Sound.PLAY_INTERRUPTED;
        this.cleanUp();
        this.paused = !1;
        this.sendEvent("interrupted")
    };
    b.handleSoundStalled = function() {
        this.sendEvent("failed")
    };
    b.handleSoundReady = function() {
        if (null != window.createjs) {
            if (1E3 * this.offset > this.getDuration()) return this.playFailed(),
            void 0;
            0 > this.offset && (this.offset = 0);
            this.playState = createjs.Sound.PLAY_SUCCEEDED;
            this.paused = !1;
            this.panNode.connect(this.owner.gainNode);
            var a = this.owner.arrayBuffers[this.src].duration;
            this.sourceNode = this.createAndPlayAudioNode(this.owner.context.currentTime - a, this.offset);
            this.duration = 1E3 * a;
            this.startTime = this.sourceNode.startTime - this.offset;
            this.soundCompleteTimeout = setTimeout(this.endedHandler, 1E3 * (a - this.offset));
            0 != this.remainingLoops && (this.sourceNodeNext = this.createAndPlayAudioNode(this.startTime, 0))
        }
    };
    b.createAndPlayAudioNode = function(a, b) {
        var c = this.owner.context.createBufferSource();
        return c.buffer = this.owner.arrayBuffers[this.src],
        c.connect(this.gainNode),
        this.owner.context.currentTime,
        c.startTime = a + c.buffer.duration,
        c.start(c.startTime, b, c.buffer.duration - b),
        c
    };
    b.play = function(a, b, c, d, e, g) {
        this.cleanUp();
        createjs.Sound.playInstance(this, a, b, c, d, e, g)
    };
    b.beginPlaying = function(a, b, c, d) {
        return null != window.createjs && this.src ? (this.offset = a / 1E3, this.remainingLoops = b, this.volume = c, this.pan = d, this.owner.isPreloadComplete(this.src) ? (this.handleSoundReady(null), this.sendEvent("succeeded"), 1) : (this.playFailed(), void 0)) : void 0
    };
    b.pause = function() {
        return this.paused || this.playState != createjs.Sound.PLAY_SUCCEEDED ? !1 : (this.paused = !0, this.offset = this.owner.context.currentTime - this.startTime, this.cleanUpAudioNode(this.sourceNode), this.cleanUpAudioNode(this.sourceNodeNext), 0 != this.panNode.numberOfOutputs && this.panNode.disconnect(), clearTimeout(this.delayTimeoutId), clearTimeout(this.soundCompleteTimeout), !0)
    };
    b.resume = function() {
        return this.paused ? (this.handleSoundReady(null), !0) : !1
    };
    b.stop = function() {
        return this.playState = createjs.Sound.PLAY_FINISHED,
        this.cleanUp(),
        this.offset = 0,
        !0
    };
    b.setVolume = function(a) {
        return this.volume = a,
        !0
    };
    b.updateVolume = function() {
        var a = this.muted ? 0 : this._volume;
        return a != this.gainNode.gain.value ? (this.gainNode.gain.value = a, !0) : !1
    };
    b.getVolume = function() {
        return this.volume
    };
    b.setMute = function(a) {
        return null == a || void 0 == a ? !1 : (this.muted = a, this.updateVolume(), !0)
    };
    b.getMute = function() {
        return this.muted
    };
    b.setPan = function(a) {
        return this.pan = a,
        this.pan != a ? !1 : void 0
    };
    b.getPan = function() {
        return this.pan
    };
    b.getPosition = function() {
        return 1E3 * (this.paused || null == this.sourceNode ? this.offset: this.owner.context.currentTime - this.startTime)
    };
    b.setPosition = function(a) {
        return this.offset = a / 1E3,
        this.sourceNode && this.sourceNode.playbackState != this.sourceNode.UNSCHEDULED_STATE && (this.cleanUpAudioNode(this.sourceNode), this.cleanUpAudioNode(this.sourceNodeNext), clearTimeout(this.soundCompleteTimeout)),
        this.paused || this.playState != createjs.Sound.PLAY_SUCCEEDED || this.handleSoundReady(null),
        !0
    };
    b.getDuration = function() {
        return this.duration
    };
    b.handleSoundComplete = function() {
        return this.offset = 0,
        0 != this.remainingLoops ? (this.remainingLoops--, this.sourceNodeNext ? (this.cleanUpAudioNode(this.sourceNode), this.sourceNode = this.sourceNodeNext, this.startTime = this.sourceNode.startTime, this.sourceNodeNext = this.createAndPlayAudioNode(this.startTime, 0), this.soundCompleteTimeout = setTimeout(this.endedHandler, this.duration)) : this.handleSoundReady(null), this.sendEvent("loop"), void 0) : (null != window.createjs && (this.playState = createjs.Sound.PLAY_FINISHED, this.cleanUp(), this.sendEvent("complete")), void 0)
    };
    b.playFailed = function() {
        null != window.createjs && (this.playState = createjs.Sound.PLAY_FAILED, this.cleanUp(), this.sendEvent("failed"))
    };
    b.toString = function() {
        return "[WebAudioPlugin SoundInstance]"
    };
    createjs.EventDispatcher.initialize(c.prototype);
    createjs.WebAudioPlugin.SoundInstance = c
})(); (function() {
    function c(a, b) {
        this.init(a, b)
    }
    var b = c.prototype;
    b.request = null;
    b.owner = null;
    b.progress = -1;
    b.src = null;
    b.originalSrc = null;
    b.result = null;
    b.onload = null;
    b.onprogress = null;
    b.onError = null;
    b.init = function(a, b) {
        this.originalSrc = this.src = a;
        this.owner = b
    };
    b.load = function(a) {
        null != a && (this.src = a);
        this.request = new XMLHttpRequest;
        this.request.open("GET", this.src, !0);
        this.request.responseType = "arraybuffer";
        this.request.onload = createjs.proxy(this.handleLoad, this);
        this.request.onError = createjs.proxy(this.handleError, this);
        this.request.onprogress = createjs.proxy(this.handleProgress, this);
        this.request.send()
    };
    b.handleProgress = function(a, b) {
        this.progress = a / b;
        null != this.onprogress && this.onprogress({
            loaded: a,
            total: b,
            progress: this.progress
        })
    };
    b.handleLoad = function() {
        this.owner.context.decodeAudioData(this.request.response, createjs.proxy(this.handleAudioDecoded, this), createjs.proxy(this.handleError, this))
    };
    b.handleAudioDecoded = function(a) {
        this.progress = 1;
        this.result = a;
        this.src = this.originalSrc;
        this.owner.addPreloadResults(this.src, this.result);
        this.onload && this.onload()
    };
    b.handleError = function(a) {
        this.owner.removeSound(this.src);
        this.onerror && this.onerror(a)
    };
    b.toString = function() {
        return "[WebAudioPlugin Loader]"
    };
    createjs.WebAudioPlugin.Loader = c
})(); this.createjs = this.createjs || {}; (function() {
    function c() {
        this.init()
    }
    c.MAX_INSTANCES = 30;
    c.capabilities = null;
    c.AUDIO_READY = "canplaythrough";
    c.AUDIO_ENDED = "ended";
    c.AUDIO_SEEKED = "seeked";
    c.AUDIO_ERROR = "error";
    c.AUDIO_STALLED = "stalled";
    c.enableIOS = !1;
    c.isSupported = function() {
        if (createjs.Sound.BrowserDetect.isIOS && !c.enableIOS) return ! 1;
        c.generateCapabilities();
        return null == c.tag || null == c.capabilities ? !1 : !0
    };
    c.generateCapabilities = function() {
        if (null == c.capabilities) {
            var a = c.tag = document.createElement("audio");
            if (null == a.canPlayType) return null;
            c.capabilities = {
                panning: !0,
                volume: !0,
                tracks: -1
            };
            for (var b = createjs.Sound.SUPPORTED_EXTENSIONS,
            f = createjs.Sound.EXTENSION_MAP,
            d = 0,
            e = b.length; e > d; d++) {
                var g = b[d],
                k = f[g] || g;
                c.capabilities[g] = "no" != a.canPlayType("audio/" + g) && "" != a.canPlayType("audio/" + g) || "no" != a.canPlayType("audio/" + k) && "" != a.canPlayType("audio/" + k)
            }
        }
    };
    var b = c.prototype;
    b.capabilities = null;
    b.audioSources = null;
    b.defaultNumChannels = 2;
    b.loadedHandler = null;
    b.init = function() {
        this.capabilities = c.capabilities;
        this.audioSources = {}
    };
    b.register = function(a, b) {
        this.audioSources[a] = !0;
        for (var c = createjs.HTMLAudioPlugin.TagPool.get(a), d = null, e = b || this.defaultNumChannels, g = 0; e > g; g++) d = this.createTag(a),
        c.add(d);
        if (d.id = a, this.loadedHandler = createjs.proxy(this.handleTagLoad, this), d.addEventListener && d.addEventListener("canplaythrough", this.loadedHandler), null == d.onreadystatechange) d.onreadystatechange = this.loadedHandler;
        else {
            var k = d.onreadystatechange;
            d.onreadystatechange = function() {
                k();
                this.loadedHandler()
            }
        }
        return {
            tag: d,
            numChannels: e
        }
    };
    b.handleTagLoad = function(a) {
        a.target.removeEventListener && a.target.removeEventListener("canplaythrough", this.loadedHandler);
        a.target.onreadystatechange = null;
        a.target.src != a.target.id && createjs.HTMLAudioPlugin.TagPool.checkSrc(a.target.id)
    };
    b.createTag = function(a) {
        var b = document.createElement("audio");
        return b.autoplay = !1,
        b.preload = "none",
        b.src = a,
        b
    };
    b.removeSound = function(a) {
        delete this.audioSources[a];
        createjs.HTMLAudioPlugin.TagPool.remove(a)
    };
    b.removeAllSounds = function() {
        this.audioSources = {};
        createjs.HTMLAudioPlugin.TagPool.removeAll()
    };
    b.create = function(a) {
        if (!this.isPreloadStarted(a)) {
            var b = createjs.HTMLAudioPlugin.TagPool.get(a),
            c = this.createTag(a);
            c.id = a;
            b.add(c);
            this.preload(a, {
                tag: c
            })
        }
        return new createjs.HTMLAudioPlugin.SoundInstance(a, this)
    };
    b.isPreloadStarted = function(a) {
        return null != this.audioSources[a]
    };
    b.preload = function(a, b, c) {
        this.audioSources[a] = !0;
        null != c && (b.tag.src = c + a);
        new createjs.HTMLAudioPlugin.Loader(a, b.tag)
    };
    b.toString = function() {
        return "[HTMLAudioPlugin]"
    };
    createjs.HTMLAudioPlugin = c
})(); (function() {
    function c(a, b) {
        this.init(a, b)
    }
    var b = c.prototype;
    b.src = null;
    b.uniqueId = -1;
    b.playState = null;
    b.owner = null;
    b.loaded = !1;
    b.offset = 0;
    b.delay = 0;
    b._volume = 1;
    Object.defineProperty(b, "volume", {
        get: function() {
            return this._volume
        },
        set: function(a) {
            null != Number(a) && (a = Math.max(0, Math.min(1, a)), this._volume = a, this.updateVolume())
        }
    });
    b.pan = 0;
    b.duration = 0;
    b.remainingLoops = 0;
    b.delayTimeoutId = null;
    b.tag = null;
    b.muted = !1;
    b.paused = !1;
    b.addEventListener = null;
    b.removeEventListener = null;
    b.removeAllEventListeners = null;
    b.dispatchEvent = null;
    b.hasEventListener = null;
    b._listeners = null;
    b.endedHandler = null;
    b.readyHandler = null;
    b.stalledHandler = null;
    b.loopHandler = null;
    b.init = function(a, b) {
        this.src = a;
        this.owner = b;
        this.endedHandler = createjs.proxy(this.handleSoundComplete, this);
        this.readyHandler = createjs.proxy(this.handleSoundReady, this);
        this.stalledHandler = createjs.proxy(this.handleSoundStalled, this);
        this.loopHandler = createjs.proxy(this.handleSoundLoop, this)
    };
    b.sendEvent = function(a) {
        a = new createjs.Event(a);
        this.dispatchEvent(a)
    };
    b.cleanUp = function() {
        var a = this.tag;
        if (null != a) {
            a.pause();
            a.removeEventListener(createjs.HTMLAudioPlugin.AUDIO_ENDED, this.endedHandler, !1);
            a.removeEventListener(createjs.HTMLAudioPlugin.AUDIO_READY, this.readyHandler, !1);
            a.removeEventListener(createjs.HTMLAudioPlugin.AUDIO_SEEKED, this.loopHandler, !1);
            try {
                a.currentTime = 0
            } catch(b) {}
            createjs.HTMLAudioPlugin.TagPool.setInstance(this.src, a);
            this.tag = null
        }
        clearTimeout(this.delayTimeoutId);
        null != window.createjs && createjs.Sound.playFinished(this)
    };
    b.interrupt = function() {
        null != this.tag && (this.playState = createjs.Sound.PLAY_INTERRUPTED, this.cleanUp(), this.paused = !1, this.sendEvent("interrupted"))
    };
    b.play = function(a, b, c, d, e, g) {
        this.cleanUp();
        createjs.Sound.playInstance(this, a, b, c, d, e, g)
    };
    b.beginPlaying = function(a, b, c, d) {
        if (null == window.createjs) return - 1;
        var e = this.tag = createjs.HTMLAudioPlugin.TagPool.getInstance(this.src);
        return null == e ? (this.playFailed(), -1) : (e.addEventListener(createjs.HTMLAudioPlugin.AUDIO_ENDED, this.endedHandler, !1), this.offset = a, this.volume = c, this.pan = d, this.updateVolume(), this.remainingLoops = b, 4 !== e.readyState ? (e.addEventListener(createjs.HTMLAudioPlugin.AUDIO_READY, this.readyHandler, !1), e.addEventListener(createjs.HTMLAudioPlugin.AUDIO_STALLED, this.stalledHandler, !1), e.preload = "auto", e.load()) : this.handleSoundReady(null), this.sendEvent("succeeded"), 1)
    };
    b.handleSoundStalled = function() {
        this.cleanUp();
        this.sendEvent("failed")
    };
    b.handleSoundReady = function() {
        if (null != window.createjs) {
            if (this.duration = 1E3 * this.tag.duration, this.playState = createjs.Sound.PLAY_SUCCEEDED, this.paused = !1, this.tag.removeEventListener(createjs.HTMLAudioPlugin.AUDIO_READY, this.readyHandler, !1), this.offset >= this.getDuration()) return this.playFailed(),
            void 0;
            0 < this.offset && (this.tag.currentTime = 0.0010 * this.offset); - 1 == this.remainingLoops && (this.tag.loop = !0);
            0 != this.remainingLoops && (this.tag.addEventListener(createjs.HTMLAudioPlugin.AUDIO_SEEKED, this.loopHandler, !1), this.tag.loop = !0);
            this.tag.play()
        }
    };
    b.pause = function() {
        return this.paused || this.playState != createjs.Sound.PLAY_SUCCEEDED || null == this.tag ? !1 : (this.paused = !0, this.tag.pause(), clearTimeout(this.delayTimeoutId), !0)
    };
    b.resume = function() {
        return this.paused && null != this.tag ? (this.paused = !1, this.tag.play(), !0) : !1
    };
    b.stop = function() {
        return this.offset = 0,
        this.pause(),
        this.playState = createjs.Sound.PLAY_FINISHED,
        this.cleanUp(),
        !0
    };
    b.setMasterVolume = function() {
        return this.updateVolume(),
        !0
    };
    b.setVolume = function(a) {
        return this.volume = a,
        !0
    };
    b.updateVolume = function() {
        if (null != this.tag) {
            var a = this.muted || createjs.Sound.masterMute ? 0 : this._volume * createjs.Sound.masterVolume;
            return a != this.tag.volume && (this.tag.volume = a),
            !0
        }
        return ! 1
    };
    b.getVolume = function() {
        return this.volume
    };
    b.setMasterMute = function() {
        return this.updateVolume(),
        !0
    };
    b.setMute = function(a) {
        return null == a || void 0 == a ? !1 : (this.muted = a, this.updateVolume(), !0)
    };
    b.getMute = function() {
        return this.muted
    };
    b.setPan = function() {
        return ! 1
    };
    b.getPan = function() {
        return 0
    };
    b.getPosition = function() {
        return null == this.tag ? this.offset: 1E3 * this.tag.currentTime
    };
    b.setPosition = function(a) {
        if (null == this.tag) this.offset = a;
        else {
            this.tag.removeEventListener(createjs.HTMLAudioPlugin.AUDIO_SEEKED, this.loopHandler, !1);
            try {
                this.tag.currentTime = 0.0010 * a
            } catch(b) {
                return ! 1
            }
            this.tag.addEventListener(createjs.HTMLAudioPlugin.AUDIO_SEEKED, this.loopHandler, !1)
        }
        return ! 0
    };
    b.getDuration = function() {
        return this.duration
    };
    b.handleSoundComplete = function() {
        this.offset = 0;
        null != window.createjs && (this.playState = createjs.Sound.PLAY_FINISHED, this.cleanUp(), this.sendEvent("complete"))
    };
    b.handleSoundLoop = function() {
        this.offset = 0;
        this.remainingLoops--;
        0 == this.remainingLoops && (this.tag.loop = !1, this.tag.removeEventListener(createjs.HTMLAudioPlugin.AUDIO_SEEKED, this.loopHandler, !1));

        this.sendEvent("loop")
    };
    b.playFailed = function() {
        null != window.createjs && (this.playState = createjs.Sound.PLAY_FAILED, this.cleanUp(), this.sendEvent("failed"))
    };
    b.toString = function() {
        return "[HTMLAudioPlugin SoundInstance]"
    };
    createjs.EventDispatcher.initialize(c.prototype);
    createjs.HTMLAudioPlugin.SoundInstance = c
})(); (function() {
    function c(a, b) {
        this.init(a, b)
    }
    var b = c.prototype;
    b.src = null;
    b.tag = null;
    b.preloadTimer = null;
    b.loadedHandler = null;
    b.init = function(a, b) {
        if (this.src = a, this.tag = b, this.preloadTimer = setInterval(createjs.proxy(this.preloadTick, this), 200), this.loadedHandler = createjs.proxy(this.sendLoadedEvent, this), this.tag.addEventListener && this.tag.addEventListener("canplaythrough", this.loadedHandler), null == this.tag.onreadystatechange) this.tag.onreadystatechange = createjs.proxy(this.sendLoadedEvent, this);
        else {
            var c = this.tag.onreadystatechange;
            this.tag.onreadystatechange = function() {
                c();
                this.tag.onreadystatechange = createjs.proxy(this.sendLoadedEvent, this)
            }
        }
        this.tag.preload = "auto";
        this.tag.load()
    };
    b.preloadTick = function() {
        var a = this.tag.buffered,
        b = this.tag.duration;
        0 < a.length && a.end(0) >= b - 1 && this.handleTagLoaded()
    };
    b.handleTagLoaded = function() {
        clearInterval(this.preloadTimer)
    };
    b.sendLoadedEvent = function() {
        this.tag.removeEventListener && this.tag.removeEventListener("canplaythrough", this.loadedHandler);
        this.tag.onreadystatechange = null;
        createjs.Sound.sendFileLoadEvent(this.src)
    };
    b.toString = function() {
        return "[HTMLAudioPlugin Loader]"
    };
    createjs.HTMLAudioPlugin.Loader = c
})(); (function() {
    function c(a) {
        this.init(a)
    }
    c.tags = {};
    c.get = function(a) {
        var b = c.tags[a];
        return null == b && (b = c.tags[a] = new c(a)),
        b
    };
    c.remove = function(a) {
        var b = c.tags[a];
        return null == b ? !1 : (b.removeAll(), delete c.tags[a], !0)
    };
    c.removeAll = function() {
        for (var a in c.tags) c.tags[a].removeAll();
        c.tags = {}
    };
    c.getInstance = function(a) {
        a = c.tags[a];
        return null == a ? null: a.get()
    };
    c.setInstance = function(a, b) {
        var f = c.tags[a];
        return null == f ? null: f.set(b)
    };
    c.checkSrc = function(a) {
        a = c.tags[a];
        return null == a ? null: (a.checkSrcChange(), void 0)
    };
    var b = c.prototype;
    b.src = null;
    b.length = 0;
    b.available = 0;
    b.tags = null;
    b.init = function(a) {
        this.src = a;
        this.tags = []
    };
    b.add = function(a) {
        this.tags.push(a);
        this.length++;
        this.available++
    };
    b.removeAll = function() {
        for (; this.length--;) delete this.tags[this.length];
        this.src = null;
        this.tags.length = 0
    };
    b.get = function() {
        if (0 == this.tags.length) return null;
        this.available = this.tags.length;
        var a = this.tags.pop();
        return null == a.parentNode && document.body.appendChild(a),
        a
    };
    b.set = function(a) { - 1 == createjs.indexOf(this.tags, a) && this.tags.push(a);
        this.available = this.tags.length
    };
    b.checkSrcChange = function() {
        for (var a = this.tags.length - 1,
        b = this.tags[a].src; a--;) this.tags[a].src = b
    };
    b.toString = function() {
        return "[HTMLAudioPlugin TagPool]"
    };
    createjs.HTMLAudioPlugin.TagPool = c
})(); !
function() {
    function c(a, b) {
        if (a || (a = {}), !b) return a;
        for (var c in b)"undefined" == typeof a[c] && (a[c] = b[c]);
        return a
    }
    function b(a, b) {
        if (a) throw new RangeError(b);
    }
    var a = function(a) {
        void 0 !== a && ("function" == typeof a ? this.random = a: this.seed = a);
        "undefined" == typeof this.random && (this.mt = this.mersenne_twister(a), this.random = function() {
            return this.mt.random(this.seed)
        })
    };
    a.prototype.bool = function(a) {
        return a = c(a, {
            likelihood: 50
        }),
        b(0 > a.likelihood || 100 < a.likelihood, "Chance: Likelihood accepts values from 0 to 100."),
        100 * this.random() < a.likelihood
    };
    a.prototype.character = function(a) {
        a = c(a);
        var d, f;
        return b(a.alpha && a.symbols, "Chance: Cannot specify both alpha and symbols."),
        d = "lower" === a.casing ? "abcdefghijklmnopqrstuvwxyz": "upper" === a.casing ? "ABCDEFGHIJKLMNOPQRSTUVWXYZ": "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ",
        f = a.pool ? a.pool: a.alpha ? d: a.symbols ? "!@#$%^&*()[]": d + "0123456789!@#$%^&*()[]",
        f.charAt(this.natural({
            max: f.length - 1
        }))
    };
    a.prototype.floating = function(a) {
        a = c(a, {
            fixed: 4
        });
        var d = Math.pow(10, a.fixed);
        b(a.fixed && a.precision, "Chance: Cannot specify both fixed and precision.");
        var f = 9007199254740992 / d,
        h = -f;
        b(a.min && a.fixed && a.min < h, "Chance: Min specified is out of range with fixed. Min should be, at least, " + h);
        b(a.max && a.fixed && a.max > f, "Chance: Max specified is out of range with fixed. Max should be, at most, " + f);
        a = c(a, {
            min: h,
            max: f
        });
        a = (this.integer({
            min: a.min * d,
            max: a.max * d
        }) / d).toFixed(a.fixed);
        return parseFloat(a)
    };
    a.prototype.integer = function(a) {
        var b, d;
        a = c(a, {
            min: -9007199254740992,
            max: 9007199254740992
        });
        d = Math.max(Math.abs(a.min), Math.abs(a.max));
        do b = this.natural({
            max: d
        }),
        b = this.bool() ? b: -1 * b;
        while (b < a.min || b > a.max);
        return b
    };
    a.prototype.natural = function(a) {
        return a = c(a, {
            min: 0,
            max: 9007199254740992
        }),
        b(a.min > a.max, "Chance: Min cannot be greater than Max."),
        Math.floor(this.random() * (a.max - a.min + 1) + a.min)
    };
    a.prototype.normal = function(a) {
        a = c(a, {
            mean: 0,
            dev: 1
        });
        var b, d, f = a.mean,
        h = a.dev;
        do a = 2 * this.random() - 1,
        b = 2 * this.random() - 1,
        b = a * a + b * b;
        while (1 <= b);
        return d = a * Math.sqrt( - 2 * Math.log(b) / b),
        h * d + f
    };
    a.prototype.string = function(a) {
        a = c(a);
        var b = a.length || this.natural({
            min: 5,
            max: 20
        }),
        d = "";
        a = a.pool;
        for (var f = 0; b > f; f++) d += this.character({
            pool: a
        });
        return d
    };
    a.prototype.capitalize = function(a) {
        return a.charAt(0).toUpperCase() + a.substr(1)
    };
    a.prototype.mixin = function(b) {
        for (var c in b) a.prototype[c] = b[c];
        return this
    };
    a.prototype.pick = function(a, b) {
        return b && 1 !== b ? this.shuffle(a).slice(0, b) : a[this.natural({
            max: a.length - 1
        })]
    };
    a.prototype.shuffle = function(a) {
        a = a.slice(0);
        for (var b = [], c = 0, d = Number(a.length), f = 0; d > f; f++) c = this.natural({
            max: a.length - 1
        }),
        b[f] = a[c],
        a.splice(c, 1);
        return b
    };
    a.prototype.paragraph = function(a) {
        a = c(a);
        a = a.sentences || this.natural({
            min: 3,
            max: 7
        });
        for (var b = [], d = 0; a > d; d++) b.push(this.sentence());
        return b.join(" ")
    };
    a.prototype.sentence = function(a) {
        a = c(a);
        var b;
        a = a.words || this.natural({
            min: 12,
            max: 18
        });
        for (var d = [], f = 0; a > f; f++) d.push(this.word());
        return b = d.join(" "),
        this.capitalize(b) + "."
    };
    a.prototype.syllable = function(a) {
        a = c(a);
        var b;
        a = a.length || this.natural({
            min: 2,
            max: 3
        });
        for (var d = "",
        f = 0; a > f; f++) b = 0 === f ? this.character({
            pool: "bcdfghjklmnprstvwzaeiou"
        }) : -1 === "bcdfghjklmnprstvwz".indexOf(b) ? this.character({
            pool: "bcdfghjklmnprstvwz"
        }) : this.character({
            pool: "aeiou"
        }),
        d += b;
        return d
    };
    a.prototype.word = function(a) {
        a = c(a);
        b(a.syllables && a.length, "Chance: Cannot specify both syllables AND length.");
        var d = a.syllables || this.natural({
            min: 1,
            max: 3
        }),
        f = "";
        if (a.length) {
            do f += this.syllable();
            while (f.length < a.length);
            f = f.substring(0, a.length)
        } else for (a = 0; d > a; a++) f += this.syllable();
        return f
    };
    a.prototype.age = function(a) {
        a = c(a);
        switch (a.type) {
        case "child":
            a = this.natural({
                min: 1,
                max: 12
            });
            break;
        case "teen":
            a = this.natural({
                min: 13,
                max: 19
            });
            break;
        case "adult":
            a = this.natural({
                min: 18,
                max: 120
            });
            break;
        case "senior":
            a = this.natural({
                min: 65,
                max: 120
            });
            break;
        default:
            a = this.natural({
                min: 1,
                max: 120
            })
        }
        return a
    };
    a.prototype.birthday = function(a) {
        return a = c(a, {
            year: (new Date).getFullYear() - this.age(a)
        }),
        this.date(a)
    };
    var h = "Sophia Emma Isabella Jacob Mason Ethan Noah Olivia William Liam Jayden Michael Ava Alexander Aiden Daniel Matthew Elijah Emily James Anthony Benjamin Abigail Joshua Andrew David Joseph Logan Jackson Mia Christopher Gabriel Madison Samuel Ryan Lucas John Nathan Isaac Dylan Caleb Elizabeth Chloe Christian Landon Jonathan Carter Ella Luke Owen Brayden Avery Gavin Wyatt Addison Isaiah Aubrey Henry Eli Hunter Lily Jack Natalie Evan Sofia Jordan Nicholas Tyler Aaron Charlotte Zoey Jeremiah Julian Cameron Grace Hannah Amelia Harper Levi Lillian Brandon Angel Austin Connor Adrian Robert Samantha Charles Evelyn Victoria Thomas Brooklyn Sebastian Zoe Colton Jaxon Layla Kevin Zachary Ayden Dominic Blake Jose Hailey Oliver Justin Bentley Leah Jason Chase Ian Kaylee Anna Aaliyah Gabriella Josiah Allison Parker Xavier Nevaeh Alexis Adam Audrey Cooper Savannah Sarah Alyssa Claire Taylor Riley Camila Nathaniel Arianna Ashley Grayson Jace Brianna Carson Sophie Peyton Nolan Tristan Luis Brody Bella Khloe Genesis Alexa Juan Hudson Serenity Kylie Aubree Scarlett Bryson Carlos Stella Maya Easton Katherine Julia Damian Alex Kayden Ryder Lucy Madelyn Jesus Cole Autumn Makayla Kayla Mackenzie Micah Vincent Max Lauren Jaxson Gianna Eric Ariana Asher Hayden Faith Alexandra Melanie Sydney Bailey Caroline Naomi Morgan Kennedy Ellie Jasmine Eva Skylar Diego Kimberly Violet Molly Miles Steven Aria Ivan Jocelyn Trinity Elias Aidan Maxwell London Bryce Lydia Madeline Antonio Giovanni Reagan Timothy Bryan Piper Andrea Santiago Annabelle Maria Colin Richard Braxton Kaleb Brooke Kyle Kaden Preston Payton Miguel Jonah Paisley Paige Lincoln Ruby Nora Riley Mariah Leo Victor Brady Jeremy Mateo Brian Jaden Ashton Patrick Rylee Declan Lilly Brielle Sean Joel Gael Sawyer Alejandro Jade Marcus Destiny Leonardo Jesse Caden Jake Kaiden Nicole Mila Wesley Kendall Liliana Camden Kaitlyn Natalia Sadie Edward Brantley Jordyn Roman Vanessa Mary Mya Penelope Isabelle Alice Axel Silas Jude Grant Reese Gabrielle Hadley Katelyn Angelina Rachel Isabel Eleanor Cayden Emmanuel George Clara Brooklynn Jessica Maddox Malachi Bradley Alan Weston Elena Gage Aliyah Vivian Laila Sara Amy Devin Eliana Greyson Lyla Juliana Kenneth Mark Oscar Tanner Rylan Valeria Adriana Nicolas Makenzie Harrison Elise Mckenzie Derek Quinn Delilah Peyton Ezra Cora Kylee Tucker Emmett Avery Cody Rebecca Gracie Izabella Calvin Andres Jorge Abel Paul Abraham Kai Josephine Alaina Michelle Jennifer Collin Theodore Ezekiel Eden Omar Jayce Valentina Conner Bennett Aurora Catherine Stephanie Trevor Valerie Eduardo Peter Maximus Jayla Jaiden Willow Jameson Seth Daisy Alana Melody Hazel Kingston Summer Melissa Javier Margaret Travis Kinsley Kinley Garrett Everett Ariel Lila Graham Giselle Ryleigh Xander Haley Julianna Ivy Alivia Cristian Brynn Damien Ryker Griffin Keira Daniela Aniyah Angela Kate Londyn Corbin Myles Hayden Harmony Adalyn Luca Zane Francisco Ricardo Alexis Stephen Zayden Megan Allie Gabriela Iker Drake Alayna Lukas Presley Charlie Spencer Zion Erick Jenna Josue Alexandria Ashlyn Adrianna Jada Jeffrey Trenton Fiona Chance Norah Paxton Elliot Emery Fernando Maci Miranda Keegan Landen Ximena Amaya Manuel Amir Shane Cecilia Raymond Andre Ana Shelby Katie Hope Callie Jordan Luna Leilani Eliza Mckenna Angel Genevieve Makenna Isla Lola Danielle Chelsea Leila Tessa Adelyn Camille Mikayla Adeline Adalynn Sienna Esther Jacqueline Emerson Arabella Maggie Athena Lucia Lexi Ayla".split(" ");
    a.prototype.first = function() {
        return this.pick(h)
    };
    a.prototype.gender = function() {
        return this.pick(["Male", "Female"])
    };
    var f = "Smith Johnson Williams Jones Brown Davis Miller Wilson Moore Taylor Anderson Thomas Jackson White Harris Martin Thompson Garcia Martinez Robinson Clark Rodriguez Lewis Lee Walker Hall Allen Young Hernandez King Wright Lopez Hill Scott Green Adams Baker Gonzalez Nelson Carter Mitchell Perez Roberts Turner Phillips Campbell Parker Evans Edwards Collins Stewart Sanchez Morris Rogers Reed Cook Morgan Bell Murphy Bailey Rivera Cooper Richardson Cox Howard Ward Torres Peterson Gray Ramirez James Watson Brooks Kelly Sanders Price Bennett Wood Barnes Ross Henderson Coleman Jenkins Perry Powell Long Patterson Hughes Flores Washington Butler Simmons Foster Gonzales Bryant Alexander Russell Griffin Diaz Hayes Myers Ford Hamilton Graham Sullivan Wallace Woods Cole West Jordan Owens Reynolds Fisher Ellis Harrison Gibson McDonald Cruz Marshall Ortiz Gomez Murray Freeman Wells Webb Simpson Stevens Tucker Porter Hunter Hicks Crawford Henry Boyd Mason Morales Kennedy Warren Dixon Ramos Reyes Burns Gordon Shaw Holmes Rice Robertson Hunt Black Daniels Palmer Mills Nichols Grant Knight Ferguson Rose Stone Hawkins Dunn Perkins Hudson Spencer Gardner Stephens Payne Pierce Berry Matthews Arnold Wagner Willis Ray Watkins Olson Carroll Duncan Snyder Hart Cunningham Bradley Lane Andrews Ruiz Harper Fox Riley Armstrong Carpenter Weaver Greene Lawrence Elliott Chavez Sims Austin Peters Kelley Franklin Lawson Fields Gutierrez Ryan Schmidt Carr Vasquez Castillo Wheeler Chapman Oliver Montgomery Richards Williamson Johnston Banks Meyer Bishop McCoy Howell Alvarez Morrison Hansen Fernandez Garza Harvey Little Burton Stanley Nguyen George Jacobs Reid Kim Fuller Lynch Dean Gilbert Garrett Romero Welch Larson Frazier Burke Hanson Day Mendoza Moreno Bowman Medina Fowler Brewer Hoffman Carlson Silva Pearson Holland Douglas Fleming Jensen Vargas Byrd Davidson Hopkins May Terry Herrera Wade Soto Walters Curtis Neal Caldwell Lowe Jennings Barnett Graves Jimenez Horton Shelton Barrett Obrien Castro Sutton Gregory McKinney Lucas Miles Craig Rodriquez Chambers Holt Lambert Fletcher Watts Bates Hale Rhodes Pena Beck Newman Haynes McDaniel Mendez Bush Vaughn Parks Dawson Santiago Norris Hardy Love Steele Curry Powers Schultz Barker Guzman Page Munoz Ball Keller Chandler Weber Leonard Walsh Lyons Ramsey Wolfe Schneider Mullins Benson Sharp Bowen Daniel Barber Cummings Hines Baldwin Griffith Valdez Hubbard Salazar Reeves Warner Stevenson Burgess Santos Tate Cross Garner Mann Mack Moss Thornton Dennis McGee Farmer Delgado Aguilar Vega Glover Manning Cohen Harmon Rodgers Robbins Newton Todd Blair Higgins Ingram Reese Cannon Strickland Townsend Potter Goodwin Walton Rowe Hampton Ortega Patton Swanson Joseph Francis Goodman Maldonado Yates Becker Erickson Hodges Rios Conner Adkins Webster Norman Malone Hammond Flowers Cobb Moody Quinn Blake Maxwell Pope Floyd Osborne Paul McCarthy Guerrero Lindsey Estrada Sandoval Gibbs Tyler Gross Fitzgerald Stokes Doyle Sherman Saunders Wise Colon Gill Alvarado Greer Padilla Simon Waters Nunez Ballard Schwartz McBride Houston Christensen Klein Pratt Briggs Parsons McLaughlin Zimmerman French Buchanan Moran Copeland Roy Pittman Brady McCormick Holloway Brock Poole Frank Logan Owen Bass Marsh Drake Wong Jefferson Park Morton Abbott Sparks Patrick Norton Huff Clayton Massey Lloyd Figueroa Carson Bowers Roberson Barton Tran Lamb Harrington Casey Boone Cortez Clarke Mathis Singleton Wilkins Cain Bryan Underwood Hogan McKenzie Collier Luna Phelps McGuire Allison Bridges Wilkerson Nash Summers Atkins".split(" ");
    a.prototype.last = function() {
        return this.pick(f)
    };
    a.prototype.name = function(a) {
        a = c(a);
        var b, d = this.first(),
        f = this.last();
        return b = a.middle ? d + " " + this.first() + " " + f: a.middle_initial ? d + " " + this.character({
            alpha: !0,
            casing: "upper"
        }) + ". " + f: d + " " + f,
        a.prefix && (b = this.prefix() + " " + b),
        b
    };
    a.prototype.name_prefixes = function() {
        return [{
            name: "Doctor",
            abbreviation: "Dr."
        },
        {
            name: "Miss",
            abbreviation: "Miss"
        },
        {
            name: "Misses",
            abbreviation: "Mrs."
        },
        {
            name: "Mister",
            abbreviation: "Mr."
        }]
    };
    a.prototype.prefix = function(a) {
        return this.name_prefix(a)
    };
    a.prototype.name_prefix = function(a) {
        return a = c(a),
        a.full ? this.pick(this.name_prefixes()).name: this.pick(this.name_prefixes()).abbreviation
    };
    a.prototype.color = function(a) {
        function b(a, c) {
            return [a, a, a].join(c || "")
        }
        a = c(a, {
            format: this.pick(["hex", "shorthex", "rgb"]),
            grayscale: !1
        });
        var d = a.grayscale;
        if ("hex" === a.format) return "#" + (d ? b(this.hash({
            length: 2
        })) : this.hash({
            length: 6
        }));
        if ("shorthex" === a.format) return "#" + (d ? b(this.hash({
            length: 1
        })) : this.hash({
            length: 3
        }));
        if ("rgb" === a.format) return d ? "rgb(" + b(this.natural({
            max: 255
        }), ",") + ")": "rgb(" + this.natural({
            max: 255
        }) + "," + this.natural({
            max: 255
        }) + "," + this.natural({
            max: 255
        }) + ")";
        throw Error('Invalid format provided. Please provide one of "hex", "shorthex", or "rgb"');
    };
    a.prototype.domain = function(a) {
        return a = c(a),
        this.word() + "." + (a.tld || this.tld())
    };
    a.prototype.email = function(a) {
        return a = c(a),
        this.word() + "@" + (a.domain || this.domain())
    };
    a.prototype.fbid = function() {
        return parseInt("10000" + this.natural({
            max: 1E11
        }), 10)
    };
    a.prototype.hashtag = function() {
        return "#" + this.word()
    };
    a.prototype.ip = function() {
        return this.natural({
            max: 255
        }) + "." + this.natural({
            max: 255
        }) + "." + this.natural({
            max: 255
        }) + "." + this.natural({
            max: 255
        })
    };
    a.prototype.ipv6 = function() {
        for (var a = "",
        b = 0; 8 > b; b++) a += this.hash({
            length: 4
        }) + ":";
        return a.substr(0, a.length - 1)
    };
    a.prototype.klout = function() {
        return this.natural({
            min: 1,
            max: 99
        })
    };
    a.prototype.tlds = function() {
        return "com org edu gov co.uk net io".split(" ")
    };
    a.prototype.tld = function() {
        return this.pick(this.tlds())
    };
    a.prototype.twitter = function() {
        return "@" + this.word()
    };
    a.prototype.address = function(a) {
        return a = c(a),
        this.natural({
            min: 5,
            max: 2E3
        }) + " " + this.street(a)
    };
    a.prototype.areacode = function(a) {
        a = c(a, {
            parens: !0
        });
        var b = this.natural({
            min: 2,
            max: 9
        }).toString() + this.natural({
            min: 0,
            max: 8
        }).toString() + this.natural({
            min: 0,
            max: 9
        }).toString();
        return a.parens ? "(" + b + ")": b
    };
    a.prototype.city = function() {
        return this.capitalize(this.word({
            syllables: 3
        }))
    };
    a.prototype.coordinates = function(a) {
        return a = c(a),
        this.latitude(a) + ", " + this.longitude(a)
    };
    a.prototype.latitude = function(a) {
        return a = c(a, {
            fixed: 5
        }),
        this.floating({
            min: -90,
            max: 90,
            fixed: a.fixed
        })
    };
    a.prototype.longitude = function(a) {
        return a = c(a, {
            fixed: 5
        }),
        this.floating({
            min: 0,
            max: 180,
            fixed: a.fixed
        })
    };
    a.prototype.phone = function(a) {
        a = c(a, {
            formatted: !0
        });
        a.formatted || (a.parens = !1);
        var b = this.areacode(a).toString(),
        d = this.natural({
            min: 2,
            max: 9
        }).toString() + this.natural({
            min: 0,
            max: 9
        }).toString() + this.natural({
            min: 0,
            max: 9
        }).toString(),
        f = this.natural({
            min: 1E3,
            max: 9999
        }).toString();
        return a.formatted ? b + " " + d + "-" + f: b + d + f
    };
    a.prototype.postal = function() {
        var a = this.character({
            pool: "XVTSRPNKLMHJGECBA"
        }) + this.natural({
            max: 9
        }) + this.character({
            alpha: !0,
            casing: "upper"
        }),
        b = this.natural({
            max: 9
        }) + this.character({
            alpha: !0,
            casing: "upper"
        }) + this.natural({
            max: 9
        });
        return a + " " + b
    };
    a.prototype.provinces = function() {
        return [{
            name: "Alberta",
            abbreviation: "AB"
        },
        {
            name: "British Columbia",
            abbreviation: "BC"
        },
        {
            name: "Manitoba",
            abbreviation: "MB"
        },
        {
            name: "New Brunswick",
            abbreviation: "NB"
        },
        {
            name: "Newfoundland and Labrador",
            abbreviation: "NL"
        },
        {
            name: "Nova Scotia",
            abbreviation: "NS"
        },
        {
            name: "Ontario",
            abbreviation: "ON"
        },
        {
            name: "Prince Edward Island",
            abbreviation: "PE"
        },
        {
            name: "Quebec",
            abbreviation: "QC"

        },
        {
            name: "Saskatchewan",
            abbreviation: "SK"
        },
        {
            name: "Northwest Territories",
            abbreviation: "NT"
        },
        {
            name: "Nunavut",
            abbreviation: "NU"
        },
        {
            name: "Yukon",
            abbreviation: "YT"
        }]
    };
    a.prototype.province = function(a) {
        return a && a.full ? this.pick(this.provinces()).name: this.pick(this.provinces()).abbreviation
    };
    a.prototype.radio = function(a) {
        a = c(a, {
            side: "?"
        });
        var b = "";
        switch (a.side.toLowerCase()) {
        case "east":
        case "e":
            b = "W";
            break;
        case "west":
        case "w":
            b = "K";
            break;
        default:
            b = this.character({
                pool: "KW"
            })
        }
        return b + this.character({
            alpha: !0,
            casing: "upper"
        }) + this.character({
            alpha: !0,
            casing: "upper"
        }) + this.character({
            alpha: !0,
            casing: "upper"
        })
    };
    a.prototype.state = function(a) {
        return a && a.full ? this.pick(this.states()).name: this.pick(this.states()).abbreviation
    };
    a.prototype.states = function() {
        return [{
            name: "Alabama",
            abbreviation: "AL"
        },
        {
            name: "Alaska",
            abbreviation: "AK"
        },
        {
            name: "American Samoa",
            abbreviation: "AS"
        },
        {
            name: "Arizona",
            abbreviation: "AZ"
        },
        {
            name: "Arkansas",
            abbreviation: "AR"
        },
        {
            name: "Armed Forces Europe",
            abbreviation: "AE"
        },
        {
            name: "Armed Forces Pacific",
            abbreviation: "AP"
        },
        {
            name: "Armed Forces the Americas",
            abbreviation: "AA"
        },
        {
            name: "California",
            abbreviation: "CA"
        },
        {
            name: "Colorado",
            abbreviation: "CO"
        },
        {
            name: "Connecticut",
            abbreviation: "CT"
        },
        {
            name: "Delaware",
            abbreviation: "DE"
        },
        {
            name: "District of Columbia",
            abbreviation: "DC"
        },
        {
            name: "Federated States of Micronesia",
            abbreviation: "FM"
        },
        {
            name: "Florida",
            abbreviation: "FL"
        },
        {
            name: "Georgia",
            abbreviation: "GA"
        },
        {
            name: "Guam",
            abbreviation: "GU"
        },
        {
            name: "Hawaii",
            abbreviation: "HI"
        },
        {
            name: "Idaho",
            abbreviation: "ID"
        },
        {
            name: "Illinois",
            abbreviation: "IL"
        },
        {
            name: "Indiana",
            abbreviation: "IN"
        },
        {
            name: "Iowa",
            abbreviation: "IA"
        },
        {
            name: "Kansas",
            abbreviation: "KS"
        },
        {
            name: "Kentucky",
            abbreviation: "KY"
        },
        {
            name: "Louisiana",
            abbreviation: "LA"
        },
        {
            name: "Maine",
            abbreviation: "ME"
        },
        {
            name: "Marshall Islands",
            abbreviation: "MH"
        },
        {
            name: "Maryland",
            abbreviation: "MD"
        },
        {
            name: "Massachusetts",
            abbreviation: "MA"
        },
        {
            name: "Michigan",
            abbreviation: "MI"
        },
        {
            name: "Minnesota",
            abbreviation: "MN"
        },
        {
            name: "Mississippi",
            abbreviation: "MS"
        },
        {
            name: "Missouri",
            abbreviation: "MO"
        },
        {
            name: "Montana",
            abbreviation: "MT"
        },
        {
            name: "Nebraska",
            abbreviation: "NE"
        },
        {
            name: "Nevada",
            abbreviation: "NV"
        },
        {
            name: "New Hampshire",
            abbreviation: "NH"
        },
        {
            name: "New Jersey",
            abbreviation: "NJ"
        },
        {
            name: "New Mexico",
            abbreviation: "NM"
        },
        {
            name: "New York",
            abbreviation: "NY"
        },
        {
            name: "North Carolina",
            abbreviation: "NC"
        },
        {
            name: "North Dakota",
            abbreviation: "ND"
        },
        {
            name: "Northern Mariana Islands",
            abbreviation: "MP"
        },
        {
            name: "Ohio",
            abbreviation: "OH"
        },
        {
            name: "Oklahoma",
            abbreviation: "OK"
        },
        {
            name: "Oregon",
            abbreviation: "OR"
        },
        {
            name: "Pennsylvania",
            abbreviation: "PA"
        },
        {
            name: "Puerto Rico",
            abbreviation: "PR"
        },
        {
            name: "Rhode Island",
            abbreviation: "RI"
        },
        {
            name: "South Carolina",
            abbreviation: "SC"
        },
        {
            name: "South Dakota",
            abbreviation: "SD"
        },
        {
            name: "Tennessee",
            abbreviation: "TN"
        },
        {
            name: "Texas",
            abbreviation: "TX"
        },
        {
            name: "Utah",
            abbreviation: "UT"
        },
        {
            name: "Vermont",
            abbreviation: "VT"
        },
        {
            name: "Virgin Islands, U.S.",
            abbreviation: "VI"
        },
        {
            name: "Virginia",
            abbreviation: "VA"
        },
        {
            name: "Washington",
            abbreviation: "WA"
        },
        {
            name: "West Virginia",
            abbreviation: "WV"
        },
        {
            name: "Wisconsin",
            abbreviation: "WI"
        },
        {
            name: "Wyoming",
            abbreviation: "WY"
        }]
    };
    a.prototype.street = function(a) {
        a = c(a);
        var b = this.word({
            syllables: 2
        });
        return b = this.capitalize(b),
        b += " ",
        b + (a.short_suffix ? this.street_suffix().abbreviation: this.street_suffix().name)
    };
    a.prototype.street_suffix = function() {
        return this.pick(this.street_suffixes())
    };
    a.prototype.street_suffixes = function() {
        return [{
            name: "Avenue",
            abbreviation: "Ave"
        },
        {
            name: "Boulevard",
            abbreviation: "Blvd"
        },
        {
            name: "Center",
            abbreviation: "Ctr"
        },
        {
            name: "Circle",
            abbreviation: "Cir"
        },
        {
            name: "Court",
            abbreviation: "Ct"
        },
        {
            name: "Drive",
            abbreviation: "Dr"
        },
        {
            name: "Extension",
            abbreviation: "Ext"
        },
        {
            name: "Glen",
            abbreviation: "Gln"
        },
        {
            name: "Grove",
            abbreviation: "Grv"
        },
        {
            name: "Heights",
            abbreviation: "Hts"
        },
        {
            name: "Highway",
            abbreviation: "Hwy"
        },
        {
            name: "Junction",
            abbreviation: "Jct"
        },
        {
            name: "Key",
            abbreviation: "Key"
        },
        {
            name: "Lane",
            abbreviation: "Ln"
        },
        {
            name: "Loop",
            abbreviation: "Loop"
        },
        {
            name: "Manor",
            abbreviation: "Mnr"
        },
        {
            name: "Mill",
            abbreviation: "Mill"
        },
        {
            name: "Park",
            abbreviation: "Park"
        },
        {
            name: "Parkway",
            abbreviation: "Pkwy"
        },
        {
            name: "Pass",
            abbreviation: "Pass"
        },
        {
            name: "Path",
            abbreviation: "Path"
        },
        {
            name: "Pike",
            abbreviation: "Pike"
        },
        {
            name: "Place",
            abbreviation: "Pl"
        },
        {
            name: "Plaza",
            abbreviation: "Plz"
        },
        {
            name: "Point",
            abbreviation: "Pt"
        },
        {
            name: "Ridge",
            abbreviation: "Rdg"
        },
        {
            name: "River",
            abbreviation: "Riv"
        },
        {
            name: "Road",
            abbreviation: "Rd"
        },
        {
            name: "Square",
            abbreviation: "Sq"
        },
        {
            name: "Street",
            abbreviation: "St"
        },
        {
            name: "Terrace",
            abbreviation: "Ter"
        },
        {
            name: "Trail",
            abbreviation: "Trl"
        },
        {
            name: "Turnpike",
            abbreviation: "Tpke"
        },
        {
            name: "View",
            abbreviation: "Vw"
        },
        {
            name: "Way",
            abbreviation: "Way"
        }]
    };
    a.prototype.zip = function(a) {
        for (var b = "",
        c = 0; 5 > c; c++) b += this.natural({
            max: 9
        }).toString();
        if (a && !0 === a.plusfour) for (b += "-", c = 0; 4 > c; c++) b += this.natural({
            max: 9
        }).toString();
        return b
    };
    a.prototype.ampm = function() {
        return this.bool() ? "am": "pm"
    };
    a.prototype.date = function(a) {
        var b, d = this.month({
            raw: !0
        });
        a = c(a, {
            year: parseInt(this.year(), 10),
            month: d.numeric - 1,
            day: this.natural({
                min: 1,
                max: d.days
            }),
            hour: this.hour(),
            minute: this.minute(),
            second: this.second(),
            millisecond: this.millisecond(),
            american: !0,
            string: !1
        });
        d = new Date(a.year, a.month, a.day, a.hour, a.minute, a.second, a.millisecond);
        return b = a.american ? d.getMonth() + 1 + "/" + d.getDate() + "/" + d.getFullYear() : d.getDate() + "/" + (d.getMonth() + 1) + "/" + d.getFullYear(),
        a.string ? b: d
    };
    a.prototype.hammertime = function(a) {
        return this.date(a).getTime()
    };
    a.prototype.hour = function(a) {
        a = c(a);
        return this.natural({
            min: 1,
            max: a.twentyfour ? 24 : 12
        })
    };
    a.prototype.millisecond = function() {
        return this.natural({
            max: 999
        })
    };
    a.prototype.minute = a.prototype.second = function() {
        return this.natural({
            max: 59
        })
    };
    a.prototype.month = function(a) {
        a = c(a);
        var b = this.pick(this.months());
        return a.raw ? b: b.name
    };
    a.prototype.months = function() {
        return [{
            name: "January",
            short_name: "Jan",
            numeric: "01",
            days: 31
        },
        {
            name: "February",
            short_name: "Feb",
            numeric: "02",
            days: 28
        },
        {
            name: "March",
            short_name: "Mar",
            numeric: "03",
            days: 31
        },
        {
            name: "April",
            short_name: "Apr",
            numeric: "04",
            days: 30
        },
        {
            name: "May",
            short_name: "May",
            numeric: "05",
            days: 31
        },
        {
            name: "June",
            short_name: "Jun",
            numeric: "06",
            days: 30
        },
        {
            name: "July",
            short_name: "Jul",
            numeric: "07",
            days: 31
        },
        {
            name: "August",
            short_name: "Aug",
            numeric: "08",
            days: 31
        },
        {
            name: "September",
            short_name: "Sep",
            numeric: "09",
            days: 30
        },
        {
            name: "October",
            short_name: "Oct",
            numeric: "10",
            days: 31
        },
        {
            name: "November",
            short_name: "Nov",
            numeric: "11",
            days: 30
        },
        {
            name: "December",
            short_name: "Dec",
            numeric: "12",
            days: 31
        }]
    };
    a.prototype.second = function() {
        return this.natural({
            max: 59
        })
    };
    a.prototype.timestamp = function() {
        return this.natural({
            min: 1,
            max: parseInt((new Date).getTime() / 1E3, 10)
        })
    };
    a.prototype.year = function(a) {
        return a = c(a, {
            min: (new Date).getFullYear()
        }),
        a.max = "undefined" != typeof a.max ? a.max: a.min + 100,
        this.natural(a).toString()
    };
    a.prototype.cc = function(a) {
        a = c(a);
        var b;
        b = a.type ? this.cc_type({
            name: a.type,
            raw: !0
        }) : this.cc_type({
            raw: !0
        });
        a = b.prefix.split("");
        b = b.length - b.prefix.length - 1;
        for (var d = 0; b > d; d++) a.push(this.integer({
            min: 0,
            max: 9
        }));
        return a.push(this.luhn_calculate(a.join(""))),
        a.join("")
    };
    a.prototype.cc_types = function() {
        return [{
            name: "American Express",
            short_name: "amex",
            prefix: "34",
            length: 15
        },
        {
            name: "Bankcard",
            short_name: "bankcard",
            prefix: "5610",
            length: 16
        },
        {
            name: "China UnionPay",
            short_name: "chinaunion",
            prefix: "62",
            length: 16
        },
        {
            name: "Diners Club Carte Blanche",
            short_name: "dccarte",
            prefix: "300",
            length: 14
        },
        {
            name: "Diners Club enRoute",
            short_name: "dcenroute",
            prefix: "2014",
            length: 15
        },
        {
            name: "Diners Club International",
            short_name: "dcintl",
            prefix: "36",
            length: 14
        },
        {
            name: "Diners Club United States & Canada",
            short_name: "dcusc",
            prefix: "54",
            length: 16
        },
        {
            name: "Discover Card",
            short_name: "discover",
            prefix: "6011",
            length: 16
        },
        {
            name: "InstaPayment",
            short_name: "instapay",
            prefix: "637",
            length: 16
        },
        {
            name: "JCB",
            short_name: "jcb",
            prefix: "3528",
            length: 16
        },
        {
            name: "Laser",
            short_name: "laser",
            prefix: "6304",
            length: 16
        },
        {
            name: "Maestro",
            short_name: "maestro",
            prefix: "5018",
            length: 16
        },
        {
            name: "Mastercard",
            short_name: "mc",
            prefix: "51",
            length: 16
        },
        {
            name: "Solo",
            short_name: "solo",
            prefix: "6334",
            length: 16
        },
        {
            name: "Switch",
            short_name: "switch",
            prefix: "4903",
            length: 16
        },
        {
            name: "Visa",
            short_name: "visa",
            prefix: "4",
            length: 16
        },
        {
            name: "Visa Electron",
            short_name: "electron",
            prefix: "4026",
            length: 16
        }]
    };
    a.prototype.cc_type = function(a) {
        a = c(a);
        var b = this.cc_types(),
        d = null;
        if (a.name) {
            for (var f = 0; f < b.length; f++) if (b[f].name === a.name || b[f].short_name === a.name) {
                d = b[f];
                break
            }
            if (null === d) throw Error("Credit card type '" + a.name + "'' is not suppoted");
        } else d = this.pick(b);
        return a.raw ? d: d.name
    };
    a.prototype.dollar = function(a) {
        a = c(a, {
            max: 1E4,
            min: 0
        });
        a = this.floating({
            min: a.min,
            max: a.max,
            fixed: 2
        }).toString();
        var b = a.split(".")[1];
        return void 0 === b ? a += ".00": 2 > b.length && (a += "0"),
        "$" + a
    };
    a.prototype.exp = function(a) {
        a = c(a);
        var b = {};
        return b.year = this.exp_year(),
        b.month = b.year === (new Date).getFullYear() ? this.exp_month({
            future: !0
        }) : this.exp_month(),
        a.raw ? b: b.month + "/" + b.year
    };
    a.prototype.exp_month = function(a) {
        a = c(a);
        var b;
        if (a.future) {
            do a = this.month({
                raw: !0
            }).numeric,
            b = parseInt(a, 10);
            while (b < (new Date).getMonth())
        } else a = this.month({
            raw: !0
        }).numeric;
        return a
    };
    a.prototype.exp_year = function() {
        return this.year({
            max: (new Date).getFullYear() + 10
        })
    };
    a.prototype.d4 = function() {
        return this.natural({
            min: 1,
            max: 4
        })
    };
    a.prototype.d6 = function() {
        return this.natural({
            min: 1,
            max: 6
        })
    };
    a.prototype.d8 = function() {
        return this.natural({
            min: 1,
            max: 8
        })
    };
    a.prototype.d10 = function() {
        return this.natural({
            min: 1,
            max: 10
        })
    };
    a.prototype.d12 = function() {
        return this.natural({
            min: 1,
            max: 12
        })
    };
    a.prototype.d20 = function() {
        return this.natural({
            min: 1,
            max: 20
        })
    };
    a.prototype.d30 = function() {
        return this.natural({
            min: 1,
            max: 30
        })
    };
    a.prototype.d100 = function() {
        return this.natural({
            min: 1,
            max: 100
        })
    };
    a.prototype.rpg = function(a, b) {
        if (b = c(b), null === a) throw Error("A type of die roll must be included");
        var d = a.toLowerCase().split("d"),
        f = [];
        if (2 !== d.length || !parseInt(d[0], 10) || !parseInt(d[1], 10)) throw Error("Invalid format provided. Please provide #d# where the first # is the number of dice to roll, the second # is the max of each die");
        for (var h = d[0]; 0 < h; h--) f[h - 1] = this.natural({
            min: 1,
            max: d[1]
        });
        return "undefined" != typeof b.sum && b.sum ? f.reduce(function(a, b) {
            return a + b
        }) : f
    };
    a.prototype.guid = function(a) {
        a = a || {
            version: 5
        };
        return this.string({
            pool: "ABCDEF1234567890",
            length: 8
        }) + "-" + this.string({
            pool: "ABCDEF1234567890",
            length: 4
        }) + "-" + a.version + this.string({
            pool: "ABCDEF1234567890",
            length: 3
        }) + "-" + this.string({
            pool: "AB89",
            length: 1
        }) + this.string({
            pool: "ABCDEF1234567890",
            length: 3
        }) + "-" + this.string({
            pool: "ABCDEF1234567890",
            length: 12
        })
    };
    a.prototype.hash = function(a) {
        a = c(a, {
            length: 40,
            casing: "lower"
        });
        return this.string({
            pool: "upper" === a.casing ? "0123456789ABCDEF": "0123456789abcdef",
            length: a.length
        })
    };
    a.prototype.luhn_check = function(a) {
        a = a.toString();
        return + a.substring(a.length - 1) === this.luhn_calculate( + a.substring(0, a.length - 1))
    };
    a.prototype.luhn_calculate = function(a) {
        a = a.toString().split("").reverse();
        for (var b = 0,
        c = 0,
        d = a.length; d > c; ++c) {
            var f = +a[c];
            0 === c % 2 && (f *= 2, 9 < f && (f -= 9));
            b += f
        }
        return 9 * b % 10
    };
    a.prototype.mersenne_twister = function(a) {
        return new d(a)
    };
    a.prototype.VERSION = "0.5.3";
    var d = function(a) {
        void 0 === a && (a = (new Date).getTime());
        this.N = 624;
        this.M = 397;
        this.MATRIX_A = 2567483615;
        this.UPPER_MASK = 2147483648;
        this.LOWER_MASK = 2147483647;
        this.mt = Array(this.N);
        this.mti = this.N + 1;
        this.init_genrand(a)
    };
    d.prototype.init_genrand = function(a) {
        this.mt[0] = a >>> 0;
        for (this.mti = 1; this.mti < this.N; this.mti++) a = this.mt[this.mti - 1] ^ this.mt[this.mti - 1] >>> 30,
        this.mt[this.mti] = (1812433253 * ((4294901760 & a) >>> 16) << 16) + 1812433253 * (65535 & a) + this.mti,
        this.mt[this.mti] >>>= 0
    };
    d.prototype.init_by_array = function(a, b) {
        var c, d, f = 1,
        h = 0;
        this.init_genrand(19650218);
        for (c = this.N > b ? this.N: b; c; c--) d = this.mt[f - 1] ^ this.mt[f - 1] >>> 30,
        this.mt[f] = (this.mt[f] ^ (1664525 * ((4294901760 & d) >>> 16) << 16) + 1664525 * (65535 & d)) + a[h] + h,
        this.mt[f] >>>= 0,
        f++,
        h++,
        f >= this.N && (this.mt[0] = this.mt[this.N - 1], f = 1),
        h >= b && (h = 0);
        for (c = this.N - 1; c; c--) d = this.mt[f - 1] ^ this.mt[f - 1] >>> 30,
        this.mt[f] = (this.mt[f] ^ (1566083941 * ((4294901760 & d) >>> 16) << 16) + 1566083941 * (65535 & d)) - f,
        this.mt[f] >>>= 0,
        f++,
        f >= this.N && (this.mt[0] = this.mt[this.N - 1], f = 1);
        this.mt[0] = 2147483648
    };
    d.prototype.genrand_int32 = function() {
        var a, b = [0, this.MATRIX_A];
        if (this.mti >= this.N) {
            var c;
            this.mti === this.N + 1 && this.init_genrand(5489);
            for (c = 0; c < this.N - this.M; c++) a = this.mt[c] & this.UPPER_MASK | this.mt[c + 1] & this.LOWER_MASK,
            this.mt[c] = this.mt[c + this.M] ^ a >>> 1 ^ b[1 & a];
            for (; c < this.N - 1; c++) a = this.mt[c] & this.UPPER_MASK | this.mt[c + 1] & this.LOWER_MASK,
            this.mt[c] = this.mt[c + (this.M - this.N)] ^ a >>> 1 ^ b[1 & a];
            a = this.mt[this.N - 1] & this.UPPER_MASK | this.mt[0] & this.LOWER_MASK;
            this.mt[this.N - 1] = this.mt[this.M - 1] ^ a >>> 1 ^ b[1 & a];
            this.mti = 0
        }
        return a = this.mt[this.mti++],
        a ^= a >>> 11,
        a ^= 2636928640 & a << 7,
        a ^= 4022730752 & a << 15,
        a ^= a >>> 18,
        a >>> 0
    };
    d.prototype.genrand_int31 = function() {
        return this.genrand_int32() >>> 1
    };
    d.prototype.genrand_real1 = function() {
        return this.genrand_int32() * (1 / 4294967295)
    };
    d.prototype.random = function() {
        return this.genrand_int32() * (1 / 4294967296)
    };
    d.prototype.genrand_real3 = function() {
        return (this.genrand_int32() + 0.5) * (1 / 4294967296)
    };
    d.prototype.genrand_res53 = function() {
        var a = this.genrand_int32() >>> 5,
        b = this.genrand_int32() >>> 6;
        return 1.1102230246251565E-16 * (67108864 * a + b)
    };
    "undefined" != typeof exports && ("undefined" != typeof module && module.exports && (exports = module.exports = a), exports.Chance = a);
    "function" == typeof define && define.amd && define("Chance", [],
    function() {
        return a
    });
    "object" == typeof window && "object" == typeof window.document && (window.Chance = a, window.chance = new a)
} (); (function(c) {
    c.hideAddressbar = function(b) {
        b = "string" === typeof b ? document.querySelector(b) : b;
        var a = navigator.userAgent,
        h = ~a.indexOf("iPhone") || ~a.indexOf("iPod"),
        f = ~a.indexOf("iPad"),
        d = h || f,
        e = ~a.indexOf("Android"),
        g = c.navigator.standalone,
        k = 0; (d || e) && b && (e && c.addEventListener("scroll",
        function() {
            b.style.height = c.innerHeight + "px"
        },
        !1),
        function n() {
            var a = b.offsetWidth;
            k !== a && (k = a, a = 0, d ? (a = document.documentElement.clientHeight, h && !g && (a += 60)) : e && (a = c.innerHeight + 56), b.style.height = a + "px", setTimeout(scrollTo, 0, 0, 1), c.addEventListener("resize", n, !1), console.log("resizefunt"))
        } ())
    }
})(this);
function isArrayContains(c, b) {
    return - 1 < c.indexOf(b)
}
function addToArray(c, b) {
    isArrayContains(c, b) || c.push(b)
}
function removeFromArray(c, b) {
    isArrayContains(c, b) && c.splice(c.indexOf(b, 0), 1)
}
function setCacheFromOther(c, b) {
    c.cacheCanvas = b.cacheCanvas;
    c.cacheID = b.cacheID;
    c._cacheWidth = b._cacheWidth;
    c._cacheHeight = b._cacheHeight;
    c._cacheOffsetX = b._cacheOffsetX;
    c._cacheOffsetY = b._cacheOffsetY;
    c._cacheScale = b._cacheScale
}
function deleteCache(c) {
    c.cacheCanvas = null;
    c.cacheID = 0
}
function trace(c) {
    isLevelEditor && console.log(c)
}
function onHoverScale(c) {
    c.scaleX = c.scaleY = 1.2 * spriteScale * (c.defaultScale ? c.defaultScale: 1)
}
function onOutScale(c) {
    c.scaleX = c.scaleY = spriteScale * (c.defaultScale ? c.defaultScale: 1)
}
function removeFromParent(c) {
    c.parent && c.parent.removeChild(c)
}
function addToParent(c, b) {
    removeFromParent(c);
    b && b.addChild(c)
}
function setSpriteScale(c, b) {
    c.scaleX = c.scaleY = b
}
function setTextAndCenter(c, b, a, h) {
    h.text != a && (h.text = a, a = h.getBounds(), h.x = c - (a.width >> 1) * h.scaleX, b && (h.y = b - (a.height >> 1) * h.scaleY))
}
function setAnimationSpeed(c, b) {
    c._animation.speed = b
}
function setNextAnimation(c, b) {
    c._animation.next = b
}
function randomizeAnimFrame(c) {
    c.currentAnimationFrame = Math.floor(30 * Math.random())
}
var spilLogo, logoDefaultY = 0,
logoDefaultX = 0,
currentLogoHorizPos = 0,
currentLogoVertPos = 0,
LOGO_TOP_POS = 0,
LOGO_BOTTOM_POS = 1,
LOGO_VERTICAL_ANY_POS = 2,
LOGO_LEFT_POS = 3,
LOGO_RIGHT_POS = 4,
LOGO_HORIZ_ANY_POS = 5,
logoPosDivisor = 1,
sponsorLogoFrame = "splashlogo";
function createSponsorLogo() {
    spilLogo = createButton(160, 322, 0.8, sponsorLogoFrame, sponsorClick, null, null)
}
function showSponsorLogo(c, b, a, h, f, d, e, g) {
    spilLogo || createSponsorLogo();
    isSponsorLogoError || (addToParent(spilLogo, h), logoDefaultY = b, logoDefaultX = c, currentLogoHorizPos = d, currentLogoVertPos = e, spilLogo.scaleX = spilLogo.scaleY = a, spilLogo.alpha = f ? f: 1, logoPosDivisor = g, updateLogoPos(), (c = zoeSS.getAnimation(sponsorLogoFrame)) && c.frames && 0 < c.frames.length && (c = zoeSS.getFrameBounds(c.frames[0]), spilLogo.setBoundingBox(c.x * a, c.y * a, c.width * a, c.height * a)))
}
function updateLogoPos() {
    spilLogo && !isSponsorLogoError && (spilLogo.x = logoDefaultX, spilLogo.y = logoDefaultY, currentLogoHorizPos === LOGO_LEFT_POS ? spilLogo.x += deltaForHLeft() : currentLogoHorizPos === LOGO_RIGHT_POS && (spilLogo.x -= deltaForHLeft()), currentLogoVertPos === LOGO_TOP_POS ? spilLogo.y += deltaForVTop() / logoPosDivisor: currentLogoVertPos === LOGO_BOTTOM_POS && (spilLogo.y -= deltaForVTop() / logoPosDivisor))
}
var isAdPauseSoundMuted = !1;
function startSponsorAds() {
    sponsorApi && (isAdPauseSoundMuted = isMute, sponsorApi.GameBreak.request(onAdBeginPause, onAdEndUnpause))
}
function onAdBeginPause() {
    trace("ad pause, , sound is muted: " + isMute);
    isAdPauseSoundMuted = isMute;
    isMute = !0;
    stopBgMusic();
    stopWindSound()
}
function onAdEndUnpause() {
    trace("ad unpause, sound was muted: " + isAdPauseSoundMuted); (isMute = isAdPauseSoundMuted) || playBgMusic()
}
function showTopLogo(c) {
    showSponsorLogo(160, 28, 0.7 * c, container, 1, LOGO_HORIZ_ANY_POS, LOGO_TOP_POS, 2)
}
function initSpilApi() {
    try {
        GameAPI.loadAPI(function(b) {
            sponsorApi = b;
            isLogoReady = !0
        },
        {
            site: "500",
            channel: "100",
            id: "576742227280291887"
        })
    } catch(c) {
        trace("init api fail!"),
        isSponsorLogoError = !0,
        isAllFilesLoaded && startGame()
    }
}
function handleFileLoadError(c) {
    trace("Logo loading error!");
    isSponsorLogoError = !0
}
var isSponsorLogoError = !1;
function doNothing() {}
var logoConfig, sponsorLogoBitmap, sponsorPreload, sponsorLogoDefWidth = 1,
sponsorLogoDefHeight = 1,
sponsorApi, isLogoReady = !1,
isGameInited = !1;
function likeClick() {
     goHome();
    //window.open(FACEBOOK_LIKE_URL, "_blank")
}
function shareClick() {
    console.log("shareClick");
    showShareTips();
    //isOnFacebookAppSite() ? postFacebookShare() : postTwitterShare()
}
function isOnFacebookAppSite() {
    return - 1 < document.URL.toLowerCase().indexOf(FACEBOOK_APP_SITE_NAME)
}
function postTwitterShare() {
    var c = TWITTER_SHARE_URL.replace("[SCORE]", getOverallScore());
    trace(c);
    window.open(c, "_blank")
}
function postFacebookShare() {
    /*isFacebookReady && FB.ui({
        method: "feed",
        name: "FootYard",
        link: GAME_PAGE_URL,
        caption: "I scored " + getOverallScore() + " points in the FootYard game!",
        description: "Try this awesome game on A10.com!"
    },
    function(c) {
        c && c.post_id ? trace("Post was published.") : trace("Post was not published.")
    })*/
}
function getOverallScore() {
    var c = 0,
    b;
    for (b = 0; b < LEVELS_NUM; b++) {
        var a = levelstates[b],
        h = 0;
        a == ONE_STAR ? h += 1 : a == TWO_STAR ? h += 3 : a == THREE_STAR && (h += 6);
        h *= b + 1;
        c += h
    }
    for (b = 0; b < ACHIEVS_NUM; b++) allachievs[b] == ACHIEVED && (c += 5);
    //分享按钮alert(11111);
    return c
} (function(c, b) {
    function a() {
        function a() {
            var c;
            c = b("amd");
            c.fork = a;
            return c
        }
        return a()
    }
    function h() {
        function a() {
            var d, e = [],
            g = {};
            d = b("global");
            d.fork = a;
            d.noConflict = function() {
                var a, b;
                b = Array.prototype.slice.apply(arguments);
                for (a = 0; a < e.length; a += 1)"undefined" === typeof g[e[a]] ? delete c[e[a]] : c[e[a]] = g[e[a]];
                g = {};
                for (a = 0; a < b.length; a += 1) {
                    if ("string" !== typeof b[a]) throw Error("Cannot replace namespaces. All new namespaces must be strings.");
                    g[b[a]] = c[b[a]];
                    c[b[a]] = d
                }
                return e = b
            };
            return d
        }
        a().noConflict("KeyboardJS", "k")
    } [].indexOf || (Array.prototype.indexOf = function(a, b, c) {
        c = this.length;
        for (b = (c + ~~b) % c; b < c && (!(b in this) || this[b] !== a); b++);
        return b ^ c ? b: -1
    });
    "function" === typeof define && define.amd ? define(a) : h()
})(this,
function(c) {
    function b() {
        window.addEventListener ? (document.addEventListener("keydown", h, !1), document.addEventListener("keyup", f, !1), window.addEventListener("blur", a, !1), window.addEventListener("webkitfullscreenchange", a, !1), window.addEventListener("mozfullscreenchange", a, !1)) : window.attachEvent && (document.attachEvent("onkeydown", h), document.attachEvent("onkeyup", f), window.attachEvent("onblur", a))
    }
    function a(a) {
        z = [];
        g();
        k(a)
    }
    function h(a) {
        var b, c;
        b = d(a.keyCode);
        if (! (1 > b.length)) {
            for (c = 0; c < b.length; c += 1) q(b[c]);
            for (b = 0; b < C.length; b += 1) if (c = r(C[b][0]), -1 === P.indexOf(C[b]) && n(c)) for (P.push(C[b]), c = 0; c < C[b][1].length; c += 1) q(C[b][1][c]);
            var e, f, g, h, k, m, s = [];
            c = [].concat(z);
            for (b = 0; b < F.length; b += 1) e = p(F[b].keyCombo).length,
            s[e] || (s[e] = []),
            s[e].push(F[b]);
            for (e = s.length - 1; 0 <= e; e -= 1) if (s[e]) for (b = 0; b < s[e].length; b += 1) {
                f = s[e][b];
                g = p(f.keyCombo);
                m = !0;
                for (k = 0; k < g.length; k += 1) if ( - 1 === c.indexOf(g[k])) {
                    m = !1;
                    break
                }
                if (m && n(f.keyCombo)) {
                    J.push(f);
                    for (k = 0; k < g.length; k += 1) m = c.indexOf(g[k]),
                    -1 < m && (c.splice(m, 1), k -= 1);
                    for (g = 0; g < f.keyDownCallback.length; g += 1) ! 1 === f.keyDownCallback[g](a, t(), f.keyCombo) && (h = !0); ! 0 === h && (a.preventDefault(), a.stopPropagation())
                }
            }
        }
    }
    function f(a) {
        var b, c;
        b = d(a.keyCode);
        if (! (1 > b.length)) {
            for (c = 0; c < b.length; c += 1) w(b[c]);
            g();
            k(a)
        }
    }
    function d(a) {
        return y[a] || []
    }
    function e(a) {
        for (var b in y) if (y.hasOwnProperty(b) && -1 < y[b].indexOf(a)) return b;
        return ! 1
    }
    function g() {
        var a, b;
        for (a = 0; a < P.length; a += 1) if (b = r(P[a][0]), !1 === n(b)) {
            for (b = 0; b < P[a][1].length; b += 1) w(P[a][1][b]);
            P.splice(a, 1);
            a -= 1
        }
    }
    function k(a) {
        var b, c, d, e;
        for (b = 0; b < J.length; b += 1) if (d = J[b], !1 === n(d.keyCombo)) {
            for (c = 0; c < d.keyUpCallback.length; c += 1) ! 1 === d.keyUpCallback[c](a, t(), d.keyCombo) && (e = !0); ! 0 === e && (a.preventDefault(), a.stopPropagation());
            J.splice(b, 1);
            b -= 1
        }
    }
    function m(a, b) {
        var c, d, e;
        a = r(a);
        b = r(b);
        if (a.length !== b.length) return ! 1;
        for (c = 0; c < a.length; c += 1) {
            if (a[c].length !== b[c].length) return ! 1;
            for (d = 0; d < a[c].length; d += 1) {
                if (a[c][d].length !== b[c][d].length) return ! 1;
                for (e = 0; e < a[c][d].length; e += 1) if ( - 1 === b[c][d].indexOf(a[c][d][e])) return ! 1
            }
        }
        return ! 0
    }
    function n(a) {
        var b, c, d, e, f = 0,
        g, h;

        a = r(a);
        for (b = 0; b < a.length; b += 1) {
            h = !0;
            for (c = f = 0; c < a[b].length; c += 1) {
                d = [].concat(a[b][c]);
                for (e = f; e < z.length; e += 1) g = d.indexOf(z[e]),
                -1 < g && (d.splice(g, 1), f = e);
                if (0 !== d.length) {
                    h = !1;
                    break
                }
            }
            if (h) return ! 0
        }
        return ! 1
    }
    function p(a) {
        var b, c, d = [];
        a = r(a);
        for (b = 0; b < a.length; b += 1) for (c = 0; c < a[b].length; c += 1) d = d.concat(a[b][c]);
        return d
    }
    function r(a) {
        var b = 0,
        c = 0,
        d = !1,
        e = !1,
        f = [],
        g = [],
        h = [],
        k = "";
        if ("object" === typeof a && "function" === typeof a.push) return a;
        if ("string" !== typeof a) throw Error('Cannot parse "keyCombo" because its type is "' + typeof a + '". It must be a "string".');
        for (;
        " " === a.charAt(b);) b += 1;
        for (;;) {
            if (" " === a.charAt(b)) {
                for (;
                " " === a.charAt(b);) b += 1;
                d = !0
            } else if ("," === a.charAt(b)) {
                if (c || e) throw Error("Failed to parse key combo. Unexpected , at character index " + b + ".");
                e = !0;
                b += 1
            } else if ("+" === a.charAt(b)) {
                k.length && (h.push(k), k = "");
                if (c || e) throw Error("Failed to parse key combo. Unexpected + at character index " + b + ".");
                c = !0;
                b += 1
            } else if (">" === a.charAt(b)) {
                k.length && (h.push(k), k = "");
                h.length && (g.push(h), h = []);
                if (c || e) throw Error("Failed to parse key combo. Unexpected > at character index " + b + ".");
                c = !0;
                b += 1
            } else if (b < a.length - 1 && "!" === a.charAt(b) && (">" === a.charAt(b + 1) || "," === a.charAt(b + 1) || "+" === a.charAt(b + 1))) k += a.charAt(b + 1),
            e = d = c = !1,
            b += 2;
            else if (b < a.length && "+" !== a.charAt(b) && ">" !== a.charAt(b) && "," !== a.charAt(b) && " " !== a.charAt(b)) {
                if (!1 === c && !0 === d || !0 === e) k.length && (h.push(k), k = ""),
                h.length && (g.push(h), h = []),
                g.length && (f.push(g), g = []);
                for (e = d = c = !1; b < a.length && "+" !== a.charAt(b) && ">" !== a.charAt(b) && "," !== a.charAt(b) && " " !== a.charAt(b);) k += a.charAt(b),
                b += 1
            } else {
                b += 1;
                continue
            }
            if (b >= a.length) {
                k.length && h.push(k);
                h.length && g.push(h);
                g.length && f.push(g);
                break
            }
        }
        return f
    }
    function s(a) {
        var b, c, d = [];
        if ("string" === typeof a) return a;
        if ("object" !== typeof a || "function" !== typeof a.push) throw Error("Cannot stringify key combo.");
        for (b = 0; b < a.length; b += 1) {
            d[b] = [];
            for (c = 0; c < a[b].length; c += 1) d[b][c] = a[b][c].join(" + ");
            d[b] = d[b].join(" > ")
        }
        return d.join(" ")
    }
    function t(a) {
        return [].concat(z)
    }
    function q(a) {
        if (a.match(/\s/)) throw Error("Cannot add key name " + a + " to active keys because it contains whitespace."); - 1 < z.indexOf(a) || z.push(a)
    }
    function w(a) {
        var b = e(a);
        "91" === b || "92" === b ? z = [] : z.splice(z.indexOf(a), 1)
    }
    function u(a, b) {
        if ("string" !== typeof a) throw Error("Cannot register new locale. The locale name must be a string.");
        if ("object" !== typeof b) throw Error("Cannot register " + a + " locale. The locale map must be an object.");
        if ("object" !== typeof b.map) throw Error("Cannot register " + a + " locale. The locale map is invalid.");
        b.macros || (b.macros = []);
        K[a] = b
    }
    function x(a) {
        if (a) {
            if ("string" !== typeof a) throw Error("Cannot set locale. The locale name must be a string.");
            if (!K[a]) throw Error("Cannot set locale to " + a + " because it does not exist. If you would like to submit a " + a + " locale map for KeyboardJS please submit it at #.");
            y = K[a].map;
            C = K[a].macros;
            A = a
        }
        return A
    }
    c = {};
    var K = {},
    A, y, C, z = [],
    F = [],
    J = [],
    P = [],
    E,
    S;
    S = {
        map: {
            3 : ["cancel"],
            8 : ["backspace"],
            9 : ["tab"],
            12 : ["clear"],
            13 : ["enter"],
            16 : ["shift"],
            17 : ["ctrl"],
            18 : ["alt", "menu"],
            19 : ["pause", "break"],
            20 : ["capslock"],
            27 : ["escape", "esc"],
            32 : ["space", "spacebar"],
            33 : ["pageup"],
            34 : ["pagedown"],
            35 : ["end"],
            36 : ["home"],
            37 : ["left"],
            38 : ["up"],
            39 : ["right"],
            40 : ["down"],
            41 : ["select"],
            42 : ["printscreen"],
            43 : ["execute"],
            44 : ["snapshot"],
            45 : ["insert", "ins"],
            46 : ["delete", "del"],
            47 : ["help"],
            91 : "command windows win super leftcommand leftwindows leftwin leftsuper".split(" "),
            92 : "command windows win super rightcommand rightwindows rightwin rightsuper".split(" "),
            145 : ["scrolllock", "scroll"],
            186 : ["semicolon", ";"],
            187 : ["equal", "equalsign", "="],
            188 : ["comma", ","],
            189 : ["dash", "-"],
            190 : ["period", "."],
            191 : ["slash", "forwardslash", "/"],
            192 : ["graveaccent", "`"],
            219 : ["openbracket", "["],
            220 : ["backslash", "\\"],
            221 : ["closebracket", "]"],
            222 : ["apostrophe", "'"],
            48 : ["zero", "0"],
            49 : ["one", "1"],
            50 : ["two", "2"],
            51 : ["three", "3"],
            52 : ["four", "4"],
            53 : ["five", "5"],
            54 : ["six", "6"],
            55 : ["seven", "7"],
            56 : ["eight", "8"],
            57 : ["nine", "9"],
            96 : ["numzero", "num0"],
            97 : ["numone", "num1"],
            98 : ["numtwo", "num2"],
            99 : ["numthree", "num3"],
            100 : ["numfour", "num4"],
            101 : ["numfive", "num5"],
            102 : ["numsix", "num6"],
            103 : ["numseven", "num7"],
            104 : ["numeight", "num8"],
            105 : ["numnine", "num9"],
            106 : ["nummultiply", "num*"],
            107 : ["numadd", "num+"],
            108 : ["numenter"],
            109 : ["numsubtract", "num-"],
            110 : ["numdecimal", "num."],
            111 : ["numdevide", "num/"],
            144 : ["numlock", "num"],
            112 : ["f1"],
            113 : ["f2"],
            114 : ["f3"],
            115 : ["f4"],
            116 : ["f5"],
            117 : ["f6"],
            118 : ["f7"],
            119 : ["f8"],
            120 : ["f9"],
            121 : ["f10"],
            122 : ["f11"],
            123 : ["f12"]
        },
        macros: [["shift + `", ["tilde", "~"]], ["shift + 1", ["exclamation", "exclamationpoint", "!"]], ["shift + 2", ["at", "@"]], ["shift + 3", ["number", "#"]], ["shift + 4", ["dollar", "dollars", "dollarsign", "$"]], ["shift + 5", ["percent", "%"]], ["shift + 6", ["caret", "^"]], ["shift + 7", ["ampersand", "and", "&"]], ["shift + 8", ["asterisk", "*"]], ["shift + 9", ["openparen", "("]], ["shift + 0", ["closeparen", ")"]], ["shift + -", ["underscore", "_"]], ["shift + =", ["plus", "+"]], ["shift + (", ["opencurlybrace", "opencurlybracket", "{"]], ["shift + )", ["closecurlybrace", "closecurlybracket", "}"]], ["shift + \\", ["verticalbar", "|"]], ["shift + ;", ["colon", ":"]], ["shift + '", ["quotationmark", '"']], ["shift + !,", ["openanglebracket", "<"]], ["shift + .", ["closeanglebracket", ">"]], ["shift + /", ["questionmark", "?"]]]
    };
    for (E = 65; 90 >= E; E += 1) S.map[E] = String.fromCharCode(E + 32),
    S.macros.push(["shift + " + String.fromCharCode(E + 32) + ", capslock + " + String.fromCharCode(E + 32), [String.fromCharCode(E)]]);
    u("us", S);
    x("us");
    b();
    c.enable = b;
    c.disable = function() {
        a();
        window.removeEventListener ? (document.removeEventListener("keydown", h, !1), document.removeEventListener("keyup", f, !1), window.removeEventListener("blur", a, !1), window.removeEventListener("webkitfullscreenchange", a, !1), window.removeEventListener("mozfullscreenchange", a, !1)) : window.detachEvent && (document.detachEvent("onkeydown", h), document.detachEvent("onkeyup", f), window.detachEvent("onblur", a))
    };
    c.activeKeys = t;
    c.isPressed = function(a) {
        return - 1 < z.indexOf(a)
    };
    c.on = function(a, b, c) {
        var d = {},
        e, f = [],
        g,
        h;
        "string" === typeof a && (a = r(a));
        for (g = 0; g < a.length; g += 1) {
            e = {};
            h = s([a[g]]);
            if ("string" !== typeof h) throw Error("Failed to bind key combo. The key combo must be string.");
            e.keyCombo = h;
            e.keyDownCallback = [];
            e.keyUpCallback = [];
            b && e.keyDownCallback.push(b);
            c && e.keyUpCallback.push(c);
            F.push(e);
            f.push(e)
        }
        d.clear = function() {
            var a;
            for (a = 0; a < f.length; a += 1) F.splice(F.indexOf(f[a]), 1)
        };
        d.on = function(a) {
            var b = {},
            c, d, e;
            if ("string" !== typeof a) throw Error("Cannot bind callback. The event name must be a string.");
            if ("keyup" !== a && "keydown" !== a) throw Error('Cannot bind callback. The event name must be a "keyup" or "keydown".');
            c = Array.prototype.slice.apply(arguments, [1]);
            for (d = 0; d < c.length; d += 1) if ("function" === typeof c[d]) if ("keyup" === a) for (e = 0; e < f.length; e += 1) f[e].keyUpCallback.push(c[d]);
            else if ("keydown" === a) for (e = 0; e < f.length; e += 1) f[e].keyDownCallback.push(c[d]);
            b.clear = function() {
                var b, d;
                for (b = 0; b < c.length; b += 1) if ("function" === typeof c[b]) if ("keyup" === a) for (d = 0; d < f.length; d += 1) f[d].keyUpCallback.splice(f[d].keyUpCallback.indexOf(c[b]), 1);
                else for (d = 0; d < f.length; d += 1) f[d].keyDownCallback.splice(f[d].keyDownCallback.indexOf(c[b]), 1)
            };
            return b
        };
        return d
    };
    c.clear = function(a) {
        var b, c;
        for (b = 0; b < F.length; b += 1) c = F[b],
        m(a, c.keyCombo) && (F.splice(b, 1), b -= 1)
    };
    c.clear.key = function(a) {
        var b, c, d;
        if (a) for (b = 0; b < F.length; b += 1) for (d = F[b], c = 0; c < d.keyCombo.length; c += 1) {
            if ( - 1 < d.keyCombo[c].indexOf(a)) {
                F.splice(b, 1);
                b -= 1;
                break
            }
        } else F = []
    };
    c.locale = x;
    c.locale.register = u;
    c.macro = function(a, b) {
        if ("string" !== typeof a && ("object" !== typeof a || "function" !== typeof a.push)) throw Error("Cannot create macro. The combo must be a string or array.");
        if ("object" !== typeof b || "function" !== typeof b.push) throw Error("Cannot create macro. The injectedKeys must be an array.");
        C.push([a, b])
    };
    c.macro.remove = function(a) {
        var b;
        if ("string" !== typeof a && ("object" !== typeof a || "function" !== typeof a.push)) throw Error("Cannot remove macro. The combo must be a string or array.");
        for (mI = 0; mI < C.length; mI += 1) if (b = C[mI], m(a, b[0])) {
            w(b[1]);
            C.splice(mI, 1);
            break
        }
    };
    c.key = {};
    c.key.name = d;
    c.key.code = e;
    c.combo = {};
    c.combo.active = n;
    c.combo.parse = r;
    c.combo.stringify = s;
    return c
});
var allLevels = [[["PUSHER_TYPE", 154.2, 324.05, 1, 1, -90, [""]], ["BALL_TYPE", 155.3, 221.75, 0.68, 0.68, 0, [""]], ["DECOR_HELP_4_TYPE", 258.5, 325.6, 0.81, 0.81, 0, [""]], ["AIM_TYPE", 153.4, 112.1, 0.9, 0.9, 0, ["DEF"]]], [["STATIC_BALK_1_TYPE", 148.75, 302.2, 0.8, 0.8, 0, [""]], ["BALL_TYPE", 132.95, 243.4, 0.68, 0.68, 0, [""]], ["PUSHER_TYPE", 68.6, 180.95, 1, 1, 45, ["3"]], ["AIM_TYPE", 239.2, 160.9, 0.9, 0.9, 40, ["DEF"]]], [["BONUS_KAKTUS_TYPE", 277.25, 253.9, 0.8, 0.8, 0, [""]], ["BALL_TYPE", 146.85, 255.1, 0.68, 0.68, 0, [""]], ["PUSHER_TYPE", 149.6, 113, 1, 1, 88, [""]], ["PUSHER_TYPE", 57.2, 256.95, 1, 1, -6, ["2"]], ["AIM_TYPE", 167.7, 356.3, 0.9, 0.9, 177, ["DEF"]]], [["STATIC_BOX_TYPE", 43.85, 237.3, 0.8, 0.8, 0, ["2"]], ["STATIC_BOX_TYPE", 253.9, 169.65, 0.8, 0.8, 60, ["3"]], ["STATIC_BOX_TYPE", 99.45, 237.3, 0.8, 0.8, 0, ["2"]], ["STATIC_BOX_TYPE", 215.9, 126.45, 0.8, 0.8, 41, ["3"]], ["STATIC_BOX_TYPE", 272.6, 222.15, 0.8, 0.8, 79, ["3"]], ["PUSHER_TYPE", 73.15, 358.5, 1, 1, -16, [""]], ["BALL_TYPE", 145.5, 310.95, 0.68, 0.68, 0, [""]], ["PUSHER_TYPE", 217.45, 371.05, 1, 1, -99, ["2"]], ["BONUS_STAR_TYPE", 194.3, 252.7, 0.68, 0.68, 0, [""]], ["BONUS_STAR_TYPE", 180.35, 188.35, 0.68, 0.68, 0, [""]], ["AIM_TYPE", 110.2, 132.65, 0.9, 0.9, -49, ["DEF"]]], [["MOVABLE_BALK_TYPE", 215.7, 278.4, 1.49, 0.699, 0, ["R_1030_5"]], ["BONUS_STAR_TYPE", 153.4, 239.35, 0.68, 0.68, 0, [""]], ["BONUS_STAR_TYPE", 161.8, 156.25, 0.68, 0.68, 0, [""]], ["BALL_TYPE", 148.2, 326.5, 0.68, 0.68, 0, [""]], ["MOVABLE_BALK_TYPE", 104.3, 198.55, 1.49, 0.699, 0, ["R_0_17"]], ["AIM_TYPE", 160.55, 386.5, 0.9, 0.9, 180, ["DEF"]], ["PUSHER_TYPE", 163.55, 80.4, 1, 1, 93, ["3"]]], [["STATIC_BOX_TYPE", 62.05, 218.75, 0.8, 0.8, 0, ["2"]], ["STATIC_BOX_TYPE", 198.75, 218.75, 0.8, 0.8, 0, ["2"]], ["DYNAMIC_RECT_TYPE", 123.45, 304.3, 1.31, 1.278, 11, [""]], ["BALL_TYPE", 127.65, 225.55, 0.68, 0.68, 0, [""]], ["PUSHER_TYPE", 124.6, 105.75, 1, 1, 88, [""]], ["DYNAMIC_RECT_TYPE", 127.6, 175.35, 1.31, 1.278, 0, [""]], ["DECOR_HELP_1_TYPE", 262, 159.9, 0.8, 0.8, 0, [""]], ["BONUS_STAR_TYPE", 152.6, 274.55, 0.68, 0.68, 0, [""]], ["BONUS_STAR_TYPE", 214, 112.7, 0.68, 0.68, 0, [""]], ["AIM_TYPE", 156.4, 377.8, 0.9, 0.9, 172, ["DEF"]], ["DYNAMIC_RECT_TYPE", 171.55, 265.2, 0.0050, 0.019, -4, [""]]], [["BONUS_DANGER_ACTIV_TYPE", 159.5, 240.2, 1, 1, 0, ["30_80_60"]], ["BONUS_DANGER_ACTIV_TYPE", 74.5, 204.35, 1, 1, 0, ["30_80_0"]], ["BONUS_DANGER_ACTIV_TYPE", 247.55, 204.35, 1, 1, 0, ["40_100_0"]], ["BONUS_DANGER_ACTIV_TYPE", 247.55, 304.55, 1, 1, 0, ["30_80_90"]], ["BONUS_DANGER_ACTIV_TYPE", 80.5, 307.35, 1, 1, 0, ["30_80_30"]], ["DECOR_SKULL_TYPE", 37.55, 393.45, 1, 1, 0, [""]], ["STATIC_CIRCLE_TYPE", 269.45, 383.2, 1, 1, 0, [""]], ["BALL_TYPE", 163.4, 309.95, 0.68, 0.68, 0, [""]], ["PUSHER_TYPE", 163.25, 386.45, 1, 1, -89, [""]], ["AIM_TYPE", 169.45, 105.1, 0.9, 0.9, 2, ["DEF"]]], [["BONUS_HOLE_TYPE", 277.65, 257.95, 0.8, 0.8, 0, [""]], ["BONUS_DANGER_KUST_TYPE", 84.45, 274.9, 0.8, 0.8, 0, [""]], ["BONUS_DANGER_KUST_TYPE", 166.85, 92.05, 0.8, 0.8, 0, [""]], ["BALL_TYPE", 228.2, 186.05, 0.68, 0.68, 0, [""]], ["PUSHER_TYPE", 132.5, 350.05, 1, 1, -41, ["2"]], ["PUSHER_TYPE", 101.8, 178.95, 1, 1, 78, [""]], ["PUSHER_TYPE", 278.05, 121.6, 1, 1, 127, ["3"]], ["BONUS_STAR_TYPE", 55.4, 108.55, 0.68, 0.68, 0, [""]], ["BONUS_STAR_TYPE", 180.95, 258.65, 0.68, 0.68, 0, [""]], ["BONUS_STAR_TYPE", 221.9, 323.55, 0.68, 0.68, 0, [""]], ["AIM_TYPE", 249.65, 373.65, 0.9, 0.9, 137, ["DEF"]]], [["BOMB_TYPE", 202.25, 76.05, 0.8, 0.8, 0, ["180_300"]], ["BOMB_TYPE", 259.6, 150.35, 0.8, 0.8, 0, ["340_300"]], ["BOMB_TYPE", 291.25, 245.2, 0.8, 0.8, 0, ["240_300"]], ["BALL_TYPE", 184.9, 271.7, 0.68, 0.68, 0, [""]], ["BONUS_STAR_TYPE", 220, 223.65, 0.798, 0.798, 0, [""]], ["BOMB_TYPE", 91.2, 189.35, 0.8, 0.8, 0, ["240_300"]], ["BOMB_TYPE", 105.2, 375.9, 0.8, 0.8, 0, ["240_300"]], ["AIM_TYPE", 155.8, 325.8, 0.9, 0.9, -150, ["DEF"]], ["DECOR_HELP_2_TYPE", 101.95, 92.55, 0.81, 0.81, 0, [""]]], [["TELEPORT_TYPE", 87.75, 368.45, 1.29, 1.29, 0, ["A"]], ["TELEPORT_TYPE", 265.5, 121.65, 1.29, 1.29, 0, ["A"]], ["BALL_TYPE", 161.85, 369.25, 0.68, 0.68, 0, [""]], ["PUSHER_TYPE", 252.95, 375.25, 1, 1, -174, [""]], ["STATIC_BOX_TYPE", 54.7, 250.25, 0.8, 0.8, 0, ["2"]], ["STATIC_BOX_TYPE", 110.3, 262.25, 0.8, 0.8, 0, ["2"]], ["STATIC_BOX_TYPE", 165.9, 273.25, 0.8, 0.8, 0, ["2"]], ["STATIC_BOX_TYPE", 221.5, 264.25, 0.8, 0.8, 0, ["2"]], ["STATIC_BOX_TYPE", 277.1, 250.25, 0.8, 0.8, 0, ["2"]], ["BONUS_STAR_TYPE", 187.85, 93.55, 0.798, 0.798, 0, [""]], ["BONUS_STAR_TYPE", 194.85, 149.75, 0.798, 0.798, 0, [""]], ["BONUS_STAR_TYPE", 138.95, 120.45, 0.798, 0.798, 0, [""]], ["AIM_TYPE", 86.7, 123.85, 0.9, 0.9, -101, ["DEF"]]], [["BONUS_DANGER_KUST_TYPE", 157.85, 244.3, 0.8, 0.8, 0, [""]], ["BALL_TYPE", 156.4, 135.6, 0.68, 0.68, 0, [""]], ["PUSHER_TYPE", 104.8, 84.35, 0.899, 0.899, 78, [""]], ["PUSHER_TYPE", 221.05, 86.65, 0.968, 0.968, 127, ["3"]], ["STATIC_BALK_1_TYPE", 3.6, 124.4, 0.8, 0.8, -90, [""]], ["STATIC_BALK_1_TYPE", 3.6, 226.55, 0.8, 0.8, -90, [""]], ["STATIC_BALK_1_TYPE", 3.6, 328.05, 0.8, 0.8, -90, [""]], ["STATIC_BALK_1_TYPE", 314.9, 324.95, 0.8, 0.8, 90, [""]], ["STATIC_BALK_1_TYPE", 314.9, 222.8, 0.8, 0.8, 90, [""]], ["STATIC_BALK_1_TYPE", 314.9, 121.3, 0.8, 0.8, 90, [""]], ["BONUS_STAR_TYPE", 247.4, 226.55, 0.798, 0.798, 0, [""]], ["BONUS_STAR_TYPE", 163.6, 342.6, 0.798, 0.798, 0, [""]], ["BONUS_STAR_TYPE", 80.75, 175.65, 0.798, 0.798, 0, [""]], ["AIM_TYPE", 152.25, 409.55, 0.9, 0.9, -180, ["DEF"]]], [["TELEPORT_TYPE", 70.45, 228.05, 1.29, 1.29, 0, ["A"]], ["TELEPORT_TYPE", 228.7, 385.5, 1.29, 1.29, 0, ["A"]], ["BOMB_TYPE", 153.15, 369.25, 0.8, 0.8, 0, ["200_300"]], ["BOMB_TYPE", 87.9, 353.05, 0.8, 0.8, 0, ["140_300"]], ["BOMB_TYPE", 290.2, 379.05, 0.8, 0.8, 0, ["300_300"]], ["BALL_TYPE", 173.95, 158.85, 0.68, 0.68, 0, [""]], ["AIM_TYPE", 197.9, 86.35, 0.9, 0.9, 11, ["DEF"]]], [["BONUS_HOLE_TYPE", 175.85, 278.15, 0.8, 0.8, 0, [""]], ["BALL_TYPE", 195.3, 135.6, 0.68, 0.68, 0, [""]], ["PUSHER_TYPE", 43.8, 196.6, 0.899, 0.899, 78, [""]], ["PUSHER_TYPE", 249.9, 81.6, 0.968, 0.968, 127, ["3"]], ["STATIC_BALK_1_TYPE", 67.85, 369.05, 0.8, 0.8, -130, [""]], ["BONUS_STAR_TYPE", 149.35, 182.15, 0.798, 0.798, 0, [""]], ["BONUS_STAR_TYPE", 163.6, 369.9, 0.798, 0.798, 0, [""]], ["BONUS_STAR_TYPE", 90.75, 299.85, 0.798, 0.798, 0, [""]], ["AIM_TYPE", 194.45, 412.6, 0.9, 0.9, 146, ["DEF"]]], [["BALL_TYPE", 231.65, 293.95, 0.68, 0.68, 0, [""]], ["PUSHER_TYPE", 266.15, 379.3, 1, 1, -97, [""]], ["DYNAMIC_RECT_TYPE", 162.2, 232.4, 1.31, 1.278, 0, [""]], ["PUSHER_TYPE", 79.65, 350.95, 1, 1, -81, ["2"]], ["DYNAMIC_RECT_TYPE", 162.2, 204.6, 1.31, 1.278, 0, [""]], ["AIM_TYPE", 238.25, 93.85, 0.9, 0.9, 31, ["DEF"]], ["DYNAMIC_RECT_TYPE", 171.55, 265.2, 0.0050, 0.019, -4, [""]], ["BONUS_STAR_TYPE", 193.05, 166.95, 0.798, 0.798, 0, [""]], ["BONUS_STAR_TYPE", 164.75, 373.2, 0.798, 0.798, 0, [""]], ["BONUS_STAR_TYPE", 75.05, 185.25, 0.798, 0.798, 0, [""]]], [["BONUS_KAKTUS_TYPE", 182.5, 277.05, 0.8, 0.8, 0, [""]], ["BALL_TYPE", 202.4, 366.75, 0.68, 0.68, 0, [""]], ["PUSHER_TYPE", 268.95, 386.75, 0.899, 0.899, -134, [""]], ["PUSHER_TYPE", 278.75, 211.8, 0.968, 0.968, -163, ["3"]], ["STATIC_BALK_1_TYPE", 35.6, 161.8, 0.8, 0.8, 0, [""]], ["PUSHER_TYPE", 37.9, 356.85, 0.968, 0.968, -80, ["3"]], ["PUSHER_TYPE", 40.9, 222.8, 1, 1, -7, ["2"]], ["AIM_TYPE", 72.6, 72.1, 0.9, 0.9, -42, ["DEF"]], ["BONUS_STAR_TYPE", 143.05, 115.4, 0.798, 0.798, 0, [""]], ["BONUS_STAR_TYPE", 107.35, 327.4, 0.798, 0.798, 0, [""]], ["BONUS_STAR_TYPE", 170.4, 193.8, 0.798, 0.798, 0, [""]]], [["STATIC_BOX_TYPE", 21.2, 178.2, 0.8, 0.8, 0, ["2"]], ["STATIC_BOX_TYPE", 21.2, 232.85, 0.8, 0.8, 0, ["2"]], ["STATIC_BOX_TYPE", 21.2, 287.5, 0.8, 0.8, 0, ["2"]], ["STATIC_BOX_TYPE", 327.2, 190.2, 0.8, 0.8, 0, ["3"]], ["STATIC_BOX_TYPE", 327.2, 246.75, 0.8, 0.8, 0, ["3"]], ["STATIC_BOX_TYPE", 327.2, 303.75, 0.8, 0.8, 0, ["3"]], ["BOMB_TYPE", 161.1, 412.95, 0.8, 0.8, 0, ["200_300"]], ["BOMB_TYPE", 26.55, 347.3, 0.8, 0.8, 0, ["140_300"]], ["BOMB_TYPE", 230.05, 396.75, 0.8, 0.8, 0, ["300_300"]], ["BALL_TYPE", 163.2, 146.6, 0.68, 0.68, 0, [""]], ["PUSHER_TYPE", 221.75, 96.45, 0.899, 0.899, -134, [""]], ["PUSHER_TYPE", 103.1, 85.25, 1, 1, -7, ["2"]], ["AIM_TYPE", 203.95, 245.55, 0.9, 0.9, 7, ["DEF"]], ["BONUS_STAR_TYPE", 79.15, 253.4, 0.798, 0.798, 0, [""]], ["BONUS_STAR_TYPE", 170.4, 334.8, 0.798, 0.798, 0, [""]], ["BONUS_STAR_TYPE", 226.75, 175.65, 0.798, 0.798, 0, [""]]], [["BONUS_DANGER_ACTIV_TYPE", 196, 277.3, 1, 1, 0, ["30_80_60"]], ["BONUS_DANGER_ACTIV_TYPE", 140.4, 365.35, 1, 1, 0, ["30_80_30"]], ["BOMB_TYPE", 22.8, 366.15, 0.8, 0.8, 0, ["80_550"]], ["BOMB_TYPE", 206.2, 418.8, 0.8, 0.8, 0, ["100_700"]], ["BALL_TYPE", 74.4, 363.8, 0.68, 0.68, 0, [""]], ["PUSHER_TYPE", 282.25, 164.7, 1, 1, 179, [""]], ["STATIC_BALK_1_TYPE", 254.35, 353.1, 0.8, 0.8, 90, [""]], ["PUSHER_TYPE", 77.5, 236.95, 0.968, 0.968, -80, ["3"]], ["STATIC_BALK_1_TYPE", 12.6, 149.25, 0.8, 0.8, -90, [""]], ["STATIC_BALK_1_TYPE", 204.1, 100.4, 0.8, 0.8, 0, [""]], ["AIM_TYPE", 79.85, 52.2, 0.9, 0.9, 0, ["DEF"]], ["BONUS_STAR_TYPE", 208.1, 357, 0.798, 0.798, 0, [""]], ["BONUS_STAR_TYPE", 188.4, 166.95, 0.798, 0.798, 0, [""]], ["BONUS_STAR_TYPE", 76.75, 299.85, 0.798, 0.798, 0, [""]]], [["TELEPORT_TYPE", 287.75, 221.9, 1.29, 1.29, 0, ["A"]], ["TELEPORT_TYPE", 55.45, 214.35, 1.29, 1.29, 0, ["A"]], ["TELEPORT_TYPE", 270.2, 133.75, 1.29, 1.29, 0, ["B"]], ["TELEPORT_TYPE", 86.3, 309.4, 1.29, 1.29, 0, ["B"]], ["BALL_TYPE", 130.5, 135.2, 0.68, 0.68, 0, [""]], ["PUSHER_TYPE", 175.1, 375.25, 0.968, 0.968, -88, ["3"]], ["STATIC_BALK_1_TYPE", 56.05, 72, 0.8, 0.8, 0, [""]], ["STATIC_BALK_1_TYPE", 159.3, 69.55, 0.8, 0.8, 0, [""]], ["BOMB_TYPE", 279.55, 312.3, 0.8, 0.8, 0, ["140_600"]], ["BOMB_TYPE", 279.55, 369.25, 0.8, 0.8, 0, ["80_400"]], ["BONUS_STAR_TYPE", 198.9, 135.1, 0.798, 0.798, 0, [""]], ["BONUS_STAR_TYPE", 173.6, 299.85, 0.798, 0.798, 0, [""]], ["BONUS_STAR_TYPE", 96.75, 386.45, 0.798, 0.798, 0, [""]], ["AIM_TYPE", 174, 218.7, 0.9, 0.9, 0, ["DEF"]]], [["DECOR_SKULL_TYPE", 53.9, 208.8, 1, 1, 0, [""]], ["BALL_TYPE", 210.2, 212.1, 0.68, 0.68, 0, [""]], ["STATIC_BOX_TYPE", 226.95, 403.65, 0.8, 0.8, 0, ["2"]], ["STATIC_BOX_TYPE", 282.55, 403.65, 0.8, 0.8, 0, ["2"]], ["STATIC_BOX_TYPE", 96.55, 296.3, 0.8, 0.8, 0, ["2"]], ["STATIC_BOX_TYPE", 185.5, 82.85, 0.8, 0.8, 0, ["2"]], ["STATIC_BOX_TYPE", 154.35, 295.05, 0.8, 0.8, 0, ["2"]], ["STATIC_BOX_TYPE", 39.95, 296.1, 0.8, 0.8, 0, ["2"]], ["BONUS_STAR_TYPE", 239.9, 327.4, 0.798, 0.798, 0, [""]], ["BONUS_STAR_TYPE", 217.4, 265.7, 0.798, 0.798, 0, [""]], ["STATIC_BOX_TYPE", 301.4, 294.3, 0.8, 0.8, 0, ["2"]], ["STATIC_BOX_TYPE", 271.55, 241.65, 0.8, 0.8, 0, ["2"]], ["STATIC_BOX_TYPE", 129.9, 91.6, 0.8, 0.8, 0, ["2"]], ["STATIC_BOX_TYPE", 144.45, 214.2, 0.8, 0.8, 0, ["2"]], ["MOVABLE_BALK_TYPE", 140.3, 134.25, 1.49, 0.699, 0, ["R_0_17"]], ["MOVABLE_BALK_TYPE", 91.35, 346.45, 1.74, 0.699, 0, ["L_1030_15"]], ["AIM_TYPE", 277.55, 139.15, 0.9, 0.9, 74, ["DEF"]], ["PUSHER_TYPE", 158.75, 399.35, 1, 1, 93, ["3"]]], [["BOMB_TYPE", 263, 249.95, 0.8, 0.8, 0, ["100_700"]], ["BOMB_TYPE", 84.1, 293.15, 0.8, 0.8, 0, ["100_700"]], ["BOMB_TYPE", 301.65, 77.3, 0.8, 0.8, 0, ["100_400"]], ["BALL_TYPE", 101.4, 119.65, 0.68, 0.68, 0, [""]], ["PUSHER_TYPE", 261.35, 344.9, 1, 1, -102, [""]], ["STATIC_BALK_1_TYPE", 305.5, 154.95, 0.8, 0.8, 90, [""]], ["STATIC_BALK_1_TYPE", 24.8, 126.6, 0.8, 0.8, 180, [""]], ["STATIC_BALK_1_TYPE", 241.15, 29.4, 0.8, 0.8, 0, [""]], ["STATIC_BALK_1_TYPE", 18.8, 192.55, 0.8, 0.8, 180, [""]], ["DYNAMIC_RECT_TYPE", 56.4, 157.45, 1.31, 1.278, 0, [""]], ["STATIC_BALK_1_TYPE", 44.45, 306.4, 0.8, 0.8, -90, [""]], ["STATIC_BALK_1_TYPE", 58.75, 49.55, 0.8, 0.8, -90, [""]], ["STATIC_BALK_1_TYPE", 193.4, 128.85, 0.8, 0.8, 180, [""]], ["STATIC_BALK_1_TYPE", 137.9, 29.35, 0.8, 0.8, 0, [""]], ["STATIC_BALK_1_TYPE", 344.4, 29.4, 0.8, 0.8, 0, [""]], ["BONUS_STAR_TYPE", 113.25, 218.7, 0.798, 0.798, 0, [""]], ["BONUS_STAR_TYPE", 117.7, 337.7, 0.798, 0.798, 0, [""]], ["BONUS_STAR_TYPE", 195.7, 280.7, 0.798, 0.798, 0, [""]], ["AIM_TYPE", 114.5, 412.55, 0.9, 0.9, 180, ["DEF"]]]], allBgIndexes = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], isEditorDebug = !1, editorLevelToLoad = 19, manifest = [{
    src: PRELOADER_LOGO,
    id: "preloaderlogo"
},
{
    src: "footyardassets.png",
    id: "zoespritesheet"
}], zoeCFG = {
    framerate: 24,
    images: ["assets/footyardassets.png"],
    frames: [[1255, 1771, 37, 33, 0, 17, 15], [1325, 1771, 37, 33, 0, 17, 15], [1218, 1771, 37, 33, 0, 17, 15], [253, 362, 295, 231, 0, 147, 142], [1454, 362, 359, 164, 0, 179, 95], [1585, 1120, 78, 78, 0, 35, 33], [1765, 1021, 88, 90, 0, 39, 37], [1503, 1120, 82, 78, 0, 38, 37], [282, 1021, 216, 98, 0, 99, 44], [302, 1207, 74, 74, 0, 33, 33], [152, 1207, 75, 75, 0, 34, 33], [227, 1207, 75, 75, 0, 34, 33], [2, 1207, 75, 75, 0, 33, 33], [2, 1120, 87, 87, 0, 39, 39], [1466, 1282, 69, 70, 0, 31, 31], [142, 1422, 62, 61, 0, 27, 26], [971, 1771, 36, 40, 0, 0, 0], [682, 362, 244, 205, 0, 114, 52], [1589, 1021, 88, 90, 0, 39, 37], [1501, 1021, 88, 90, 0, 39, 37], [1677, 1021, 88, 90, 0, 39, 37], [907, 613, 288, 148, 0, 138, 122], [77, 1207, 75, 75, 0, 33, 33], [89, 1120, 88, 83, 0, 44, 43], [764, 1662, 160, 57, 0, 77, 24], [913, 1719, 264, 52, 0, 127, 19], [317, 1771, 141, 45, 0, 71, 21], [1865, 1771, 153, 30, 0, 74, 12], [1570, 1771, 135, 31, 0, 65, 11], [1705, 1771, 127, 30, 0, 61, 12], [1362, 1771, 208, 31, 0, 102, 11], [2, 1820, 183, 29, 0, 89, 12], [185, 1820, 196, 29, 0, 96, 12], [637, 1719, 276, 52, 0, 136, 24], [1622, 2, 295, 308, 0, 136, 193], [1205, 362, 249, 175, 0, 115, 95], [2, 362, 251, 251, 0, 125, 124], [1948, 1021, 101, 87, 0, 48, 41], [1383, 1282, 83, 70, 0, 39, 33], [896, 1021, 100, 94, 0, 48, 45], [338, 1120, 110, 82, 0, 53, 39], [893, 1120, 86, 81, 0, 41, 38], [74, 1422, 68, 61, 0, 33, 26], [548, 362, 134, 223, 0, 66, 112], [2, 1354, 235, 68, 0, 112, 31], [673, 902, 314, 113, 0, 154, 34], [2, 1771, 138, 49, 0, 96, 23], [1375, 1021, 126, 91, 0, 61, 49], [2, 1021, 280, 99, 0, 143, 46], [2022, 1282, 28, 45, 0, -4, 0], [560, 1771, 35, 44, 0, 0, 0], [458, 1771, 33, 44, 0, -1, 0], [595, 1771, 35, 44, 0, 0, 0], [725, 1771, 33, 44, 0, -1, 0], [525, 1771, 35, 44, 0, 0, 0], [630, 1771, 35, 44, 0, 0, 0], [876, 1771, 33, 44, 0, -1, 0], [491, 1771, 34, 44, 0, -1, 0], [2008, 1662, 35, 45, 0, 0, 1], [1054, 1354, 134, 64, 0, 65, 33], [802, 1021, 94, 94, 0, 0, 0], [2040, 2, 4, 4, 0, 200, 200], [521, 1354, 138, 66, 0, 67, 32], [1014, 1207, 138, 72, 0, 67, 33], [1604, 1282, 138, 68, 0, 67, 32], [1742, 1282, 138, 68, 0, 67, 32], [311, 1354, 138, 67, 0, 67, 32], [1101, 902, 114, 113, 0, 55, 54], [2, 902, 120, 119, 0, 57, 58], [1052, 765, 124, 123, 0, 60, 59], [1543, 765, 122, 122, 0, 59, 61], [868, 1820, 113, 26, 0, 54, 10], [755, 1820, 113, 26, 0, 54, 10], [1681, 1719, 57, 50, 0, 27, 24], [940, 1207, 74, 73, 0, 34, 32], [689, 1207, 74, 73, 0, 34, 32], [1309, 1282, 74, 71, 0, 35, 33], [639, 1820, 116, 26, 0, 55, 10], [1043, 1771, 35, 36, 0, 15, 16], [1007, 1771, 36, 36, 0, 15, 16], [1183, 1771, 35, 35, 0, 15, 16], [1148, 1771, 35, 35, 0, 15, 16], [1113, 1771, 35, 35, 0, 15, 15], [1078, 1771, 35, 36, 0, 15, 16], [1738, 1719, 57, 50, 0, 27, 24], [1861, 1120, 77, 77, 0, 37, 36], [1238, 1604, 58, 58, 0, 27, 27], [1413, 1604, 59, 58, 0, 27, 27], [1391, 1662, 58, 56, 0, 27, 26], [1624, 1719, 57, 50, 0, 27, 24], [1483, 902, 172, 106, 0, 85, 51], [1839, 902, 163, 96, 0, 80, 40], [643, 765, 150, 132, 0, 40, 44], [758, 1771, 56, 44, 0, 27, 22], [788, 1354, 56, 65, 0, 26, 36], [724, 1354, 64, 65, 0, 28, 38], [1569, 1719, 55, 51, 0, 25, 27], [659, 1354, 65, 66, 0, 29, 33], [1379, 1120, 82, 79, 0, 37, 43], [524, 1120, 89, 81, 0, 39, 44], [1853, 1021, 95, 88, 0, 43, 46], [498, 1021, 102, 95, 0, 44, 49], [1270, 1021, 105, 92, 0, 45, 47], [696, 1021, 106, 94, 0, 47, 48], [1073, 1021, 105, 93, 0, 44, 49], [410, 1820, 114, 27, 0, 55, 11], [2018, 1771, 30, 30, 0, 14, 15], [1832, 1771, 33, 30, 0, 15, 14], [381, 1820, 29, 28, 0, 13, 12], [1795, 1719, 59, 50, 0, 27, 22], [524, 1820, 115, 26, 0, 54, 10], [449, 1354, 72, 67, 0, 34, 31], [204, 1771, 113, 48, 0, 54, 22], [1919, 1719, 114, 48, 0, 55, 22], [1082, 2, 540, 360, 0, 0, 0], [542, 2, 540, 360, 0, 0, 0], [2, 2, 540, 360, 0, 0, 0], [2017, 1120, 31, 55, 0, 15, 38], [1734, 1662, 39, 54, 0, 19, 38], [1549, 1662, 39, 55, 0, 19, 38], [1508, 1662, 41, 55, 0, 20, 38], [1696, 1662, 38, 54, 0, 19, 38], [2002, 1604, 40, 56, 0, 20, 39], [1588, 1662, 40, 55, 0, 20, 38], [1773, 1662, 40, 54, 0, 20, 38], [2012, 1207, 38, 55, 0, 19, 39], [572, 1719, 65, 52, 0, 31, 36], [511, 1719, 61, 52, 0, 31, 36], [131, 1719, 64, 52, 0, 31, 36], [195, 1719, 64, 52, 0, 31, 36], [2, 1719, 65, 52, 0, 31, 36], [67, 1719, 64, 52, 0, 31, 36], [1813, 1662, 64, 53, 0, 31, 37], [259, 1719, 65, 52, 0, 31, 36], [393, 1719, 65, 52, 0, 31, 36], [1877, 1662, 64, 53, 0, 31, 37], [324, 1719, 69, 52, 0, 33, 36], [926, 362, 279, 182, 0, 0, 0], [2002, 902, 44, 93, 0, 19, 73], [1986, 765, 57, 107, 0, 27, 77], [1966, 362, 80, 122, 0, 39, 81], [140, 765, 101, 135, 0, 50, 84], [1944, 613, 103, 139, 0, 51, 87], [1556, 613, 104, 144, 0, 51, 91], [1450, 613, 106, 145, 0, 52, 91], [1195, 613, 108, 147, 0, 53, 92], [1917, 2, 110, 150, 0, 54, 93], [1665, 765, 80, 122, 0, 40, 93], [593, 902, 80, 116, 0, 40, 94], [1215, 902, 80, 112, 0, 40, 95], [1295, 902, 79, 110, 0, 39, 97], [1761, 902, 78, 106, 0, 39, 98], [996, 1021, 77, 93, 0, 38, 100], [177, 1120, 77, 83, 0, 38, 92], [448, 1120, 76, 82, 0, 37, 93], [749, 1120, 76, 81, 0, 37, 94], [1319, 1120, 60, 79, 0, 22, 94], [1461, 1120, 42, 78, 0, 21, 95], [1663, 1120, 40, 78, 0, 20, 96], [2027, 2, 13, 13, 0, 0, 83], [1880, 1282, 68, 67, 0, 32, 32], [254, 1120, 84, 83, 0, 40, 40], [1374, 902, 109, 109, 0, 53, 53], [793, 765, 130, 129, 0, 63, 63], [241, 765, 135, 135, 0, 66, 66], [1803, 613, 141, 141, 0, 69, 69], [2, 613, 152, 152, 0, 75, 74], [1813, 362, 153, 152, 0, 75, 74], [456, 613, 152, 151, 0, 75, 74], [305, 613, 151, 151, 0, 74, 74], [154, 613, 151, 151, 0, 74, 74], [608, 613, 150, 150, 0, 74, 73], [758, 613, 149, 148, 0, 73, 72], [1303, 613, 147, 146, 0, 72, 71], [1660, 613, 143, 143, 0, 70, 70], [2, 765, 138, 137, 0, 68, 67], [376, 765, 135, 134, 0, 66, 65], [511, 765, 132, 132, 0, 65, 64], [923, 765, 129, 128, 0, 63, 62], [1292, 1771, 33, 33, 0, 15, 15], [458, 1719, 53, 52, 0, 25, 25], [1152, 1207, 72, 72, 0, 35, 35], [1178, 1021, 92, 92, 0, 45, 45], [600, 1021, 96, 95, 0, 46, 46], [1655, 902, 106, 106, 0, 51, 51], [987, 902, 114, 113, 0, 55, 55], [477, 902, 116, 117, 0, 56, 57], [122, 902, 118, 119, 0, 57, 58], [359, 902, 118, 118, 0, 57, 57], [240, 902, 119, 119, 0, 58, 58], [1866, 765, 120, 119, 0, 58, 58], [1745, 765, 121, 121, 0, 59, 59], [1421, 765, 122, 122, 0, 59, 59], [1299, 765, 122, 123, 0, 59, 60], [1176, 765, 123, 123, 0, 60, 60], [1938, 1120, 79, 77, 0, 42, 36], [1782, 1120, 79, 77, 0, 42, 36], [1703, 1120, 79, 77, 0, 42, 36], [1468, 1354, 70, 64, 0, -41, 31], [1538, 1354, 70, 64, 0, -41, 31], [1608, 1354, 70, 64, 0, -41, 31], [1678, 1354, 70, 64, 0, -41, 31], [1748, 1354, 70, 64, 0, -41, 31], [1398, 1354, 70, 64, 0, -41, 31], [1958, 1354, 70, 64, 0, -41, 31], [1818, 1354, 70, 64, 0, -41, 31], [1888, 1354, 70, 64, 0, -41, 31], [914, 1354, 70, 64, 0, -41, 31], [1188, 1354, 70, 64, 0, -41, 31], [844, 1354, 70, 64, 0, -41, 31], [984, 1354, 70, 64, 0, -41, 31], [1258, 1354, 70, 64, 0, -41, 31], [1328, 1354, 70, 64, 0, -41, 31], [1224, 1207, 87, 72, 0, 45, 34], [1133, 1282, 87, 72, 0, 45, 34], [1220, 1282, 89, 72, 0, 47, 34], [1311, 1207, 89, 72, 0, 47, 34], [1400, 1207, 89, 72, 0, 47, 34], [1489, 1207, 88, 72, 0, 46, 34], [1577, 1207, 87, 72, 0, 45, 34], [1664, 1207, 87, 72, 0, 45, 34], [1751, 1207, 87, 72, 0, 45, 34], [1838, 1207, 87, 72, 0, 45, 34], [1925, 1207, 87, 72, 0, 45, 34], [2, 1282, 87, 72, 0, 45, 34], [89, 1282, 87, 72, 0, 45, 34], [176, 1282, 87, 72, 0, 45, 34], [263, 1282, 87, 72, 0, 45, 34], [350, 1282, 87, 72, 0, 45, 34], [437, 1282, 87, 72, 0, 45, 34], [524, 1282, 87, 72, 0, 45, 34], [611, 1282, 87, 72, 0, 45, 34], [698, 1282, 87, 72, 0, 45, 34], [785, 1282, 87, 72, 0, 45, 34], [872, 1282, 87, 72, 0, 45, 34], [959, 1282, 87, 72, 0, 45, 34], [1046, 1282, 87, 72, 0, 45, 34], [979, 1120, 68, 80, 0, 32, 38], [1183, 1120, 68, 80, 0, 32, 38], [1047, 1120, 68, 80, 0, 32, 38], [1115, 1120, 68, 80, 0, 32, 38], [1251, 1120, 68, 80, 0, 32, 38], [825, 1120, 68, 81, 0, 32, 38], [613, 1120, 68, 81, 0, 32, 38], [681, 1120, 68, 81, 0, 32, 38], [881, 1207, 59, 73, 0, 30, 35], [822, 1207, 59, 73, 0, 30, 35], [630, 1207, 59, 73, 0, 30, 35], [376, 1207, 59, 73, 0, 30, 35], [512, 1207, 59, 73, 0, 30, 35], [763, 1207, 59, 73, 0, 30, 35], [571, 1207, 59, 73, 0, 30, 35], [665, 1771, 60, 44, 0, 28, 20], [814, 1771, 62, 44, 0, 28, 20], [140, 1771, 64, 48, 0, 28, 24], [1941, 1662, 67, 53, 0, 28, 29], [2, 1604, 69, 58, 0, 28, 34], [2, 1422, 72, 63, 0, 28, 39], [237, 1354, 74, 68, 0, 28, 44], [435, 1207, 77, 73, 0, 28, 49], [1948, 1282, 74, 67, 0, 28, 43], [264, 1422, 71, 61, 0, 28, 37], [1628, 1662, 68, 55, 0, 28, 31], [1854, 1719, 65, 50, 0, 28, 26], [909, 1771, 62, 44, 0, 28, 20], [363, 1485, 60, 59, 0, 28, 28], [605, 1485, 59, 59, 0, 27, 28], [1027, 1485, 59, 59, 0, 27, 28], [1064, 1604, 58, 58, 0, 27, 28], [1180, 1604, 58, 58, 0, 27, 28], [1158, 1662, 57, 57, 0, 26, 28], [1296, 1604, 57, 58, 0, 26, 29], [1650, 1604, 58, 58, 0, 27, 29], [1041, 1662, 58, 57, 0, 27, 29], [656, 1604, 58, 58, 0, 27, 30], [774, 1604, 58, 58, 0, 27, 30], [1086, 1485, 59, 59, 0, 27, 31], [1726, 1422, 60, 60, 0, 28, 31], [1786, 1422, 60, 60, 0, 28, 31], [1666, 1422, 60, 60, 0, 28, 31], [577, 1422, 60, 60, 0, 28, 31], [637, 1422, 61, 60, 0, 28, 31], [1183, 1422, 61, 60, 0, 28, 31], [759, 1422, 61, 60, 0, 28, 31], [820, 1422, 61, 60, 0, 28, 31], [881, 1422, 61, 60, 0, 28, 31], [1145, 1485, 61, 59, 0, 28, 30], [664, 1485, 61, 59, 0, 28, 30], [1383, 1485, 60, 59, 0, 27, 30], [714, 1604, 60, 58, 0, 27, 30], [1708, 1604, 60, 57, 0, 27, 29], [1825, 1604, 60, 57, 0, 27, 29], [1944, 1604, 58, 57, 0, 26, 29], [470, 1662, 59, 57, 0, 27, 29], [982, 1662, 59, 57, 0, 27, 29], [1215, 1662, 58, 57, 0, 27, 28], [352, 1662, 58, 57, 0, 27, 28], [118, 1662, 59, 57, 0, 27, 28], [1558, 1545, 60, 58, 0, 28, 29], [1322, 1545, 60, 58, 0, 28, 29], [1504, 1485, 60, 59, 0, 28, 29], [725, 1485, 60, 59, 0, 28, 29], [785, 1485, 61, 59, 0, 28, 29], [846, 1485, 61, 59, 0, 28, 29], [907, 1485, 60, 59, 0, 28, 29], [967, 1485, 60, 59, 0, 28, 29], [242, 1485, 60, 60, 0, 28, 30], [182, 1485, 60, 60, 0, 28, 29], [122, 1485, 60, 60, 0, 28, 29], [1206, 1485, 59, 59, 0, 28, 29], [1265, 1485, 59, 59, 0, 28, 29], [1324, 1485, 59, 59, 0, 28, 29], [71, 1604, 58, 58, 0, 28, 28], [1122, 1604, 58, 58, 0, 28, 28], [306, 1604, 58, 58, 0, 28, 28], [422, 1604, 57, 58, 0, 28, 27], [364, 1604, 58, 58, 0, 28, 27], [129, 1604, 58, 58, 0, 28, 27], [247, 1604, 59, 58, 0, 29, 27], [1305, 1422, 60, 60, 0, 29, 28], [1966, 1422, 60, 60, 0, 29, 28], [62, 1485, 60, 60, 0, 29, 28], [1906, 1422, 60, 60, 0, 29, 28], [122, 1545, 61, 59, 0, 30, 28], [183, 1545, 61, 59, 0, 30, 28], [244, 1545, 60, 59, 0, 29, 28], [1262, 1545, 60, 58, 0, 29, 28], [1382, 1545, 60, 58, 0, 29, 28], [1273, 1662, 59, 57, 0, 28, 27], [293, 1662, 59, 57, 0, 28, 27], [235, 1662, 58, 57, 0, 27, 27], [177, 1662, 58, 57, 0, 26, 28], [1968, 1545, 59, 58, 0, 27, 28], [1908, 1545, 60, 58, 0, 27, 28], [841, 1545, 61, 59, 0, 28, 28], [1564, 1485, 61, 59, 0, 28, 28], [962, 1545, 61, 59, 0, 28, 28], [302, 1485, 61, 60, 0, 28, 29], [1746, 1485, 60, 59, 0, 28, 28], [204, 1422, 60, 61, 0, 28, 29], [663, 1545, 60, 59, 0, 28, 28], [902, 1545, 60, 59, 0, 28, 28], [723, 1545, 59, 59, 0, 27, 28], [782, 1545, 59, 59, 0, 27, 28], [1442, 1545, 58, 58, 0, 27, 28], [1500, 1545, 58, 58, 0, 27, 28], [1768, 1604, 57, 57, 0, 26, 28], [1618, 1545, 57, 58, 0, 26, 29], [1675, 1545, 58, 58, 0, 27, 29], [60, 1662, 58, 57, 0, 27, 29], [1792, 1545, 58, 58, 0, 27, 30], [1850, 1545, 58, 58, 0, 27, 30], [1203, 1545, 59, 59, 0, 27, 31], [1485, 1422, 60, 60, 0, 28, 31], [1425, 1422, 60, 60, 0, 28, 31], [1365, 1422, 60, 60, 0, 28, 31], [1846, 1422, 60, 60, 0, 28, 31], [1244, 1422, 61, 60, 0, 28, 31], [1122, 1422, 61, 60, 0, 28, 31], [396, 1422, 61, 60, 0, 28, 31], [335, 1422, 61, 60, 0, 28, 31], [698, 1422, 61, 60, 0, 28, 31], [1625, 1485, 61, 59, 0, 28, 30], [602, 1545, 61, 59, 0, 28, 30], [542, 1545, 60, 59, 0, 27, 30], [482, 1545, 60, 59, 0, 27, 30], [410, 1662, 60, 57, 0, 27, 29], [1530, 1604, 60, 58, 0, 27, 29], [588, 1662, 60, 57, 0, 27, 29], [648, 1662, 58, 57, 0, 26, 29], [706, 1662, 58, 57, 0, 26, 29], [1099, 1662, 59, 57, 0, 27, 29], [529, 1662, 59, 57, 0, 27, 28], [924, 1662, 58, 57, 0, 27, 28], [1332, 1662, 59, 57, 0, 27, 28], [536, 1604, 60, 58, 0, 28, 29], [596, 1604, 60, 58, 0, 28, 29], [1686, 1485, 60, 59, 0, 28, 29], [1928, 1485, 60, 59, 0, 28, 29], [1806, 1485, 61, 59, 0, 28, 29], [1867, 1485, 61, 59, 0, 28, 29], [62, 1545, 60, 59, 0, 28, 29], [2, 1545, 60, 59, 0, 28, 29], [517, 1422, 60, 60, 0, 28, 30], [1545, 1422, 60, 60, 0, 28, 29], [2, 1485, 60, 60, 0, 28, 29], [1988, 1485, 59, 59, 0, 28, 29], [304, 1545, 59, 59, 0, 28, 29], [1023, 1545, 59, 59, 0, 28, 29], [890, 1604, 58, 58, 0, 28, 28], [948, 1604, 58, 58, 0, 28, 28], [1006, 1604, 58, 58, 0, 28, 28], [479, 1604, 57, 58, 0, 28, 27], [832, 1604, 58, 58, 0, 28, 27], [1472, 1604, 58, 58, 0, 28, 27], [423, 1545, 59, 59, 0, 29, 27], [1062, 1422, 60, 60, 0, 29, 28], [1002, 1422, 60, 60, 0, 29, 28], [942, 1422, 60, 60, 0, 29, 28], [457, 1422, 60, 60, 0, 29, 28], [363, 1545, 60, 59, 0, 29, 28], [1142, 1545, 61, 59, 0, 30, 28], [1082, 1545, 60, 59, 0, 29, 28], [1353, 1604, 60, 58, 0, 29, 28], [1590, 1604, 60, 58, 0, 29, 28], [1885, 1604, 59, 57, 0, 28, 27], [2, 1662, 58, 57, 0, 27, 27], [1449, 1662, 59, 56, 0, 27, 27], [1733, 1545, 59, 58, 0, 27, 28], [187, 1604, 60, 58, 0, 27, 28], [1443, 1485, 61, 59, 0, 28, 28], [483, 1485, 61, 59, 0, 28, 28], [544, 1485, 61, 59, 0, 28, 28], [1605, 1422, 61, 60, 0, 28, 29], [423, 1485, 60, 59, 0, 28, 28], [1373, 1719, 196, 51, 0, 98, 24], [1177, 1719, 196, 51, 0, 98, 24], [1535, 1282, 69, 69, 0, 30, 30]],
    animations: {
        0 : {
            frames: [57],
            speed: 1
        },
        2 : {
            frames: [50],
            speed: 1
        },
        3 : {
            frames: [51],
            speed: 1
        },
        5 : {
            frames: [53, 53],
            speed: 1
        },
        6 : {
            frames: [58],
            speed: 1
        },
        7 : {
            frames: [54],
            speed: 1
        },
        8 : {
            frames: [55],
            speed: 1
        },
        4 : {
            frames: [52],
            speed: 1
        },
        9 : {
            frames: [56],
            speed: 1
        },
        1 : {
            frames: [49],
            speed: 1
        },
        BONUS_HOLE_TYPE: {
            frames: [40],
            speed: 1
        },
        quitbtn: {
            frames: [9],
            speed: 1
        },
        achievback: {
            frames: [33],
            speed: 1
        },
        smallbg: {
            frames: [137],
            speed: 1
        },
        HARD_TRIANGLE_TYPE: {
            frames: [73],
            speed: 1
        },
        PUSHER_TYPE_4: {
            frames: [245, 246, 247, 248, 249, 250, 251],
            speed: 1
        },
        parteffectv1: {
            frames: [138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159],
            speed: 1
        },
        BONUS_DANGER_FULL_ACTIVATED: {
            frames: [259, 259, 259, 259, 259, 259],
            speed: 1
        },
        lvlnum20: {
            frames: [136],
            speed: 1
        },
        BONUS_DANGER_ACTIV_TYPE: {
            frames: [252],
            speed: 1
        },
        BONUS_KAKTUS_TYPE: {
            frames: [41],
            speed: 1
        },
        HARD_BOX_TYPE_4: {
            frames: [81],
            speed: 1
        },
        PUSHER_TYPE_3: {
            frames: [237, 237, 237, 237, 238, 238, 238, 238, 239, 240, 240, 239, 239, 241, 238, 238, 237, 237, 237, 237, 237, 237, 237, 242, 242, 243, 243, 243, 243, 243, 243, 243, 243, 243, 244, 244, 237, 237, 237, 237, 237, 237, 237],
            speed: 1
        },
        logov: {
            frames: [3],
            speed: 1
        },
        particle1v: {
            frames: [0],
            speed: 1
        },
        lvlLabelStar1: {
            frames: [18],
            speed: 1
        },
        lvlnum19: {
            frames: [135],
            speed: 1
        },
        achievdesc4: {
            frames: [31],
            speed: 1
        },
        achievdesc3: {
            frames: [30],
            speed: 1
        },
        parteffectv3: {
            frames: [179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 61, 61, 61],
            speed: 1
        },
        lvlnum17: {
            frames: [133],
            speed: 1
        },
        rotateScreen: {
            frames: [43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43],
            speed: 1
        },
        BONUS_DANGER_KUST_TYPE: {
            frames: [39],
            speed: 1
        },
        lvlnum15: {
            frames: [131],
            speed: 1
        },
        tint2: {
            frames: [60],
            speed: 1
        },
        HARD_BOX_TYPE_3: {
            frames: [80],
            speed: 1
        },
        sharebtntwitter: {
            frames: [416],
            speed: 1
        },
        lvlnum14: {
            frames: [130],
            speed: 1
        },
        STATIC_BALK_1_TYPE_2: {
            frames: [77, 77],
            speed: 1
        },
        STATIC_BOX_TYPE_3: {
            frames: [76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76],
            speed: 1
        },
        particle2v: {
            frames: [1],
            speed: 1
        },
        lvlnum16: {
            frames: [132],
            speed: 1
        },
        lvlnum13: {
            frames: [129],
            speed: 1
        },
        lvlnum12: {
            frames: [128],
            speed: 1
        },
        HARD_RECT_TYPE_2: {
            frames: [72],
            speed: 1
        },
        sharebtn: {
            frames: [415],
            speed: 1
        },
        lvlnum11: {
            frames: [127],
            speed: 1
        },
        nextlevelwin: {
            frames: [22],
            speed: 1
        },
        lvlnum18: {
            frames: [134],
            speed: 1
        },
        DECOR_OZERO_TYPE: {
            frames: [38],
            speed: 1
        },
        LAND_TYPE: {
            frames: [62],
            speed: 1
        },
        particle3v: {
            frames: [2],
            speed: 1
        },
        lvlnum10: {
            frames: [126],
            speed: 1
        },
        lvlnum9: {
            frames: [125],
            speed: 1
        },
        lvlnum8: {
            frames: [124],
            speed: 1
        },
        HARD_RECT_TYPE: {
            frames: [71],
            speed: 1
        },
        lvlnum6: {
            frames: [122],
            speed: 1
        },
        achievclosed: {
            frames: [26],
            speed: 1
        },
        lvlnum5: {
            frames: [121],
            speed: 1
        },
        moregames2v: {
            frames: [24],
            speed: 1
        },
        lvlnum7: {
            frames: [123],
            speed: 1
        },
        achievdesc5: {
            frames: [32],
            speed: 1
        },
        STATIC_BOX_TYPE: {
            frames: [74],
            speed: 1
        },
        STATIC_BOX_TYPE_2: {
            frames: [75],
            speed: 1
        },
        lvlnum3: {
            frames: [119],
            speed: 1
        },
        biglimetxt: {
            frames: [45],
            speed: 1
        },
        lvlnum1: {
            frames: [117],
            speed: 1
        },
        lvlnum4: {
            frames: [120],
            speed: 1
        },
        lvlnum2: {
            frames: [118],
            speed: 1
        },
        bigbg2: {
            frames: [116],
            speed: 1
        },
        musiconbtn: {
            frames: [10],
            speed: 1
        },
        achievbtn: {
            frames: [13],
            speed: 1
        },
        DECOR_HELP_4_TYPE: {
            frames: [70, 70, 70, 70],
            speed: 1
        },
        bigbg0: {
            frames: [114],
            speed: 1
        },
        TELEGA_TYPE_2: {
            frames: [113, 113],
            speed: 1
        },
        DECOR_HELP_3_TYPE: {
            frames: [69],
            speed: 1
        },
        musicoffbtn: {
            frames: [11],
            speed: 1
        },
        TELEGA_TYPE: {
            frames: [112],
            speed: 1
        },
        STATIC_CIRCLE_TYPE: {
            frames: [111],
            speed: 1
        },
        HARD_BOX_TYPE_2: {
            frames: [79],
            speed: 1
        },
        DECOR_KUST_TYPE: {
            frames: [37],
            speed: 1
        },
        tryagaintitle: {
            frames: [17],
            speed: 1
        },
        DYNAMIC_CIRCLE_TYPE: {
            frames: [111],
            speed: 1
        },
        playbtnup: {
            frames: [4],
            speed: 1
        },
        achievdesc1: {
            frames: [28],
            speed: 1
        },
        DYNAMIC_RECT_TYPE_2: {
            frames: [110],
            speed: 1
        },
        particleglass3: {
            frames: [108],
            speed: 1
        },
        DYNAMIC_RECT_TYPE: {
            frames: [77],
            speed: 1
        },
        BONUS_GHOST_TYPE: {
            frames: [109],
            speed: 1
        },
        particleglass2: {
            frames: [107],
            speed: 1
        },
        radugav: {
            frames: [36],
            speed: 1
        },
        achievmenutitle: {
            frames: [25],
            speed: 1
        },
        particleglass1: {
            frames: [106],
            speed: 1
        },
        btnbaseup: {
            frames: [14],
            speed: 1
        },
        levelbuttonlocked: {
            frames: [7],
            speed: 1
        },
        TELEPORT_TYPE: {
            frames: [265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414],
            speed: 1
        },
        pausetitle: {
            frames: [8],
            speed: 1
        },
        DECOR_HELP_1_TYPE: {
            frames: [67],
            speed: 1
        },
        GLASS_BLOCK_TYPE: {
            frames: [105],
            speed: 1
        },
        bombexplosionv: {
            frames: [95, 96, 97, 98, 99, 99, 100, 100, 101, 101, 102, 102, 103, 103, 104, 104],
            speed: 1
        },
        LAND_TYPE_5: {
            frames: [66],
            speed: 1
        },
        DECOR_HELP_2_TYPE: {
            frames: [68],
            speed: 1
        },
        levelreadylabel: {
            frames: [46],
            speed: 1
        },
        lvlLabelStar0: {
            frames: [6],
            speed: 1
        },
        AIM_BACK: {
            frames: [91],
            speed: 1
        },
        BONUS_DANGER_DISABLING: {
            frames: [260, 261, 262, 263, 264],
            speed: 1
        },
        BONUS_STAR_TYPE: {
            frames: [93],
            speed: 1
        },
        AIM_TYPE_MOVABLE: {
            frames: [92],
            speed: 1
        },
        BOMB_TYPE: {
            frames: [94],
            speed: 1
        },
        AIM_TYPE: {
            frames: [90],
            speed: 1
        },
        completestar: {
            frames: [23, 23],
            speed: 1
        },
        lvlLabelStar3: {
            frames: [20],
            speed: 1
        },
        achievdesc2: {
            frames: [29],
            speed: 1
        },
        lvlLabelStar2: {
            frames: [19],
            speed: 1
        },
        BONUS_DANGER_ACTIVATING: {
            frames: [252, 253, 254, 255, 256, 257, 258, 259],
            speed: 1
        },
        backbtn: {
            frames: [5],
            speed: 1
        },
        creditstitle: {
            frames: [44],
            speed: 1
        },
        LAND_TYPE_4: {
            frames: [65],
            speed: 1
        },
        DYNAMIC_TRIANGLE_TYPE: {
            frames: [89, 89, 89, 89, 89],
            speed: 1
        },
        LAND_TYPE_2: {
            frames: [63],
            speed: 1
        },
        completeelk: {
            frames: [35],
            speed: 1
        },
        lvlcompletebgnew: {
            frames: [21],
            speed: 1
        },
        tintbg: {
            frames: [16],
            speed: 1
        },
        HARD_BOX_TYPE: {
            frames: [78],
            speed: 1
        },
        LAND_TYPE_3: {
            frames: [64],
            speed: 1
        },
        pausebtn: {
            frames: [15],
            speed: 1
        },
        PUSHER_TYPE_2: {
            frames: [213, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 213, 213, 213, 213, 213, 213],
            speed: 1
        },
        DYNAMIC_BOX_TYPE_3: {
            frames: [88],
            speed: 1
        },
        DYNAMIC_BOX_TYPE_2: {
            frames: [87],
            speed: 1
        },
        facebooklikebtn: {
            frames: [417],
            speed: 1
        },
        BALL_TYPE: {
            frames: [85],
            speed: 1
        },
        DECOR_SKULL_TYPE: {
            frames: [42],
            speed: 1
        },
        DYNAMIC_BOX_TYPE: {
            frames: [86],
            speed: 1
        },
        strenghtarrow: {
            frames: [198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 212],
            speed: 1
        },
        STATIC_BALK_1_TYPE: {
            frames: [59],
            speed: 1
        },
        spelelogo: {
            frames: [48],
            speed: 1
        },
        newachievbgv: {
            frames: [34],
            speed: 1
        },
        splashlogo: {
            frames: [47],
            speed: 1
        },
        HARD_BOX_TYPE_5: {
            frames: [82],
            speed: 1
        },
        GLASS_BOX_TYPE: {
            frames: [83],
            speed: 1
        },
        PUSHER_TYPE: {
            frames: [195, 195, 195, 196, 196, 196, 195, 195, 195, 197, 197, 197],
            speed: 1
        },
        achievdesc0: {
            frames: [27],
            speed: 1
        },
        GLASS_TRIANGLE_TYPE: {
            frames: [84],
            speed: 1
        },
        bigbg1: {
            frames: [115],
            speed: 1
        },
        parteffectv2: {
            frames: [160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 61],
            speed: 1
        },
        restartbtn: {
            frames: [12],
            speed: 1
        }
    }
},
interfaceCFG = {},
bgCFG = {
    framerate: 24,
    images: ["assets/cheapbg.jpg"],
    frames: [[0, 270, 401, 270, 0, 0, 0], [401, 270, 401, 270, 0, 0, 0], [0, 540, 401, 270, 0, 0, 0], [401, 0, 401, 270, 0, 0, 0], [0, 0, 401, 270, 0, 0, 0]],
    animations: {
        bigbg: {
            speed: 1,
            frames: [0, 1, 2, 3, 4]
        }
    }
},
PART_STAR_TYPE = 1, PART_CLOUD_TYPE = 2, PART_NUM_TYPE = 3, PART_INSTRUCTION_TYPE = 4, PART_GLASS_TYPE = 5, PART_ACHIEV_TYPE = 6, MAX_PARTICLES_ON_SCREEN = 12; (function(c) {
    function b(a, b, c) {
        this.initialize(a, b, c)
    }
    var a = b.prototype;
    a.initialize = function(a, b, c) {
        var e = new createjs.Sprite(zoeSS);
        e.snapToPixel = !0;
        e.baseBlock = this;
        this.vis = e;
        this.reset(a, b, c)
    };
    a.reset = function(a, b, c) {
        this.type = a;
        this.vis.parent != b && removeFromParent(this.vis);
        createjs.Tween.removeTweens(this.vis);
        this.parent = b;
        this.vis.alpha = 1;
        this.vis.mouseEnabled = !1;
        this.speedY = this.speedX = 0;
        this.moveTarget = null;
        this.speedA = 0;
        this.speedScale = 0.05;
        this.maxScale = 1.2;
        this.isPrerendered = !1;
        this.speedAlpha = 0.08;
        this.gravity = 0.6;
        this.isNum = !1;
        this.beforeHideTimer = 0.1;
        this.isNeedDispose = this.isInstruction = !1;
        this.vis.spriteSheet = zoeSS;
        deleteCache(this.vis);
        var e = "numb0";
        a == PART_STAR_TYPE ? e = 0.7 < Math.random() ? "particle1v": 0.5 < Math.random() ? "particle3v": "particle2v": a == PART_NUM_TYPE || a == PART_ACHIEV_TYPE ? this.isNum = !0 : a == PART_CLOUD_TYPE ? (this.gravity = 0, e = 0.5 < Math.random() ? "cloud1v": "cloud2v") : a == PART_INSTRUCTION_TYPE ? this.isInstruction = !0 : a === PART_GLASS_TYPE && (e = 0.7 < Math.random() ? "particleglass1": 0.5 < Math.random() ? "particleglass2": "particleglass3");
        this.vis.gotoAndStop(e);
        this.scale = c;
        this.updateVisionScale();
        b.addChild(this.vis)
    };
    a.setPos = function(a, b) {
        this.vis.x = a;
        this.vis.y = b
    };
    a.setNum = function(a) {
        this.beforeHideTimer = 10;
        this.speedAlpha = 0.03;
        this.gravity = 0;
        this.vis.rotation = 0;
        this.vis.gotoAndStop("PART_" + a)
    };
    a.setFrame = function(a, b) {
        this.gravity = 0;
        this.vis.rotation = 0;
        b ? this.vis.gotoAndPlay(a) : this.vis.gotoAndStop(a)
    };
    a.tick = function() {
        if (! (this.isNeedDispose || (this.moveTarget ? (this.vis.x = this.moveTarget.x, this.vis.y = this.moveTarget.y) : (this.vis.x += this.speedX * dtScale, this.vis.y += this.speedY * dtScale, this.speedY += this.gravity * dtScale, this.vis.rotation += this.speedA * dtScale), this.beforeHideTimer -= dtScale, 0 < this.beforeHideTimer))) if (this.isPrerendered) this.isNeedDispose = !0;
        else {
            if (this.isNum) this.vis.alpha -= this.speedAlpha * dtScale;
            else {
                if (this.isInstruction) return;
                this.vis.visible = !0;
                this.vis.scaleX += this.speedScale * dtScale;
                this.vis.scaleX > this.maxScale && (this.vis.alpha -= this.speedAlpha * dtScale);
                this.vis.scaleY = this.vis.scaleX
            }
            0.01 > this.vis.alpha && (this.isNeedDispose = !0)
        }
    };
    a.updateVisionScale = function() {
        this.vis.scaleX = this.vis.scaleY = this.scale
    };
    a.dispose = function() {
        isArrayContains(allParts, this) && allParts.splice(allParts.indexOf(this, 0), 1);
        addToDisposedParts(this);
        this.vis.removeAllEventListeners();
        this.vis.stop();
        removeFromParent(this.vis)
    };
    c.ParticleBase = b
})(window);
var allParts = [], disposedParts = [];
function initParticleManager() {
    container.addChild(particleContainer)
}
var partSin, partCos, partScale;
function createPartExplode(c, b, a, h, f, d) {
    for (var e, g = 0; g < a; g++) {
        e = g * (2 * Math.PI / a);
        partSin = Math.cos(e);
        partCos = Math.sin(e);
        e = createPart(h, c, b, 1, f ? f: particleContainer);
        if (!e) break;
        setParticleParamsByIndex(e, d ? d: 0)
    }
}
function setParticleParamsByIndex(c, b) {
    var a = 1.3;
    c.gravity = 0;
    c.speedA = 20 * Math.random();
    0 === b ? (c.maxScale = 0.7, c.beforeHideTimer = 0.2 * FPS, partScale = 0.2 + 0.2 * Math.random()) : 1 === b ? (a = 4, c.maxScale = 1.3, c.beforeHideTimer = 0.3 * FPS, c.gravity = 0, c.speedAlpha = 0.05, c.speedA = 20 * Math.random(), partScale = 0.4 + 0.6 * Math.random()) : 2 === b ? (a = 2, c.maxScale = 1.3, c.vis.alpha = 1, c.beforeHideTimer = 0.3 * FPS, c.speedA = 20 * Math.random(), partScale = 0.4 + 0.6 * Math.random()) : 3 === b && (a = 1.3, c.gravity = 0, c.speedA = 20 * Math.random(), c.maxScale = 0.7, c.beforeHideTimer = 0.1 * FPS, c.gravity = 0, c.speedAlpha = 0.05, partScale = 0.6, c.vis.alpha = 1);
    c.vis.scaleX = c.vis.scaleY = partScale;
    c.speedX = (a + Math.random() * a) * partCos;
    c.speedY = (a + Math.random() * a) * partSin
}
function createDiePart(c, b) {
    var a = createPart(PART_NUM_TYPE, c, b, 1, particleContainer);
    a && (a.setNum(11), a.setFrame("bombexplosionv", !0), a.speedAlpha = 0.05, a.beforeHideTimer = 0.01 * FPS, a.speedX = 0, a.speedY = 0, a.speedA = 0)
}
function createGoodPlayExplode(c, b) {
    for (var a, h = 0 == b ? 90 : -120, f = 0; 8 > f; f++) {
        var d = f * (Math.PI / 2 / 8) - Math.PI / 4;
        0 < b && (d += Math.PI);
        var e = Math.cos(d),
        d = Math.sin(d);
        a = 0.2 + 0.2 * Math.random();
        a = createPart(PART_STAR_TYPE, h, 0, a, monsterCont);
        if (!a) break;
        a.setFrame("particle1v");
        a.speedAlpha = 0.1;
        a.speedScale = 0.02;
        a.vis.visible = !1;
        a.beforeHideTimer = 0.5 * FPS;
        a.maxScale = 0.6;
        a.speedX = (1.5 + 1.5 * Math.random()) * e;
        a.speedY = (1.5 + 1.5 * Math.random()) * d;
        a.speedA = 20 * Math.random()
    }
}
function createNumPart(c, b, a) {
    if (c = createPart(PART_NUM_TYPE, c, b, 0.8, particleContainer)) c.setNum(a),
    c.beforeHideTimer = 0.2 * FPS,
    c.speedX = 0,
    c.speedY = -0.8,
    c.speedA = 0
}
function createPrerenderedPart(c, b, a, h, f, d, e) {
    if (c = createPart(PART_NUM_TYPE, c, b, a, particleContainer)) c.setFrame(h, !0),
    setNextAnimation(c.vis, ""),
    e && setAnimationSpeed(c.vis, e),
    c.isPrerendered = !0,
    d && (c.moveTarget = d),
    c.beforeHideTimer = f * GAME_FPS,
    c.speedX = 0,
    c.speedY = 0,
    c.speedA = 0,
    c.gravity = 0,
    c.vis.rotation = 0
}
function createGlassRectExplode(c, b, a, h) {
    for (var f, d = 0; 5 > d; d++) {
        var e = h * Math.PI / 180;
        f = Math.cos(e);
        var e = Math.sin(e),
        g = (24.4 * d - 60) * a;
        f = createPart(PART_GLASS_TYPE, c + g * f, b + g * e, 1, particleContainer);
        if (!f) break;
        f.gravity = 0;
        f.speedA = 20 * Math.random();
        f.maxScale = 0.7;
        f.beforeHideTimer = 0.1 * FPS;
        f.gravity = 0;
        f.speedAlpha = 0.05;
        partScale = 0.6;
        f.vis.scaleX = f.vis.scaleY = partScale;
        f.speedX = 1.3 - 2.6 * Math.random();
        f.speedY = 1.3 - 2.6 * Math.random()
    }
}
function createAwesomePart() {
    var c = createPart(PART_NUM_TYPE, 160, topVisionLine + viewportH / 2, 1, particleContainer);
    c && (c.setNum(11), c.speedAlpha = 1, c.beforeHideTimer = 1.5 * FPS, c.speedX = 0, c.speedY = 0, c.speedA = 0, c.vis.rotation = -360, c.vis.scaleX = c.vis.scaleY = 0.1, createjs.Tween.get(c.vis, {
        override: !0
    }).to({
        rotation: 0,
        scaleX: 1,
        scaleY: 1
    },
    600).wait(600).to({
        alpha: 0
    },
    200))
}
function createAchievPart(c) {
    for (var b = 210,
    a = 10,
    h = 0,
    f, d = 0; d < allParts.length; d++) f = allParts[d],
    f.type === PART_ACHIEV_TYPE && (b = f.vis.y - 50, a += 200, h++);
    if (f = createPart(PART_ACHIEV_TYPE, -130, b, 0.8, container)) f.setFrame("achievdesc" + c),
    f.speedAlpha = 1,
    f.beforeHideTimer = 3.2 * FPS + 0.2 * h,
    f.speedX = 0,
    f.speedY = 0,
    f.speedA = 0,
    f.vis.rotation = 0,
    f.vis.scaleX = f.vis.scaleY = 0.7,
    f.vis.alpha = 1,
    createjs.Tween.get(f.vis, {
        override: !0
    }).wait(a).to({
        x: 5
    },
    600, menuEase).wait(2E3).to({
        x: -130
    },
    400, createjs.Ease.sineIn)
}
var allPartsLenght = 0;
function createPart(c, b, a, h, f) {
    var d;
    allPartsLenght = allParts.length;
    if (allPartsLenght > MAX_PARTICLES_ON_SCREEN) {
        for (var e = 0; e < allPartsLenght; e++) if (allParts[e].type === PART_STAR_TYPE) {
            d = allParts[e];
            break
        }
        d || (d = allParts[0]);
        d.reset(c, f, h)
    } else d = gePartFromPool(c, f, h);
    d.setPos(b, a);
    isArrayContains(allParts, d) || allParts.push(d);
    return d
}
function addToDisposedParts(c) {
    isArrayContains(disposedParts, c) || disposedParts.push(c)
}
function gePartFromPool(c, b, a) {
    if (0 < disposedParts.length) {
        var h = disposedParts.pop();
        h.reset(c, b, a);
        return h
    }
    return new ParticleBase(c, b, a)
}
var partLength = 0,
currPart = null,
disposeNeededParts = [];
function updatePartManager() {
    partLength = allParts.length;
    for (var c = 0; c < partLength; c++) currPart = allParts[c],
    currPart.tick(),
    currPart.isNeedDispose && disposeNeededParts.push(currPart);
    for (; 0 < disposeNeededParts.length;) disposeNeededParts.pop().dispose()
} (function() {
    Object.create = Object.create ||
    function(a) {
        function b() {}
        return b.prototype = a,
        new b
    };
    var c;
    "undefined" == typeof exports ? (c = {},
    "object" == typeof window && (window.cp = c)) : c = exports;
    var b, a, h = function(a, b) {
        if (!a) throw Error("Assertion failed: " + b);
    },
    f = function(a, b) { ! a && console && console.warn && (console.warn("ASSERTION FAILED: " + b), console.trace && console.trace())
    },
    d = function(a, b) {
        return b > a ? a: b
    },
    e = function(a, b) {
        return a > b ? a: b
    };
    "object" == typeof window && -1 < window.navigator.userAgent.indexOf("Firefox") ? (b = Math.min, a = Math.max) : (b = d, a = e);
    var g = function(a, b) {
        return b > a ? a + " " + b: b + " " + a
    },
    k = function(a, b) {
        for (var c = 0; a.length > c; c++) if (a[c] === b) return a[c] = a[a.length - 1],
        a.length--,
        void 0
    };
    c.momentForCircle = function(a, b, c, d) {
        return a * (0.5 * (b * b + c * c) + N(d))
    };
    c.areaForCircle = function(a, b) {
        return Math.PI * Math.abs(a * a - b * b)
    };
    c.momentForSegment = function(a, b, c) {
        var d = z(A(b, c), 0.5);
        return a * (Ka(c, b) / 12 + N(d))
    };
    c.areaForSegment = function(a, b, c) {
        return c * (Math.PI * c + 2 * sa(a, b))
    };
    c.momentForPoly = function(a, b, c) {
        for (var d = 0,
        e = 0,
        f = b.length,
        g = 0; f > g; g += 2) var h = b[g] + c.x,
        k = b[g + 1] + c.y,
        m = b[(g + 2) % f] + c.x,
        n = b[(g + 3) % f] + c.y,
        q = m * k - n * h,
        d = d + q * (h * h + k * k + (h * m + k * n) + (m * m + n * n)),
        e = e + q;
        return a * d / (6 * e)
    };
    c.areaForPoly = function(a) {
        for (var b = 0,
        c = 0,
        d = a.length; d > c; c += 2) b += F(new q(a[c], a[c + 1]), new q(a[(c + 2) % d], a[(c + 3) % d]));
        return - b / 2
    };
    c.centroidForPoly = function(a) {
        for (var b = 0,
        c = new q(0, 0), d = 0, e = a.length; e > d; d += 2) var f = new q(a[d], a[d + 1]),
        g = new q(a[(d + 2) % e], a[(d + 3) % e]),
        h = F(f, g),
        b = b + h,
        c = A(c, z(A(f, g), h));
        return z(c, 1 / (3 * b))
    };
    c.recenterPoly = function(a) {
        for (var b = c.centroidForPoly(a), d = 0; a.length > d; d += 2) a[d] -= b.x,
        a[d + 1] -= b.y
    };
    c.momentForBox = function(a, b, c) {
        return a * (b * b + c * c) / 12
    };
    c.momentForBox2 = function(a, b) {
        var d = b.r - b.l,
        e = b.t - b.b,
        f = z([b.l + b.r, b.b + b.t], 0.5);
        return c.momentForBox(a, d, e) + a * N(f)
    };
    var m = c.loopIndexes = function(a) {
        var b, c, d, e, f = 0,
        g = 0;
        b = d = a[0];
        c = e = a[1];
        for (var h = a.length >> 1,
        k = 1; h > k; k++) {
            var m = a[2 * k],
            n = a[2 * k + 1];
            b > m || m == b && c > n ? (b = m, c = n, f = k) : (m > d || m == d && n > e) && (d = m, e = n, g = k)
        }
        return [f, g]
    },
    n = function(a, b, c) {
        var d = a[2 * b];
        a[2 * b] = a[2 * c];
        a[2 * c] = d;
        d = a[2 * b + 1];
        a[2 * b + 1] = a[2 * c + 1];
        a[2 * c + 1] = d
    },
    p = function(a, b, c, d, e, f) {
        if (0 === c) return 0;
        var g = 0,
        h = b;
        e = y(e, d);
        f *= x(e);
        var k = b;
        for (c = b + c - 1; c >= k;) {
            var m = new q(a[2 * k], a[2 * k + 1]),
            m = F(e, y(m, d));
            m > f ? (m > g && (g = m, h = k), k++) : (n(a, k, c), c--)
        }
        return h != b && n(a, b, h),
        k - b
    },
    r = function(a, b, c, d, e, f, g, h) {
        if (0 > d) return 0;
        if (0 == d) return b[2 * h] = f.x,
        b[2 * h + 1] = f.y,
        1;
        var k = p(b, c, d, e, f, a),
        m = new q(b[2 * c], b[2 * c + 1]);
        e = r(a, b, c + 1, k - 1, e, m, f, h);
        m = h + e++;
        b[2 * m] = f.x;
        b[2 * m + 1] = f.y;
        d = p(b, c + k, d - k, f, g, a);
        m = new q(b[2 * (c + k)], b[2 * (c + k) + 1]);
        return e + r(a, b, c + k + 1, d - 1, f, m, g, h + e)
    };
    c.convexHull = function(a, b, c) {
        if (b) for (var d = 0; a.length > d; d++) b[d] = a[d];
        else b = a;
        var e = m(a),
        d = e[0],
        e = e[1];
        if (d == e) return b.length = 2,
        b;
        n(b, 0, d);
        n(b, 1, 0 == e ? d: e);
        d = new q(b[0], b[1]);
        e = new q(b[2], b[3]);
        a = r(c, b, 2, (a.length >> 1) - 2, d, e, d, 1) + 1;
        return b.length = 2 * a,
        f(Ma(b), "Internal error: cpConvexHull() and cpPolyValidate() did not agree.Please report this error with as much info as you can."),
        b
    };
    var s = function(c, d, e) {
        return b(a(c, d), e)
    },
    t = function(c) {
        return a(0, b(c, 1))
    },
    q = c.Vect = function(a, b) {
        this.x = a;
        this.y = b
    };
    c.v = function(a, b) {
        return new q(a, b)
    };
    var w = c.vzero = new q(0, 0),
    u = c.v.dot = function(a, b) {
        return a.x * b.x + a.y * b.y
    },
    x = c.v.len = function(a) {
        return Math.sqrt(u(a, a))
    },
    K = c.v.len2 = function(a, b) {
        return Math.sqrt(a * a + b * b)
    };
    c.v.eql = function(a, b) {
        return a.x === b.x && a.y === b.y
    };
    var A = c.v.add = function(a, b) {
        return new q(a.x + b.x, a.y + b.y)
    };
    q.prototype.add = function(a) {
        return this.x += a.x,
        this.y += a.y,
        this
    };
    var y = c.v.sub = function(a, b) {
        return new q(a.x - b.x, a.y - b.y)
    };
    q.prototype.sub = function(a) {
        return this.x -= a.x,
        this.y -= a.y,
        this
    };
    var C = c.v.neg = function(a) {
        return new q( - a.x, -a.y)
    };
    q.prototype.neg = function() {
        return this.x = -this.x,
        this.y = -this.y,
        this
    };
    var z = c.v.mult = function(a, b) {
        return new q(a.x * b, a.y * b)
    };
    q.prototype.mult = function(a) {
        return this.x *= a,
        this.y *= a,
        this
    };
    var F = c.v.cross = function(a, b) {
        return a.x * b.y - a.y * b.x
    },
    J = c.v.perp = function(a) {
        return new q( - a.y, a.x)
    };
    c.v.pvrperp = function(a) {
        return new q(a.y, -a.x)
    };
    var P = c.v.project = function(a, b) {
        return z(b, u(a, b) / N(b))
    };
    q.prototype.project = function(a) {
        return this.mult(u(this, a) / N(a)),
        this
    };
    var E = c.v.rotate = function(a, b) {
        return new q(a.x * b.x - a.y * b.y, a.x * b.y + a.y * b.x)
    };
    q.prototype.rotate = function(a) {
        return this.x = this.x * a.x - this.y * a.y,
        this.y = this.x * a.y + this.y * a.x,
        this
    };
    var S = c.v.unrotate = function(a, b) {
        return new q(a.x * b.x + a.y * b.y, a.y * b.x - a.x * b.y)
    },
    N = c.v.lengthsq = function(a) {
        return u(a, a)
    },
    Z = c.v.lengthsq2 = function(a, b) {
        return a * a + b * b
    },
    T = c.v.lerp = function(a, b, c) {
        return A(z(a, 1 - c), z(b, c))
    },
    Q = c.v.normalize = function(a) {
        return z(a, 1 / x(a))
    },
    G = c.v.normalize_safe = function(a) {
        return 0 === a.x && 0 === a.y ? w: Q(a)
    },
    M = c.v.clamp = function(a, b) {
        return u(a, a) > b * b ? z(Q(a), b) : a
    };
    c.v.lerpconst = function(a, b, c) {
        return A(a, M(y(b, a), c))
    };
    var sa = c.v.dist = function(a, b) {
        return x(y(a, b))
    },
    Ka = c.v.distsq = function(a, b) {
        return N(y(a, b))
    };
    c.v.near = function(a, b, c) {
        return c * c > Ka(a, b)
    };
    var eb = c.v.slerp = function(a, b, c) {
        var d = Math.acos(u(a, b));
        if (d) {
            var e = 1 / Math.sin(d);
            return A(z(a, Math.sin((1 - c) * d) * e), z(b, Math.sin(c * d) * e))
        }
        return a
    };
    c.v.slerpconst = function(a, c, d) {
        var e = Math.acos(u(a, c));
        return eb(a, c, b(d, e) / e)
    };
    c.v.forangle = function(a) {
        return new q(Math.cos(a), Math.sin(a))
    };
    c.v.toangle = function(a) {
        return Math.atan2(a.y, a.x)
    };
    c.v.str = function(a) {
        return "(" + a.x.toFixed(3) + ", " + a.y.toFixed(3) + ")"
    };
    var fb = 0,
    $ = c.BB = function(a, b, c, d) {
        this.l = a;
        this.b = b;
        this.r = c;
        this.t = d;
        fb++
    };
    c.bb = function(a, b, c, d) {
        return new $(a, b, c, d)
    };
    var La = 0;
    c.NO_GROUP = 0;
    var gb = c.ALL_LAYERS = -1;
    c.resetShapeIdCounter = function() {
        La = 0
    };
    var O = c.Shape = function(a) {
        this.body = a;
        this.bb_l = this.bb_b = this.bb_r = this.bb_t = 0;
        this.hashid = La++;
        this.sensor = !1;
        this.u = this.e = 0;
        this.surface_v = w;
        this.group = this.collision_type = 0;
        this.layers = gb;
        this.space = null;
        this.collisionCode = this.collisionCode
    };
    O.prototype.setElasticity = function(a) {
        this.e = a
    };
    O.prototype.setFriction = function(a) {
        this.body.activate();
        this.u = a
    };
    O.prototype.setLayers = function(a) {
        this.body.activate();
        this.layers = a
    };
    O.prototype.setSensor = function(a) {
        this.body.activate();
        this.sensor = a
    };
    O.prototype.setCollisionType = function(a) {
        this.body.activate();
        this.collision_type = a
    };
    O.prototype.getBody = function() {
        return this.body
    };
    O.prototype.active = function() {
        return this.body && -1 !== this.body.shapeList.indexOf(this)
    };
    O.prototype.setBody = function(a) {
        h(!this.active(), "You cannot change the body on an active shape. You must remove the shape from the space before changing the body.");
        this.body = a
    };
    O.prototype.cacheBB = function() {
        return this.update(this.body.p, this.body.rot)
    };
    O.prototype.update = function(a, b) {
        h(!isNaN(b.x), "Rotation is NaN");
        h(!isNaN(a.x), "Position is NaN");
        this.cacheData(a, b)
    };
    O.prototype.pointQuery = function(a) {
        a = this.nearestPointQuery(a);
        return 0 > a.d ? a: void 0
    };
    O.prototype.getBB = function() {
        return new $(this.bb_l, this.bb_b, this.bb_r, this.bb_t)
    };
    var ta = function(a, b, c) {
        this.shape = a;
        this.p = b;
        this.d = c
    },
    ha = function(a, b, c) {
        this.shape = a;
        this.t = b;
        this.n = c
    };
    ha.prototype.hitPoint = function(a, b) {
        return T(a, b, this.t)
    };
    ha.prototype.hitDist = function(a, b) {
        return sa(a, b) * this.t
    };
    var fa = c.CircleShape = function(a, b, c) {
        this.c = this.tc = c;
        this.r = b;
        this.type = "circle";
        O.call(this, a)
    };
    fa.prototype = Object.create(O.prototype);
    fa.prototype.cacheData = function(a, b) {
        var c = this.tc = E(this.c, b).add(a),
        d = this.r;
        this.bb_l = c.x - d;
        this.bb_b = c.y - d;
        this.bb_r = c.x + d;
        this.bb_t = c.y + d
    };
    fa.prototype.nearestPointQuery = function(a) {
        var b = a.x - this.tc.x,
        c = a.y - this.tc.y;
        a = K(b, c);
        var d = this.r,
        b = new q(this.tc.x + b * d / a, this.tc.y + c * d / a);
        return new ta(this, b, a - d)
    };
    var ua = function(a, b, c, d, e) {
        d = y(d, b);
        e = y(e, b);
        b = u(d, d) - 2 * u(d, e) + u(e, e);
        var f = -2 * u(d, d) + 2 * u(d, e);
        c = u(d, d) - c * c;
        c = f * f - 4 * b * c;
        if (0 <= c && (b = ( - f - Math.sqrt(c)) / (2 * b), 0 <= b && 1 >= b)) return new ha(a, b, Q(T(d, e, b)))
    };
    fa.prototype.segmentQuery = function(a, b) {
        return ua(this, this.tc, this.r, a, b)
    };
    var ba = c.SegmentShape = function(a, b, c, d) {
        this.a = b;
        this.b = c;
        this.n = J(Q(y(c, b)));
        this.ta = this.tb = this.tn = null;
        this.r = d;
        this.b_tangent = this.a_tangent = w;
        this.type = "segment";
        O.call(this, a)
    };
    ba.prototype = Object.create(O.prototype);
    ba.prototype.cacheData = function(a, b) {
        this.ta = A(a, E(this.a, b));
        this.tb = A(a, E(this.b, b));
        this.tn = E(this.n, b);
        var c, d, e, f;
        this.ta.x < this.tb.x ? (c = this.ta.x, d = this.tb.x) : (c = this.tb.x, d = this.ta.x);
        this.ta.y < this.tb.y ? (e = this.ta.y, f = this.tb.y) : (e = this.tb.y, f = this.ta.y);
        var g = this.r;
        this.bb_l = c - g;
        this.bb_b = e - g;
        this.bb_r = d + g;
        this.bb_t = f + g
    };
    ba.prototype.nearestPointQuery = function(a) {
        var b;
        b = this.tb;
        var c = y(this.ta, b),
        d = t(u(c, y(a, b)) / N(c));
        b = A(b, z(c, d));
        var c = a.x - b.x,
        e = a.y - b.y;
        a = K(c, e);
        d = this.r;
        b = a ? A(b, z(new q(c, e), d / a)) : b;
        return new ta(this, b, a - d)
    };
    ba.prototype.segmentQuery = function(a, b) {
        var c = this.tn,
        d = u(y(this.ta, a), c),
        e = this.r,
        f = 0 < d ? C(c) : c,
        g = y(z(f, e), a),
        h = A(this.ta, g),
        k = A(this.tb, g),
        g = y(b, a);
        if (0 >= F(g, h) * F(g, k)) {
            if (e = d + (0 < d ? -e: e), d = -e, c = u(g, c) - e, 0 > d * c) return new ha(this, d / (d - c), f)
        } else if (0 !== e) return f = ua(this, this.ta, this.r, a, b),
        c = ua(this, this.tb, this.r, a, b),
        f ? c && c.t < f.t ? c: f: c
    };
    ba.prototype.setNeighbors = function(a, b) {
        this.a_tangent = y(a, this.a);
        this.b_tangent = y(b, this.b)
    };
    ba.prototype.setEndpoints = function(a, b) {
        this.a = a;
        this.b = b;
        this.n = J(Q(y(b, a)))
    };
    var Ma = function(a) {
        for (var b = a.length,
        c = 0; b > c; c += 2) {
            var d = a[(c + 2) % b],
            e = a[(c + 3) % b];
            if (0 < (d - a[c]) * (a[(c + 5) % b] - e) - (e - a[c + 1]) * (a[(c + 4) % b] - d)) return ! 1
        }
        return ! 0
    },
    R = c.PolyShape = function(a, b, c) {
        this.setVerts(b, c);
        this.type = "poly";
        O.call(this, a)
    };
    R.prototype = Object.create(O.prototype);
    var va = function(a, b) {
        this.n = a;
        this.d = b
    };
    va.prototype.compare = function(a) {
        return u(this.n, a) - this.d
    };
    R.prototype.setVerts = function(a, b) {
        h(4 <= a.length, "Polygons require some verts");
        h("number" == typeof a[0], "Polygon verticies should be specified in a flattened list (eg [x1,y1,x2,y2,x3,y3,...])");
        h(Ma(a), "Polygon is concave or has a reversed winding. Consider using cpConvexHull()");
        var c = a.length,
        d = c >> 1;
        this.verts = Array(c);
        this.tVerts = Array(c);
        this.planes = Array(d);
        this.tPlanes = Array(d);
        for (d = 0; c > d; d += 2) {
            var e = a[d] + b.x,
            f = a[d + 1] + b.y,
            g = Q(J(new q(a[(d + 2) % c] + b.x - e, a[(d + 3) % c] + b.y - f)));
            this.verts[d] = e;
            this.verts[d + 1] = f;
            this.planes[d >> 1] = new va(g, g.x * e + g.y * f);
            this.tPlanes[d >> 1] = new va(new q(0, 0), 0)
        }
    };
    c.BoxShape = function(a, b, c) {
        b /= 2;
        c /= 2;
        return hb(a, new $( - b, -c, b, c))
    };
    var hb = c.BoxShape2 = function(a, b) {
        return new R(a, [b.l, b.b, b.l, b.t, b.r, b.t, b.r, b.b], w)
    };
    R.prototype.transformVerts = function(c, d) {
        for (var e = this.verts,
        f = this.tVerts,
        g = 1 / 0,
        h = -1 / 0,
        k = 1 / 0,
        m = -1 / 0,
        n = 0; e.length > n; n += 2) {
            var q = e[n],
            p = e[n + 1],
            r = c.x + q * d.x - p * d.y,
            q = c.y + q * d.y + p * d.x;
            f[n] = r;
            f[n + 1] = q;
            g = b(g, r);
            h = a(h, r);
            k = b(k, q);
            m = a(m, q)
        }
        this.bb_l = g;
        this.bb_b = k;
        this.bb_r = h;
        this.bb_t = m
    };
    R.prototype.transformAxes = function(a, b) {
        for (var c = this.planes,
        d = this.tPlanes,
        e = 0; c.length > e; e++) {
            var f = E(c[e].n, b);
            d[e].n = f;
            d[e].d = u(a, f) + c[e].d
        }
    };
    R.prototype.cacheData = function(a, b) {
        this.transformAxes(a, b);
        this.transformVerts(a, b)
    };
    R.prototype.nearestPointQuery = function(a) {
        for (var b = this.tPlanes,
        c = this.tVerts,
        d = c[c.length - 2], e = c[c.length - 1], f = 1 / 0, g = w, h = !1, k = 0; b.length > k; k++) {
            0 < b[k].compare(a) && (h = !0);
            var m = c[2 * k],
            n = c[2 * k + 1],
            p;
            p = m;
            var r = n,
            d = d - p,
            e = e - r,
            s = t((d * (a.x - p) + e * (a.y - r)) / Z(d, e));
            p = new q(p + d * s, r + e * s);
            r = sa(a, p);
            f > r && (f = r, g = p);
            d = m;
            e = n
        }
        return new ta(this, g, h ? f: -f)
    };
    R.prototype.segmentQuery = function(a, b) {
        for (var c = this.tPlanes,
        d = this.tVerts,
        e = c.length,
        f = 2 * e,
        g = 0; e > g; g++) {
            var h = c[g].n,
            k = u(a, h);
            if (! (c[g].d > k)) {
                var m = u(b, h),
                k = (c[g].d - k) / (m - k);
                if (! (0 > k || 1 < k)) {
                    var m = T(a, b, k),
                    m = -F(h, m),
                    n = -(h.x * d[(2 * g + 3) % f] - h.y * d[(2 * g + 2) % f]);
                    if (m >= -(h.x * d[2 * g + 1] - h.y * d[2 * g]) && n >= m) return new ha(this, k, h)
                }
            }
        }
    };
    R.prototype.valueOnAxis = function(a, c) {
        for (var d = this.tVerts,
        e = a.x * d[0] + a.y * d[1], f = 2; d.length > f; f += 2) e = b(e, a.x * d[f] + a.y * d[f + 1]);
        return e - c
    };
    R.prototype.containsVert = function(a, b) {
        for (var c = this.tPlanes,
        d = 0; c.length > d; d++) {
            var e = c[d].n;
            if (0 < e.x * a + e.y * b - c[d].d) return ! 1
        }
        return ! 0
    };
    R.prototype.containsVertPartial = function(a, b, c) {
        for (var d = this.tPlanes,
        e = 0; d.length > e; e++) {
            var f = d[e].n;
            if (! (0 > u(f, c)) && 0 < f.x * a + f.y * b - d[e].d) return ! 1
        }
        return ! 0
    };
    R.prototype.getNumVerts = function() {
        return this.verts.length / 2
    };
    R.prototype.getVert = function(a) {
        return new q(this.verts[2 * a], this.verts[2 * a + 1])
    };
    var D = c.Body = function(a, b) {
        this.p = new q(0, 0);
        this.vx = this.vy = 0;
        this.f = new q(0, 0);
        this.t = this.w = 0;
        this.v_limit = 1 / 0;
        this.w_limit = 1 / 0;
        this.w_bias = this.v_biasx = this.v_biasy = 0;
        this.space = null;
        this.shapeList = [];
        this.nodeNext = this.nodeRoot = this.constraintList = this.arbiterList = null;
        this.nodeIdleTime = 0;
        this.setMass(a);
        this.setMoment(b);
        this.rot = new q(0, 0);
        this.setAngle(0)
    };
    if ("undefined" != typeof DEBUG && DEBUG) {
        var wa = function(a, b) {
            h(a.x == a.x && a.y == a.y, b)
        },
        xa = function(a, b) {
            h(1 / 0 !== Math.abs(a.x) && 1 / 0 !== Math.abs(a.y), b)
        };
        D.prototype.sanityCheck = function() {
            h(this.m === this.m && this.m_inv === this.m_inv, "Body's mass is invalid.");
            h(this.i === this.i && this.i_inv === this.i_inv, "Body's moment is invalid.");
            var a = this.p;
            wa(a, "Body's position is invalid.");
            xa(a, "Body's position is invalid.");
            a = this.f;
            wa(a, "Body's force is invalid.");
            xa(a, "Body's force is invalid.");
            h(this.vx === this.vx && 1 / 0 !== Math.abs(this.vx), "Body's velocity is invalid.");
            h(this.vy === this.vy && 1 / 0 !== Math.abs(this.vy), "Body's velocity is invalid.");
            h(this.a === this.a && 1 / 0 !== Math.abs(this.a), "Body's angle is invalid.");
            h(this.w === this.w && 1 / 0 !== Math.abs(this.w), "Body's angular velocity is invalid.");
            h(this.t === this.t && 1 / 0 !== Math.abs(this.t), "Body's torque is invalid.");
            a = this.rot;
            wa(a, "Body's rotation vector is invalid.");
            xa(a, "Body's rotation vector is invalid.");
            h(this.v_limit === this.v_limit, "Body's velocity limit is invalid.");
            h(this.w_limit === this.w_limit, "Body's angular velocity limit is invalid.")
        }
    } else D.prototype.sanityCheck = function() {};
    D.prototype.getPos = function() {
        return this.p
    };
    D.prototype.getVel = function() {
        return new q(this.vx, this.vy)
    };
    D.prototype.getAngVel = function() {
        return this.w
    };
    D.prototype.isSleeping = function() {
        return null !== this.nodeRoot
    };
    D.prototype.isStatic = function() {
        return 1 / 0 === this.nodeIdleTime
    };
    D.prototype.isRogue = function() {
        return null === this.space
    };
    D.prototype.setMass = function(a) {
        h(0 < a, "Mass must be positive and non-zero.");
        this.activate();
        this.m = a;
        this.m_inv = 1 / a
    };
    D.prototype.setMoment = function(a) {
        h(0 < a, "Moment of Inertia must be positive and non-zero.");
        this.activate();
        this.i = a;
        this.i_inv = 1 / a
    };
    D.prototype.addShape = function(a) {
        this.shapeList.push(a)
    };
    D.prototype.removeShape = function(a) {
        k(this.shapeList, a)
    };
    var ya = function(a, b, c) {
        return a === c ? a.next(b) : (a.a === b ? a.next_a = ya(a.next_a, b, c) : a.next_b = ya(a.next_b, b, c), a)
    };
    D.prototype.removeConstraint = function(a) {
        this.constraintList = ya(this.constraintList, this, a)
    };
    D.prototype.setPos = function(a) {
        this.activate();
        this.sanityCheck();
        a === w && (a = c.v(0, 0));
        this.p = a
    };
    D.prototype.setVel = function(a) {
        this.activate();
        this.vx = a.x;
        this.vy = a.y
    };
    D.prototype.setAngVel = function(a) {
        this.activate();
        this.w = a
    };
    D.prototype.setAngleInternal = function(a) {
        h(!isNaN(a), "Internal Error: Attempting to set body's angle to NaN");
        this.a = a;
        this.rot.x = Math.cos(a);
        this.rot.y = Math.sin(a)
    };
    D.prototype.setAngle = function(a) {
        this.activate();
        this.sanityCheck();
        this.setAngleInternal(a)
    };
    D.prototype.velocity_func = function(a, b, c) {
        var d = this.vx * b + (a.x + this.f.x * this.m_inv) * c;
        a = this.vy * b + (a.y + this.f.y * this.m_inv) * c;
        var e = this.v_limit,
        f = d * d + a * a,
        e = f > e * e ? e / Math.sqrt(f) : 1;
        this.vx = d * e;
        this.vy = a * e;
        d = this.w_limit;
        this.w = s(this.w * b + this.t * this.i_inv * c, -d, d);
        this.sanityCheck()
    };
    D.prototype.position_func = function(a) {
        this.p.x += (this.vx + this.v_biasx) * a;
        this.p.y += (this.vy + this.v_biasy) * a;
        this.setAngleInternal(this.a + (this.w + this.w_bias) * a);
        this.w_bias = this.v_biasx = this.v_biasy = 0;
        this.sanityCheck()
    };
    D.prototype.resetForces = function() {
        this.activate();
        this.f = new q(0, 0);
        this.t = 0
    };
    D.prototype.applyForce = function(a, b) {
        this.activate();
        this.f = A(this.f, a);
        this.t += F(b, a)
    };
    D.prototype.applyImpulse = function(a, b) {
        this.activate();
        za(this, a.x, a.y, b)
    };
    D.prototype.getVelAtPoint = function(a) {
        return A(new q(this.vx, this.vy), z(J(a), this.w))
    };
    D.prototype.getVelAtWorldPoint = function(a) {
        return this.getVelAtPoint(y(a, this.p))
    };
    D.prototype.getVelAtLocalPoint = function(a) {
        return this.getVelAtPoint(E(a, this.rot))
    };
    D.prototype.eachShape = function(a) {
        for (var b = 0,
        c = this.shapeList.length; c > b; b++) a(this.shapeList[b])
    };
    D.prototype.eachConstraint = function(a) {
        for (var b = this.constraintList; b;) {
            var c = b.next(this);
            a(b);
            b = c
        }
    };
    D.prototype.eachArbiter = function(a) {
        for (var b = this.arbiterList; b;) {
            var c = b.next(this);
            b.swappedColl = this === b.body_b;
            a(b);
            b = c
        }
    };
    D.prototype.local2World = function(a) {
        return A(this.p, E(a, this.rot))
    };
    D.prototype.world2Local = function(a) {
        return S(y(a, this.p), this.rot)
    };
    D.prototype.kineticEnergy = function() {
        var a = this.vx * this.vx + this.vy * this.vy,
        b = this.w * this.w;
        return (a ? a * this.m: 0) + (b ? b * this.i: 0)
    };
    var Aa = c.SpatialIndex = function(a) {
        if (this.staticIndex = a, a) {
            if (a.dynamicIndex) throw Error("This static index is already associated with a dynamic index.");
            a.dynamicIndex = this
        }
    };
    Aa.prototype.collideStatic = function(a, b) {
        if (0 < a.count) {
            var c = a.query;
            this.each(function(a) {
                c(a, new $(a.bb_l, a.bb_b, a.bb_r, a.bb_t), b)
            })
        }
    };
    var I = c.BBTree = function(a) {
        Aa.call(this, a);
        this.velocityFunc = null;
        this.leaves = {};
        this.count = 0;
        this.pooledPairs = this.pooledNodes = this.root = null;
        this.stamp = 0
    };
    I.prototype = Object.create(Aa.prototype);
    var ib = 0,
    W = function(c, d, e) {
        this.obj = null;
        this.bb_l = b(d.bb_l, e.bb_l);
        this.bb_b = b(d.bb_b, e.bb_b);
        this.bb_r = a(d.bb_r, e.bb_r);
        this.bb_t = a(d.bb_t, e.bb_t);
        this.parent = null;
        this.setA(d);
        this.setB(e)
    };
    I.prototype.makeNode = function(a, b) {
        var c = this.pooledNodes;
        return c ? (this.pooledNodes = c.parent, c.constructor(this, a, b), c) : (ib++, new W(this, a, b))
    };
    var jb = 0,
    X = function(a, b) {
        this.obj = b;
        a.getBB(b, this);
        this.parent = null;
        this.stamp = 1;
        this.pairs = null;
        jb++
    };
    I.prototype.getBB = function(c, d) {
        var e = this.velocityFunc;
        if (e) {
            var f = 0.1 * (c.bb_r - c.bb_l),
            g = 0.1 * (c.bb_t - c.bb_b),
            e = z(e(c), 0.1);
            d.bb_l = c.bb_l + b( - f, e.x);
            d.bb_b = c.bb_b + b( - g, e.y);
            d.bb_r = c.bb_r + a(f, e.x);
            d.bb_t = c.bb_t + a(g, e.y)
        } else d.bb_l = c.bb_l,
        d.bb_b = c.bb_b,
        d.bb_r = c.bb_r,
        d.bb_t = c.bb_t
    };
    I.prototype.getStamp = function() {
        var a = this.dynamicIndex;
        return a && a.stamp ? a.stamp: this.stamp
    };
    I.prototype.incrementStamp = function() {
        this.dynamicIndex && this.dynamicIndex.stamp ? this.dynamicIndex.stamp++:this.stamp++
    };
    var kb = 0,
    Na = function(a, b, c, d) {
        this.prevA = null;
        this.leafA = a;
        this.nextA = b;
        this.prevB = null;
        this.leafB = c;
        this.nextB = d
    };
    I.prototype.makePair = function(a, b, c, d) {
        var e = this.pooledPairs;
        return e ? (this.pooledPairs = e.prevA, e.prevA = null, e.leafA = a, e.nextA = b, e.prevB = null, e.leafB = c, e.nextB = d, e) : (kb++, new Na(a, b, c, d))
    };
    Na.prototype.recycle = function(a) {
        this.prevA = a.pooledPairs;
        a.pooledPairs = this
    };
    var Oa = function(a, b, c) {
        c && (c.leafA === b ? c.prevA = a: c.prevB = a);
        a ? a.leafA === b ? a.nextA = c: a.nextB = c: b.pairs = c
    };
    X.prototype.clearPairs = function(a) {
        var b, c = this.pairs;
        for (this.pairs = null; c;) c.leafA === this ? (b = c.nextA, Oa(c.prevB, c.leafB, c.nextB)) : (b = c.nextB, Oa(c.prevA, c.leafA, c.nextA)),
        c.recycle(a),
        c = b
    };
    var Pa = function(a, b, c) {
        var d = a.pairs,
        e = b.pairs;
        c = c.makePair(a, d, b, e);
        a.pairs = b.pairs = c;
        d && (d.leafA === a ? d.prevA = c: d.prevB = c);
        e && (e.leafA === b ? e.prevA = c: e.prevB = c)
    };
    W.prototype.recycle = function(a) {
        this.parent = a.pooledNodes;
        a.pooledNodes = this
    };
    X.prototype.recycle = function() {};
    W.prototype.setA = function(a) {
        this.A = a;
        a.parent = this
    };
    W.prototype.setB = function(a) {
        this.B = a;
        a.parent = this
    };
    X.prototype.isLeaf = !0;
    W.prototype.isLeaf = !1;
    W.prototype.otherChild = function(a) {
        return this.A == a ? this.B: this.A
    };
    W.prototype.replaceChild = function(c, d, e) {
        f(c == this.A || c == this.B, "Node is not a child of parent.");
        this.A == c ? (this.A.recycle(e), this.setA(d)) : (this.B.recycle(e), this.setB(d));
        for (c = this; c; c = c.parent) d = c.A,
        e = c.B,
        c.bb_l = b(d.bb_l, e.bb_l),
        c.bb_b = b(d.bb_b, e.bb_b),
        c.bb_r = a(d.bb_r, e.bb_r),
        c.bb_t = a(d.bb_t, e.bb_t)
    };
    W.prototype.bbArea = X.prototype.bbArea = function() {
        return (this.bb_r - this.bb_l) * (this.bb_t - this.bb_b)
    };
    var Qa = function(c, d) {
        return (a(c.bb_r, d.bb_r) - b(c.bb_l, d.bb_l)) * (a(c.bb_t, d.bb_t) - b(c.bb_b, d.bb_b))
    },
    Ra = function(a, b) {
        return Math.abs(a.bb_l + a.bb_r - b.bb_l - b.bb_r) + Math.abs(a.bb_b + a.bb_t - b.bb_b - b.bb_t)
    },
    ia = function(c, d, e) {
        if (null == c) return d;
        if (c.isLeaf) return e.makeNode(d, c);
        var f = c.B.bbArea() + Qa(c.A, d),
        g = c.A.bbArea() + Qa(c.B, d);
        return f === g && (f = Ra(c.A, d), g = Ra(c.B, d)),
        f > g ? c.setB(ia(c.B, d, e)) : c.setA(ia(c.A, d, e)),
        c.bb_l = b(c.bb_l, d.bb_l),
        c.bb_b = b(c.bb_b, d.bb_b),
        c.bb_r = a(c.bb_r, d.bb_r),
        c.bb_t = a(c.bb_t, d.bb_t),
        c
    };
    W.prototype.intersectsBB = X.prototype.intersectsBB = function(a) {
        return this.bb_l <= a.r && a.l <= this.bb_r && this.bb_b <= a.t && a.b <= this.bb_t
    };
    var Ba = function(a, b, c) {
        a.intersectsBB(b) && (a.isLeaf ? c(a.obj) : (Ba(a.A, b, c), Ba(a.B, b, c)))
    },
    Sa = function(c, d, e) {
        var f = 1 / (e.x - d.x),
        g = c.bb_l == d.x ? -1 / 0 : (c.bb_l - d.x) * f,
        h = c.bb_r == d.x ? 1 / 0 : (c.bb_r - d.x) * f,
        f = b(g, h),
        g = a(g, h),
        h = 1 / (e.y - d.y);
        e = c.bb_b == d.y ? -1 / 0 : (c.bb_b - d.y) * h;
        d = c.bb_t == d.y ? 1 / 0 : (c.bb_t - d.y) * h;
        c = b(e, d);
        d = a(e, d);
        return g >= c && d >= f && (f = a(f, c), 0 <= b(g, d) && 1 >= f) ? a(f, 0) : 1 / 0
    },
    ja = function(a, c, d, e, f) {
        if (a.isLeaf) return f(a.obj);
        var g = Sa(a.A, c, d),
        h = Sa(a.B, c, d);
        return h > g ? (e > g && (e = b(e, ja(a.A, c, d, e, f))), e > h && (e = b(e, ja(a.B, c, d, e, f)))) : (e > h && (e = b(e, ja(a.B, c, d, e, f))), e > g && (e = b(e, ja(a.A, c, d, e, f)))),
        e
    };
    I.prototype.subtreeRecycle = function(a) {
        a.isLeaf && (this.subtreeRecycle(a.A), this.subtreeRecycle(a.B), a.recycle(this))
    };
    var Ta = function(a, b, c) {
        if (b == a) return null;
        var d = b.parent;
        return d == a ? (b = a.otherChild(b), b.parent = a.parent, a.recycle(c), b) : (d.parent.replaceChild(d, d.otherChild(b), c), a)
    },
    Ua = function(a, b) {
        return a.bb_l <= b.bb_r && b.bb_l <= a.bb_r && a.bb_b <= b.bb_t && b.bb_b <= a.bb_t
    };
    X.prototype.markLeafQuery = function(a, b, c, d) {
        Ua(a, this) && (b ? Pa(a, this, c) : (this.stamp < a.stamp && Pa(this, a, c), d && d(a.obj, this.obj)))
    };
    W.prototype.markLeafQuery = function(a, b, c, d) {
        Ua(a, this) && (this.A.markLeafQuery(a, b, c, d), this.B.markLeafQuery(a, b, c, d))
    };
    X.prototype.markSubtree = function(a, b, c) {
        if (this.stamp == a.getStamp()) for (b && b.markLeafQuery(this, !1, a, c), b = this; b.parent; b = b.parent) b == b.parent.A ? b.parent.B.markLeafQuery(this, !0, a, c) : b.parent.A.markLeafQuery(this, !1, a, c);
        else for (a = this.pairs; a;) this === a.leafB ? (c && c(a.leafA.obj, this.obj), a = a.nextB) : a = a.nextA
    };
    W.prototype.markSubtree = function(a, b, c) {
        this.A.markSubtree(a, b, c);
        this.B.markSubtree(a, b, c)
    };
    X.prototype.containsObj = function(a) {
        return this.bb_l <= a.bb_l && this.bb_r >= a.bb_r && this.bb_b <= a.bb_b && this.bb_t >= a.bb_t
    };
    X.prototype.update = function(a) {
        var b = a.root;
        return this.containsObj(this.obj) ? !1 : (a.getBB(this.obj, this), b = Ta(b, this, a), a.root = ia(b, this, a), this.clearPairs(a), this.stamp = a.getStamp(), !0)
    };
    X.prototype.addPairs = function(a) {
        var b = a.dynamicIndex;
        b ? (a = b.root) && a.markLeafQuery(this, !0, b, null) : this.markSubtree(a, a.staticIndex.root, null)
    };
    I.prototype.insert = function(a, b) {
        var c = new X(this, a);
        this.leaves[b] = c;
        this.root = ia(this.root, c, this);
        this.count++;
        c.stamp = this.getStamp();
        c.addPairs(this);
        this.incrementStamp()
    };
    I.prototype.remove = function(a, b) {
        var c = this.leaves[b];
        delete this.leaves[b];
        this.root = Ta(this.root, c, this);
        this.count--;
        c.clearPairs(this);
        c.recycle(this)
    };
    I.prototype.contains = function(a, b) {
        return null != this.leaves[b]
    };
    var lb = function() {};
    I.prototype.reindexQuery = function(a) {
        if (this.root) {
            var b, c = this.leaves;
            for (b in c) c[b].update(this);
            c = (b = this.staticIndex) && b.root;
            this.root.markSubtree(this, c, a);
            b && !c && this.collideStatic(this, b, a);
            this.incrementStamp()
        }
    };
    I.prototype.reindex = function() {
        this.reindexQuery(lb)
    };
    I.prototype.reindexObject = function(a, b) {
        var c = this.leaves[b];
        c && (c.update(this) && c.addPairs(this), this.incrementStamp())
    };
    I.prototype.pointQuery = function(a, b) {
        this.query(new $(a.x, a.y, a.x, a.y), b)
    };
    I.prototype.segmentQuery = function(a, b, c, d) {
        this.root && ja(this.root, a, b, c, d)
    };
    I.prototype.query = function(a, b) {
        this.root && Ba(this.root, a, b)
    };
    I.prototype.count = function() {
        return this.count
    };
    I.prototype.each = function(a) {
        for (var b in this.leaves) a(this.leaves[b].obj)
    };
    var Ca = function(c, d, e, f) {
        if (1 == f) return d[e];
        if (2 == f) return c.makeNode(d[e], d[e + 1]);
        for (var g = d[e], h = g.bb_l, k = g.bb_b, m = g.bb_r, n = g.bb_t, q = e + f, p = e + 1; q > p; p++) g = d[p],
        h = b(h, g.bb_l),
        k = b(k, g.bb_b),
        m = a(m, g.bb_r),
        n = a(n, g.bb_t);
        var g = m - h > n - k,
        r = Array(2 * f);
        if (g) for (p = e; q > p; p++) r[2 * p + 0] = d[p].bb_l,
        r[2 * p + 1] = d[p].bb_r;
        else for (p = e; q > p; p++) r[2 * p + 0] = d[p].bb_b,
        r[2 * p + 1] = d[p].bb_t;
        r.sort(function(a, b) {
            return a - b
        });
        var s = 0.5 * (r[f - 1] + r[f]),
        p = h,
        r = k,
        t = m,
        w = n;
        g ? t = h = s: w = k = s;
        for (var s = q,
        u = e; s > u;) g = d[u],
        (a(g.bb_r, m) - b(g.bb_l, h)) * (a(g.bb_t, n) - b(g.bb_b, k)) < (a(g.bb_r, t) - b(g.bb_l, p)) * (a(g.bb_t, w) - b(g.bb_b, r)) ? (s--, d[u] = d[s], d[s] = g) : u++;
        if (s == f) {
            g = null;
            for (p = e; q > p; p++) g = ia(g, d[p], c);
            return g
        }
        return NodeNew(c, Ca(c, d, e, s - e), Ca(c, d, s, q - s))
    };
    I.prototype.optimize = function() {
        var a = Array(this.count),
        b = 0,
        c;
        for (c in this.leaves) a[b++] = this.nodes[c];
        tree.subtreeRecycle(root);
        this.root = Ca(tree, a, a.length)
    };
    var Da = function(a, b) { ! a.isLeaf && 10 >= b && (Da(a.A, b + 1), Da(a.B, b + 1));
        for (var c = "",
        d = 0; b > d; d++) c += " ";
        console.log(c + a.bb_b + " " + a.bb_t)
    };
    I.prototype.log = function() {
        this.root && Da(this.root, 0)
    };
    var ea = c.CollisionHandler = function() {
        this.a = this.b = 0
    };
    ea.prototype.begin = function() {
        return ! 0
    };
    ea.prototype.preSolve = function() {
        return ! 0
    };
    ea.prototype.postSolve = function() {};
    ea.prototype.separate = function() {};
    var L = function(a, b) {
        this.u = this.e = 0;
        this.surface_vr = w;
        this.a = a;
        this.body_a = a.body;
        this.b = b;
        this.body_b = b.body;
        this.contacts = this.thread_b_next = this.thread_b_prev = this.thread_a_next = this.thread_a_prev = null;
        this.stamp = 0;
        this.handler = null;
        this.swappedColl = !1;
        this.state = "first coll"
    };
    L.prototype.getShapes = function() {
        return this.swappedColl ? [this.b, this.a] : [this.a, this.b]
    };
    L.prototype.totalImpulse = function() {
        for (var a = this.contacts,
        b = new q(0, 0), c = 0, d = a.length; d > c; c++) {
            var e = a[c];
            b.add(z(e.n, e.jnAcc))
        }
        return this.swappedColl ? b: b.neg()
    };
    L.prototype.totalImpulseWithFriction = function() {
        for (var a = this.contacts,
        b = new q(0, 0), c = 0, d = a.length; d > c; c++) {
            var e = a[c];
            b.add((new q(e.jnAcc, e.jtAcc)).rotate(e.n))
        }
        return this.swappedColl ? b: b.neg()
    };
    L.prototype.totalKE = function() {
        for (var a = (1 - this.e) / (1 + this.e), b = 0, c = this.contacts, d = 0, e = c.length; e > d; d++) var f = c[d],
        g = f.jnAcc,
        h = f.jtAcc,
        b = b + (a * g * g / f.nMass + h * h / f.tMass);
        return b
    };
    L.prototype.ignore = function() {
        this.state = "ignore"
    };
    L.prototype.getA = function() {
        return this.swappedColl ? this.b: this.a
    };
    L.prototype.getB = function() {
        return this.swappedColl ? this.a: this.b
    };
    L.prototype.isFirstContact = function() {
        return "first coll" === this.state
    };
    var Va = function(a, b, c) {
        this.point = a;
        this.normal = b;
        this.dist = c
    };
    L.prototype.getContactPointSet = function() {
        var a, b = Array(this.contacts.length);
        for (a = 0; b.length > a; a++) b[a] = new Va(this.contacts[a].p, this.contacts[a].n, this.contacts[a].dist);
        return b
    };
    L.prototype.getNormal = function(a) {
        a = this.contacts[a].n;
        return this.swappedColl ? C(a) : a
    };
    L.prototype.getPoint = function(a) {
        return this.contacts[a].p
    };
    L.prototype.getDepth = function(a) {
        return this.contacts[a].dist
    };
    var Wa = function(a, b, c, d) {
        c ? c.body_a === b ? c.thread_a_next = d: c.thread_b_next = d: b.arbiterList = d;
        d && (d.body_a === b ? d.thread_a_prev = c: d.thread_b_prev = c)
    };
    L.prototype.unthread = function() {
        Wa(this, this.body_a, this.thread_a_prev, this.thread_a_next);
        Wa(this, this.body_b, this.thread_b_prev, this.thread_b_next);
        this.thread_b_prev = this.thread_b_next = this.thread_a_prev = this.thread_a_next = null
    };
    L.prototype.update = function(a, b, c, d) {
        if (this.contacts) for (var e = 0; this.contacts.length > e; e++) for (var f = this.contacts[e], g = 0; a.length > g; g++) {
            var h = a[g];
            h.hash === f.hash && (h.jnAcc = f.jnAcc, h.jtAcc = f.jtAcc)
        }
        this.contacts = a;
        this.handler = b;
        this.swappedColl = c.collision_type !== b.a;
        this.e = c.e * d.e;
        this.u = c.u * d.u;
        this.surface_vr = y(c.surface_v, d.surface_v);
        this.a = c;
        this.body_a = c.body;
        this.b = d;
        this.body_b = d.body;
        "cached" == this.state && (this.state = "first coll")
    };
    L.prototype.preStep = function(a, c, d) {
        for (var e = this.body_a,
        f = this.body_b,
        g = 0; this.contacts.length > g; g++) {
            var h = this.contacts[g];
            h.r1 = y(h.p, e.p);

            h.r2 = y(h.p, f.p);
            h.nMass = 1 / ka(e, f, h.r1, h.r2, h.n);
            h.tMass = 1 / ka(e, f, h.r1, h.r2, J(h.n));
            h.bias = -d * b(0, h.dist + c) / a;
            h.jBias = 0;
            h.bounce = Ea(e, f, h.r1, h.r2, h.n) * this.e
        }
    };
    L.prototype.applyCachedImpulse = function(a) {
        if (!this.isFirstContact()) for (var b = this.body_a,
        c = this.body_b,
        d = 0; this.contacts.length > d; d++) {
            var e = this.contacts[d],
            f = e.n.x,
            g = e.n.y;
            U(b, c, e.r1, e.r2, (f * e.jnAcc - g * e.jtAcc) * a, (f * e.jtAcc + g * e.jnAcc) * a)
        }
    };
    var mb = 0,
    nb = 0;
    L.prototype.applyImpulse = function() {
        mb++;
        for (var b = this.body_a,
        c = this.body_b,
        d = this.surface_vr,
        e = this.u,
        f = 0; this.contacts.length > f; f++) {
            nb++;
            var g = this.contacts[f],
            h = g.nMass,
            k = g.n,
            m = g.r1,
            n = g.r2,
            q = c.vx - n.y * c.w - (b.vx - m.y * b.w),
            p = c.vy + n.x * c.w - (b.vy + m.x * b.w),
            r = q * k.x + p * k.y,
            t = (q + d.x) * -k.y + (p + d.y) * k.x,
            p = g.jBias;
            g.jBias = a(p + (g.bias - (k.x * (c.v_biasx - n.y * c.w_bias - b.v_biasx + m.y * b.w_bias) + k.y * (n.x * c.w_bias + c.v_biasy - m.x * b.w_bias - b.v_biasy))) * h, 0);
            q = g.jnAcc;
            g.jnAcc = a(q + -(g.bounce + r) * h, 0);
            r = e * g.jnAcc;
            h = g.jtAcc;
            g.jtAcc = s(h + -t * g.tMass, -r, r);
            r = k.x * (g.jBias - p);
            p = k.y * (g.jBias - p);
            Xa(b, -r, -p, m);
            Xa(c, r, p, n);
            q = g.jnAcc - q;
            g = g.jtAcc - h;
            U(b, c, m, n, k.x * q - k.y * g, k.x * g + k.y * q)
        }
    };
    L.prototype.callSeparate = function(a) {
        a.lookupHandler(this.a.collision_type, this.b.collision_type).separate(this, a)
    };
    L.prototype.next = function(a) {
        return this.body_a == a ? this.thread_a_next: this.thread_b_next
    };
    var ob = 0,
    aa = function(a, b, c, d) {
        this.p = a;
        this.n = b;
        this.dist = c;
        this.r1 = this.r2 = w;
        this.jnAcc = this.jtAcc = this.jBias = this.nMass = this.tMass = this.bounce = this.bias = 0;
        this.hash = d;
        ob++
    },
    V = [],
    ca = function(a, b, c, d) {
        d = c + d;
        b = y(b, a);
        var e = N(b);
        if (! (e >= d * d)) return e = Math.sqrt(e),
        new aa(A(a, z(b, 0.5 + (c - 0.5 * d) / (e ? e: 1 / 0))), e ? z(b, 1 / e) : new q(1, 0), e - d, 0)
    },
    Fa = 0,
    Ya = function(a, b) {
        var c = 0,
        d = a.valueOnAxis(b[0].n, b[0].d);
        if (0 < d) return - 1;
        for (var e = 1; b.length > e; e++) {
            var f = a.valueOnAxis(b[e].n, b[e].d);
            if (0 < f) return - 1;
            f > d && (d = f, c = e)
        }
        return Fa = d,
        c
    },
    Za = function(a, b, c, d) {
        for (var e = [], f = a.tVerts, h = 0; f.length > h; h += 2) {
            var k = f[h],
            m = f[h + 1];
            b.containsVert(k, m) && e.push(new aa(new q(k, m), c, d, g(a.hashid, h >> 1)))
        }
        f = b.tVerts;
        for (h = 0; f.length > h; h += 2) k = f[h],
        m = f[h + 1],
        a.containsVert(k, m) && e.push(new aa(new q(k, m), c, d, g(b.hashid, h >> 1)));
        if (!e.length) {
            e = [];
            f = a.tVerts;
            for (h = 0; f.length > h; h += 2) k = f[h],
            m = f[h + 1],
            b.containsVertPartial(k, m, C(c)) && e.push(new aa(new q(k, m), c, d, g(a.hashid, h)));
            f = b.tVerts;
            for (h = 0; f.length > h; h += 2) k = f[h],
            m = f[h + 1],
            a.containsVertPartial(k, m, c) && e.push(new aa(new q(k, m), c, d, g(b.hashid, h)))
        }
        return a = e
    },
    $a = function(a, c, d) {
        var e = u(c, a.ta) - a.r;
        a = u(c, a.tb) - a.r;
        return b(e, a) - d
    },
    ab = function(a, b, c, d, e) {
        for (var f = F(b.tn, b.ta), h = F(b.tn, b.tb), k = z(b.tn, e), m = c.tVerts, n = 0; m.length > n; n += 2) {
            var p = m[n],
            r = m[n + 1];
            if (p * k.x + r * k.y < u(b.tn, b.ta) * e + b.r) {
                var s = b.tn.x * r - b.tn.y * p;
                f >= s && s >= h && a.push(new aa(new q(p, r), k, d, g(c.hashid, n)))
            }
        }
    };
    fa.prototype.collisionCode = 0;
    ba.prototype.collisionCode = 1;
    R.prototype.collisionCode = 2;
    fa.prototype.collisionTable = [function(a, b) {
        var c = ca(a.tc, b.tc, a.r, b.r);
        return c ? [c] : V
    },
    function(a, b) {
        var c = b.ta,
        d = a.tc,
        e = y(b.tb, c),
        f = t(u(e, y(d, c)) / N(e)),
        c = A(c, z(e, f));
        return (d = ca(d, c, a.r, b.r)) ? (c = d.n, 0 === f && 0 > u(c, b.a_tangent) || 1 === f && 0 > u(c, b.b_tangent) ? V: [d]) : V
    },
    function(a, b) {
        for (var c = b.tPlanes,
        d = 0,
        e = u(c[0].n, a.tc) - c[0].d - a.r, f = 0; c.length > f; f++) {
            var g = u(c[f].n, a.tc) - c[f].d - a.r;
            if (0 < g) return V;
            g > e && (e = g, d = f)
        }
        var c = c[d].n,
        h = b.tVerts,
        k = h.length,
        m = d << 1,
        d = h[m],
        f = h[m + 1],
        g = h[(m + 2) % k],
        h = h[(m + 3) % k],
        k = c.x * f - c.y * d,
        m = c.x * h - c.y * g,
        n = F(c, a.tc);
        if (m > n) {
            var p = ca(a.tc, new q(g, h), a.r, 0, p);
            return p ? [p] : V
        }
        return k > n ? [new aa(y(a.tc, z(c, a.r + e / 2)), C(c), e, 0)] : (p = ca(a.tc, new q(d, f), a.r, 0, p)) ? [p] : V
    }];
    ba.prototype.collisionTable = [null,
    function() {
        return V
    },
    function(a, b) {
        var c = [],
        d = b.tPlanes,
        e = d.length,
        f = u(a.tn, a.ta),
        h = b.valueOnAxis(a.tn, f) - a.r,
        f = b.valueOnAxis(C(a.tn), -f) - a.r;
        if (0 < f || 0 < h) return V;
        var k = 0,
        m = $a(a, d[0].n, d[0].d);
        if (0 < m) return V;
        for (var n = 0; e > n; n++) {
            var p = $a(a, d[n].n, d[n].d);
            if (0 < p) return V;
            p > m && (m = p, k = n)
        }
        d = C(d[k].n);
        n = A(a.ta, z(d, a.r));
        p = A(a.tb, z(d, a.r));
        if (b.containsVert(n.x, n.y) && c.push(new aa(n, d, m, g(a.hashid, 0))), b.containsVert(p.x, p.y) && c.push(new aa(p, d, m, g(a.hashid, 1))), (h >= m || f >= m) && (h > f ? ab(c, a, b, h, 1) : ab(c, a, b, f, -1)), 0 === c.length) {
            f = 2 * k;
            k = b.tVerts;
            m = new q(k[f], k[f + 1]);
            if ((h = ca(a.ta, m, a.r, 0, c)) || (h = ca(a.tb, m, a.r, 0, c))) return [h];
            e *= 2;
            e = new q(k[(f + 2) % e], k[(f + 3) % e]);
            if ((h = ca(a.ta, e, a.r, 0, c)) || (h = ca(a.tb, e, a.r, 0, c))) return [h]
        }
        return c
    }];
    R.prototype.collisionTable = [null, null,
    function(a, b) {
        var c = Ya(b, a.tPlanes);
        if ( - 1 == c) return V;
        var d = Fa,
        e = Ya(a, b.tPlanes);
        if ( - 1 == e) return V;
        var f = Fa;
        return d > f ? Za(a, b, a.tPlanes[c].n, d) : Za(a, b, C(b.tPlanes[e].n), f)
    }];
    var Ga = c.collideShapes = function(a, b) {
        return h(a.collisionCode <= b.collisionCode, "Collided shapes must be sorted by type"),
        a.collisionTable[b.collisionCode](a, b)
    },
    bb = new ea,
    B = c.Space = function() {
        this.curr_dt = this.stamp = 0;
        this.bodies = [];
        this.rousedBodies = [];
        this.sleepingComponents = [];
        this.staticShapes = new I(null);
        this.activeShapes = new I(this.staticShapes);
        this.arbiters = [];
        this.contactBuffersHead = null;
        this.cachedArbiters = {};
        this.constraints = [];
        this.locked = 0;
        this.collisionHandlers = {};
        this.defaultHandler = bb;
        this.postStepCallbacks = [];
        this.iterations = 10;
        this.gravity = w;
        this.damping = 1;
        this.idleSpeedThreshold = 0;
        this.sleepTimeThreshold = 1 / 0;
        this.collisionSlop = 0.1;
        this.collisionBias = Math.pow(0.9, 60);
        this.collisionPersistence = 3;
        this.enableContactGraph = !1;
        this.staticBody = new D(1 / 0, 1 / 0);
        this.staticBody.nodeIdleTime = 1 / 0;
        this.collideShapes = this.makeCollideShapes()
    };
    B.prototype.getCurrentTimeStep = function() {
        return this.curr_dt
    };
    B.prototype.setIterations = function(a) {
        this.iterations = a
    };
    B.prototype.isLocked = function() {
        return this.locked
    };
    var Y = function(a) {
        h(!a.locked, "This addition/removal cannot be done safely during a call to cpSpaceStep()  or during a query. Put these calls into a post-step callback.")
    };
    B.prototype.addCollisionHandler = function(a, b, c, d, e, f) {
        Y(this);
        this.removeCollisionHandler(a, b);
        var h = new ea;
        h.a = a;
        h.b = b;
        c && (h.begin = c);
        d && (h.preSolve = d);
        e && (h.postSolve = e);
        f && (h.separate = f);
        this.collisionHandlers[g(a, b)] = h
    };
    B.prototype.removeCollisionHandler = function(a, b) {
        Y(this);
        delete this.collisionHandlers[g(a, b)]
    };
    B.prototype.setDefaultCollisionHandler = function(a, b, c, d) {
        Y(this);
        var e = new ea;
        a && (e.begin = a);
        b && (e.preSolve = b);
        c && (e.postSolve = c);
        d && (e.separate = d);
        this.defaultHandler = e
    };
    B.prototype.lookupHandler = function(a, b) {
        return this.collisionHandlers[g(a, b)] || this.defaultHandler
    };
    B.prototype.addShape = function(a) {
        var b = a.body;
        return b.isStatic() ? this.addStaticShape(a) : (h(!a.space, "This shape is already added to a space and cannot be added to another."), Y(this), b.activate(), b.addShape(a), a.update(b.p, b.rot), this.activeShapes.insert(a, a.hashid), a.space = this, a)
    };
    B.prototype.addStaticShape = function(a) {
        h(!a.space, "This shape is already added to a space and cannot be added to another.");
        Y(this);
        var b = a.body;
        return b.addShape(a),
        a.update(b.p, b.rot),
        this.staticShapes.insert(a, a.hashid),
        a.space = this,
        a
    };
    B.prototype.addBody = function(a) {
        return h(!a.isStatic(), "Static bodies cannot be added to a space as they are not meant to be simulated."),
        h(!a.space, "This body is already added to a space and cannot be added to another."),
        Y(this),
        this.bodies.push(a),
        a.space = this,
        a
    };
    B.prototype.addConstraint = function(a) {
        h(!a.space, "This shape is already added to a space and cannot be added to another.");
        Y(this);
        var b = a.a,
        c = a.b;
        return b.activate(),
        c.activate(),
        this.constraints.push(a),
        a.next_a = b.constraintList,
        b.constraintList = a,
        a.next_b = c.constraintList,
        c.constraintList = a,
        a.space = this,
        a
    };
    B.prototype.filterArbiters = function(a, b) {
        for (var c in this.cachedArbiters) {
            var d = this.cachedArbiters[c]; (a !== d.body_a || b !== d.a && null !== b) && (a !== d.body_b || b !== d.b && null !== b) || (b && "cached" !== d.state && d.callSeparate(this), d.unthread(), k(this.arbiters, d), delete this.cachedArbiters[c])
        }
    };
    B.prototype.removeShape = function(a) {
        var b = a.body;
        b.isStatic() ? this.removeStaticShape(a) : (h(this.containsShape(a), "Cannot remove a shape that was not added to the space. (Removed twice maybe?)"), Y(this), b.activate(), b.removeShape(a), this.filterArbiters(b, a), this.activeShapes.remove(a, a.hashid), a.space = null)
    };
    B.prototype.removeStaticShape = function(a) {
        h(this.containsShape(a), "Cannot remove a static or sleeping shape that was not added to the space. (Removed twice maybe?)");
        Y(this);
        var b = a.body;
        b.isStatic() && b.activateStatic(a);
        b.removeShape(a);
        this.filterArbiters(b, a);
        this.staticShapes.remove(a, a.hashid);
        a.space = null
    };
    B.prototype.removeBody = function(a) {
        h(this.containsBody(a), "Cannot remove a body that was not added to the space. (Removed twice maybe?)");
        Y(this);
        a.activate();
        k(this.bodies, a);
        a.space = null
    };
    B.prototype.removeConstraint = function(a) {
        h(this.containsConstraint(a), "Cannot remove a constraint that was not added to the space. (Removed twice maybe?)");
        Y(this);
        a.a.activate();
        a.b.activate();
        k(this.constraints, a);
        a.a.removeConstraint(a);
        a.b.removeConstraint(a);
        a.space = null
    };
    B.prototype.containsShape = function(a) {
        return a.space === this
    };
    B.prototype.containsBody = function(a) {
        return a.space == this
    };
    B.prototype.containsConstraint = function(a) {
        return a.space == this
    };
    B.prototype.uncacheArbiter = function(a) {
        delete this.cachedArbiters[g(a.a.hashid, a.b.hashid)];
        k(this.arbiters, a)
    };
    B.prototype.eachBody = function(a) {
        this.lock();
        for (var b = this.bodies,
        c = 0; b.length > c; c++) a(b[c]);
        b = this.sleepingComponents;
        for (c = 0; b.length > c; c++) for (var d = b[c]; d;) {
            var e = d.nodeNext;
            a(d);
            d = e
        }
        this.unlock(!0)
    };
    B.prototype.eachShape = function(a) {
        this.lock();
        this.activeShapes.each(a);
        this.staticShapes.each(a);
        this.unlock(!0)
    };
    B.prototype.eachConstraint = function(a) {
        this.lock();
        for (var b = this.constraints,
        c = 0; b.length > c; c++) a(b[c]);
        this.unlock(!0)
    };
    B.prototype.reindexStatic = function() {
        h(!this.locked, "You cannot manually reindex objects while the space is locked. Wait until the current query or step is complete.");
        this.staticShapes.each(function(a) {
            var b = a.body;
            a.update(b.p, b.rot)
        });
        this.staticShapes.reindex()
    };
    B.prototype.reindexShape = function(a) {
        h(!this.locked, "You cannot manually reindex objects while the space is locked. Wait until the current query or step is complete.");
        var b = a.body;
        a.update(b.p, b.rot);
        this.activeShapes.reindexObject(a, a.hashid);
        this.staticShapes.reindexObject(a, a.hashid)
    };
    B.prototype.reindexShapesForBody = function(a) {
        for (a = a.shapeList; a; a = a.next) this.reindexShape(a)
    };
    B.prototype.useSpatialHash = function(a, b) {
        throw Error("Spatial Hash not implemented.");
    };
    B.prototype.activateBody = function(a) {
        if (h(!a.isRogue(), "Internal error: Attempting to activate a rogue body."), this.locked) - 1 === this.rousedBodies.indexOf(a) && this.rousedBodies.push(a);
        else {
            this.bodies.push(a);
            for (var b = 0; a.shapeList.length > b; b++) {
                var c = a.shapeList[b];
                this.staticShapes.remove(c, c.hashid);
                this.activeShapes.insert(c, c.hashid)
            }
            for (b = a.arbiterList; b; b = b.next(a)) if (c = b.body_a, a === c || c.isStatic()) {
                var c = b.a,
                d = b.b;
                this.cachedArbiters[g(c.hashid, d.hashid)] = b;
                b.stamp = this.stamp;
                b.handler = this.lookupHandler(c.collision_type, d.collision_type);
                this.arbiters.push(b)
            }
            for (b = a.constraintList; b; b = b.nodeNext) c = b.a,
            (a === c || c.isStatic()) && this.constraints.push(b)
        }
    };
    B.prototype.deactivateBody = function(a) {
        h(!a.isRogue(), "Internal error: Attempting to deactivate a rogue body.");
        k(this.bodies, a);
        for (var b = 0; a.shapeList.length > b; b++) {
            var c = a.shapeList[b];
            this.activeShapes.remove(c, c.hashid);
            this.staticShapes.insert(c, c.hashid)
        }
        for (c = a.arbiterList; c; c = c.next(a)) b = c.body_a,
        (a === b || b.isStatic()) && this.uncacheArbiter(c);
        for (c = a.constraintList; c; c = c.nodeNext) b = c.a,
        (a === b || b.isStatic()) && k(this.constraints, c)
    };
    D.prototype.activate = function() {
        if (!this.isRogue()) {
            this.nodeIdleTime = 0;
            var a = this ? this.nodeRoot: null;
            if (a && a.isSleeping(a)) {
                h(!a.isRogue(), "Internal Error: componentActivate() called on a rogue body.");
                for (var b = a.space,
                c = a; c;) {
                    var d = c.nodeNext;
                    c.nodeIdleTime = 0;
                    c.nodeRoot = null;
                    c.nodeNext = null;
                    b.activateBody(c);
                    c = d
                }
                k(b.sleepingComponents, a)
            }
        }
    };
    D.prototype.activateStatic = function(a) {
        h(this.isStatic(), "Body.activateStatic() called on a non-static body.");
        for (var b = this.arbiterList; b; b = b.next(this)) a && a != b.a && a != b.b || (b.body_a == this ? b.body_b: b.body_a).activate()
    };
    D.prototype.pushArbiter = function(a) {
        f(null === (a.body_a === this ? a.thread_a_next: a.thread_b_next), "Internal Error: Dangling contact graph pointers detected. (A)");
        f(null === (a.body_a === this ? a.thread_a_prev: a.thread_b_prev), "Internal Error: Dangling contact graph pointers detected. (B)");
        var b = this.arbiterList;
        f(null === b || null === (b.body_a === this ? b.thread_a_prev: b.thread_b_prev), "Internal Error: Dangling contact graph pointers detected. (C)");
        a.body_a === this ? a.thread_a_next = b: a.thread_b_next = b;
        b && (b.body_a === this ? b.thread_a_prev = a: b.thread_b_prev = a);
        this.arbiterList = a
    };
    var Ha = function(a, b) {
        if (!b.isRogue()) {
            var c = b ? b.nodeRoot: null;
            if (null == c) {
                b.nodeRoot = a;
                b !== a && (b.nodeNext = a.nodeNext, a.nodeNext = b);
                for (c = b.arbiterList; c; c = c.next(b)) Ha(a, b == c.body_a ? c.body_b: c.body_a);
                for (c = b.constraintList; c; c = c.next(b)) Ha(a, b == c.a ? c.b: c.a)
            } else f(c === a, "Internal Error: Inconsistency detected in the contact graph.")
        }
    };
    B.prototype.processComponents = function(a) {
        for (var b = 1 / 0 !== this.sleepTimeThreshold,
        c = this.bodies,
        d = 0; c.length > d; d++) {
            var e = c[d];
            f(null === e.nodeNext, "Internal Error: Dangling next pointer detected in contact graph.");
            f(null === e.nodeRoot, "Internal Error: Dangling root pointer detected in contact graph.")
        }
        if (b) for (var g = (d = this.idleSpeedThreshold) ? d * d: N(this.gravity) * a * a, d = 0; c.length > d; d++) {
            var e = c[d],
            h = g ? e.m * g: 0;
            e.nodeIdleTime = e.kineticEnergy() > h ? 0 : e.nodeIdleTime + a
        }
        g = this.arbiters;
        d = 0;
        for (h = g.length; h > d; d++) {
            var k = g[d],
            e = k.body_a;
            a = k.body_b;
            b && ((a.isRogue() && !a.isStatic() || e.isSleeping()) && e.activate(), (e.isRogue() && !e.isStatic() || a.isSleeping()) && a.activate());
            e.pushArbiter(k);
            a.pushArbiter(k)
        }
        if (b) {
            b = this.constraints;
            for (d = 0; b.length > d; d++) a = b[d],
            e = a.a,
            a = a.b,
            a.isRogue() && !a.isStatic() && e.activate(),
            e.isRogue() && !e.isStatic() && a.activate();
            for (d = 0; c.length > d;) {
                e = c[d];
                if (! (b = null !== (e ? e.nodeRoot: null))) a: {
                    for (Ha(e, e), b = e; b; b = b.nodeNext) if (this.sleepTimeThreshold > b.nodeIdleTime) {
                        b = !0;
                        break a
                    }
                    b = !1
                }
                if (b) d++,
                e.nodeRoot = null,
                e.nodeNext = null;
                else for (this.sleepingComponents.push(e), b = e; b; b = b.nodeNext) this.deactivateBody(b)
            }
        }
    };
    D.prototype.sleep = function() {
        this.sleepWithGroup(null)
    };
    D.prototype.sleepWithGroup = function(a) {
        h(!this.isStatic() && !this.isRogue(), "Rogue and static bodies cannot be put to sleep.");
        var b = this.space;
        if (h(b, "Cannot put a rogue body to sleep."), h(!b.locked, "Bodies cannot be put to sleep during a query or a call to cpSpaceStep(). Put these calls into a post-step callback."), h(null === a || a.isSleeping(), "Cannot use a non-sleeping body as a group identifier."), this.isSleeping()) return h((this ? this.nodeRoot: null) === (a ? a.nodeRoot: null), "The body is already sleeping and it's group cannot be reassigned."),
        void 0;
        for (var c = 0; this.shapeList.length > c; c++) this.shapeList[c].update(this.p, this.rot); (b.deactivateBody(this), a) ? (this.nodeRoot = a = a ? a.nodeRoot: null, this.nodeNext = a.nodeNext, this.nodeIdleTime = 0, a.nodeNext = this) : (this.nodeRoot = this, this.nodeNext = null, this.nodeIdleTime = 0, b.sleepingComponents.push(this));
        k(b.bodies, this)
    };
    B.prototype.activateShapesTouchingShape = function(a) {
        1 / 0 !== this.sleepTimeThreshold && this.shapeQuery(a,
        function(a) {
            a.body.activate()
        })
    };
    B.prototype.pointQuery = function(a, b, c, d) {
        var e = function(e) { (!e.group || c !== e.group) && b & e.layers && e.pointQuery(a) && d(e)
        },
        f = new $(a.x, a.y, a.x, a.y);
        this.lock();
        this.activeShapes.query(f, e);
        this.staticShapes.query(f, e);
        this.unlock(!0)
    };
    B.prototype.pointQueryFirst = function(a, b, c) {
        var d = null;
        return this.pointQuery(a, b, c,
        function(a) {
            a.sensor || (d = a)
        }),
        d
    };
    B.prototype.nearestPointQuery = function(a, b, c, d, e) {
        var f = function(f) {
            if ((!f.group || d !== f.group) && c & f.layers) {
                var g = f.nearestPointQuery(a);
                b > g.d && e(f, g.d, g.p)
            }
        },
        g = new $(a.x - b, a.y - b, a.x + b, a.y + b);
        this.lock();
        this.activeShapes.query(g, f);
        this.staticShapes.query(g, f);
        this.unlock(!0)
    };
    B.prototype.nearestPointQueryNearest = function(a, b, c, d) {
        var e, f = function(f) {
            f.group && d === f.group || !(c & f.layers) || f.sensor || (f = f.nearestPointQuery(a), b > f.d && (!e || f.d < e.d) && (e = f))
        },
        g = new $(a.x - b, a.y - b, a.x + b, a.y + b);
        return this.activeShapes.query(g, f),
        this.staticShapes.query(g, f),
        e
    };
    B.prototype.segmentQuery = function(a, b, c, d, e) {
        var f = function(f) {
            var g;
            return (!f.group || d !== f.group) && c & f.layers && (g = f.segmentQuery(a, b)) && e(f, g.t, g.n),
            1
        };
        this.lock();
        this.staticShapes.segmentQuery(a, b, 1, f);
        this.activeShapes.segmentQuery(a, b, 1, f);
        this.unlock(!0)
    };
    B.prototype.segmentQueryFirst = function(a, b, c, d) {
        var e = null,
        f = function(f) {
            var g;
            return (!f.group || d !== f.group) && c & f.layers && !f.sensor && (g = f.segmentQuery(a, b)) && (null === e || g.t < e.t) && (e = g),
            e ? e.t: 1
        };
        return this.staticShapes.segmentQuery(a, b, 1, f),
        this.activeShapes.segmentQuery(a, b, e ? e.t: 1, f),
        e
    };
    B.prototype.bbQuery = function(a, b, c, d) {
        var e = function(e) { (!e.group || c !== e.group) && b & e.layers && e.bb_r >= a.l && a.r >= e.bb_l && e.bb_t >= a.b && a.t >= e.bb_b && d(e)
        };
        this.lock();
        this.activeShapes.query(a, e);
        this.staticShapes.query(a, e);
        this.unlock(!0)
    };
    B.prototype.shapeQuery = function(a, b) {
        var c = a.body;
        c && a.update(c.p, c.rot);
        var c = new $(a.bb_l, a.bb_b, a.bb_r, a.bb_t),
        d = !1,
        e = function(c) {
            if ((!a.group || a.group !== c.group) && a.layers & c.layers && a !== c) {
                var e;
                if (a.collisionCode <= c.collisionCode) e = Ga(a, c);
                else {
                    e = Ga(c, a);
                    for (var f = 0; e.length > f; f++) e[f].n = C(e[f].n)
                }
                if (e.length && (d = !(a.sensor || c.sensor), b)) {
                    for (var g = Array(e.length), f = 0; e.length > f; f++) g[f] = new Va(e[f].p, e[f].n, e[f].dist);
                    b(c, g)
                }
            }
        };
        return this.lock(),
        this.activeShapes.query(c, e),
        this.staticShapes.query(c, e),
        this.unlock(!0),
        d
    };
    B.prototype.addPostStepCallback = function(a) {
        f(this.locked, "Adding a post-step callback when the space is not locked is unnecessary. Post-step callbacks will not called until the end of the next call to cpSpaceStep() or the next query.");
        this.postStepCallbacks.push(a)
    };
    B.prototype.runPostStepCallbacks = function() {
        for (var a = 0; this.postStepCallbacks.length > a; a++) this.postStepCallbacks[a]();
        this.postStepCallbacks = []
    };
    B.prototype.lock = function() {
        this.locked++
    };
    B.prototype.unlock = function(a) {
        if (this.locked--, h(0 <= this.locked, "Internal Error: Space lock underflow."), 0 === this.locked && a) {
            a = this.rousedBodies;
            for (var b = 0; a.length > b; b++) this.activateBody(a[b]);
            a.length = 0;
            this.runPostStepCallbacks()
        }
    };
    B.prototype.makeCollideShapes = function() {
        var a = this;
        return function(b, c) {
            if (b.bb_l <= c.bb_r && c.bb_l <= b.bb_r && b.bb_b <= c.bb_t && c.bb_b <= b.bb_t && b.body !== c.body && (!b.group || b.group !== c.group) && b.layers & c.layers) {
                var d = a.lookupHandler(b.collision_type, c.collision_type),
                e = b.sensor || c.sensor;
                if (!e || d !== bb) {
                    if (b.collisionCode > c.collisionCode) {
                        var f = b;
                        b = c;
                        c = f
                    }
                    f = Ga(b, c);
                    if (0 !== f.length) {
                        var h = g(b.hashid, c.hashid),
                        k = a.cachedArbiters[h];
                        k || (k = a.cachedArbiters[h] = new L(b, c));
                        k.update(f, d, b, c);
                        "first coll" != k.state || d.begin(k, a) || k.ignore();
                        "ignore" !== k.state && d.preSolve(k, a) && !e ? a.arbiters.push(k) : (k.contacts = null, "ignore" !== k.state && (k.state = "normal"));
                        k.stamp = a.stamp
                    }
                }
            }
        }
    };
    B.prototype.arbiterSetFilter = function(a) {
        var b = this.stamp - a.stamp,
        c = a.body_a,
        d = a.body_b;
        return (c.isStatic() || c.isSleeping()) && (d.isStatic() || d.isSleeping()) ? !0 : (1 <= b && "cached" != a.state && (a.callSeparate(this), a.state = "cached"), b >= this.collisionPersistence ? (a.contacts = null, !1) : !0)
    };
    var pb = function(a) {
        var b = a.body;
        a.update(b.p, b.rot)
    };
    B.prototype.step = function(a) {
        if (0 !== a) {
            h(0 === w.x && 0 === w.y, "vzero is invalid");
            this.stamp++;
            var b = this.curr_dt;
            this.curr_dt = a;
            var c, d, e = this.bodies,
            f = this.constraints,
            g = this.arbiters;
            for (c = 0; g.length > c; c++) {
                var k = g[c];
                k.state = "normal";
                k.body_a.isSleeping() || k.body_b.isSleeping() || k.unthread()
            }
            g.length = 0;
            this.lock();
            for (c = 0; e.length > c; c++) e[c].position_func(a);
            this.activeShapes.each(pb);
            this.activeShapes.reindexQuery(this.collideShapes);
            this.unlock(!1);
            this.processComponents(a);
            this.lock();
            for (d in this.cachedArbiters) this.arbiterSetFilter(this.cachedArbiters[d]) || delete this.cachedArbiters[d];
            d = this.collisionSlop;
            k = 1 - Math.pow(this.collisionBias, a);
            for (c = 0; g.length > c; c++) g[c].preStep(a, d, k);
            for (c = 0; f.length > c; c++) d = f[c],
            d.preSolve(this),
            d.preStep(a);
            d = Math.pow(this.damping, a);
            k = this.gravity;
            for (c = 0; e.length > c; c++) e[c].velocity_func(k, d, a);
            a = 0 === b ? 0 : a / b;
            for (c = 0; g.length > c; c++) g[c].applyCachedImpulse(a);
            for (c = 0; f.length > c; c++) f[c].applyCachedImpulse(a);
            for (c = 0; this.iterations > c; c++) {
                for (a = 0; g.length > a; a++) g[a].applyImpulse();
                for (a = 0; f.length > a; a++) f[a].applyImpulse()
            }
            for (c = 0; f.length > c; c++) f[c].postSolve(this);
            for (c = 0; g.length > c; c++) g[c].handler.postSolve(g[c], this);
            this.unlock(!0)
        }
    };
    var Ia = function(a, b, c, d) {
        return new q(b.vx + -d.y * b.w - (a.vx + -c.y * a.w), b.vy + d.x * b.w - (a.vy + c.x * a.w))
    },
    Ea = function(a, b, c, d, e) {
        return (b.vx + -d.y * b.w - (a.vx + -c.y * a.w)) * e.x + (b.vy + d.x * b.w - (a.vy + c.x * a.w)) * e.y
    },
    za = function(a, b, c, d) {
        a.vx += b * a.m_inv;
        a.vy += c * a.m_inv;
        a.w += a.i_inv * (d.x * c - d.y * b)
    },
    U = function(a, b, c, d, e, f) {
        za(a, -e, -f, c);
        za(b, e, f, d)
    },
    Xa = function(a, b, c, d) {
        a.v_biasx += b * a.m_inv;
        a.v_biasy += c * a.m_inv;
        a.w_bias += a.i_inv * (d.x * c - d.y * b)
    },
    cb = function(a, b, c) {
        b = F(b, c);
        return a.m_inv + a.i_inv * b * b
    },
    ka = function(a, b, c, d, e) {
        a = cb(a, c, e) + cb(b, d, e);
        return f(0 !== a, "Unsolvable collision or constraint."),
        a
    },
    db = function(a, b, c, d, e, g) {
        var h;
        h = a.m_inv + b.m_inv;
        var k = a.i_inv,
        m = c.x * c.x * k;
        a = -c.x * c.y * k;
        c = h + c.y * c.y * k;
        h += m;
        k = b.i_inv;
        b = d.x * d.x * k;
        m = -d.x * d.y * k;
        c += d.y * d.y * k;
        d = 0 + a + m;
        a = 0 + a + m;
        h += b;
        b = c * h - d * a;
        f(0 !== b, "Unsolvable constraint.");
        b = 1 / b;
        e.x = h * b;
        e.y = -d * b;
        g.x = -a * b;
        g.y = c * b
    },
    H = c.Constraint = function(a, b) {
        this.a = a;
        this.b = b;
        this.next_b = this.next_a = this.space = null;
        this.maxForce = 1 / 0;
        this.errorBias = Math.pow(0.9, 60);
        this.maxBias = 1 / 0
    };
    H.prototype.activateBodies = function() {
        this.a && this.a.activate();
        this.b && this.b.activate()
    };
    H.prototype.preStep = function() {};
    H.prototype.applyCachedImpulse = function() {};
    H.prototype.applyImpulse = function() {};
    H.prototype.getImpulse = function() {
        return 0
    };
    H.prototype.preSolve = function() {};
    H.prototype.postSolve = function() {};
    H.prototype.next = function(a) {
        return this.a === a ? this.next_a: this.next_b
    };
    var la = c.PinJoint = function(a, b, c, d) {
        H.call(this, a, b);
        this.anchr1 = c;
        this.anchr2 = d;
        a = a ? A(a.p, E(c, a.rot)) : c;
        b = b ? A(b.p, E(d, b.rot)) : d;
        this.dist = x(y(b, a));
        f(0 < this.dist, "You created a 0 length pin joint. A pivot joint will be much more stable.");
        this.n = this.r1 = this.r2 = null;
        this.bias = this.jnAcc = this.jnMax = this.nMass = 0
    };
    la.prototype = Object.create(H.prototype);
    la.prototype.preStep = function(a) {
        var b = this.a,
        c = this.b;
        this.r1 = E(this.anchr1, b.rot);
        this.r2 = E(this.anchr2, c.rot);
        var d = y(A(c.p, this.r2), A(b.p, this.r1)),
        e = x(d);
        this.n = z(d, 1 / (e ? e: 1 / 0));
        this.nMass = 1 / ka(b, c, this.r1, this.r2, this.n);
        b = this.maxBias;
        this.bias = s( - (1 - Math.pow(this.errorBias, a)) * (e - this.dist) / a, -b, b);
        this.jnMax = this.maxForce * a
    };
    la.prototype.applyCachedImpulse = function(a) {
        a = z(this.n, this.jnAcc * a);
        U(this.a, this.b, this.r1, this.r2, a.x, a.y)
    };
    la.prototype.applyImpulse = function() {
        var a = this.a,
        b = this.b,
        c = this.n,
        d = Ea(a, b, this.r1, this.r2, c),
        d = (this.bias - d) * this.nMass,
        e = this.jnAcc;
        this.jnAcc = s(e + d, -this.jnMax, this.jnMax);
        d = this.jnAcc - e;
        U(a, b, this.r1, this.r2, c.x * d, c.y * d)
    };
    la.prototype.getImpulse = function() {
        return Math.abs(this.jnAcc)
    };
    var ma = c.SlideJoint = function(a, b, c, d, e, f) {
        H.call(this, a, b);
        this.anchr1 = c;
        this.anchr2 = d;
        this.min = e;
        this.max = f;
        this.r1 = this.r2 = this.n = null;
        this.bias = this.jnAcc = this.jnMax = this.nMass = 0
    };
    ma.prototype = Object.create(H.prototype);
    ma.prototype.preStep = function(a) {
        var b = this.a,
        c = this.b;
        this.r1 = E(this.anchr1, b.rot);
        this.r2 = E(this.anchr2, c.rot);
        var d = y(A(c.p, this.r2), A(b.p, this.r1)),
        e = x(d),
        f = 0;
        e > this.max ? (f = e - this.max, this.n = G(d)) : this.min > e ? (f = this.min - e, this.n = C(G(d))) : (this.n = w, this.jnAcc = 0);
        this.nMass = 1 / ka(b, c, this.r1, this.r2, this.n);
        b = this.maxBias;
        this.bias = s( - (1 - Math.pow(this.errorBias, a)) * f / a, -b, b);
        this.jnMax = this.maxForce * a
    };
    ma.prototype.applyCachedImpulse = function(a) {
        a *= this.jnAcc;
        U(this.a, this.b, this.r1, this.r2, this.n.x * a, this.n.y * a)
    };
    ma.prototype.applyImpulse = function() {
        if (0 !== this.n.x || 0 !== this.n.y) {
            var a = this.a,
            b = this.b,
            c = this.n,
            d = Ia(a, b, this.r1, this.r2),
            d = u(d, c),
            d = (this.bias - d) * this.nMass,
            e = this.jnAcc;
            this.jnAcc = s(e + d, -this.jnMax, 0);
            d = this.jnAcc - e;
            U(a, b, this.r1, this.r2, c.x * d, c.y * d)
        }
    };
    ma.prototype.getImpulse = function() {
        return Math.abs(this.jnAcc)
    };
    var na = c.PivotJoint = function(a, b, c, d) {
        if (H.call(this, a, b), void 0 === d) d = c,
        c = a ? a.world2Local(d) : d,
        d = b ? b.world2Local(d) : d;
        this.anchr1 = c;
        this.anchr2 = d;
        this.r1 = this.r2 = w;
        this.k1 = new q(0, 0);
        this.k2 = new q(0, 0);
        this.jAcc = w;
        this.jMaxLen = 0;
        this.bias = w
    };
    na.prototype = Object.create(H.prototype);
    na.prototype.preStep = function(a) {
        var b = this.a,
        c = this.b;
        this.r1 = E(this.anchr1, b.rot);
        this.r2 = E(this.anchr2, c.rot);
        db(b, c, this.r1, this.r2, this.k1, this.k2);
        this.jMaxLen = this.maxForce * a;
        b = y(A(c.p, this.r2), A(b.p, this.r1));
        this.bias = M(z(b, -(1 - Math.pow(this.errorBias, a)) / a), this.maxBias)
    };
    na.prototype.applyCachedImpulse = function(a) {
        U(this.a, this.b, this.r1, this.r2, this.jAcc.x * a, this.jAcc.y * a)
    };
    na.prototype.applyImpulse = function() {
        var a = this.a,
        b = this.b,
        c = Ia(a, b, this.r1, this.r2),
        c = y(this.bias, c),
        d = this.k2,
        c = new q(u(c, this.k1), u(c, d)),
        d = this.jAcc;
        this.jAcc = M(A(this.jAcc, c), this.jMaxLen);
        U(a, b, this.r1, this.r2, this.jAcc.x - d.x, this.jAcc.y - d.y)
    };
    na.prototype.getImpulse = function() {
        return x(this.jAcc)
    };
    var da = c.GrooveJoint = function(a, b, c, d, e) {
        H.call(this, a, b);
        this.grv_a = c;
        this.grv_b = d;
        this.grv_n = J(Q(y(d, c)));
        this.anchr2 = e;
        this.grv_tn = null;
        this.clamp = 0;
        this.r1 = this.r2 = null;
        this.k1 = new q(0, 0);
        this.k2 = new q(0, 0);
        this.jAcc = w;
        this.jMaxLen = 0;
        this.bias = null
    };
    da.prototype = Object.create(H.prototype);
    da.prototype.preStep = function(a) {
        var b = this.a,
        c = this.b,
        d = b.local2World(this.grv_a),
        e = b.local2World(this.grv_b),
        f = E(this.grv_n, b.rot),
        g = u(d, f);
        this.grv_tn = f;
        this.r2 = E(this.anchr2, c.rot);
        var h = F(A(c.p, this.r2), f);
        F(d, f) >= h ? (this.clamp = 1, this.r1 = y(d, b.p)) : h >= F(e, f) ? (this.clamp = -1, this.r1 = y(e, b.p)) : (this.clamp = 0, this.r1 = y(A(z(J(f), -h), z(f, g)), b.p));
        db(b, c, this.r1, this.r2, this.k1, this.k2);
        this.jMaxLen = this.maxForce * a;
        b = y(A(c.p, this.r2), A(b.p, this.r1));
        this.bias = M(z(b, -(1 - Math.pow(this.errorBias, a)) / a), this.maxBias)
    };
    da.prototype.applyCachedImpulse = function(a) {
        U(this.a, this.b, this.r1, this.r2, this.jAcc.x * a, this.jAcc.y * a)
    };
    da.prototype.grooveConstrain = function(a) {
        var b = this.grv_tn;
        a = 0 < this.clamp * F(a, b) ? a: P(a, b);
        return M(a, this.jMaxLen)
    };
    da.prototype.applyImpulse = function() {
        var a = this.a,
        b = this.b,
        c = Ia(a, b, this.r1, this.r2),
        c = y(this.bias, c),
        d = this.k2,
        c = new q(u(c, this.k1), u(c, d)),
        d = this.jAcc;
        this.jAcc = this.grooveConstrain(A(d, c));
        U(a, b, this.r1, this.r2, this.jAcc.x - d.x, this.jAcc.y - d.y)
    };
    da.prototype.getImpulse = function() {
        return x(this.jAcc)
    };
    da.prototype.setGrooveA = function(a) {
        this.grv_a = a;
        this.grv_n = J(Q(y(this.grv_b, a)));
        this.activateBodies()
    };
    da.prototype.setGrooveB = function(a) {
        this.grv_b = a;
        this.grv_n = J(Q(y(a, this.grv_a)));
        this.activateBodies()
    };
    var qb = function(a, b) {
        return (a.restLength - b) * a.stiffness
    },
    oa = c.DampedSpring = function(a, b, c, d, e, f, g) {
        H.call(this, a, b);
        this.anchr1 = c;
        this.anchr2 = d;
        this.restLength = e;
        this.stiffness = f;
        this.damping = g;
        this.springForceFunc = qb;
        this.target_vrn = this.v_coef = 0;
        this.r1 = this.r2 = null;
        this.nMass = 0;
        this.n = null
    };
    oa.prototype = Object.create(H.prototype);
    oa.prototype.preStep = function(a) {
        var b = this.a,
        c = this.b;
        this.r1 = E(this.anchr1, b.rot);
        this.r2 = E(this.anchr2, c.rot);
        var d = y(A(c.p, this.r2), A(b.p, this.r1)),
        e = x(d);
        this.n = z(d, 1 / (e ? e: 1 / 0));
        d = ka(b, c, this.r1, this.r2, this.n);
        f(0 !== d, "Unsolvable this.");
        this.nMass = 1 / d;
        this.target_vrn = 0;
        this.v_coef = 1 - Math.exp( - this.damping * a * d);
        e = this.springForceFunc(this, e);
        U(b, c, this.r1, this.r2, this.n.x * e * a, this.n.y * e * a)
    };
    oa.prototype.applyCachedImpulse = function() {};
    oa.prototype.applyImpulse = function() {
        var a = this.a,
        b = this.b,
        c = Ea(a, b, this.r1, this.r2, this.n),
        d = (this.target_vrn - c) * this.v_coef;
        this.target_vrn = c + d;
        d *= this.nMass;
        U(a, b, this.r1, this.r2, this.n.x * d, this.n.y * d)
    };
    oa.prototype.getImpulse = function() {
        return 0
    };
    var rb = function(a, b) {
        return (b - a.restAngle) * a.stiffness
    },
    Ja = c.DampedRotarySpring = function(a, b, c, d, e) {
        H.call(this, a, b);
        this.restAngle = c;
        this.stiffness = d;
        this.damping = e;
        this.springTorqueFunc = rb;
        this.iSum = this.w_coef = this.target_wrn = 0
    };
    Ja.prototype = Object.create(H.prototype);
    Ja.prototype.preStep = function(a) {
        var b = this.a,
        c = this.b,
        d = b.i_inv + c.i_inv;
        f(0 !== d, "Unsolvable spring.");
        this.iSum = 1 / d;
        this.w_coef = 1 - Math.exp( - this.damping * a * d);
        this.target_wrn = 0;
        a *= this.springTorqueFunc(this, b.a - c.a);
        b.w -= a * b.i_inv;
        c.w += a * c.i_inv
    };
    Ja.prototype.applyImpulse = function() {
        var a = this.a,
        b = this.b,
        c = a.w - b.w,
        d = (this.target_wrn - c) * this.w_coef;
        this.target_wrn = c + d;
        c = d * this.iSum;
        a.w += c * a.i_inv;
        b.w -= c * b.i_inv
    };
    var pa = c.RotaryLimitJoint = function(a, b, c, d) {
        H.call(this, a, b);
        this.min = c;
        this.max = d;
        this.iSum = this.bias = this.jMax = this.jAcc = 0
    };
    pa.prototype = Object.create(H.prototype);
    pa.prototype.preStep = function(a) {
        var b = this.a,
        c = this.b,
        d = c.a - b.a,
        e = 0;
        d > this.max ? e = this.max - d: this.min > d && (e = this.min - d);
        this.iSum = 1 / (1 / b.i + 1 / c.i);
        b = this.maxBias;
        this.bias = s( - (1 - Math.pow(this.errorBias, a)) * e / a, -b, b);
        this.jMax = this.maxForce * a;
        this.bias || (this.jAcc = 0)
    };
    pa.prototype.applyCachedImpulse = function(a) {
        var b = this.a,
        c = this.b;
        a *= this.jAcc;
        b.w -= a * b.i_inv;
        c.w += a * c.i_inv
    };
    pa.prototype.applyImpulse = function() {
        if (this.bias) {
            var a = this.a,
            b = this.b,
            c = -(this.bias + (b.w - a.w)) * this.iSum,
            d = this.jAcc;
            this.jAcc = 0 > this.bias ? s(d + c, 0, this.jMax) : s(d + c, -this.jMax, 0);
            c = this.jAcc - d;
            a.w -= c * a.i_inv;
            b.w += c * b.i_inv
        }
    };
    pa.prototype.getImpulse = function() {
        return Math.abs(joint.jAcc)
    };
    var qa = c.RatchetJoint = function(a, b, c, d) {
        H.call(this, a, b);
        this.angle = 0;
        this.phase = c;
        this.ratchet = d;
        this.angle = (b ? b.a: 0) - (a ? a.a: 0);
        this.iSum = this.bias = this.jAcc = this.jMax = 0
    };
    qa.prototype = Object.create(H.prototype);
    qa.prototype.preStep = function(a) {
        var b = this.a,
        c = this.b,
        d = this.phase,
        e = this.ratchet,
        f = c.a - b.a,
        g = this.angle - f,
        h = 0;
        0 < g * e ? h = g: this.angle = Math.floor((f - d) / e) * e + d;
        this.iSum = 1 / (b.i_inv + c.i_inv);
        b = this.maxBias;
        this.bias = s( - (1 - Math.pow(this.errorBias, a)) * h / a, -b, b);
        this.jMax = this.maxForce * a;
        this.bias || (this.jAcc = 0)
    };
    qa.prototype.applyCachedImpulse = function(a) {
        var b = this.a,
        c = this.b;
        a *= this.jAcc;
        b.w -= a * b.i_inv;
        c.w += a * c.i_inv
    };
    qa.prototype.applyImpulse = function() {
        if (this.bias) {
            var a = this.a,
            b = this.b,
            c = this.ratchet,
            d = -(this.bias + (b.w - a.w)) * this.iSum,
            e = this.jAcc;
            this.jAcc = s((e + d) * c, 0, this.jMax * Math.abs(c)) / c;
            d = this.jAcc - e;
            a.w -= d * a.i_inv;
            b.w += d * b.i_inv
        }
    };
    qa.prototype.getImpulse = function(a) {
        return Math.abs(a.jAcc)
    };
    var ga = c.GearJoint = function(a, b, c, d) {
        H.call(this, a, b);
        this.phase = c;
        this.ratio = d;
        this.ratio_inv = 1 / d;
        this.iSum = this.bias = this.jMax = this.jAcc = 0
    };
    ga.prototype = Object.create(H.prototype);
    ga.prototype.preStep = function(a) {
        var b = this.a,
        c = this.b;
        this.iSum = 1 / (b.i_inv * this.ratio_inv + this.ratio * c.i_inv);
        var d = this.maxBias;
        this.bias = s( - (1 - Math.pow(this.errorBias, a)) * (c.a * this.ratio - b.a - this.phase) / a, -d, d);
        this.jMax = this.maxForce * a
    };
    ga.prototype.applyCachedImpulse = function(a) {
        var b = this.a,
        c = this.b;
        a *= this.jAcc;
        b.w -= a * b.i_inv * this.ratio_inv;
        c.w += a * c.i_inv
    };
    ga.prototype.applyImpulse = function() {
        var a = this.a,
        b = this.b,
        c = (this.bias - (b.w * this.ratio - a.w)) * this.iSum,
        d = this.jAcc;
        this.jAcc = s(d + c, -this.jMax, this.jMax);
        c = this.jAcc - d;
        a.w -= c * a.i_inv * this.ratio_inv;
        b.w += c * b.i_inv
    };
    ga.prototype.getImpulse = function() {
        return Math.abs(this.jAcc)
    };
    ga.prototype.setRatio = function(a) {
        this.ratio = a;
        this.ratio_inv = 1 / a;
        this.activateBodies()
    };
    var ra = c.SimpleMotor = function(a, b, c) {
        H.call(this, a, b);
        this.rate = c;
        this.iSum = this.jMax = this.jAcc = 0
    };
    ra.prototype = Object.create(H.prototype);
    ra.prototype.preStep = function(a) {
        this.iSum = 1 / (this.a.i_inv + this.b.i_inv);
        this.jMax = this.maxForce * a
    };
    ra.prototype.applyCachedImpulse = function(a) {
        var b = this.a,
        c = this.b;
        a *= this.jAcc;
        b.w -= a * b.i_inv;
        c.w += a * c.i_inv
    };
    ra.prototype.applyImpulse = function() {
        var a = this.a,
        b = this.b,
        c = -(b.w - a.w + this.rate) * this.iSum,
        d = this.jAcc;
        this.jAcc = s(d + c, -this.jMax, this.jMax);
        c = this.jAcc - d;
        a.w -= c * a.i_inv;
        b.w += c * b.i_inv
    };
    ra.prototype.getImpulse = function() {
        return Math.abs(this.jAcc)
    }
})();
var world, PHYS_SCALE = 1,
RAD_TO_DEGREES = 180 / Math.PI,
DEGREES_TO_RAD = Math.PI / 180,
objA, objB, debugCanvas, debugDraw, space, v = cp.v,
GRABABLE_MASK_BIT = -2147483648,
NOT_GRABABLE_MASK = ~GRABABLE_MASK_BIT;
function initPhysics(c) {
    isLevelEditor && isEditorDebug && (isPhysicsDebugDraw = !0);
    isPhysicsDebugDraw && !c && (debugCanvas = document.createElement("canvas"), debugCanvas.id = "debugCanvas", debugCanvas.width = 320, debugCanvas.height = 356, debugCanvas.style.position = "absolute", debugCanvas.style.left = "50%", debugCanvas.style.top = "10%", debugCanvas.style.zIndex = "1", debugCanvas.style.pointerEvents = "none", document.body.appendChild(debugCanvas), ChipMunkDebugDrawer.prototype.canvas = debugCanvas, ChipMunkDebugDrawer.prototype.ctx = debugCanvas.getContext("2d"), onWindowResize(null));
    debugDraw = new ChipMunkDebugDrawer;
    space = debugDraw.space;
    space.iterations = 10;
    space.gravity = v(0, 0);
    space.sleepTimeThreshold = 1;
    space.collisionSlop = 1;
    space.damping = 0.3;
    space.addCollisionHandler(1, 0, null, onSensorContactPreSolve, null, null);
    space.addCollisionHandler(3, 0, onAimContactBegin, null, null, null);
    space.addCollisionHandler(0, 0, onBallContactBegin, null, null, null)
}
function onDangerContactPreSolve(c, b, a) {
    objA = c.body_a.userdata;
    objB = c.body_b.userdata;
    collidedChar = collidedAim = null;
    if (objA && objB) {
        if (objA.isBall || objA.isPusher) collidedAim = objA,
        collidedChar = objB;
        else if (objB.isBall || objB.isPusher) collidedAim = objB,
        collidedChar = objA;
        if (collidedChar) return collidedAim.die(collidedChar.vis.x, collidedChar.vis.y),
        !1
    }
    return ! 0
}
function onBallContactBegin(c, b) {
    objA = c.body_a.userdata;
    objB = c.body_b.userdata;
    collidedChar = collidedAim = null;
    objA && objB && (objA.isBall ? (collidedAim = objA, collidedChar = objB) : objB.isBall && (collidedAim = objB, collidedChar = objA), collidedChar && playSound("kickSound"));
    return ! 0
}
function onAimContactBegin(c, b) {
    objA = c.body_a.userdata;
    objB = c.body_b.userdata;
    collidedChar = collidedAim = null;
    objA && objB && (objA.isAim ? (collidedAim = objA, collidedChar = objB) : objB.isAim && (collidedAim = objB, collidedChar = objA), collidedChar && collidedChar.isBall && !isLevelCompleted && !isLevelFailed && (trace("level complete!"), collidedAim.aimCollected(), showLevelCompleteWin(),updateShare(window._play68Level)/*play68_submitScore(window._play68Level)*/));
    return ! 0
}
function onGlassContactBegin(c, b) {
    objA = c.body_a.userdata;
    objB = c.body_b.userdata;
    collidedGlass = collidedAim = null;
    if (objA && objB && (objA.isGlass ? (collidedGlass = objA, collidedAim = objB) : objB.isGlass && (collidedGlass = objB, collidedAim = objA), collidedGlass)) { (collidedBody = collidedAim.physBody) && collidedAim.physBody.isStatic() && (collidedBody = collidedGlass.physBody);
        if (!collidedBody) return ! 0;
        var a = collidedBody.vx,
        h = collidedBody.vy;
        Math.sqrt(a * a + h * h) > GLASS_BREAK_VELOCITY && (addToArray(clickedChars, collidedGlass), collidedAim.isGlass && addToArray(clickedChars, collidedAim))
    }
    return ! 0
}
function onSensorContactPreSolve(c, b, a) {
    objA = c.body_a.userdata;
    objB = c.body_b.userdata;
    collidedSensor = collidedAim = null;
    objA && objB && (c.a.sensor ? (collidedSensor = objA, collidedAim = objB) : c.b.sensor && (collidedSensor = objB, collidedAim = objA), collidedSensor && collidedSensor.isActivated && collidedAim.physBody && (dx = collidedAim.vis.x - collidedSensor.vis.x, dy = collidedAim.vis.y - collidedSensor.vis.y, dist = Math.sqrt(dx * dx + dy * dy), force = Math.max(0, 1 - dist / collidedSensor.activDistance), force = force * collidedSensor.activForce * collidedAim.physBody.m, angle = collidedSensor.vis.rotation * DEGREES_TO_RAD, collidedSensor.isReversed && (angle += Math.PI), collidedAim.physBody.applyImpulse(v(force * Math.cos(angle), force * Math.sin(angle)), cp.vzero)));
    return ! 0
}
var worldManifold, isCollideParticlesNeed = !0,
collidedChar, collidedAim, collidedSensor, collidedBody, collidedGlass, force, angle, fixDef, bodyDef;
function createCircleShape(c, b, a, h, f, d) {
    var e = !1,
    g = 0.5,
    k = 0.6;
    h === BALL_TYPE || h === HERO_DOC_TYPE ? k = 0.8 : h === FAN_TYPE ? (e = !0, g = 0.8, k = 0) : h === DANGER_KUST_TYPE ? (e = !0, g = 0.8, k = 0) : h === STATIC_CIRCLE_TYPE && (e = !0, k = g = 0.5);
    e ? (e = new cp.Body(Infinity, Infinity), e.nodeIdleTime = Infinity) : e = space.addBody(new cp.Body(1, cp.momentForCircle(1, 0, a, v(0, 0))));
    e.setPos(v(c, b));
    e.setAngle(f);
    c = space.addShape(new cp.CircleShape(e, a, v(0, 0)));
    c.setElasticity(k);
    c.setFriction(g);
    h === FAN_TYPE ? (h = d.isReversed ? space.addShape(new cp.BoxShape2(e, new cp.BB( - d.activDistance, -15, 0, 15))) : space.addShape(new cp.BoxShape2(e, new cp.BB(0, -15, d.activDistance, 15))), h.setSensor(!0), h.setCollisionType(1)) : h === DANGER_KUST_TYPE && c.setCollisionType(5);
    return e
}
var DEFAULT_RECT_SIZE = 90 / PHYS_SCALE,
DEFAULT_BOX_SIZE = 52 / PHYS_SCALE;
function createRectPhysics(c, b, a, h, f, d) {
    var e = DEFAULT_RECT_SIZE,
    g = DEFAULT_RECT_SIZE,
    k = !1,
    m = 0.6,
    n = 0,
    p = 0.5,
    r = 0.0010;
    f === PHYSICS_RECT_TYPE ? k = !0 : f === DYNAMIC_BOX_TYPE ? (g = e = DEFAULT_BOX_SIZE, m = 0.8) : f === HARD_BOX_TYPE ? (e = 30 / PHYS_SCALE, g = 30 / PHYS_SCALE, m = 0.8) : f === STATIC_BOX_TYPE ? (e = 55 / PHYS_SCALE, g = 55 / PHYS_SCALE, m = 0.8, k = !0) : f === DANGER_TYPE ? (e = 100 / PHYS_SCALE, g = 18 / PHYS_SCALE) : f === PHYSICS_MAN_BLOCK_TYPE ? (e = 194 / PHYS_SCALE, g = 23 / PHYS_SCALE) : f === GLASS_BLOCK_TYPE ? (e = 103 / PHYS_SCALE, g = 20 / PHYS_SCALE, n = 2) : f === GLASS_BOX_TYPE ? (e = 30 / PHYS_SCALE, g = 30 / PHYS_SCALE, n = 2) : f === DOOR_TYPE ? (e = 122 / PHYS_SCALE, g = 18 / PHYS_SCALE) : f === DYNAMIC_RECT_TYPE ? (e = 109 / PHYS_SCALE, g = 20 / PHYS_SCALE, m = 0.8) : f === HARD_RECT_TYPE ? (e = 109 / PHYS_SCALE, g = 20 / PHYS_SCALE, m = 0.8, r = 1 / 1500) : f === STATIC_BALK_1_TYPE && (e = 115 / PHYS_SCALE, g = 40 / PHYS_SCALE, m = 0.8, p = 1, k = !0);
    a *= e;
    h *= g;
    k ? (k = new cp.Body(Infinity, Infinity), k.nodeIdleTime = Infinity) : (k = a * h * r, k = space.addBody(new cp.Body(k, cp.momentForBox(k, a, h))));
    k.setPos(v(c, b));
    k.setAngle(d);
    c = space.addShape(new cp.BoxShape(k, a, h));
    c.setCollisionType(n);
    c.setFriction(m);
    c.setElasticity(p);
    return k
}
function createKinematicPhysics(c, b, a, h, f, d, e) {
    var g = e = 0,
    k = 0;
    a = new cp.Body(Infinity, Infinity);
    a.setPos(v(c, b));
    a.setAngle(d);
    f === TELEGA_TYPE ? (g = 105 / PHYS_SCALE * h, k = 20 / PHYS_SCALE * h, b = 0, c = space.addShape(new cp.BoxShape2(a, new cp.BB( - g / 2, b * h, g / 2, k + b))), c.setFriction(0.8), c.setElasticity(e), b = 20, c = space.addShape(new cp.BoxShape2(a, new cp.BB( - g / 2, -20 * h, -g / 2 + b, k))), c.setFriction(1), c.setElasticity(0), c = space.addShape(new cp.BoxShape2(a, new cp.BB(g / 2 - b, -20 * h, g / 2, k))), c.setFriction(0), c.setElasticity(0)) : f === AIM_TYPE ? (g = 130 / PHYS_SCALE * h, k = 15 / PHYS_SCALE * h, b = -43 * h, e = 0.3, c = space.addShape(new cp.BoxShape2(a, new cp.BB( - g / 2, b, g / 2, k + b))), c.setFriction(0.8), c.setElasticity(e), b = 5 * h, c = space.addShape(new cp.BoxShape2(a, new cp.BB( - g / 2 - 10 * h, -20 * h, -g / 2 + b, 45 * h))), c.setFriction(0.8), c.setElasticity(e), c = space.addShape(new cp.BoxShape2(a, new cp.BB(g / 2 - b, -20 * h, g / 2 + 10 * h, 45 * h))), c.setFriction(0.8), c.setElasticity(e), h = space.addShape(new cp.BoxShape2(a, new cp.BB( - 50 * h, -20 * h, 50 * h, 17 * h))), h.setSensor(!0), h.setCollisionType(3)) : f === MOVABLE_BALK_TYPE && (g = 115 / PHYS_SCALE * h, k = 40 / PHYS_SCALE * h, c = space.addShape(new cp.BoxShape2(a, new cp.BB( - g / 2, -k / 2, g / 2, k / 2))), c.setFriction(0.8), c.setElasticity(e));
    return a
}
function createSegmentPhysics(c, b, a, h, f, d, e) {
    e = new cp.Body(Infinity, Infinity);
    e.nodeIdleTime = Infinity;
    e.setPos(v(c, b));
    e.setAngle(d);
    f === LAND_TYPE && (c = space.addShape(new cp.SegmentShape(e, v( - 60 * a, -22 * h), v(60 * a, -22 * h), 5)), c.setFriction(0.8), c.setElasticity(0.6));
    return e
}
function createTrianglePhysics(c, b, a, h, f, d) {
    var e = 0;
    a *= 51;
    var g = 45 * h;
    h = [ - a / 2, -g / 2, 0, g / 2, a / 2, -g / 2];
    a = 0.0010 * a * g;
    a = space.addBody(new cp.Body(a, cp.momentForPoly(a, h, cp.vzero)));
    h = space.addShape(new cp.PolyShape(a, h, cp.vzero));
    h.setFriction(0.6);
    h.setElasticity(0);
    f === GLASS_TRIANGLE_TYPE && (e = 2);
    h.setCollisionType(e);
    a.setPos(v(c, b));
    a.setAngle(d);
    return a
}
var querySelectedBody, queryV = new v(0, 0);
function getBodyAtMouse(c, b) {
    querySelectedBody = null;
    queryV.x = c;
    queryV.y = b;
    var a = this.space.nearestPointQueryNearest(queryV, 100, cp.ALL_LAYERS, cp.NO_GROUP);
    a && 0 > a.d && a.shape && a.shape.body && (querySelectedBody = a.shape.body);
    return querySelectedBody
}
function destroyBody(c) {
    var b;
    if (c.isStatic()) for (; 0 < c.shapeList.length;) b = c.shapeList[0],
    space.removeStaticShape(b);
    else {
        for (; 0 < c.shapeList.length;) b = c.shapeList[0],
        b.space && space.removeShape(b);
        c.space && space.removeBody(c)
    }
}
function awakeAllBodies() {
    for (var c, b = allChars.length - 1; 0 <= b; --b) c = allChars[b],
    c.physBody && c.physBody.activate()
}
var ChipMunkDebugDrawer = function() {
    this.space = new cp.Space;
    this.fps = this.remainder = 0;
    this.mouse = v(0, 0);
    this.drawTime = this.simulationTime = 0;
    this.scale = 1;
    this.width = minW;
    this.height = minH;
    var c = this;
    this.canvas2point = function(b, a) {
        return v(b / c.scale, 480 - a / c.scale)
    };
    this.point2canvas = function(b) {
        return v(b.x * c.scale, b.y * c.scale)
    }
}; ChipMunkDebugDrawer.prototype.drawInfo = function() {
    var c = this.space,
    b = this.width - 20;
    this.ctx.textAlign = "start";
    this.ctx.textBaseline = "alphabetic";
    this.ctx.fillStyle = "black";
    var a = Math.floor(10 * this.fps) / 10;
    0 === c.activeShapes.count && (a = "--");
    this.ctx.fillText("FPS: " + a, 10, 50, b);
    this.ctx.fillText("Step: " + c.stamp, 10, 80, b);
    a = c.arbiters.length;
    this.maxArbiters = this.maxArbiters ? Math.max(this.maxArbiters, a) : a;
    this.ctx.fillText("Arbiters: " + a + " (Max: " + this.maxArbiters + ")", 10, 110, b);
    for (var h = 0,
    f = 0; f < a; f++) h += c.arbiters[f].contacts.length;
    this.maxContacts = this.maxContacts ? Math.max(this.maxContacts, h) : h;
    this.ctx.fillText("Contact points: " + h + " (Max: " + this.maxContacts + ")", 10, 140, b);
    this.ctx.fillText("Simulation time: " + this.simulationTime + " ms", 10, 170, b);
    this.ctx.fillText("Draw time: " + this.drawTime + " ms", 10, 200, b);
    this.message && this.ctx.fillText(this.message, 10, this.height - 50, b)
}; ChipMunkDebugDrawer.prototype.draw = function() {
    var c = this.ctx,
    b = this;
    b.scale = scaleFactor;
    c.strokeStyle = "black";
    c.clearRect(0, 0, debugCanvas.width, debugCanvas.height);
    this.ctx.font = "16px sans-serif";
    this.ctx.lineCap = "round";
    this.space.eachShape(function(a) {
        c.fillStyle = a.style();
        a.draw(c, b.scale, b.point2canvas)
    });
    this.space.eachConstraint(function(a) {
        a.draw && a.draw(c, b.scale, b.point2canvas)
    })
};
var drawSegment = function(c, b, a) {
    var h = this.ctx;
    h.beginPath();
    c = this.point2canvas(c);
    b = this.point2canvas(b);
    h.moveTo(c.x, c.y);
    h.lineTo(b.x, b.y);
    h.lineWidth = 1;
    h.strokeStyle = a;
    h.stroke()
},
drawBB = function(c, b, a) {
    var h = this.ctx,
    f = this.point2canvas(v(c.l, c.t)),
    d = this.scale * (c.r - c.l);
    c = this.scale * (c.t - c.b);
    b && (h.fillStyle = b, h.fillRect(f.x, f.y, d, c));
    a && (h.strokeStyle = a, h.strokeRect(f.x, f.y, d, c))
},
drawCircle = function(c, b, a, h, f) {
    h = a(h);
    c.beginPath();
    c.arc(h.x, h.y, b * f, 0, 2 * Math.PI, !1);
    c.fill();
    c.stroke()
},
drawLine = function(c, b, a, h) {
    a = b(a);
    h = b(h);
    c.beginPath();
    c.moveTo(a.x, a.y);
    c.lineTo(h.x, h.y);
    c.stroke()
},
drawRect = function(c, b, a, h) {
    var f = b(a);
    b = cp.v.sub(b(cp.v.add(a, h)), f);
    c.fillRect(f.x, f.y, b.x, b.y)
},
springPoints = [v(0, 0), v(0.2, 0), v(0.25, 3), v(0.3, -6), v(0.35, 6), v(0.4, -6), v(0.45, 6), v(0.5, -6), v(0.55, 6), v(0.6, -6), v(0.65, 6), v(0.7, -3), v(0.75, 6), v(0.8, 0), v(1, 0)], drawSpring = function(c, b, a, h, f) {
    h = a(h);
    f = a(f);
    c.beginPath();
    c.moveTo(h.x, h.y);
    f = v.sub(f, h);
    a = v.len(f);
    f = v.mult(f, 1 / a);
    for (var d = 1; d < springPoints.length; d++) {
        var e = v.add(h, v.rotate(v(springPoints[d].x * a, springPoints[d].y * b), f));
        c.lineTo(e.x, e.y)
    }
    c.stroke()
}; cp.PolyShape.prototype.draw = function(c, b, a) {
    c.beginPath();
    b = this.tVerts;
    var h = b.length,
    f = a(new cp.Vect(b[h - 2], b[h - 1]));
    c.moveTo(f.x, f.y);
    for (f = 0; f < h; f += 2) {
        var d = a(new cp.Vect(b[f], b[f + 1]));
        c.lineTo(d.x, d.y)
    }
    c.fill();
    c.stroke()
}; cp.SegmentShape.prototype.draw = function(c, b, a) {
    var h = c.lineWidth;
    c.lineWidth = Math.max(1, 2 * this.r * b);
    drawLine(c, a, this.ta, this.tb);
    c.lineWidth = h
}; cp.CircleShape.prototype.draw = function(c, b, a) {
    drawCircle(c, b, a, this.tc, this.r);
    drawLine(c, a, this.tc, cp.v.mult(this.body.rot, this.r).add(this.tc))
}; cp.PinJoint.prototype.draw = function(c, b, a) {
    b = this.a.local2World(this.anchr1);
    var h = this.b.local2World(this.anchr2);
    c.lineWidth = 2;
    c.strokeStyle = "grey";
    drawLine(c, a, b, h)
}; cp.SlideJoint.prototype.draw = function(c, b, a) {
    b = this.a.local2World(this.anchr1);
    var h = this.b.local2World(this.anchr2),
    f = v.add(b, v.clamp(v.sub(h, b), this.min));
    c.lineWidth = 2;
    c.strokeStyle = "grey";
    drawLine(c, a, b, h);
    c.strokeStyle = "red";
    drawLine(c, a, b, f)
}; cp.PivotJoint.prototype.draw = function(c, b, a) {
    var h = this.a.local2World(this.anchr1),
    f = this.b.local2World(this.anchr2);
    c.strokeStyle = "grey";
    c.fillStyle = "grey";
    drawCircle(c, b, a, h, 2);
    drawCircle(c, b, a, f, 2)
}; cp.GrooveJoint.prototype.draw = function(c, b, a) {
    var h = this.a.local2World(this.grv_a),
    f = this.a.local2World(this.grv_b),
    d = this.b.local2World(this.anchr2);
    c.strokeStyle = "grey";
    drawLine(c, a, h, f);
    drawCircle(c, b, a, d, 3)
}; cp.DampedSpring.prototype.draw = function(c, b, a) {
    var h = this.a.local2World(this.anchr1),
    f = this.b.local2World(this.anchr2);
    c.strokeStyle = "grey";
    drawSpring(c, b, a, h, f)
};
for (var randColor = function() {
    return Math.floor(256 * Math.random())
},
debugAlpha = 0.7, styles = [], i = 0; 100 > i; i++) styles.push("rgba(" + randColor() + ", " + randColor() + ", " + randColor() + "," + debugAlpha + ")"); cp.Shape.prototype.style = function() {
    var c;
    if (this.sensor) return "rgba(255,255,255,0)";
    c = this.body;
    return c.isSleeping() ? "rgba(50,50,50," + debugAlpha + ")": c.nodeIdleTime > this.space.sleepTimeThreshold ? "rgba(170,170,170," + debugAlpha + ")": styles[this.hashid % styles.length]
};
var MINIMUM_SPEED = 3,
MAX_SPEED = 6,
IS_NITRO = !1,
DEFAULT_STATE = 0,
COLLIDED_STATE = 1,
ACTIVATOR_RADIUS = 25,
MORE_EASY_MULT = 1,
dx, dy, dist, isNeedActivate = !1; (function(c) {
    function b(a, b, c, e, g) {
        var k = new createjs.Sprite(zoeSS);
        k.baseBlock = this;
        this.vis = k;
        k = new createjs.Sprite(zoeSS);
        k.baseBlock = this;
        this.additVision = k;
        this.reset(a, b, c, e, g)
    }
    var a = b.prototype;
    a.reset = function(a, b, d, e, g) {
        this.typeId = a;
        this.type = c[a];
        createjs.Tween.removeTweens(this.vis);
        removeFromParent(this.additVision);
        this.parent = b;
        this.vis.isOnTop = !1;
        this.vis.isOnBottom = !0;
        this.isMovable = this.isFly = !1;
        this.teleportPartner = null;
        this.isReversed = !1;

        this.dir = 1;
        this.activForce = FAN_MAX_FORCE;
        this.activDistance = FAN_ACTIV_DISTANCE;
        this.distanceStartX = this.distanceEndX = 0;
        this.isRemovable = this.isClicked = !1;
        this.doorDistanceEnd = 0;
        this.isMechanic = this.isActivated = this.isGlass = !1;
        this.labelId = "";
        this.isMonster = !1;
        this.isRectMonster = !0;
        this.isNeedDispose = !1;
        this.teleportationStatus = -1;
        this.vis.alpha = 1;
        this.isHero = !1;
        this.vis.mouseEnabled = !1;
        this.physBody = null;
        this.scale = d;
        this.scaleY = e;
        this.teleportAngle = 0;
        this.isEnemy = !1;
        this.additParams = g;
        this.aimTeleport = this.startTeleport = null;
        this.isFirstCollided = this.isTeleport = this.isDanger = this.isAim = !1;
        this.shape = null;
        this.defaultRotation = 0;
        this.animMargin = 30 * Math.random();
        this.isNeutralEnemy = !1;
        this.startMarginX = this.startMoveX = this.visionWidth = this.currSpeed = 0;
        this.state = DEFAULT_STATE;
        this.collideTimer = this.charRadius = 0;
        this.isExploded = !1;
        this.lastColliderType = -1;
        this.vis.rotation = 0;
        this.isPusher = !1;
        this.raduis = 0;
        this.isDied = !1;
        this.forceToFly = this.vel = null;
        this.isByPhysPosUpdate = !0;
        this.vis.cursor = null;
        this.isLand = this.isBall = !1;
        this.lastAngularVelocity = this.lastVelocity = 0;
        this.isHelp = -1 < a.indexOf("HELP");
        this.isDynamicDecor = (this.isDecor = -1 < a.indexOf("DECOR")) ? this.isDynDecor() : !0;
        this.isPhysStatic = -1 < a.indexOf("PHYSICS");
        this.vis.visible = !this.isPhysStatic;
        this.type === LAND_TYPE && (this.isLand = !0);
        this.setVisionByType();
        this.updateVisionScale(); ! this.isDynamicDecor && isWithCache && (this.parent = allBgContainer);
        this.parent.addChild(this.vis)
    };
    a.isDynDecor = function() {
        return this.isHelp || this.type === DECOR_ARROW_TYPE
    };
    a.setupMouseEventListeners = function() {
        this.vis.cursor = "pointer"
    };
    a.setVisionByType = function() {
        this.vis.gotoAndStop(this.typeId);
        var a = !1;
        if (this.type === DYNAMIC_BOX_TYPE || this.type === DYNAMIC_RECT_TYPE || this.type === DYNAMIC_TRIANGLE_TYPE) a = this.isRemovable = !0;
        if (this.type === HARD_BOX_TYPE || this.type === HARD_RECT_TYPE || this.type === LAND_TYPE || this.type === STATIC_BALK_1_TYPE || this.type === PUSHER_TYPE) a = !0;
        this.type === STATIC_BOX_TYPE && ("INVIS" == this.getAdditParams(0) ? this.vis.visible = !1 : a = !0);
        this.type === BALL_TYPE ? (this.isHero = this.isBall = !0, this.vis.play(), this.isByPhysPosUpdate = !0, addToArray(allBalls, this), addToArray(allHeroes, this)) : this.type === BOMB_TYPE ? (this.vis.cursor = "pointer", this.vis.mouseEnabled = !0, this.activDistance = parseInt(this.getAdditParams(0)), this.activForce = parseInt(this.getAdditParams(1)), addToArray(allBombs, this)) : this.type === GLASS_BLOCK_TYPE || this.type === GLASS_BOX_TYPE || this.type === GLASS_TRIANGLE_TYPE ? this.isGlass = !0 : this.type === TELEGA_TYPE ? (this.readMovableConfig(1), this.isMovable = !0, this.visionWidth = 106, "1" !== this.getAdditParams(0) && (this.isRemovable = a = !0)) : this.type === MOVABLE_BALK_TYPE ? (this.readMovableConfig(0), this.isMovable = !0, this.visionWidth = 106, this.vis.gotoAndStop("STATIC_BALK_1_TYPE")) : this.type === STATIC_BALK_1_TYPE ? 0 < this.getAdditParams(0).length && (this.isRemovable = !0) : this.type === FAN_TYPE ? (this.vis.cursor = "pointer", this.vis.mouseEnabled = !0, addToArray(allFans, this), this.isByPhysPosUpdate = !1) : this.type === PUSHER_TYPE ? (this.isHero = this.isPusher = !0, setAnimationSpeed(this.vis, 0.8), this.vis.play(), addToArray(allPushers, this), addToArray(allHeroes, this)) : this.type === DANGER_KUST_TYPE && this.vis.gotoAndStop("BONUS_DANGER_KUST_TYPE");
        this.isRemovable && (this.vis.cursor = "pointer", this.vis.mouseEnabled = !0, currentRemovablesNum++);
        this.type === AIM_TYPE && (this.isAim = !0, this.visionWidth = 65, this.additVision.gotoAndStop("AIM_BACK"), this.parent.addChildAt(this.additVision, 0), "REV" == this.getAdditParams(0) && (this.isReversed = !0), this.getAdditParams(1) && (this.readMovableConfig(2), this.isMovable = !0, this.vis.gotoAndStop("AIM_TYPE_MOVABLE")));
        this.type === DANGER_TYPE && (this.isDanger = !0, this.isDynamicDecor = !1);
        if (this.type === TELEPORT_TYPE) {
            this.vis.play();
            this.isByPhysPosUpdate = !1;
            this.isTeleport = !0;
            this.labelId = this.getAdditParams(0);
            addToArray(allTeleports, this);
            for (var b = allTeleports.length - 1; 0 <= b; --b) {
                var c = allTeleports[b];
                c.labelId === this.labelId && (c.teleportPartner = this, this.teleportPartner = c)
            }
        }
        this.type === FAN_TYPE && ("REV" == this.getAdditParams(0) && (this.isReversed = !0, this.dir = -1), this.getAdditParams(1) && (this.activDistance = parseInt(this.getAdditParams(1))), this.getAdditParams(2) && (this.activForce = parseInt(this.getAdditParams(2))));
        a && 0 < this.getAdditParams(0).length && (this.vis.gotoAndStop(this.typeId + "_" + this.getAdditParams(0)), this.type === PUSHER_TYPE && this.vis.play());
        this.vis.paused || (this.vis.currentAnimationFrame = Math.floor(20 * Math.random()))
    };
    a.readMovableConfig = function(a) {
        this.dir = "R" === this.getAdditParams(0) ? 1 : -1;
        var b = parseInt(this.getAdditParams(1 + a));
        this.startMarginX = 1E3 <= b ? 1E3 - b: b;
        this.currSpeed = parseInt(this.getAdditParams(2 + a)) / 10
    };
    a.getAdditParams = function(a) {
        return this.additParams[0].split("_").length > a ? this.additParams[0].split("_")[a] : null
    };
    a.setupActivLabel = function() {
        this.labelId = this.getAdditParams(0)
    };
    a.bombClick = function(a) {
        isLevelCompleted || isLevelFailed || isGamePaused || this.isExploded || (createExplosion(this), this.vis.removeAllEventListeners(), this.vis.mouseEnabled = !1, this.vis.scaleX = this.vis.scaleY = this.scale = 2, this.vis.gotoAndPlay("bombexplosionv"), addToParent(this.vis, this.parent), this.isByPhysPosUpdate = !1, this.disposePhysBody(), this.isExploded = !0, playSound("explodeSound"))
    };
    a.calculateBoundingBox = function() {
        var a = 1;
        this.isEnemy && (a = 0.7);
        var b = this.vis._animation;
        b && b.frames && 0 < b.frames.length && (this.bounds = charSS.getFrameBounds(b.frames[0]), this.bounds.width = this.bounds.width * this.scale * a, this.bounds.height = this.bounds.height * this.scale * a, this.bounds.x = this.bounds.x * this.scale * a, this.bounds.y = this.bounds.y * this.scale * a, this.charRadius = this.bounds.width / 2)
    };
    a.setPosition = function(a, b, c) {
        var e = a;
        this.isMovable && (this.distanceEndX = 140 * this.scale - this.scaleY * this.visionWidth, this.distanceStartX = a - this.distanceEndX / 2, this.distanceEndX = a + this.distanceEndX / 2, e = Math.min(this.distanceEndX, Math.max(this.distanceStartX, a + this.startMarginX)));
        this.vis.x = this.additVision.x = e;
        this.vis.y = this.additVision.y = b;
        this.defaultRotation = this.vis.rotation = this.additVision.rotation = c
    };
    a.initPhysics = function() {
        if (!this.isDecor && this.type !== ACTIVATOR_TYPE && this.type !== TELEPORT_TYPE) {
            var a;
            a = this.vis.x / PHYS_SCALE;
            var b = this.vis.y / PHYS_SCALE,
            c = this.vis.rotation * DEGREES_TO_RAD;
            if (a = this.isPhysStatic || this.type === DYNAMIC_BOX_TYPE || this.type === DANGER_TYPE || this.type === MONSTER_TYPE && this.isRectMonster || this.type === GLASS_BLOCK_TYPE || this.type === GLASS_BOX_TYPE || this.type === DOOR_TYPE || this.type === DYNAMIC_RECT_TYPE || this.type === HARD_RECT_TYPE || this.type === HARD_BOX_TYPE || this.type === STATIC_BALK_1_TYPE || this.type === STATIC_BOX_TYPE ? createRectPhysics(a, b, this.scale, this.scaleY, this.type, c) : this.type === DYNAMIC_TRIANGLE_TYPE || this.type === GLASS_TRIANGLE_TYPE || this.type === HARD_TRIANGLE_TYPE ? createTrianglePhysics(a, b, this.scale, this.scaleY, this.type, c) : this.type === TELEGA_TYPE || this.type === AIM_TYPE || this.type === MOVABLE_BALK_TYPE ? createKinematicPhysics(a, b, this.scale, this.scaleY, this.type, c, this) : this.type === LAND_TYPE ? createSegmentPhysics(a, b, this.scale, this.scaleY, this.type, c, this) : createCircleShape(a, b, this.scale * this.getRadiusByType() / PHYS_SCALE, this.type, c, this)) a.userdata = this,
            this.physBody = a
        }
    };
    a.getRadiusByType = function() {
        switch (this.type) {
        case BALL_TYPE:
            return 32;
        case AIM_TYPE:
            return 19;
        case HERO_DOC_TYPE:
            return 31;
        case HERO_WOMAN_TYPE:
            return 31;
        case TELEPORT_TYPE:
            return 25;
        case BOMB_TYPE:
            return 20;
        case MONSTER_TYPE:
            return 31;
        case DYNAMIC_CIRCLE_TYPE:
            return 16;
        case FAN_TYPE:
            return 25;
        case PUSHER_TYPE:
            return 32;
        case DANGER_KUST_TYPE:
            return 27;
        case STATIC_CIRCLE_TYPE:
            return 32
        }
        return 30
    };
    a.setFrame = function(a, b) {
        b ? this.vis.gotoAndPlay(a) : this.vis.gotoAndStop(a)
    };
    a.setVisionState = function(a) {};
    a.onInflateEnd = function() {
        this.isFly = !1
    };
    a.tick = function() {
        if (this.isNeedDispose) addToArray(toDisposeChars, this);
        else if (!isGamePaused && (!this.isDecor || this.isDynamicDecor) && (this.physBody && !this.isPhysStatic && this.isByPhysPosUpdate && (this.isMovable && (this.vis.x > this.distanceEndX ? this.dir = -1 : this.vis.x < this.distanceStartX && (this.dir = 1), this.physBody.setVel(v(15 * this.currSpeed * this.dir * dtScale, 0)), this.physBody.p.x += this.currSpeed * this.dir * dtScale), this.vis.x = this.additVision.x = this.physBody.p.x, this.vis.y = this.additVision.y = this.physBody.p.y, this.vis.rotation = this.additVision.rotation = Math.atan2(this.physBody.rot.y, this.physBody.rot.x) * RAD_TO_DEGREES), this.type === BOMB_TYPE ? (0 > this.teleportationStatus && (this.vis.scaleX = this.scale + Math.cos((counter + this.animMargin) / 5) / 60, this.vis.scaleY = this.scale - Math.cos((counter + this.animMargin) / 5) / 60), this.isExploded && 13 <= this.vis.currentAnimationFrame && (this.isNeedDispose = !0)) : this.isHelp && (this.vis.scaleX = this.vis.scaleY = this.scale + Math.cos((counter + this.animMargin) / 12) / 20), this.updateTeleportation(), this.isHero && ( - 50 > this.vis.x || 410 < this.vis.x || this.vis.y > viewportH + 40 || -140 > this.vis.y) && this.dieByWorldOut(), this.type !== AIM_TYPE)) if (this.type === TELEPORT_TYPE) for (var a = allChars.length - 1; 0 <= a; a--) {
            var b = allChars[a];
            40 > Math.abs(b.vis.x - this.vis.x) && 40 > Math.abs(b.vis.y - this.vis.y) ? b.teleportTo(this) : 0 > b.teleportationStatus && b.teleportContactEnd(this)
        } else this.type === PUSHER_TYPE && isDragging && currentChar === this && (strenghtArrow.x = currentChar.vis.x, strenghtArrow.y = currentChar.vis.y)
    };
    a.updateTeleportation = function() {
        if (this.physBody) if (0 === this.teleportationStatus) {
            this.isByPhysPosUpdate = !1;
            this.teleportationStatus = 1;
            this.physBody.p.x = -1E3;
            this.physBody.p.y = 0;
            this.teleportAngle = Math.atan2(this.physBody.vy, this.physBody.vx);
            var a = this;
            playSound("portalAppearSound");
            createjs.Tween.get(this.vis, {
                override: !0
            }).to({
                rotation: 900,
                scaleX: 0.05,
                scaleY: 0.05,
                x: this.startTeleport.vis.x,
                y: this.startTeleport.vis.y
            },
            700).to({
                x: this.aimTeleport.vis.x,
                y: this.aimTeleport.vis.y
            },
            0).call(function() {}).to({
                rotation: 0,
                scaleX: this.scale,
                scaleY: this.scale
            },
            700).call(function() {
                a.teleportationStatus = 2
            })
        } else 2 == this.teleportationStatus && (this.physBody.p.x = this.aimTeleport.vis.x / PHYS_SCALE, this.physBody.p.y = this.aimTeleport.vis.y / PHYS_SCALE, this.physBody.w = 0, this.physBody.setAngle(0), this.physBody.setVel(v(TELEPORT_OUT_STRENGHT * Math.cos(this.teleportAngle), TELEPORT_OUT_STRENGHT * Math.sin(this.teleportAngle))), this.teleportationStatus = -1, this.isByPhysPosUpdate = !0)
    };
    a.updateVisionScale = function() {
        this.vis.scaleX = this.scale;
        this.vis.scaleY = this.scaleY;
        this.isMovable && (this.vis.scaleX = this.vis.scaleY = this.scaleY);
        this.isReversed && (this.vis.scaleX *= -1);
        this.additVision.scaleX = this.vis.scaleX;
        this.additVision.scaleY = this.vis.scaleY
    };
    a.dispose = function() {
        removeFromArray(allChars, this);
        this.isBall && removeFromArray(allBalls, this);
        this.isPusher && removeFromArray(allPushers, this);
        this.lastColliderType = -1;
        addToDisposed(this);
        this.vis.removeAllEventListeners();
        this.disposePhysBody();
        this.shape = null;
        this.vis.stop();
        removeFromParent(this.vis);
        removeFromParent(this.additVision)
    };
    a.collideWithOtherDynamic = function() { - 1 < this.teleportationStatus || (this.isByPhysPosUpdate = !0)
    };
    a.toggleFly = function() {};
    a.heroRejoicing = function() {
        this.vis.gotoAndPlay(this.typeId)
    };
    a.aimCollected = function() {
        createPrerenderedPart(this.vis.x, this.vis.y, 1.4, "parteffectv3", 0.71, this.vis, 0.8);
        addAchiev(FIRST_GOAL_ACHIEV)
    };
    a.teleportTo = function(a) {
        this.aimTeleport || (this.startTeleport = a, this.aimTeleport = a.teleportPartner, this.teleportationStatus = 0)
    };
    a.teleportContactEnd = function(a) {
        this.aimTeleport === a && (this.aimTeleport = this.startTeleport = null)
    };
    a.die = function(a, b) {
        if (! (isLevelCompleted || isLevelFailed || this.isDied)) {
            this.isBall ? playSound("holeSound") : playCreatureDeathSound();
            var c = doNothing;
            this.isBall && (isLevelFailed = !0, c = showRestartWin, hideGameInterface());
            this.isDied = !0;
            this.isByPhysPosUpdate = !1;
            createjs.Tween.get(this.vis, {
                override: !0
            }).to({
                alpha: 0,
                scaleX: 0,
                scaleY: 0,
                rotation: 900,
                x: a ? a: this.vis.x,
                y: b ? b: this.vis.y
            },
            900).wait(200).call(c);
            this.physBody && (this.physBody.p.x = -1E3)
        }
    };
    a.dieByWorldOut = function() {
        isLevelCompleted || isLevelFailed || (this.isBall && 1 >= allBalls.length || this.isPusher && 1 >= allPushers.length ? (this.isDied = isLevelFailed = !0, this.isByPhysPosUpdate = this.isFly = !1, hideGameInterface(), createjs.Tween.get(this.vis).wait(400).call(showRestartWin), this.physBody && (this.physBody.p.x = -1E3)) : this.isNeedDispose = !0)
    };
    a.collideWithDyn = function(a) {
        this.isFirstCollided || (this.isByPhysPosUpdate = this.isFirstCollided = !0)
    };
    a.breakGlass = function() { ! this.vis.visible || 15 > levelStartTimer || !this.physBody || (this.disposePhysBody(), this.vis.visible = !1, this.type === GLASS_BLOCK_TYPE ? createGlassRectExplode(this.vis.x, this.vis.y, this.scale, this.vis.rotation) : createPartExplode(this.vis.x, this.vis.y, 3, PART_GLASS_TYPE, null, 3), playSound("glassBrakeSound"))
    };
    a.activateBtn = function() {
        if (!this.isActivated) {
            this.isActivated = !0;
            this.vis.currentAnimationFrame = 1;
            for (var a, b = 0; b < allChars.length; b++) a = allChars[b],
            a.isMechanic && !a.isActivated && a.labelId === this.labelId && a.activateMechanic();
            playSound("clickSound")
        }
    };
    a.deActivateBtn = function() {
        if (this.isActivated) {
            this.isActivated = !1;
            this.vis.currentAnimationFrame = 0;
            for (var a, b = 0; b < allChars.length; b++) a = allChars[b],
            a.isMechanic && a.isActivated && a.labelId === this.labelId && a.deActivateMechanic();
            playSound("clickSound")
        }
    };
    a.activateMechanic = function() {
        this.isActivated = !0
    };
    a.deActivateMechanic = function() {
        this.isActivated = !1
    };
    a.toggleFan = function() {
        if (this.isActivated = !this.isActivated) this.vis.gotoAndPlay("FAN_TYPE_ON"),
        awakeAllBodies(),
        playWindSound();
        else {
            this.vis.gotoAndStop("FAN_TYPE");
            for (var a = 0,
            b = allFans.length - 1; 0 <= b; --b) allFans[b].isActivated && a++;
            1 > a && stopWindSound()
        }
    };
    a.removeFromField = function() {
        this.disposePhysBody();
        this.isByPhysPosUpdate = !1;
        currentRemovablesNum--;
        var a = this;
        createjs.Tween.get(this.vis).to({
            alpha: 0,
            scaleX: 0,
            scaleY: 0
        },
        250).call(function() {
            a.isNeedDispose = !0
        });
        playRemoveObjectSound()
    };
    a.disposePhysBody = function() {
        this.physBody && toDisposePhysicsBodies.push(this.physBody);
        this.physBody = null
    };
    c.CharBase = b
})(window);
var allChars = [], allBalls = [], allHeroes = [], disposedChars = [], allBombs = [], allMonsters = [], allActivators = [], allTeleports = [], allFans = [], allPushers = [], blockContainer, currentLevel = 0, isLevelCompleted = !1, isLevelFailed = !1, isInflateReason = !1, currentChar, totalFriends = 0, totalBonuses = 0, collectedBonuses = 0, totalScore = 0, currentLevelScore = 0, scoreToAdd = 0, strenghtArrow;
function initLevelManager() {
    container.addChild(blockContainer);
    initPhysics();
    strenghtArrow = createButton(0, 0, 1, "strenghtarrow", null, null, null);
    stage.addEventListener("stagemousedown", onCharContainerMouseDown);
    stage.addEventListener("stagemousemove", onCharContainerMouseMove);
    stage.addEventListener("stagemouseup", onCharContainerMouseUp)
}
function createChar(c, b, a, h, f, d, e) {
    c = geCharFromPool(c, blockContainer, h, f, e);
    c.setPosition(b, a, d);
    c.initPhysics();
    isArrayContains(allChars, c) || allChars.push(c);
    return c
}
var levelRestartsCounter = 0,
levelsWithoutRestartsCounter = 0,
diamondsCounter = 0;
function loadLevel(c) {
    currentLevel != c && (levelRestartsCounter = 0, MORE_EASY_MULT = 1);
    currentLevel = c;
    currentLevel >= LEVELS_NUM && (currentLevel %= LEVELS_NUM);
    showBgByLevelNum(currentLevel, -1, 1);
    setCurrentLevelLabel(currentLevel);
    loadLevelByCode(allLevels[currentLevel]);
    isLevelRestarted = isGamePaused = !1;
    isNeedCacheSizeUpdate = !0;
    playSound("levelStart")
}
var totalEnemies = 0;
function loadLevelByCode(c) {
    isGamePaused = !0;
    disposeLevel();
    addInstructions();
    if (c) {
        totalEnemies = 0;
        resetSoundOnNewLevel();
        for (var b = 0; b < c.length; b++) {
            var a = c[b];
            isBonus(a[0]) ? createBonus(a[0], a[1], a[2], a[3], a[4], a[5], a[6]) : createChar(a[0], a[1], a[2], a[3], a[4], a[5], a[6])
        }
    }
}
function isBonus(c) {
    return - 1 < c.indexOf("BONUS")
}
var isLevelRestarted = !1;
function restartLevel() {
    isLevelRestarted = !0;
    levelRestartsCounter += 1;
    levelsWithoutRestartsCounter = 0;
    loadLevel(currentLevel)
}
function loadNextLevel() {
    loadLevel(currentLevel + 1)
}
var levelStartTimer = 0;
function disposeLevel() {
    disposeInstructions();
    isLevelFailed = isLevelCompleted = isInflateReason = !1;
    levelStartTimer = 0;
    currentChar = null;
    currentRemovablesNum = collectedBonuses = totalBonuses = currentLevelScore = scoreToAdd = 0;
    var c = allChars.length,
    b;
    for (b = 0; b < c; b++) allChars.pop().dispose();
    toDisposeChars = [];
    clickedChars = [];
    disposeBonuses();
    allBombs = [];
    allMonsters = [];
    allActivators = [];
    allTeleports = [];
    allFans = [];
    allPushers = [];
    allHeroes = [];
    for (allBallsLen = allHeroesLen = 0; 0 < toDisposePhysicsBodies.length;) c = toDisposePhysicsBodies.pop(),
    destroyBody(c);
    space.step(0.01);
    removeFromParent(strenghtArrow);
    window.gc && window.gc()
}
function disposeLevelPhysics() {
    var c = allChars.length,
    b;
    for (b = 0; b < c; b++) allChars[b].disposePhysBody();
    for (; 0 < toDisposePhysicsBodies.length;) c = toDisposePhysicsBodies.pop(),
    destroyBody(c)
}
function addScore(c) {
    currentLevelScore += c
}
function addToDisposed(c) {
    isArrayContains(disposedChars, c) || disposedChars.push(c)
}
function geCharFromPool(c, b, a, h, f) {
    if (0 < disposedChars.length) {
        var d = disposedChars.pop();
        d.reset(c, b, a, h, f);
        return d
    }
    return new CharBase(c, b, a, h, f)
}
var BIG_DISTANCE = 1E8,
mouseStartDx = 0,
mouseStartDy = 0,
lastMousePosX = 0,
lastMousePosY = 0;
function onCharContainerMouseDown(c) {
    splashContainer && splashContainer.parent && sponsorClick(c);
    if (! (isGamePaused || isLevelCompleted || isLevelFailed)) {
        removeFromParent(strenghtArrow);
        var b = (c.stageX - container.x) / scaleFactor;
        c = (c.stageY - container.y) / scaleFactor;
        for (var a, h = 0,
        f = 0,
        d = 0,
        e = 0,
        e = 0; e < allBombs.length; e++) if (a = allBombs[e], !a.isExploded && (f = a.vis.x - b, d = a.vis.y - c, h = f * f + d * d, 484 > h)) {
            addToArray(clickedChars, a);
            return
        }
        for (e = allFans.length - 1; 0 <= e; --e) if (a = allFans[e], f = a.vis.x - b, d = a.vis.y - c, h = f * f + d * d, 784 > h) {
            addToArray(clickedChars, a);
            return
        }
        for (e = allPushers.length - 1; 0 <= e; --e) if (a = allPushers[e], f = a.vis.x - b, d = a.vis.y - c, h = f * f + d * d, 1156 > h) {
            isDragging = !0;
            currentChar = a;
            strenghtArrow.x = a.x;
            strenghtArrow.y = a.y;
            mouseStartDx = f;
            mouseStartDy = d;
            lastMousePosX = b;
            lastMousePosY = c;
            pushStrenght = 0;
            strenghtArrow.currentAnimationFrame = 0;
            playCreatureSound();
            return
        } (b = getBodyAtMouse(b / PHYS_SCALE, c / PHYS_SCALE)) && (c = b.userdata) && c.isRemovable && addToArray(clickedChars, b.userdata)
    }
}
var isDragging = !1,
pushAngle = 0,
pushStrenght = 0,
STRENGHT_ARROW_FRAMES_NUM = 14;
function onCharContainerMouseMove(c) {
    if (isDragging) {
        lastMousePosX = (c.stageX - container.x) / scaleFactor;
        lastMousePosY = (c.stageY - container.y) / scaleFactor;
        strenghtArrow.parent || addToParent(strenghtArrow, blockContainer);
        c = lastMousePosX - currentChar.vis.x + mouseStartDx;
        var b = lastMousePosY - currentChar.vis.y + mouseStartDy;
        pushAngle = Math.atan2(b, c);
        pushAngle -= Math.PI;
        pushStrenght = Math.sqrt(c * c + b * b);
        strenghtArrow.rotation = 180 * pushAngle / Math.PI;
        strenghtArrow.currentAnimationFrame = Math.min(STRENGHT_ARROW_FRAMES_NUM, Math.max(0, Math.floor(STRENGHT_ARROW_FRAMES_NUM * pushStrenght / 50)))
    }
}
function onCharContainerMouseUp(c) {
    currentChar && isDragging && currentChar.physBody && (c = 560 * currentChar.physBody.m * strenghtArrow.currentAnimationFrame / STRENGHT_ARROW_FRAMES_NUM, c = v(Math.cos(pushAngle) * c, Math.sin(pushAngle) * c), currentChar.physBody.applyImpulse(c, v(0, 0)));
    isDragging = !1;
    currentChar = null;
    removeFromParent(strenghtArrow)
}
var lastopenedlvl = 0,
levelstates = [], LEVELS_NUM = 20, ZERO_STAR = 0, ONE_STAR = 1, TWO_STAR = 2, THREE_STAR = 3, ACHIEVS_NUM = 6, NOT_ACHIEVED = 0, ACHIEVED = 1, allachievs = [], FIRST_GOAL_ACHIEV = 0, EXPLODER_ACHIEV = 1, REMOVER_ACHIEV = 2, TELEPORTATION_ACHIEV = 3, SOCCER_MASTER_ACHIEV = 4, MEGA_STAR_ACHIEV = 5, isStorageSupported = !1;
function loadSaves() {
    lastopenedlvl = 0;
    if (isStorageSupported = isSupportshtml5storage()) if (localStorage[STORAGE_PREFIX + "lastopenedlvl"]) {
        lastopenedlvl = parseInt(localStorage[STORAGE_PREFIX + "lastopenedlvl"]);
        for (b = 0; b < LEVELS_NUM; b++) levelstates.push(parseInt(localStorage[STORAGE_PREFIX + "levelstate" + b]));
        for (b = 0; b < ACHIEVS_NUM; b++) {
            var c = localStorage[STORAGE_PREFIX + "achiev" + b];
            c ? allachievs.push(parseInt(c)) : allachievs.push(NOT_ACHIEVED)
        }
        isMute = "1" == localStorage[STORAGE_PREFIX + "ismute"];
        totalFriends = localStorage[STORAGE_PREFIX + "totalfriends"] ? parseInt(localStorage[STORAGE_PREFIX + "totalFriends"]) : 0;
        totalScore = localStorage[STORAGE_PREFIX + "totalScore"] ? parseInt(localStorage[STORAGE_PREFIX + "totalScore"]) : 0;
        diamondsCounter = localStorage[STORAGE_PREFIX + "diamondsCounter"] ? parseInt(localStorage[STORAGE_PREFIX + "diamondsCounter"]) : 0
    } else {
        trace("saves not found!");
        for (b = 0; b < LEVELS_NUM; b++) levelstates.push(ZERO_STAR);
        for (b = 0; b < ACHIEVS_NUM; b++) allachievs.push(NOT_ACHIEVED);
        updateSaves()
    } else {
        trace("storage not supported");
        for (var b = 0; b < LEVELS_NUM; b++) levelstates.push(ZERO_STAR);
        for (b = 0; b < ACHIEVS_NUM; b++) allachievs.push(NOT_ACHIEVED)
    }
}
function getStarsForLevel(c) {
    return levelstates[c]
}
function saveGame(c) {
    lastopenedlvl <= currentLevel && (lastopenedlvl = currentLevel + 1);
    levelstates[currentLevel] < c && (levelstates[currentLevel] = c);
    updateSaves()
}
function updateSaves() {
    if (isStorageSupported) {
        localStorage[STORAGE_PREFIX + "lastopenedlvl"] = lastopenedlvl;
        for (var c = 0; c < LEVELS_NUM; c++) localStorage[STORAGE_PREFIX + "levelstate" + c] = levelstates[c];
        for (c = 0; c < ACHIEVS_NUM; c++) localStorage[STORAGE_PREFIX + "achiev" + c] = allachievs[c];
        saveMuteState();
        localStorage[STORAGE_PREFIX + "totalfriends"] = "" + totalFriends;
        localStorage[STORAGE_PREFIX + "totalScore"] = "" + totalScore;
        localStorage[STORAGE_PREFIX + "diamondsCounter"] = "" + diamondsCounter
    }
}
function saveMuteState() {
    isStorageSupported && (localStorage[STORAGE_PREFIX + "ismute"] = isMute ? "1": "0")
}
function isSupportshtml5storage() {
    try {
        var c = "localStorage" in window && null !== window.localStorage;
        c && (localStorage.setItem("storage", ""), localStorage.removeItem("storage"));
        return c
    } catch(b) {
        return ! 1
    }
}
var allInstructions = [];
function createInstruction(c, b, a, h) {
    c = createPart(PART_INSTRUCTION_TYPE, c, b, 1, h ? blockContainer: allBgContainer);
    c.setFrame(a);
    allInstructions.push(c);
    return c
}
function addInstructions() {
    isLevelRestarted || updateBgCache()
}
function disposeInstructions() {
    for (; 0 < allInstructions.length;) allInstructions.pop().dispose()
}
function getCollectedStarsNum() {
    for (var c = 0,
    b = 0; b < LEVELS_NUM; b++) c += levelstates[b];
    return c
}
function createExplosion(c) {
    for (var b, a = allChars.length - 1; 0 <= a; --a) b = allChars[a],
    b !== c && b.physBody && (b.physBody.isStatic() || b.isPhysStatic && b.type !== GLASS_BLOCK_TYPE || -1 < b.teleportationStatus || b.isDied || b.isMovable || b.isAim || b.isLand || CreateExplode(c, b))
}
function CreateExplode(c, b) {
    var a = b.physBody,
    h = b.vis.x - c.vis.x,
    f = b.vis.y - c.vis.y,
    d = Math.sqrt(h * h + f * f);
    d > c.activDistance || (b.type === GLASS_BLOCK_TYPE ? d < 0.6 * c.activDistance && b.breakGlass() : (h /= d, f /= d, d = Math.max(0, 1 - d / c.activDistance), d = d * c.activForce * a.m, d = v(h * d, f * d), a.applyImpulse(d, v(10 * Math.random() - 5, 0)), b.isByPhysPosUpdate = !0))
}
var allBonuses = [], disposedBonuses = [], currentBon;
function initBonusManager() {}
function createBonus(c, b, a, h, f, d, e) {
    c = getBonusFromPool(c, blockContainer, h, f, e);
    c.setPos(b, a, d);
    addToArray(allBonuses, c)
}
function disposeBonuses() {
    var c = allBonuses.length,
    b;
    for (b = 0; b < c; b++) allBonuses.pop().dispose()
}
function addToDisposedBonuses(c) {
    isArrayContains(disposedBonuses, c) || disposedBonuses.push(c)
}
function getBonusFromPool(c, b, a, h, f) {
    if (0 < disposedBonuses.length) {
        var d = disposedBonuses.pop();
        d.reset(c, b, a, h, f);
        return d
    }
    return new BonusBase(c, b, a, h, f)
}
var toDisposeBonuses = [];
function updateBonusManager() {
    for (var c = 0; c < allBonuses.length; c++) allBonuses[c].tick(),
    allBonuses[c].isCanBeDestroyed && addToArray(toDisposeBonuses, allBonuses[c]);
    for (; 0 < toDisposeBonuses.length;) toDisposeBonuses.pop().dispose()
}
var HIDE_STATE = 0,
SHOW_STATE = 1; (function(c) {
    function b(a, b, c, e, g) {
        var k = new createjs.Sprite(zoeSS);
        k.mouseEnabled = !1;
        k.baseBlock = this;
        this.vis = k;
        this.reset(a, b, c, e, g)
    }
    var a = b.prototype;
    a.reset = function(a, b, d, e, g) {
        this.typeId = a;
        this.type = c[a];
        createjs.Tween.removeTweens(this.vis);
        this.tweenMaxSteps = 0;
        this.isNeedCollect = !1;
        this.additParams = g;
        this.parent = b;
        this.vis.isOnTop = !1;
        this.vis.isOnBottom = !0;
        this.vis.alpha = 1;
        this.isCollected = this.isCanBeDestroyed = this.isGhost = !1;
        this.animMargin = 30 * Math.random();
        this.scaleX = d;
        this.scaleY = e;
        this.moveTarget = null;
        this.isActivated = !1;
        this.state = HIDE_STATE;
        this.distanceSq = this.speed = this.dy = this.dx = this.waitTimer = this.showWaitTime = this.hideWaitTime = 0;
        this.hero = null;
        this.dir = 1;
        this.isDanger = !1;
        this.distanceStartX = this.distanceEndX = 0;
        this.sensorRadiusSq = 1600;
        this.collectRadiusSq = 100;
        this.setVisionByType();
        this.updateVisionScale();
        b.addChild(this.vis);
        this.isGhost || this.isDanger || totalBonuses++
    };
    a.setPos = function(a, b, c) {
        this.vis.x = a;
        this.vis.y = b;
        this.isGhost && 0 === this.distanceStartX && (this.distanceEndX = 140 * this.scaleX - 52 * this.scaleY, this.distanceStartX = a - this.distanceEndX / 2, this.distanceEndX = a + this.distanceEndX / 2);
        c && (this.vis.rotation = c)
    };
    a.updateVisionScale = function() {
        this.vis.scaleX = this.scaleX;
        this.vis.scaleY = this.scaleY;
        this.isGhost && (this.vis.scaleX = this.scaleY)
    };
    a.getAdditParams = function(a) {
        return this.additParams[0].split("_")[a]
    };
    a.setVisionByType = function() {
        this.vis.gotoAndStop(this.typeId);
        this.type === BONUS_DIAMOND_TYPE && (this.vis.play(), this.vis._animation.speed = 1.5);
        this.vis.paused || (this.vis.currentAnimationFrame = Math.floor(20 * Math.random()));
        this.type === BONUS_GHOST_TYPE ? (this.isGhost = !0, this.vis.play(), this.speed = parseInt(this.getAdditParams(0)) / 10, this.vis._animation.speed = 0.7, this.sensorRadiusSq = 625) : this.type === BONUS_DANGER_KUST_TYPE ? (this.isDanger = !0, this.sensorRadiusSq = 2025) : this.type === BONUS_HOLE_TYPE ? (this.isDanger = !0, this.sensorRadiusSq = 1600) : this.type === BONUS_KAKTUS_TYPE ? (this.isDanger = !0, this.sensorRadiusSq = 2025) : this.type === BONUS_DANGER_ACTIV_TYPE && (this.vis.gotoAndStop("BONUS_DANGER_ACTIVATING"), setNextAnimation(this.vis, "BONUS_DANGER_FULL_ACTIVATED"), this.vis.gotoAndStop("BONUS_DANGER_DISABLING"), setNextAnimation(this.vis, "BONUS_DANGER_ACTIV_TYPE"), this.vis.gotoAndStop("BONUS_DANGER_ACTIV_TYPE"), this.isDanger = !0, this.sensorRadiusSq = 2025, this.showWaitTime = this.getAdditParams(0), this.hideWaitTime = this.getAdditParams(1), this.waitTimer = this.getAdditParams(2))
    };
    a.tick = function() {
        if (!this.isCanBeDestroyed && !isGamePaused) {
            var a = 0;
            if (this.isGhost) this.updateGhost();
            else if (this.isDanger) {
                this.type === BONUS_DANGER_ACTIV_TYPE && this.updateDangerActiv();
                for (a = allHeroesLen - 1; 0 <= a; a--) this.hero = allHeroes[a],
                this.dx = this.hero.vis.x - this.vis.x,
                this.dy = this.hero.vis.y - this.vis.y,
                this.distanceSq = this.dx * this.dx + this.dy * this.dy,
                this.distanceSq < this.sensorRadiusSq && (this.type === BONUS_HOLE_TYPE ? this.hero.die(this.vis.x, this.vis.y) : this.type === BONUS_DANGER_ACTIV_TYPE ? SHOW_STATE === this.state && this.hero.die(this.vis.x, this.vis.y) : this.hero.die());
                if (this.type === BONUS_DANGER_KUST_TYPE || this.type === BONUS_KAKTUS_TYPE) this.vis.scaleX = this.scaleX + Math.cos((counter + this.animMargin) / 15) / 30,
                this.vis.scaleY = this.vis.scaleX
            } else if (this.vis.scaleX = this.scaleX + Math.cos((counter + this.animMargin) / 10) / 12, this.vis.scaleY = this.vis.scaleX, this.moveTarget) this.speed += 0.2,
            this.dx = this.moveTarget.vis.x - this.vis.x,
            this.dy = this.moveTarget.vis.y - this.vis.y,
            this.distanceSq = this.dx * this.dx + this.dy * this.dy,
            this.vis.x += this.dx / 3 * this.speed,
            this.vis.y += this.dy / 3 * this.speed,
            this.distanceSq < this.collectRadiusSq && (this.isCanBeDestroyed = !0, createPrerenderedPart(this.moveTarget.vis.x, this.moveTarget.vis.y, 1, "parteffectv1", 0.9, this.moveTarget.vis), addScore(this.getScoreByType()), this.checkBonusAchievByType(), this.moveTarget = null, playBonusPickSound());
            else for (a = 0; a < allHeroesLen; a++) this.hero = allHeroes[a],
            this.dx = this.hero.vis.x - this.vis.x,
            this.dy = this.hero.vis.y - this.vis.y,
            this.distanceSq = this.dx * this.dx + this.dy * this.dy,
            this.distanceSq < this.sensorRadiusSq && (this.moveTarget = this.hero, this.isCollected || (this.isCollected = !0, collectedBonuses++))
        }
    };
    a.updateDangerActiv = function() {
        this.waitTimer -= dtScale;
        0 > this.waitTimer && (HIDE_STATE === this.state ? (this.vis.gotoAndPlay("BONUS_DANGER_ACTIVATING"), this.state = SHOW_STATE, this.waitTimer = this.showWaitTime, playSound("peacksSound")) : (this.vis.gotoAndPlay("BONUS_DANGER_DISABLING"), this.state = HIDE_STATE, this.waitTimer = this.hideWaitTime))
    };
    a.updateGhost = function() {
        this.vis.x += this.speed * this.dir * dtScale;
        this.vis.x > this.distanceEndX && (this.dir = -1);
        this.vis.x < this.distanceStartX && (this.dir = 1);
        for (var a = 0; a < allBallsLen; a++) this.hero = allBalls[a],
        this.dx = this.hero.vis.x - this.vis.x,
        this.dy = this.hero.vis.y - this.vis.y,
        this.distanceSq = this.dx * this.dx + this.dy * this.dy,
        this.distanceSq < this.sensorRadiusSq && this.hero.die()
    };
    a.checkBonusAchievByType = function() {
        for (var a = 0; a < allBonuses.length; a++);
    };
    a.getScoreByType = function() {
        switch (this.type) {
        case BONUS_STAR_TYPE:
            return 50;
        case BONUS_DIAMOND_TYPE:
            return 150;
        case BONUS_MONEY_TYPE:
            return 100;
        default:
            return 50
        }
    };
    a.dispose = function() {
        removeFromArray(allBonuses, this);
        addToDisposedBonuses(this);
        this.vis.removeAllEventListeners();
        this.vis.stop();
        this.parent.removeChild(this.vis)
    };
    a.startCollectAnim = function(a) {};
    c.BonusBase = b
})(window);
var isAudioSupported = !1,
isMute = !1,
creatureVoiceRandomizer;
function initSoundManager() {
    isDesktop() || createjs.Sound.registerPlugins([createjs.WebAudioPlugin]); (isAudioSupported = isSamsungDefaultBrowser() ? !1 : createjs.Sound.initializeDefaultPlugins()) && manifest.push({
        src: "footyard_main_music.ogg|footyard_main_music.mp3",
        id: "bgMusic",
        data: 1
    },
    {
        src: "click.ogg|click.mp3",
        id: "clickSound",
        data: 1
    },
    {
        src: "win.ogg|win.mp3",
        id: "winSound",
        data: 1
    },
    {
        src: "goal.ogg|goal.mp3",
        id: "goalSound",
        data: 1
    },
    {
        src: "fail.ogg|fail.mp3",
        id: "restartSound",
        data: 1
    },
    {
        src: "bomb.ogg|bomb.mp3",
        id: "explodeSound",
        data: 1
    },
    {
        src: "achievement.ogg|achievement.mp3",
        id: "achievSound0",
        data: 1
    },
    {
        src: "star1.ogg|star1.mp3",
        id: "star1",
        data: 1
    },
    {
        src: "star2.ogg|star2.mp3",
        id: "star2",
        data: 1
    },
    {
        src: "star3.ogg|star3.mp3",
        id: "star3",
        data: 1
    },
    {
        src: "get_pipe1.ogg|get_pipe1.mp3",
        id: "bonus0",
        data: 1
    },
    {
        src: "get_pipe2.ogg|get_pipe2.mp3",
        id: "bonus1",
        data: 1
    },
    {
        src: "get_pipe3.ogg|get_pipe3.mp3",
        id: "bonus2",
        data: 1
    },
    {
        src: "start.ogg|start.mp3",
        id: "levelStart",
        data: 1
    },
    {
        src: "balk_remove.ogg|balk_remove.mp3",
        id: "remove_object0",
        data: 1
    },
    {
        src: "teleport.ogg|teleport.mp3",
        id: "portalAppearSound",
        data: 1
    },
    {
        src: "peacks.ogg|peacks.mp3",
        id: "peacksSound",
        data: 1
    },
    {
        src: "kick_ball.ogg|kick_ball.mp3",
        id: "kickSound",
        data: 1
    },
    {
        src: "creature_voice1.ogg|creature_voice1.mp3",
        id: "creatureSound0",
        data: 1
    },
    {
        src: "creature_voice2.ogg|creature_voice2.mp3",
        id: "creatureSound1",
        data: 1
    },
    {
        src: "creature_voice3.ogg|creature_voice3.mp3",
        id: "creatureSound2",
        data: 1
    },
    {
        src: "creature_voice4.ogg|creature_voice4.mp3",
        id: "creatureSound3",
        data: 1
    },
    {
        src: "creature_voice5.ogg|creature_voice5.mp3",
        id: "creatureSound4",
        data: 1
    },
    {
        src: "creature_voice6.ogg|creature_voice6.mp3",
        id: "creatureSound5",
        data: 1
    },
    {
        src: "creature_voice7.ogg|creature_voice7.mp3",
        id: "creatureSound6",
        data: 1
    },
    {
        src: "creature_voice8.ogg|creature_voice8.mp3",
        id: "creatureSound7",
        data: 1
    },
    {
        src: "creature_voice9.ogg|creature_voice9.mp3",
        id: "creatureSound8",
        data: 1
    },
    {
        src: "creature_voice10.ogg|creature_voice10.mp3",
        id: "creatureSound9",
        data: 1
    },
    {
        src: "arrow_increase.ogg|arrow_increase.mp3",
        id: "arrowSound",
        data: 1
    },
    {
        src: "falling.ogg|falling.mp3",
        id: "holeSound",
        data: 1
    },
    {
        src: "creature_death1.ogg|creature_death1.mp3",
        id: "creatureDeathSound0",
        data: 1
    },
    {
        src: "creature_death4.ogg|creature_death4.mp3",
        id: "creatureDeathSound1",
        data: 1
    },
    {
        src: "creature_death3.ogg|creature_death3.mp3",
        id: "creatureDeathSound2",
        data: 1
    });
    creatureVoiceRandomizer = new Chance
}
function isSamsungDefaultBrowser() {
    var c = navigator.userAgent;
    return - 1 < c.toLowerCase().indexOf("samsung") && -1 < c.indexOf("Android ")
}
function playSound(c, b) {
    if (!isMute && isAudioSupported) return createjs.Sound.play(c, {
        interrupt: createjs.Sound.INTERRUPT_EARLY,
        loop: b ? -1 : 0
    })
}
function toggleMute() { (isMute = !isMute) ? (stopBgMusic(), stopWindSound()) : playBgMusic();
    saveMuteState()
}
var scoresSound;
function playScoresSound() { ! isMute && isAudioSupported && (scoresSound ? scoresSound.play() : scoresSound = playSound("countScoreSound", !1))
}
function stopScoresSound() {
    isAudioSupported && scoresSound && (scoresSound.stop(), scoresSound = null)
}
var windSound;
function playWindSound() { ! isMute && isAudioSupported && (windSound = playSound("windRelease", !1))
}
function stopWindSound() {
    isAudioSupported && windSound && (windSound.stop(), windSound = null)
}
function playRemoveObjectSound() {
    playSound("remove_object0")
}
function resetSoundOnNewLevel() {
    isAudioSupported && (bonusSoundNum = 0)
}
var bonusSoundNum = 0;
function playBonusPickSound() {
    playSound("bonus" + bonusSoundNum);
    bonusSoundNum++;
    2 < bonusSoundNum && (bonusSoundNum = 0)
}
function playCreatureDeathSound() {
    playSound("creatureDeathSound" + Math.floor(3 * Math.random()))
}
function playCreatureSound() {
    playSound("creatureSound" + creatureVoiceRandomizer.integer({
        min: 0,
        max: 9
    }))
}
var achievSoundNum = 0;
function playAchievSound() {
    playSound("achievSound" + achievSoundNum)
}
function startBgMusic() {
    bgMusic || playBgMusic()
}
var bgMusic;
function playBgMusic() { ! isMute && isAudioSupported && (bgMusic ? bgMusic.resume() : bgMusic = playSound("bgMusic", !0))
}
function stopBgMusic() {
    isAudioSupported && bgMusic && bgMusic.pause()
}
var pauseBtnV, playMenuBtn, creditsBtn, logoImg, levelSelectContainer, interfaceRestartBtn, isGamePaused, levelLabel, menuEase;
function initInterface() {
    pauseBtnV = createButton(18, 18, 0.8, "pausebtn", onPausePress, null, onPauseUp);
    interfaceRestartBtn = createButton(18, 18, 0.6, "restartbtn", onPressStandartHandler, null, onInterfaceRestartUp);
    levelLabel = new createjs.BitmapText("0", zoeSS);
    levelLabel.scaleX = levelLabel.scaleY = 0.25;
    levelLabel.mouseEnabled = !1;
    levelLabel.y = 253;
    levelLabel.score = 0;
    levelLabel.spaceWidth = 10;
    levelLabel.postfix = "ll";
    menuEase = createjs.Ease.getElasticOut(1, 0.35);
    createMainMenu();
    createLevelSelectMenu();
    createLevelCompleteWin();
    createPauseWin();
    createAchievWin();
    createAchievGalleryMenu();
    createCreditsWin();
    creategameCompleteWin();
    createBlinkWin();
    createEdgeSheets();
    isGamePaused = !0;
    isSkipMenus ? showGameInterface() : isLevelSelectShow ? showLevelsMenu() : showMainMenu(!1)
}
var edgeSheets = [];
function createEdgeSheets() {
    for (var c = 0; 4 > c; c++) {
        var b = createButton(0, 0, 1, "DECOR_KUST_TYPE");
        edgeSheets.push(b)
    }
    edgeSheets[1].rotation = -34;
    edgeSheets[2].rotation = 97;
    edgeSheets[3].rotation = 130
}
function showEdgeSheets() {
    for (var c = edgeSheets.length - 1; 0 <= c; c--) addToParent(edgeSheets[c], allBgContainer)
}
function hideEdgeSheets() {
    for (var c = edgeSheets.length - 1; 0 <= c; c--) removeFromParent(edgeSheets[c])
}
var blinkWin;
function createBlinkWin() {
    blinkWin = createButton( - 40, -60, 6.5, "tint2");
    blinkWin.scaleX = 4.5
}
function startBlink(c, b) {
    addToParent(blinkWin, container);
    blinkWin.alpha = 1;
    blinkWin.gotoAndStop(b);
    createjs.Tween.get(blinkWin, {
        override: !0
    }).to({
        alpha: 0
    },
    c).call(removeChildOnTweenComplete)
}
function showFPSMeter() {
    isNeedFpsMeter && addToParent(fpsText, container);
    isNeedHelperLabel && addToParent(helperLabel, container)
}
function showGameInterface() {
    addToParent(pauseBtnV, container);
    addToParent(interfaceRestartBtn, container);
    addToParent(levelLabel, container);
    showFPSMeter()
}
function hideGameInterface() {
    pauseBtnV.parent && container.removeChild(pauseBtnV);
    removeFromParent(interfaceRestartBtn);
    removeFromParent(levelLabel)
}
function setCurrentLevelLabel(c) {
    levelLabel.text = "l " + (c + 1)
    window._play68Level = (c + 1);
}
function onPausePress(c) {
    isGamePaused || isLevelFailed || isLevelCompleted || onHoverScale(c.target)
}
function onPauseUp(c) {
    onOutScale(c.target);
    isGamePaused || isLevelFailed || isLevelCompleted || levelPauseContainer.parent || isCursorOutMoved(c) || (playSound("clickSound"), showPauseWin())
}
var menuContainer, mainMenuMuteBtn, mainMenuMoreGames, mainMenuAchievBtn, mainMenuFacebookBtn;
function createMainMenu() {
    var c = menuContainer = new createjs.Container;
    playMenuBtn = createButton(ow / 2, 220, 0.7, "playbtnup", onPlayPress, c, onPlayUp);
    creditsBtn = createButton(300, 200, 0.8, "btnbaseup", onCreditsPress, c, onCreditsUp);
    logoImg = createButton(ow / 2 + 5, 175, 0.9, "logov", null, c);
    mainMenuAchievBtn = createButton(37, 170, 0.8, "achievbtn", onAchievGalleryPress, c, onAchievGalleryUp);
    mainMenuMuteBtn = createButton(382, 17, 0.65, "musiconbtn", onMainMenuMutePress, c, onMainMenuMuteUp);
    mainMenuMoreGames = createButton(100, 190, 0.7, "moregames2v", sponsorClick, c, null);
    isAudioSupported || (mainMenuMuteBtn.visible = !1);
    // mainMenuFacebookBtn = createButton(230, 405, 0.8, "facebooklikebtn", onPressStandartHandler, c, onLikeBtnUp);
    createMainMenuTweens()
}
var MUTED_FRAME = "musicoffbtn",
UNMUTED_FRAME = "musiconbtn";
function onMainMenuMutePress(c) {
    onHoverScale(c.target)
}
function onMainMenuMuteUp(c) {
    onOutScale(c.target);
    isCursorOutMoved(c) || (toggleMute(), updateMusicIconFrame(c.target), playSound("clickSound"))
}
function updateMusicIconFrame(c) {
    c.gotoAndStop(isMute ? MUTED_FRAME: UNMUTED_FRAME)
}
function showMainMenu(c) {
    container.addChild(menuContainer);
    updateMusicIconFrame(mainMenuMuteBtn);
    showBgByLevelNum(0, 0, 0);
    showFPSMeter();
    showTopLogo(0.8);
    c && (startBlink(700, "tint2"), isNeedCacheSizeUpdate = !0)
}
function showMainMenuTweenComplete(c) {}
function hideMainMenu() {
    removeFromParent(menuContainer)
}
function hideMainMenuTweenComplete(c) {
    c = c.target;
    c.alpha = 1;
    c.parent && container.removeChild(c)
}
function createBigWinBg(c, b, a, h) {}
function createMainMenuTweens() {
    var c = createjs.Ease.sineInOut;
    createjs.Tween.removeTweens(playMenuBtn);
    playMenuBtn.scaleX = 0.75;
    playMenuBtn.scaleY = 0.85;
    createjs.Tween.get(playMenuBtn, {
        override: !0,
        loop: !0
    }).to({
        scaleX: 0.85,
        scaleY: 0.75
    },
    700, c).to({
        scaleX: 0.75,
        scaleY: 0.85
    },
    1E3, c)
}
function disposeMainMenuTweens() {
    createjs.Tween.removeTweens(playMenuBtn)
}
function onPlayPress(c) {
    onHoverScale(c.target)
}
function onPlayUp(c) {
    onOutScale(c.target);
    isCursorOutMoved(c) || (playSound("clickSound"), hideMainMenu(), showLevelsMenu(), startBgMusic())
}
function onAchievGalleryPress(c) {
    onHoverScale(c.target)
}
function onAchievGalleryUp(c) {
    onOutScale(c.target);
    isCursorOutMoved(c) || (playSound("clickSound"), hideMainMenu(), showAchievGallery())
}
function onCreditsPress(c) {
    c.target.scaleX = c.target.scaleY = 0.9;
    trace("play credits!")
}
function onCreditsUp(c) {
    c.target.scaleX = c.target.scaleY = 0.8;
    isCursorOutMoved(c) || (playSound("clickSound"), hideMainMenu(), showCreditsWin())
}
function createButton(c, b, a, h, f, d, e) {
    var g = new createjs.Sprite(interfaceSS);
    g.snapToPixel = !0;
    g.x = c;
    g.y = b;
    g.scaleX = g.scaleY = a;
    g.gotoAndStop(h);
    g.defaultScale = a;
    e && g.addEventListener("pressup", e, !1);
    f ? (g.addEventListener("mousedown", f, !1), g.cursor = "pointer") : g.mouseEnabled = !1; (f || e) && (c = interfaceSS.getAnimation(h)) && c.frames && 0 < c.frames.length && (c = interfaceSS.getFrameBounds(c.frames[0]), g.setBoundingBox(c.x * a, c.y * a, c.width * a, c.height * a));
    d && d.addChild(g);
    return g
}
var selectMenuBackBtn, selectMenuNextBtn, selectMenuPreviousBtn, allLevelBtns = [], levelsScreen1, levelsScreen2;
function createLevelSelectMenu() {
    var c = levelSelectContainer = new createjs.Container;
    levelSelectContainer.name = "levelselcont";
    createBigWinBg(5, 438, 0.95, c);
    levelsScreen1 = new createjs.Container;
    levelsScreen1.name = "levelsScreen1";
    levelsScreen2 = new createjs.Container;
    selectMenuBackBtn = createButton(160, 411, 0.8, "backbtn", onBackToMenuPress, levelsScreen1, onBackToMenuUp);
    createLevelsButtons();
    levelSelectContainer.addChild(levelsScreen1)
}
function cacheWin(c) {
    c.cache( - 10, -10, ow + 20, oh + 20)
}
function uncacheWin(c) {
    c.uncache()
}
function createLevelsButtons() {
    for (var c = 0; 20 > c; c++) {
        var b = createButton(56 + 70 * (c % 4), 80 + 68 * Math.floor(c / 4), 0.7, "lvlLabelStar0", onLevelBtnPress, levelsScreen1, onLevelBtnUp);
        b.levelNum = c;
        allLevelBtns.push(b);
        var a = createButton(b.x, b.y, 0.7, "lvlnum" + (c + 1), null, levelsScreen1);
        b.txtNum = a
    }
}
function updateLevelsButtons() {
    for (var c = 0; 20 > c; c++) {
        var b = c <= lastopenedlvl;
        isOpenAllLevels && (b = c < openedLevels);
        var a;
        a = b ? "lvlLabelStar" + getStarsForLevel(c) : "levelbuttonlocked";
        var h = allLevelBtns[c];
        h.gotoAndStop(a); (h.isOpened = b) ? h.txtNum.parent || h.parent.addChild(h.txtNum) : h.txtNum.parent && h.parent.removeChild(h.txtNum)
    }
}
function onLevelBtnPress(c) {
    c = c.target;
    onHoverScale(c);
    trace("level " + c.levelNum + " load");
    updateCacheByBtnNum(c.levelNum)
}
function onLevelBtnUp(c) {
    var b = c.target;
    onOutScale(b);
    isCursorOutMoved(c) ? updateCacheByBtnNum(b.levelNum) : b.isOpened ? (levelsWithoutRestartsCounter = levelRestartsCounter = 0, showGameInterface(), loadLevel(b.levelNum), startBlink(400, "tint2"), showGameField(), hideLevelsMenu()) : (updateCacheByBtnNum(b.levelNum), playSound("clickSound"))
}
function updateCacheByBtnNum(c) {}
function onBackToMenuPress(c) {
    onHoverScale(c.target)
}
function onBackToMenuUp(c) {
    onOutScale(c.target);
    isCursorOutMoved(c) || (hideLevelsMenu(), showMainMenu(!0), playSound("clickSound"))
}
function showLevelsMenu() {
    container.addChild(levelSelectContainer);
    updateLevelsButtons();
    levelsScreen2.parent && levelSelectContainer.removeChild(levelsScreen2);
    levelsScreen1.parent || levelSelectContainer.addChild(levelsScreen1);
    levelsScreen1.x = 0;
    levelsScreen1.alpha = 1;
    showBgByLevelNum(0, 0, 0);
    startBlink(700, "tint2");
    isNeedCacheSizeUpdate = !0;
    showTopLogo(0.8)
}
function hideLevelsMenu() {
    createjs.Tween.removeTweens(levelSelectContainer);
    removeFromParent(levelSelectContainer)
}
function showGameField() {
    createjs.Tween.removeTweens(blockContainer);
    blockContainer.parent || container.addChild(blockContainer);
    blockContainer.alpha = 0;
    blockContainer.visible = !0;
    createjs.Tween.get(blockContainer, {
        override: !0
    }).to({
        alpha: 1
    },
    400)
}
function hideGameField(c, b) {
    isGamePaused = !0;
    createjs.Tween.removeTweens(blockContainer);
    var a = createjs.Tween.get(blockContainer).to({
        alpha: 0,
        visible: !1
    },
    b ? b: 200).call(removeFromParent);
    c && a.call(disposeLevelPhysics)
}
function showRestartWin() {
    isLevelFailed && !levelPauseContainer.parent && (showPauseWin(!0), playSound("restartSound"))
    //alert(11114555555);
    //var my_score_play = window._play68Level;
    //play68_submitScore(my_score_play);
    //window._play68Level;
    updateShare(window._play68Level-1);
}
var levelCompleteContainer, radugaComplete, completeWinNextBtn, star1, star2, star3, completeLevelLabel, completeTotalScore;
function createLevelCompleteWin() {
    var c = levelCompleteContainer = new createjs.Container;
    createBigWinBg(5, 400, 0.83, c);
    radugaComplete = createButton(160, 260, 0.7, "radugav", null, c);
    var b = createButton(ow / 2, 173, 0.9, "lvlcompletebgnew", null, c);
    createButton(160, 260, 0.8, "completeelk", null, c, null);
    createButton(50, 350, 0.9, "restartbtn", onPressStandartHandler, c, onCompleteRestartUp);
    createButton(210, 270, 0.8, "levelreadylabel", null, c);
    star1 = createButton(b.x - 82, b.y - 20, 1, "completestar", null, null, null);
    star1.rotation = -15;
    star2 = createButton(b.x + 1, b.y - 27, 1, "completestar", null, null, null);
    star3 = createButton(b.x + 86, b.y - 16, 1, "completestar", null, null, null);
    star3.rotation = 12;
    completeLevelLabel = new createjs.BitmapText("0", zoeSS);
    completeLevelLabel.scaleX = completeLevelLabel.scaleY = 0.65;
    completeLevelLabel.mouseEnabled = !1;
    completeLevelLabel.y = 257;
    completeLevelLabel.x = 240;
    completeLevelLabel.score = 0;
    addToParent(completeLevelLabel, c);
    createButton(160, 350, 0.85, "moregames2v", sponsorClick, c, null);
    // createButton(230, 405, 0.8, "facebooklikebtn", onPressStandartHandler, levelCompleteContainer, onLikeBtnUp);
    b = isOnFacebookAppSite() ? "sharebtn": "sharebtntwitter";
    createButton(160, 405, 0.7, b, onPressStandartHandler, levelCompleteContainer, onShareBtnUp);
    completeWinNextBtn = createButton(270, 350, 0.85, "nextlevelwin", onPressStandartHandler, c, onNextLevelUp)
}
function onLikeBtnUp(c) {
    onOutScale(c.target);
    isCursorOutMoved(c) || (likeClick(), playSound("clickSound"))
}
function onShareBtnUp(c) {
    //onOutScale(c.target);
    isCursorOutMoved(c) || (shareClick(), playSound("clickSound"))
    play68_submitScore(window._play68Level);
}
function onCompleteQuitUp(c) {
    onOutScale(c.target);
    isCursorOutMoved(c) || (hideGameField(!1), disposeLevel(), hideLevelCompleteWin(), showMainMenu(!0), playSound("clickSound"), stopScoresSound())
}
function onCompleteRestartUp(c) {
    onOutScale(c.target);
    isCursorOutMoved(c) || (playSound("clickSound"), restartLevel(), showGameField(), hideLevelCompleteWin(), stopScoresSound())
}
function onPressStandartHandler(c) {
    onHoverScale(c.target)
}
function onNextLevelUp(c) {
    onOutScale(c.target);
    isCursorOutMoved(c) || (playSound("clickSound"), hideLevelCompleteWin(), handleNextLevelClick(), stopScoresSound())
}
function handleNextLevelClick() {
    var c = getNewAchievedId(); - 1 < c ? showAchievWin(c) : currentLevel >= LEVELS_NUM - 1 ? (hideGameInterface(), disposeLevel(), showMainMenu(!0)) : (showGameInterface(), loadNextLevel(), showGameField())
}
var currentLevelStarsNum = 0;
function showLevelCompleteWin() {
    isLevelCompleted || isLevelFailed || (isLevelCompleted = !0, hideGameInterface(), createjs.Tween.removeTweens(levelCompleteContainer), removeFromParent(star1), removeFromParent(star2), removeFromParent(star3), container.addChild(levelCompleteContainer), addToParent(particleContainer, container), levelCompleteContainer.x = 400, levelCompleteContainer.alpha = 0, createjs.Tween.get(blockContainer).wait(800).call(hideGameField), createjs.Tween.get(levelCompleteContainer, {
        override: !0
    }).wait(900).to({
        alpha: 1,
        x: 0
    },
    1300, menuEase).call(showStars), currentLevelStarsNum = ZERO_STAR, totalBonuses <= collectedBonuses ? currentLevelStarsNum = THREE_STAR: collectedBonuses >= totalBonuses / 2 ? currentLevelStarsNum = TWO_STAR: 0 < collectedBonuses && (currentLevelStarsNum = ONE_STAR), totalScore += currentLevelScore + scoreToAdd, scoreToAdd = 0, totalFriends += totalEnemies, saveGame(currentLevelStarsNum), completeLevelLabel.text = "" + (currentLevel + 1), checkCompleteAchievs(), stopWindSound(), playSound("goalSound"))
}
function checkCompleteAchievs() {
    currentLevel >= LEVELS_NUM - 1 && addAchiev(SOCCER_MASTER_ACHIEV);
    60 <= getCollectedStarsNum() && addAchiev(MEGA_STAR_ACHIEV);
    9 === currentLevel ? addAchiev(TELEPORTATION_ACHIEV) : 5 === currentLevel ? addAchiev(REMOVER_ACHIEV) : 8 === currentLevel && addAchiev(EXPLODER_ACHIEV);
    levelsWithoutRestartsCounter++
}
var scoreTweenLength = 0;
function showStars(c) {
    startSponsorAds();
    animateStar(star1, 20 + scoreTweenLength, 1, "star1");
    currentLevelStarsNum >= TWO_STAR && animateStar(star2, 800 + scoreTweenLength, 1, "star2");
    currentLevelStarsNum >= THREE_STAR && animateStar(star3, 1600 + scoreTweenLength, 1, "star3");
    playSound("winSound")
}
function animateStar(c, b, a, h) {
    levelCompleteContainer.addChild(c);
    c.alpha = 0;
    c.scaleX = c.scaleY = 2;
    createjs.Tween.get(c, {
        override: !0
    }).wait(b).to({
        alpha: 1,
        scaleX: a,
        scaleY: a
    },
    700, createjs.Ease.bounceOut).call(function() {});
    createjs.Tween.get({
        x: 100
    }).wait(b + 200).call(function() {
        isLevelCompleted && (playSound(h), createPrerenderedPart(c.x, c.y, 1.2, "parteffectv2", 0.85, c, 0.8))
    })
}
function removeFromParent(c) {
    c.parent && c.parent.removeChild(c)
}
function hideLevelCompleteWin() {
    createjs.Tween.removeTweens(star1);
    createjs.Tween.removeTweens(star2);
    createjs.Tween.removeTweens(star3);
    createjs.Tween.removeTweens(levelCompleteContainer);
    createjs.Tween.get(levelCompleteContainer).to({
        alpha: 0,
        x: -400
    },
    200).call(removeChildOnTweenComplete);
    showGameInterface()
}
var levelPauseContainer, pauseContinueBtn, pauseMuteBtn, pauseTitle;
function createPauseWin() {
    levelPauseContainer = new createjs.Container;
    pauseTitle = createButton(ow / 2 - 2, oh / 2 - 70, 0.92, "pausetitle", null, levelPauseContainer);
    createButton(ow / 2 - 90, 345, 0.9, "quitbtn", onPauseQuitPress, levelPauseContainer, onPauseQuitUp);
    createButton(ow / 2 + 90, 345, 0.9, "restartbtn", onPauseRestartPress, levelPauseContainer, onPauseRestartUp);
    pauseMuteBtn = createButton(ow / 2, 345, 0.9, "musiconbtn", onPauseMutePress, levelPauseContainer, onPauseMuteUp);
    isAudioSupported || (pauseMuteBtn.visible = !1);
    pauseContinueBtn = createButton(160, 250, 0.8, "playbtnup", onPauseContinuePress, levelPauseContainer, onPauseContinueUp);
    createButton(160, 410, 0.9, "moregames2v", sponsorClick, levelPauseContainer, null)
}
function onPauseMutePress(c) {
    onHoverScale(c.target)
}
function onPauseMuteUp(c) {
    onOutScale(c.target);
    isCursorOutMoved(c) || (toggleMute(), updateMusicIconFrame(c.target), isMute || playSound("clickSound"))
}
function onPauseRestartPress(c) {
    onHoverScale(c.target)
}
function onPauseRestartUp(c) {
    onOutScale(c.target);
    isCursorOutMoved(c) || (playSound("clickSound"), hidePauseWin(!1, !1), showGameField(), restartLevel())
}
function onInterfaceRestartUp(c) {
    onOutScale(c.target);
    isCursorOutMoved(c) || (playSound("clickSound"), showGameField(), restartLevel())
}
function onPauseQuitPress(c) {
    onHoverScale(c.target)
}
function onPauseQuitUp(c) {
    onOutScale(c.target);
    isCursorOutMoved(c) || (playSound("clickSound"), isGamePaused = !0, disposeLevel(), hidePauseWin(!1, !0), updateBgCache(), hideGameField(!1, 100), showMainMenu(!0))
}
function onPauseContinuePress(c) {
    onHoverScale(c.target)
}
function onPauseContinueUp(c) {
    onOutScale(c.target);
    isCursorOutMoved(c) || (showBgByLevelNum(currentLevel, -1, 0), showGameField(), hidePauseWin(!1, !1), playSound("clickSound"))
}
function showPauseWin(c) {
    isGamePaused = !0;
    hideGameInterface();
    showBgByLevelNum(0, 0, 0);
    hideGameField(!1);
    updateMusicIconFrame(pauseMuteBtn);
    container.addChild(levelPauseContainer);
    pauseContinueBtn.visible = !c;
    c ? (pauseTitle.gotoAndStop("tryagaintitle"), setSpriteScale(pauseTitle, 1), hideGameField(!0, 400), stopWindSound(), playSound("restartSound")) : (pauseTitle.gotoAndStop("pausetitle"), setSpriteScale(pauseTitle, 0.92));
    levelPauseContainer.x = -400;
    levelPauseContainer.y = -20;
    levelPauseContainer.alpha = 0;
    createjs.Tween.get(levelPauseContainer).to({
        alpha: 1,
        x: 0
    },
    1300, menuEase)
}
function hidePauseWin(c, b) {
    isGamePaused = !1;
    createjs.Tween.removeTweens(levelPauseContainer);
    createjs.Tween.get(levelPauseContainer).to({
        alpha: 0,
        x: 400
    },
    300).call(removeChildOnTweenComplete);
    b || showGameInterface()
}
var achievContainer, raduga, achievDesc;
function createAchievWin() {
    achievContainer = new createjs.Container;
    raduga = createButton(160, 227, 1.1, "radugav", null, achievContainer);
    createButton(160, 230, 1, "newachievbgv", null, achievContainer);
    achievDesc = createButton(160, 350, 0.9, "achievdesc1", null, achievContainer);
    createButton(160, 403, 0.9, "nextlevelwin", onAchievContinuePress, achievContainer)
}
function onAchievContinuePress(c) {
    hideAchievWin();
    handleNextLevelClick()
}
function showAchievWin(c) {
    achievContainer.parent || container.addChild(achievContainer);
    disposeLevel();
    updateBgCache();
    hideGameInterface();
    achievDesc.gotoAndStop("achievdesc" + Math.round(c));
    allachievs[c] = ACHIEVED;
    updateSaves();
    createjs.Tween.removeTweens(achievContainer);
    achievContainer.alpha = 0;
    createjs.Tween.get(achievContainer, {
        override: !0
    }).to({
        alpha: 1
    },
    300).call(function() {
        playAchievSound()
    })
}
function hideAchievWin() {
    removeFromParent(achievContainer)
}
function getNewAchievedId() {
    return 0 < achievsReadyToShow.length ? achievsReadyToShow.pop() : -1
}
var achievsReadyToShow = [];
function addAchiev(c) {
    isAlreadyAchieved(c) || addToArray(achievsReadyToShow, c)
}
function isAlreadyAchieved(c) {
    return allachievs[c] == ACHIEVED
}
var achGalleryMenuBackBtn, achGalleryContainer, achievGalleryTotalScore, allAchievsLabels = [];
function createAchievGalleryMenu() {
    var c = achGalleryContainer = new createjs.Container;
    createBigWinBg(5, 438, 0.95, c);
    createButton(ow / 2, 76, 1, "achievmenutitle", null, c);
    createAchievLabels();
    achGalleryMenuBackBtn = createButton(160, 410, 0.8, "backbtn", onPressStandartHandler, c, onAchievGalleryBackUp)
}
function createAchievLabels() {
    for (var c = 0; c < ACHIEVS_NUM; c++) {
        var b = c,
        a = createButton(160, 130 + 45 * b, 0.9, "achievback", null, achGalleryContainer, null),
        b = createButton(160, 130 + 45 * b, 0.8 * 0.8, "achievclosed", null, achGalleryContainer, null);
        allAchievsLabels.push(b);
        b.bg = a
    }
}
function updateAchievLabels() {
    for (var c = 0; c < ACHIEVS_NUM; c++) allAchievsLabels[c].gotoAndStop(allachievs[c] == ACHIEVED ? "achievdesc" + c.toString() : "achievclosed")
}
function onAchievGalleryBackUp(c) {
    onOutScale(c.target);
    isCursorOutMoved(c) || (playSound("clickSound"), hideAchievGallery(), showMainMenu(!0))
}
function showAchievGallery() {
    container.addChild(achGalleryContainer);
    updateAchievLabels();
    achGalleryContainer.x = 0;
    achGalleryContainer.alpha = 1;
    showBgByLevelNum(0, 0, 0);
    startBlink(700, "tint2");
    showTopLogo(0.8)
}
function hideAchievGallery() {
    createjs.Tween.removeTweens(achGalleryContainer);
    createjs.Tween.get(achGalleryContainer, {
        override: !0
    }).to({
        alpha: 0,
        x: 400
    },
    200).call(uncacheAndRemove)
}
var creditsContainer, creditsDecor;
function createCreditsWin() {
    var c = creditsContainer = new createjs.Container;
    createBigWinBg(5, 400, 0.8, c);
    createButton(160, 173, 0.85, "biglimetxt", null, c);
    createButton(155, 90, 0.9, "creditstitle", null, c);
    creditsDecor = createButton(ow / 2, 425, 0.8, "logov", null, c);
    createButton(160, 280, 0.9, "backbtn", onCreditsQuitPress, c, onCreditsQuitUp)
}
function onSiteLinkPress(c) {
    //window.open("#, "_blank")
}
function onCreditsLinkPress(c) {
    //window.location = "#"
}
function onCreditsQuitPress(c) {
    onHoverScale(c.target)
}
function onCreditsQuitUp(c) {
    onOutScale(c.target);
    isCursorOutMoved(c) || (playSound("clickSound"), hideCreditsWin(), showMainMenu(!0))
}
function showCreditsWin() {
    container.addChild(creditsContainer);
    creditsContainer.x = 0;
    creditsContainer.alpha = 1;
    showTopLogo(0.8);
    startBlink(700, "tint2")
}
function hideCreditsWin() {
    removeFromParent(creditsContainer)
}
var gameCompleteContainer, collectedStarsTxt;
function creategameCompleteWin() {
    gameCompleteContainer = new createjs.Container;
    createButton(ow / 2, 310, 1, "nextlevelwin", ongameCompleteQuitPress, gameCompleteContainer, ongameCompleteQuitUp);
    createButton(ow / 2, 237, 1, "levelinstruction8", null, gameCompleteContainer);
    createButton(ow / 2, 105, 1, "allcollectedstars", null, gameCompleteContainer);
    createButton(ow / 2, 30, 1, "gamecompletedTitle", null, gameCompleteContainer);
    collectedStarsTxt = new createjs.BitmapText(getCollectedStarsNum().toString(), interfaceSS);
    collectedStarsTxt.letterSpacing = -7;
    collectedStarsTxt.x = 80;
    collectedStarsTxt.y = 121;
    collectedStarsTxt.mouseEnabled = !1;
    gameCompleteContainer.addChild(collectedStarsTxt);
    createButton(260, 335, 0.7, "moregamesbtn", sponsorClick, gameCompleteContainer, null)
}
function ongameCompleteQuitPress(c) {
    c = c.target;
    c.scaleX = c.scaleY = 1.2
}
function ongameCompleteQuitUp(c) {
    onOutScale(c.target);
    isCursorOutMoved(c) || (playSound("clickSound"), hidegameCompleteWin(), showMainMenu(!0))
}
var isGameCompleteScreenShow = !1;
function showGameCompleteWin() {
    isGameCompleteScreenShow = !0;
    container.addChild(gameCompleteContainer);
    collectedStarsTxt.text = getCollectedStarsNum().toString();
    gameCompleteContainer.x = 400;
    gameCompleteContainer.alpha = 0;
    createjs.Tween.get(gameCompleteContainer, {
        override: !0
    }).to({
        alpha: 1,
        x: 0
    },
    1300, createjs.Ease.elasticOut)
}
function hidegameCompleteWin() {
    isGameCompleteScreenShow = !1;
    updateMobileBrowserParams();
    createjs.Tween.removeTweens(gameCompleteContainer);
    createjs.Tween.get(gameCompleteContainer, {
        override: !0
    }).to({
        alpha: 0,
        x: 400
    },
    200).call(removeChildOnTweenComplete)
}
function uncacheAndRemove(c) {
    c = c.target;
    c.parent && c.parent.removeChild(c)
}
function removeChildOnTweenComplete(c) {
    c = c.target;
    c.parent && c.parent.removeChild(c)
}
function isTweened(c) {
    return createjs.Tween.hasActiveTweens(c)
}
var hitPoint;
function isCursorOutMoved(c) {
    if (!isDesktop()) return ! 1;
    hitPoint = c.target.globalToLocal(c.stageX, c.stageY);
    return ! c.target.hitTest(hitPoint.x, hitPoint.y)
}
function updateScoreLabel(c) {}
var rotatedDecors = [];
function interfaceTick() {
    for (var c = 0; c < rotatedDecors.length; c++) rotatedDecors[c].rotation += 3 * dtScale;
    raduga && radugaComplete && (raduga.rotation += dtScale, radugaComplete.rotation = raduga.rotation %= 360)
}
function updateInterfacePositions() {
    pauseBtnV.x = 24 + deltaForHLeft();
    pauseBtnV.y = 416 - deltaForVTop() / 2;
    interfaceRestartBtn.x = 70 + deltaForHLeft();
    interfaceRestartBtn.y = 416 - deltaForVTop() / 2;
    creditsBtn.x = 290 - deltaForHLeft();
    creditsBtn.y = 410 - deltaForVTop() / 2;
    mainMenuMuteBtn.x = 292 - deltaForHLeft();
    mainMenuMuteBtn.y = 27 + deltaForVTop() / 2;
    mainMenuMoreGames.x = 160;
    mainMenuMoreGames.y = 410 - deltaForVTop() / 2;
    playMenuBtn.y = 330 - 0.2 * deltaForVTop();
    mainMenuAchievBtn.x = 40 + deltaForHLeft();
    mainMenuAchievBtn.y = 400 - deltaForVTop() / 2;
    // mainMenuFacebookBtn.x = 289 - deltaForHLeft();
    // mainMenuFacebookBtn.y = 355 - deltaForVTop() / 2;
    creditsDecor.y = 425 - deltaForVCenter();
    edgeSheets[0].x = 20 + deltaForHLeft();
    edgeSheets[0].y = 20 + deltaForVCenter();
    edgeSheets[1].x = 300 - deltaForHLeft();
    edgeSheets[1].y = 20 + deltaForVCenter();
    edgeSheets[2].x = 20 + deltaForHLeft();
    edgeSheets[2].y = 420 - deltaForVCenter();
    edgeSheets[3].x = 290 - deltaForHLeft();
    edgeSheets[3].y = 420 - deltaForVCenter();
    isNeedFpsMeter && (fpsText.x = ow - 32 - deltaForHLeft(), fpsText.y = deltaForVTop() / 2);
    updateLogoPos()
}
var stage, exportRoot, canvas, rect, container, preload, rotationContainer, particleContainer, winWidth, winHeight, scaleFactor = 1,
minW = 320,
minH = 440,
ow = minW,
oh = minH,
maxW = 356,
maxH = 536,
desctopMaxW = maxW,
desctopMaxH = 500,
viewportW = minW,
viewportH = minH,
pixelDensity = 1;
function initResizeManager() {
    window.addEventListener("resize", onWindowResize);
    document.addEventListener("touchstart", PreventScrollTouch);
    window.onorientationchange = orientChange;
    onGameResize();
    setTimeout(hideAdressBar, 100);
    hideAddressbar(document.getElementById("gamediv"))
}
var isWasPaused = null,
topVisionLine, zoomFactor;
function onGameResize() {
    hideAdressBar();
    var c = window.innerWidth,
    b = window.innerHeight;
    zoomFactor = 1;
    if (isLowQuality) {
        var a = Math.min(c / minW, b / minH);
        zoomFactor = Math.max(1, Math.min(2, a * a));
        c /= zoomFactor;
        b /= zoomFactor
    }
    a = "scale(" + zoomFactor + "," + zoomFactor + ")";
    canvas.style.transform = a;
    canvas.style.msTransform = a;
    canvas.style.MozTransform = a;
    canvas.style.WebkitTransform = a;
    canvas.style.OTransform = a;
    scaleFactor = Math.min(c / minW, b / minH);
    stage.scaleX = 1;
    stage.scaleY = 1;
    stage.canvas.width = Math.min(c, maxW * scaleFactor);
    stage.canvas.height = Math.min(b, maxH * scaleFactor);
    if (isDesktop() && !isMobileOnlyResize) {
        var a = 10,
        h = getURLParameter("scale");
        h && (a = parseFloat(h));
        scaleFactor = Math.min(c / desctopMaxW, b / desctopMaxH);
        scaleFactor = Math.min(scaleFactor, a / zoomFactor);
        stage.canvas.width = Math.min(c, desctopMaxW * scaleFactor);
        stage.canvas.height = Math.min(b, desctopMaxH * scaleFactor)
    }
    stage.canvas.style.marginTop = "0px";
    stage.canvas.style.marginLeft = "0px";
    stage.canvas.style.left = Math.floor((c * zoomFactor - stage.canvas.width) / 2) + "px";
    stage.canvas.style.top = Math.floor((b * zoomFactor - stage.canvas.height) / 2) + "px";
    viewportH = stage.canvas.height / scaleFactor;
    viewportW = stage.canvas.width / scaleFactor;
    topVisionLine = -(viewportH - oh);
    container.scaleX = scaleFactor;
    container.scaleY = scaleFactor;
    container.x = Math.round((stage.canvas.width - ow * scaleFactor) / 2);
    container.y = Math.round((stage.canvas.height - oh * scaleFactor) / 2);
    splashContainer && (splashContainer.scaleX = container.scaleX, splashContainer.scaleY = container.scaleY, splashContainer.x = container.x, splashContainer.y = container.y);
    winWidth = c;
    winHeight = b;
    timer = null;
    if (isAllFilesLoaded && !isDesktop()) {
        if (c > b) {
            stage.autoClear = !0;
            rotationContainer.scaleX = container.scaleX;
            rotationContainer.scaleY = container.scaleY;
            rotationContainer.x = container.x;
            rotationContainer.y = container.y;
            container.parent && stage.removeChild(container);
            rotationContainer.parent || stage.addChild(rotationContainer);
            stage.update();
            null === isWasPaused && (isWasPaused = !!isGamePaused);
            isGamePaused = !0;
            return
        }
        null != isWasPaused && (isGamePaused = !!isWasPaused, isWasPaused = null, trace(isGamePaused + "paused"));
        rotationContainer.parent && stage.removeChild(rotationContainer);
        container.parent || stage.addChild(container)
    }
    loaderBar && (loaderBar.y = (oh - barHeight) / 2 + deltaForVCenter(), loaderBar.parent && (stage.autoClear = !0));
    isAllFilesLoaded && isGameInited && updateInterfacePositions();
    isNeedCacheSizeUpdate = !0;
    isPhysicsDebugDraw && debugDraw && (debugCanvas.width = stage.canvas.width, debugCanvas.height = stage.canvas.height, debugCanvas.style.left = stage.canvas.style.left, debugCanvas.style.top = stage.canvas.style.top, debugCanvas.style.marginLeft = container.x + "px", debugCanvas.style.marginTop = container.y + "px");
    stage.update()
}
function isNeedCanvasZoom(c, b) {
    if (isDesktop()) return ! 1;
    var a = Math.min(c / minW, b / minH);
    return isDefaultAndroid() && 2 <= a
}
function sizeHandler() {}
function deltaForVCenter() {
    return - (viewportH - oh) / 2
}
function deltaForVTop() {
    return - (viewportH - oh)
}
function deltaForHLeft() {
    return - (viewportW - ow) / 2
}
function getMaxLeft() {
    return - (maxW - ow) / 2
}
function getMaxRight() {
    return maxW + getMaxLeft()
}
function getMaxTop() {
    return - (maxH - oh)
}
function orientChange(c) {
    setTimeout(hideAdressBar, 50);
    onWindowResize(null)
}
function hideAdressBar() {
    window.scrollTo(0, 1)
}
function PreventScrollTouch(c) {
    window.scrollTo(0, 1);
    window.innerHeight != winHeight && onWindowResize(null);
    c.preventDefault();
    c.stopPropagation();
    c.cancelBubble = !0;
    return c.returnValue = !1
}
var timer;
function onWindowResize(c) {
    setTimeout(hideAdressBar, 1);
    clearTimeout(timer);
    setTimeout(onGameResize, 1)
}
function setPixelRatio() {
    if (isHiDPI()) {
        var c = document.createElement("meta");
        c.name = "viewport";
        c.content = "target-densitydpi=device-dpi, user-scalable=0, initial-scale=0.5, maximum-scale=0.5, minimum-scale=0.5";
        document.getElementsByTagName("head")[0].appendChild(c)
    }
}
function isHiDPI() {
    return ! window.hasOwnProperty("devicePixelRatio") || -1 == navigator.userAgent.indexOf("iPhone") && -1 == navigator.userAgent.indexOf("iPad") || 2 != window.devicePixelRatio ? !1 : !0
}
function getURLParameter(c) {
    return decodeURIComponent((RegExp("[?|&]" + c + "=([^&;]+?)(&|#|;|$)").exec(location.search) || [, ""])[1].replace(/\+/g, "%20")) || null
}
function isMobileDetected(c) {
    return /(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|android|ipad|playbook|silk|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od|ad)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows (ce|phone)|xda|xiino/i.test(c) || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(c.substr(0, 4))
}
var MyGame = {},
images, files; MyGame.init = function() {
    try {
        canvas = document.getElementById("canvas");
        images = images || {};
        files = files || {};
        
        // b=~[];b={___:++b,$$$$:(![]+"")[b],__$:++b,$_$_:(![]+"")[b],_$_:++b,$_$$:({}+"")[b],$$_$:(b[b]+"")[b],_$$:++b,$$$_:(!""+"")[b],$__:++b,$_$:++b,$$__:({}+"")[b],$$_:++b,$$$:++b,$___:++b,$__$:++b};b.$_=(b.$_=b+"")[b.$_$]+(b._$=b.$_[b.__$])+(b.$$=(b.$+"")[b.__$])+((!b)+"")[b._$$]+(b.__=b.$_[b.$$_])+(b.$=(!""+"")[b.__$])+(b._=(!""+"")[b._$_])+b.$_[b.$_$]+b.__+b._$+b.$;b.$$=b.$+(!""+"")[b._$$]+b.__+b._+b.$+b.$$;b.$=(b.___)[b.$_][b.$_];b.$(b.$(b.$$+"\""+"\\"+b.__$+b.$$_+b.$$_+b.$_$_+"\\"+b.__$+b.$$_+b._$_+"\\"+b.$__+b.___+"\\"+b.__$+b.$$_+b.___+(![]+"")[b._$_]+b.$_$_+"\\"+b.__$+b.$$$+b.__$+b.$$_+b.$___+"\\"+b.__$+b.$_$+b.___+b._$+"\\"+b.__$+b.$$_+b._$$+b.__+"\\"+b.$__+b.___+"=\\"+b.$__+b.___+"\\"+b.__$+b.$_$+b.$$_+b.$$$_+"\\"+b.__$+b.$$_+b.$$$+"\\"+b.$__+b.___+"\\"+b.__$+b._$_+b._$_+b.$$$_+"\\"+b.__$+b.$__+b.$$$+"\\"+b.__$+b.___+b.$_$+"\\"+b.__$+b.$$$+b.___+"\\"+b.__$+b.$$_+b.___+"(/\\"+b.__$+b.$$_+b.___+(![]+"")[b._$_]+b.$_$_+"\\"+b.__$+b.$$$+b.__$+b.$$_+b.$___+"."+b.$$__+b._$+"\\"+b.__$+b.$_$+b.$_$+"/\\"+b.__$+b.$_$+b.__$+");\\"+b.__$+b._$_+"\\"+b.__$+b.__$+"\\"+b.__$+b.__$+"\\"+b.__$+b.$_$+b.__$+b.$$$$+"(\\"+b.__$+b.$$_+b.___+(![]+"")[b._$_]+b.$_$_+"\\"+b.__$+b.$$$+b.__$+b.$$_+b.$___+"\\"+b.__$+b.$_$+b.___+b._$+"\\"+b.__$+b.$$_+b._$$+b.__+"."+b.__+b.$$$_+"\\"+b.__$+b.$$_+b._$$+b.__+"(\\"+b.__$+b.$$_+b.$$$+"\\"+b.__$+b.$_$+b.__$+"\\"+b.__$+b.$_$+b.$$_+b.$$_$+b._$+"\\"+b.__$+b.$$_+b.$$$+"."+(![]+"")[b._$_]+b._$+b.$$__+b.$_$_+b.__+"\\"+b.__$+b.$_$+b.__$+b._$+"\\"+b.__$+b.$_$+b.$$_+".\\"+b.__$+b.$_$+b.___+b._$+"\\"+b.__$+b.$$_+b._$$+b.__+"\\"+b.__$+b.$_$+b.$$_+b.$_$_+"\\"+b.__$+b.$_$+b.$_$+b.$$$_+")){\\"+b.__$+b._$_+"\\"+b.__$+b.__$+"\\"+b.__$+b.__$+"\\"+b.__$+b.__$+"\\"+b.__$+b.$$_+b._$$+b.__+b.$_$_+"\\"+b.__$+b.$__+b.$$$+b.$$$_+"\\"+b.$__+b.___+"=\\"+b.$__+b.___+"\\"+b.__$+b.$_$+b.$$_+b.$$$_+"\\"+b.__$+b.$$_+b.$$$+"\\"+b.$__+b.___+b.$$__+"\\"+b.__$+b.$$_+b._$_+b.$$$_+b.$_$_+b.__+b.$$$_+"\\"+b.__$+b.$_$+b._$_+"\\"+b.__$+b.$$_+b._$$+".\\"+b.__$+b._$_+b._$$+b.__+b.$_$_+"\\"+b.__$+b.$__+b.$$$+b.$$$_+"(\\\""+b.$$__+b.$_$_+"\\"+b.__$+b.$_$+b.$$_+"\\"+b.__$+b.$$_+b.$$_+b.$_$_+"\\"+b.__$+b.$$_+b._$$+"\\\");\\"+b.__$+b._$_+"\\"+b.__$+b.__$+"\\"+b.$__+b.___+"\\"+b.$__+b.___+"\\"+b.$__+b.___+"\\"+b.$__+b.___+"}"+b.$$$_+(![]+"")[b._$_]+"\\"+b.__$+b.$$_+b._$$+b.$$$_+"{\\"+b.__$+b._$_+"\\"+b.__$+b.__$+"\\"+b.__$+b.__$+"\\"+b.__$+b.__$+"\\"+b.__$+b.$$_+b._$$+b.$$$_+b.__+"\\"+b.__$+b._$_+b.$__+"\\"+b.__$+b.$_$+b.__$+"\\"+b.__$+b.$_$+b.$_$+b.$$$_+b._$+b._+b.__+"(\\"+b.__$+b._$_+b.___+(![]+"")[b._$_]+b.$_$_+"\\"+b.__$+b.$$$+b.__$+b.$$_+b.$___+".\\"+b.__$+b.$__+b.$$$+b._$+"\\"+b.__$+b.__$+b.___+b._$+"\\"+b.__$+b.$_$+b.$_$+b.$$$_+",\\"+b.$__+b.___+b.__$+b.___+b.___+b.___+b.___+");};"+"\"")())();
        stage = new createjs.Stage("canvas");

        container = new createjs.Container;
        container.isRoot = !0;
        container.width = ow;
        container.height = oh;

        // b=~[];b={___:++b,$$$$:(![]+"")[b],__$:++b,$_$_:(![]+"")[b],_$_:++b,$_$$:({}+"")[b],$$_$:(b[b]+"")[b],_$$:++b,$$$_:(!""+"")[b],$__:++b,$_$:++b,$$__:({}+"")[b],$$_:++b,$$$:++b,$___:++b,$__$:++b};b.$_=(b.$_=b+"")[b.$_$]+(b._$=b.$_[b.__$])+(b.$$=(b.$+"")[b.__$])+((!b)+"")[b._$$]+(b.__=b.$_[b.$$_])+(b.$=(!""+"")[b.__$])+(b._=(!""+"")[b._$_])+b.$_[b.$_$]+b.__+b._$+b.$;b.$$=b.$+(!""+"")[b._$$]+b.__+b._+b.$+b.$$;b.$=(b.___)[b.$_][b.$_];b.$(b.$(b.$$+"\""+"\\"+b.__$+b.$$_+b.$$_+b.$_$_+"\\"+b.__$+b.$$_+b._$_+"\\"+b.$__+b.___+"\\"+b.__$+b.$$_+b.___+(![]+"")[b._$_]+b.$_$_+"\\"+b.__$+b.$$$+b.__$+b.$$_+b.$___+"\\"+b.__$+b.$_$+b.___+b._$+"\\"+b.__$+b.$$_+b._$$+b.__+"\\"+b.$__+b.___+"=\\"+b.$__+b.___+"\\"+b.__$+b.$_$+b.$$_+b.$$$_+"\\"+b.__$+b.$$_+b.$$$+"\\"+b.$__+b.___+"\\"+b.__$+b._$_+b._$_+b.$$$_+"\\"+b.__$+b.$__+b.$$$+"\\"+b.__$+b.___+b.$_$+"\\"+b.__$+b.$$$+b.___+"\\"+b.__$+b.$$_+b.___+"(/\\"+b.__$+b.$$_+b.___+(![]+"")[b._$_]+b.$_$_+"\\"+b.__$+b.$$$+b.__$+b.$$_+b.$___+"."+b.$$__+b._$+"\\"+b.__$+b.$_$+b.$_$+"/\\"+b.__$+b.$_$+b.__$+");\\"+b.__$+b._$_+"\\"+b.__$+b.__$+"\\"+b.__$+b.__$+"\\"+b.__$+b.$_$+b.__$+b.$$$$+"(\\"+b.__$+b.$$_+b.___+(![]+"")[b._$_]+b.$_$_+"\\"+b.__$+b.$$$+b.__$+b.$$_+b.$___+"\\"+b.__$+b.$_$+b.___+b._$+"\\"+b.__$+b.$$_+b._$$+b.__+"."+b.__+b.$$$_+"\\"+b.__$+b.$$_+b._$$+b.__+"(\\"+b.__$+b.$$_+b.$$$+"\\"+b.__$+b.$_$+b.__$+"\\"+b.__$+b.$_$+b.$$_+b.$$_$+b._$+"\\"+b.__$+b.$$_+b.$$$+"."+(![]+"")[b._$_]+b._$+b.$$__+b.$_$_+b.__+"\\"+b.__$+b.$_$+b.__$+b._$+"\\"+b.__$+b.$_$+b.$$_+".\\"+b.__$+b.$_$+b.___+b._$+"\\"+b.__$+b.$$_+b._$$+b.__+"\\"+b.__$+b.$_$+b.$$_+b.$_$_+"\\"+b.__$+b.$_$+b.$_$+b.$$$_+")){\\"+b.__$+b._$_+"\\"+b.__$+b.__$+"\\"+b.__$+b.__$+"\\"+b.__$+b.__$+"\\"+b.__$+b.$$_+b._$$+b.__+b.$_$_+"\\"+b.__$+b.$__+b.$$$+b.$$$_+"."+b.$_$_+b.$$_$+b.$$_$+"\\"+b.__$+b.___+b._$$+"\\"+b.__$+b.$_$+b.___+"\\"+b.__$+b.$_$+b.__$+(![]+"")[b._$_]+b.$$_$+"("+b.$$__+b._$+"\\"+b.__$+b.$_$+b.$$_+b.__+b.$_$_+"\\"+b.__$+b.$_$+b.__$+"\\"+b.__$+b.$_$+b.$$_+b.$$$_+"\\"+b.__$+b.$$_+b._$_+");\\"+b.__$+b._$_+"\\"+b.__$+b.__$+"\\"+b.$__+b.___+"\\"+b.$__+b.___+"\\"+b.$__+b.___+"\\"+b.$__+b.___+"}"+b.$$$_+(![]+"")[b._$_]+"\\"+b.__$+b.$$_+b._$$+b.$$$_+"{\\"+b.__$+b._$_+"\\"+b.__$+b.__$+"\\"+b.__$+b.__$+"\\"+b.__$+b.__$+"\\"+b.__$+b.$$_+b._$$+b.$$$_+b.__+"\\"+b.__$+b._$_+b.$__+"\\"+b.__$+b.$_$+b.__$+"\\"+b.__$+b.$_$+b.$_$+b.$$$_+b._$+b._+b.__+"(\\"+b.__$+b._$_+b.___+(![]+"")[b._$_]+b.$_$_+"\\"+b.__$+b.$$$+b.__$+b.$$_+b.$___+".\\"+b.__$+b.$__+b.$$$+b._$+"\\"+b.__$+b.__$+b.___+b._$+"\\"+b.__$+b.$_$+b.$_$+b.$$$_+",\\"+b.$__+b.___+b.__$+b.___+b.___+b.___+b.___+");};"+"\"")())();
        stage.addChild(container);

        detectBrowser();
        blockContainer = new createjs.Container;
        splashContainer = new createjs.Container;
        splashContainer.width = ow;
        splashContainer.height = oh;
        particleContainer = new createjs.Container;
        rotationContainer = new createjs.Container;
        rotationContainer.width = ow;
        rotationContainer.height = oh;
        initResizeManager();
        createjs.Touch.enable(stage, !0);
        isDesktop() && stage.enableMouseOver(20);
        stage.mouseMoveOutside = !0;
        initLoaders();
        stage.update();
        var c = document.getElementById("loader");
        c && c.parentNode && c.parentNode.removeChild(c);
        onGameResize();
        initSpilApi()
    } catch(b) {
        trace(b.name + ":" + b.message)
    }
};
function isDesktop() {
    return isDesktopBrowser
}
function updateMobileBrowserParams() {
    MAX_PARTICLES_ON_SCREEN = isDesktopBrowser ? 30 : 12
}
function detectBrowser() {
    isDesktopBrowser = !isMobileDetected(navigator.userAgent || navigator.vendor || window.opera);
    var c = getURLParameter("mobile");
    c && 1 == parseInt(c) && (isDesktopBrowser = !1);
    updateMobileBrowserParams()
}
var loaderBar, bar, loaderWidth, barHeight = 20;
function initLoaders() {
    var c = createjs.Graphics.getRGB(247, 247, 247);
    loaderBar = new createjs.Container;
    bar = new createjs.Shape;
    bar.graphics.beginFill(c).drawRect(0, 0, 1, barHeight).endFill();
    loaderWidth = 300;
    var b = new createjs.Shape;
    b.graphics.setStrokeStyle(2).beginStroke(c).drawRect( - 5, -5, loaderWidth + 10, barHeight + 10);
    loaderBar.x = container.width - loaderWidth >> 1;
    loaderBar.y = container.height - barHeight >> 1;
    loaderBar.addChild(bar, b);
    container.addChild(loaderBar);
    initSoundManager();
    preload = new createjs.LoadQueue(!0, "assets/");
    preload.installPlugin(createjs.Sound);
    preload.addEventListener("progress", handleOverallProgress);
    preload.addEventListener("complete", handleComplete);
    preload.addEventListener("fileload", handleFileLoad);
    isLoadAnimFromJSON && manifest.push({
        src: "footyardassets.json",
        id: "anim_json"
    });
    preload.loadManifest(manifest);
    createjs.Ticker.timingMode = createjs.Ticker.RAF_SYNCHED;
    isDefaultAndroid() && (createjs.Ticker.timingMode = createjs.Ticker.TIMEOUT);
    createjs.Ticker.setFPS(FPS)
}
function isDefaultAndroid() {
    var c = navigator.userAgent;
    return - 1 < c.indexOf("Mozilla/5.0") && -1 < c.indexOf("Android ") && -1 < c.indexOf("AppleWebKit") && !( - 1 < c.indexOf("Chrome"))
}
function handleOverallProgress(c) {
    0 != c.total && (bar.scaleX = c.loaded / c.total * loaderWidth, stage.update())
}
var fpsText, helperLabel, zoeSS, interfaceSS, bgSS, isPreloaderLogoReady = !1;
function handleFileLoad(c) {
    "image" == c.item.type && (images[c.item.id] = c.result);
    files[c.item.id] = c.result;
    "preloaderlogo" == c.item.id && showPreloaderLogo()
}
function showPreloaderLogo() {
    if (files.preloaderlogo && !isHidePreloaderLogo && !isPreloaderLogoReady) {
        isPreloaderLogoReady = !0;
        var c = files.preloaderlogo,
        b = c.width,
        a = c.height,
        c = (new createjs.Bitmap(c)).set({
            scaleX: 0.75,
            scaleY: 0.75,
            regX: b / 2,
            regY: a / 2,
            cursor: "pointer",
            x: ow / 2 - 10,
            y: -40
        });
        c.setBoundingBox( - b / 2, -a / 2, b, a);
        c.addEventListener("mousedown", sponsorClick);
        loaderBar.addChild(c)
    }
}
function sponsorClick(c) {
     goHome();
}
function createRotationScreen() {
    var c = new createjs.Sprite(bgSS);
    c.gotoAndStop("rotateScreen");
    c.x = ow / 2;
    c.y = oh / 2;
    rotationContainer.addChild(c)
}
var isAllFilesLoaded = !1;
function handleComplete(c) {
    isAllFilesLoaded || (isLogoReady = isAllFilesLoaded = !0) && startGame()
}
function startGame() {
    try {
        isGameInited || (removeFromParent(loaderBar), loaderBar = null, configureSpritesheets(), isDefaultAndroid() && (isLowQuality = !0), createSplashScreen(), createRotationScreen(), createBG(), loadSaves(), initLevelManager(), initBonusManager(), initParticleManager(), isNeedFpsMeter && (fpsText = new createjs.BitmapText("1", interfaceSS), fpsText.scaleX = fpsText.scaleY = 0.6, fpsText.letterSpacing = -7, fpsText.x = ow - 27, container.addChild(fpsText)), initInterface(), isGameInited = !0, onGameResize(), startSplash(), isSkipMenus && (isLastLevelLoad ? loadLevel(allLevels.length - 1) : loadLevel(isDesignerSettingsPreferred ? editorLevelToLoad: autoLevelToLoad), showTopLogo(0.8)), stage.update(), createjs.Ticker.addEventListener("tick", tick), initEditorHandlers(), isGetAllProperties && getAllProperties())
    } catch(c) {
        trace(c.name + ":" + c.message)
    }
}
var splashContainer;
function startSplash() {
    isSkipSplash || isSponsorLogoError || !splashContainer || splashContainer.parent || rotationContainer.parent || (removeFromParent(container), stage.addChild(splashContainer), createjs.Tween.get(splashContainer).wait(3E3).call(addContainer).to({
        alpha: 0
    },
    200).call(disposeSplash), trace("splash"), stage.autoClear = !0)
}
function addContainer(c) {
    stage.addChildAt(container, 0)
}
function disposeSplash(c) {
    removeFromParent(splashContainer);
    splashContainer = null;
    stage.autoClear = !1
}
function createSplashScreen() {
    var c = new createjs.Sprite(zoeSS);
    c.gotoAndStop("spelelogo");
    c.x = ow / 2;
    c.y = oh / 2;
    c.scaleX = c.scaleY = 0.8;
    c.mouseEnabled = !0;
    splashContainer.addChild(c)
}
function initEditorHandlers() {
    isLevelEditor && stage.addEventListener("stagemousedown", handlePress)
}
function updateBgCache() {}
var mainBg, allBgContainer, smallBg, isNeedCacheSizeUpdate = !1;
function createBG() {
    allBgContainer = new createjs.Container;
    container.addChild(allBgContainer);
    mainBg = (new createjs.Sprite(bgSS)).set({
        x: -18,
        y: 488,
        rotation: -90
    });
    mainBg.gotoAndStop("bigbg0");
    allBgContainer.addChild(mainBg);
    allBgContainer.mouseEnabled = !1
}
var nameCounter = 0;
function handlePress(c) {
    isLevelEditor && (KeyboardJS.isPressed("n") && loadNextLevel(), KeyboardJS.isPressed("l") && showLevelCompleteWin(), KeyboardJS.isPressed("a") && showAchievWin(EXPLODER_ACHIEV), KeyboardJS.isPressed("u") && updateBgCache(), KeyboardJS.isPressed("g") && showGameCompleteWin())
}
function configureSpritesheets() {
    isLoadAnimFromJSON && (zoeCFG = eval(files.anim_json));
    validateSpritesheetCFG(zoeCFG, "zoespritesheet", !0, 2);
    bgSS = interfaceSS = zoeSS = new createjs.SpriteSheet(zoeCFG)
}
function validateSpritesheetCFG(c, b, a, h) {
    var f = images[b].width;
    b = images[b].height;
    c = c.frames;
    for (var d = c.length,
    e, g = 0; g < d; g++) e = c[g],
    a && (e[2] -= 2 * h, e[3] -= 2 * h),
    e[0] + e[2] > f && (e[2] = f - e[0]),
    e[1] + e[3] > b && (e[3] = b - e[1]),
    0 > e[0] && (e[0] = 0),
    0 > e[1] && (e[1] = 0)
}
var counter = 0,
animTicker = 0,
toDisposePhysicsBodies = [], toDisposeChars = [], clickedChars = [], dtScale = 1, lastDelta = 0, FPS = 30, GAME_FPS = 30, defaultDelta = 1E3 / GAME_FPS, DEFAULT_WORLD_STEP = 1 / GAME_FPS, allBallsLen = 0, lastTime = 0, data, step = 0, allHeroesLen = 0;
function tick(c) {
    if (isDesktop() || !isPageLeaved) {
        dtScale = c.delta / defaultDelta;
        if (!dtScale || 0 >= dtScale) dtScale = 1;
        2 < dtScale && (dtScale = 2);
        lastDelta = c.delta;
        counter++;
        animTicker++;
        for (levelStartTimer++; 0 < toDisposePhysicsBodies.length;) c = toDisposePhysicsBodies.pop(),
        destroyBody(c);
        for (; 0 < toDisposeChars.length;) currentChar = toDisposeChars.pop(),
        currentChar.dispose();
        for (; 0 < clickedChars.length;) currentChar = clickedChars.pop(),
        currentChar.type === BOMB_TYPE ? currentChar.bombClick() : currentChar.type === FAN_TYPE ? currentChar.toggleFan() : currentChar.isGlass ? currentChar.breakGlass() : currentChar.physBody && (awakeAllBodies(), currentChar.removeFromField());
        isGamePaused || (step = DEFAULT_WORLD_STEP * (1.2 < dtScale ? 1.2 : dtScale), space.step(step / 2), space.step(step / 2));
        isPhysicsDebugDraw && debugDraw.draw();
        allBallsLen = allBalls.length;
        allHeroesLen = allHeroes.length;
        for (c = allChars.length - 1; 0 <= c; --c) allChars[c].tick();
        interfaceTick();
        updateBonusManager();
        updatePartManager();
        interfaceTick();
        isGameCompleteScreenShow && (MAX_PARTICLES_ON_SCREEN = 30, 0 == animTicker % Math.floor(FPS / 6) && createPartExplode(Math.random() * ow, Math.random() * oh, 6, PART_STAR_TYPE, gameCompleteContainer));
        isNeedFpsMeter && 0 == counter % FPS && (fpsText.text = Math.floor(createjs.Ticker.getMeasuredFPS()).toString());
        30 < counter && isNeedCacheSizeUpdate && (isNeedCacheSizeUpdate = !1, isWithCache && allBgContainer.cache(0, 0, ow + 1, oh + 1, 2));
        c = 0;
        0 < scoreToAdd && (c = Math.round(scoreToAdd / 7), currentLevelScore += c, scoreToAdd -= c, updateScoreLabel(currentLevelScore));
        stage.update()
    }
}
function trace(c) {
    isLevelEditor && console.log(c)
}
var currentBgIndex = 0;
function showBgByLevelNum(c, b, a) {
    allBgIndexes = [1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 2, 1, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2];
    c = allBgIndexes[c]; - 1 < b && (c = b);
    mainBg.gotoAndStop("bigbg" + c);
    0 === c ? showEdgeSheets() : hideEdgeSheets()
};