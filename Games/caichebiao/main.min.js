var DataCollecter = function() {
    function e() {}
    var t = e;
    return p = t.prototype, e.stageW = 0, e.stageH = 0, e.easyAnswer = [], e.easyOption = [], e.hardAnswer = [], e.hardOption = [], e.currentNum = 0, e.chouquArray = [], e.correctNum = 0, e.playing = !1, e.countdownNum = 30, e
}();
egret.registerClass(DataCollecter, "DataCollecter");
var LoadingUI = function(e) {
    function t() {
        e.call(this), this.addEventListener(egret.Event.ADDED_TO_STAGE, this.onAddToStage, this), this.addEventListener(egret.Event.REMOVED_FROM_STAGE, this.onRemoveToStage, this)
    }
    __extends(t, e);
    var i = t;
    return p = i.prototype, p.onAddToStage = function() {
        this.removeEventListener(egret.Event.ADDED_TO_STAGE, this.onAddToStage, this), this.stage.stageHeight <= 832 && (this.stage.scaleMode = "showAll");
        var e = Tools.createSwfByName(["loading"]);
        this.spr_loading = e.createSprite("spr_loading"), this.spr_loading.getTextField("txt").text = "0%", this.addChild(this.spr_loading), this.spr_loading.y = (this.stage.stageHeight - 1039) / 2, DataCollecter.stageW = this.stage.stageWidth, DataCollecter.stageH = this.stage.stageHeight;
        for (var t = egret.XML.parse(RES.getRes("question_xml")), i = 0; i < t.children.length; i++)
            for (var n = t.children[i], a = 0; a < n.children.length; a++) {
                var s = n.children[a];
                if (0 == i) {
                    DataCollecter.easyAnswer[a] = [s.attributes.pic, s.attributes.answer];
                    for (var r = [], o = 0; o < s.children.length; o++) {
                        var h = s.children[o];
                        r[o] = h.children[0].text
                    }
                    DataCollecter.easyOption[a] = r
                } else {
                    DataCollecter.hardAnswer[a] = [s.attributes.pic, s.attributes.answer];
                    for (var r = [], o = 0; o < s.children.length; o++) {
                        var h = s.children[o];
                        r[o] = h.children[0].text
                    }
                    DataCollecter.hardOption[a] = r
                }
            }
    }, p.setProgress = function(e, t) {
        this.spr_loading.getTextField("txt").text = Math.ceil(e / t * 100).toString() + "%", this.spr_loading.getMovie("car").x = 509 * e / t
    }, p.onRemoveToStage = function() {
        this.removeEventListener(egret.Event.REMOVED_FROM_STAGE, this.onRemoveToStage, this), this.removeChildAt(0), this.spr_loading = null
    }, t
}(egret.Sprite);
egret.registerClass(LoadingUI, "LoadingUI");
var Main = function(e) {
    function t() {
        e.call(this), this.addEventListener(egret.Event.ADDED_TO_STAGE, this.onAddToStage, this)
    }
    __extends(t, e);
    var i = t;
    return p = i.prototype, p.onAddToStage = function() {
        RES.addEventListener(RES.ResourceEvent.CONFIG_COMPLETE, this.onConfigComplete, this), RES.loadConfig("resource/default.res.json", "resource/")
    }, p.onConfigComplete = function() {
        RES.removeEventListener(RES.ResourceEvent.CONFIG_COMPLETE, this.onConfigComplete, this), RES.addEventListener(RES.ResourceEvent.GROUP_COMPLETE, this.onResourceLoadComplete, this), RES.addEventListener(RES.ResourceEvent.GROUP_PROGRESS, this.onResourceProgress, this);
        for (var e = Tools.randomArray(26), t = Tools.randomArray(20), i = [], n = 0; 10 > n; n++) 5 > n ? (DataCollecter.chouquArray[n] = e[n], i.push("e" + (DataCollecter.chouquArray[n] + 1) + "_jpg")) : (DataCollecter.chouquArray[n] = t[n - 5], i.push("h" + (DataCollecter.chouquArray[n] + 1) + "_jpg"));
        i.push("bg"), i.push("ring"), i.push("page1_swf_json"), i.push("page1_json"), i.push("page1_1_json"), i.push("page2_swf_json"), i.push("page2_json"), i.push("page3_swf_json"), i.push("page3_json"), i.push("page3_1_json"), i.push("music_swf_json"), i.push("music_json"), RES.createGroup("preload", i), RES.loadGroup("loading", 1), RES.loadGroup("preload")
    }, p.onResourceLoadComplete = function(e) {
        "loading" == e.groupName ? (this.loadingView = new LoadingUI, this.stage.addChild(this.loadingView)) : "preload" == e.groupName && (this.stage.removeChild(this.loadingView), this.loadingView = null, RES.removeEventListener(RES.ResourceEvent.GROUP_COMPLETE, this.onResourceLoadComplete, this), RES.removeEventListener(RES.ResourceEvent.GROUP_PROGRESS, this.onResourceProgress, this), this.initScene())
    }, p.onResourceProgress = function(e) {
        "preload" == e.groupName && this.loadingView.setProgress(e.itemsLoaded, e.itemsTotal)
    }, p.initScene = function() {
        var e = /MicroMessenger/i.test(navigator.userAgent);
        Subject.getInstance().addEventListener(AllEvent.PAGE2INTO_EVENT, this.page2into, this), Subject.getInstance().addEventListener(AllEvent.PAGE3INTO_EVENT, this.page3into, this);
        var t = new Page1UI;
        t.y = (DataCollecter.stageH - 1039) / 2, this.addChild(t);
        var i = new MusicUI;
        this.addChild(i), e && Subject.getInstance().dispatchEvent(new AllEvent(AllEvent.MUSIC_EVENT))
    }, p.page2into = function() {
        Subject.getInstance().removeEventListener(AllEvent.PAGE2INTO_EVENT, this.page2into, this), this.removeChildAt(0);
        var e = new Page2UI;
        e.y = (DataCollecter.stageH - 1039) / 2, this.addChildAt(e, 0)
    }, p.page3into = function() {
        Subject.getInstance().dispatchEvent(new AllEvent(AllEvent.CHANGEMUSIC_EVENT)), Subject.getInstance().removeEventListener(AllEvent.PAGE3INTO_EVENT, this.page3into, this), this.removeChildAt(0);
        var e = new Page3UI;
        e.y = (DataCollecter.stageH - 1039) / 2, this.addChildAt(e, 0)
    }, t
}(egret.DisplayObjectContainer);
egret.registerClass(Main, "Main");
var MusicUI = function(e) {
    function t() {
        e.call(this), this.isPlaying = !1, this.addEventListener(egret.Event.ADDED_TO_STAGE, this.onAddToStage, this), this.addEventListener(egret.Event.REMOVED_FROM_STAGE, this.onRemoveToStage, this)
    }
    __extends(t, e);
    var i = t;
    return p = i.prototype, p.onAddToStage = function() {
        this.removeEventListener(egret.Event.ADDED_TO_STAGE, this.onAddToStage, this), Subject.getInstance().addEventListener(AllEvent.MUSIC_EVENT, this.musicopen, this), Subject.getInstance().addEventListener(AllEvent.HIDEMUSIC_EVENT, this.hide_music, this), Subject.getInstance().addEventListener(AllEvent.CHANGEMUSIC_EVENT, this.change_music, this);
        var e = Tools.createSwfByName(["music"]);
        this.mc_music = e.createMovie("mc_musicicon"), this.mc_music.x = 20, this.mc_music.y = 30, this.addChild(this.mc_music), this.mc_music.gotoAndStop(1), this.mc_music.touchEnabled = !0, this.mc_music.addEventListener(egret.TouchEvent.TOUCH_TAP, this.music_Tap, this), this.sound = new SoundManager
    }, p.music_Tap = function() {
        DataCollecter.playing = !0, this.isPlaying ? (this.mc_music.gotoAndStop(1), this.sound.stopSound()) : (this.sound.playSound("bg", -1), this.mc_music.gotoAndStop(0), this.mc_music.getMovie("open").gotoAndPlay(0)), this.isPlaying = !this.isPlaying, window.jiance("f")
    }, p.musicopen = function() {
        DataCollecter.playing = !0, this.isPlaying ? (this.sound.stopSound(), this.mc_music.gotoAndStop(1)) : (this.sound.playSound("bg", -1), this.mc_music.gotoAndStop(0), this.mc_music.getMovie("open").gotoAndPlay(0)), this.isPlaying = !this.isPlaying, window.jiance("f")
    }, p.hide_music = function() {
        this.visible = this.visible ? !1 : !0
    }, p.change_music = function() {
        this.mc_music.x = DataCollecter.stageW - this.mc_music.width - 20, this.mc_music.y = 30
    }, p.onRemoveToStage = function() {
        this.removeChildAt(0), this.removeEventListener(egret.Event.REMOVED_FROM_STAGE, this.onRemoveToStage, this)
    }, t
}(egret.Sprite);
egret.registerClass(MusicUI, "MusicUI");
var Page1UI = function(e) {
    function t() {
        e.call(this), this.addEventListener(egret.Event.ADDED_TO_STAGE, this.onAddToStage, this), this.addEventListener(egret.Event.REMOVED_FROM_STAGE, this.onRemoveToStage, this)
    }
    __extends(t, e);
    var i = t;
    return p = i.prototype, p.onAddToStage = function() {
        this.removeEventListener(egret.Event.ADDED_TO_STAGE, this.onAddToStage, this);
        var e = Tools.createSwfByName(["page1", "page1_1"]);
        this.mc_page1 = e.createMovie("mc_page1"), this.addChild(this.mc_page1), this.mc_page1.getMovie("btnMc").touchEnabled = !0, this.mc_page1.getMovie("btnMc").addEventListener(egret.TouchEvent.TOUCH_TAP, this.gamestartTap, this)
    }, p.gamestartTap = function() {
        this.mc_page1.getMovie("btnMc").removeEventListener(egret.TouchEvent.TOUCH_TAP, this.gamestartTap, this), Subject.getInstance().dispatchEvent(new AllEvent(AllEvent.PAGE2INTO_EVENT)), 0 == DataCollecter.playing && Subject.getInstance().dispatchEvent(new AllEvent(AllEvent.MUSIC_EVENT)), window.jiance("a")
    }, p.onRemoveToStage = function() {
        this.removeChildAt(0), this.mc_page1 = null, this.removeEventListener(egret.Event.REMOVED_FROM_STAGE, this.onRemoveToStage, this)
    }, t
}(egret.Sprite);
egret.registerClass(Page1UI, "Page1UI");
var Page2UI = function(e) {
    function t() {
        e.call(this), this.addEventListener(egret.Event.ADDED_TO_STAGE, this.onAddToStage, this), this.addEventListener(egret.Event.REMOVED_FROM_STAGE, this.onRemoveToStage, this)
    }
    __extends(t, e);
    var i = t;
    return p = i.prototype, p.onAddToStage = function() {
        this.removeEventListener(egret.Event.ADDED_TO_STAGE, this.onAddToStage, this), DataCollecter.page2Swf = Tools.createSwfByName(["page2"]), DataCollecter.spr_page2 = DataCollecter.page2Swf.createSprite("spr_page2"), DataCollecter.spr_page2.getTextField("timeTxt").text = DataCollecter.countdownNum.toString() + "s", DataCollecter.spr_page2.getMovie("timeMc").gotoAndStop(0), DataCollecter.spr_page2.getMovie("numMc").gotoAndStop(0), this.addChild(DataCollecter.spr_page2), this.timer = new egret.Timer(1e3, DataCollecter.countdownNum), this.timer.addEventListener(egret.TimerEvent.TIMER, this.timerRepeat, this), this.timer.addEventListener(egret.TimerEvent.TIMER_COMPLETE, this.timerComplete, this), this.timer.start();
        var e = new QuestionUI;
        this.addChild(e);
        var t = new PicUI;
        this.addChildAt(t, 0), Subject.getInstance().addEventListener(AllEvent.PICLEAVE_EVENT, this.picleave, this)
    }, p.picleave = function() {
        var e = new QuestionUI;
        this.addChild(e);
        var t = new PicUI;
        this.addChildAt(t, 0)
    }, p.timerRepeat = function() {
        if (10 == DataCollecter.countdownNum && (DataCollecter.spr_page2.getMovie("timeMc").play(), DataCollecter.spr_page2.getTextField("timeTxt").textColor = 16711680), 6 == DataCollecter.countdownNum) {
            var e = /Android/i.test(navigator.userAgent);
            if (0 == e) {
                var t = new SoundManager;
                t.playSound("ring", 1)
            }
        }
        DataCollecter.spr_page2.getTextField("timeTxt").text = (--DataCollecter.countdownNum).toString() + "s"
    }, p.timerComplete = function(e) {
        e.target.removeEventListener(egret.TimerEvent.TIMER, this.timerRepeat, this), e.target.removeEventListener(egret.TimerEvent.TIMER_COMPLETE, this.timerComplete, this), this.timer = null, DataCollecter.spr_page2.getMovie("timeMc").gotoAndStop(0), Subject.getInstance().dispatchEvent(new AllEvent(AllEvent.PAGE3INTO_EVENT))
    }, p.onRemoveToStage = function() {
        this.timer && (this.timer.stop(), this.timer.removeEventListener(egret.TimerEvent.TIMER, this.timerRepeat, this), this.timer.removeEventListener(egret.TimerEvent.TIMER_COMPLETE, this.timerComplete, this), this.timer = null), this.removeChildAt(0), DataCollecter.spr_page2 = null, DataCollecter.page2Swf = null, this.removeEventListener(egret.Event.REMOVED_FROM_STAGE, this.onRemoveToStage, this)
    }, t
}(egret.Sprite);
egret.registerClass(Page2UI, "Page2UI");
var Page3UI = function(e) {
    function t() {
        e.call(this), this.addEventListener(egret.Event.ADDED_TO_STAGE, this.onAddToStage, this), this.addEventListener(egret.Event.REMOVED_FROM_STAGE, this.onRemoveToStage, this), window.submit = this
    }
    __extends(t, e);
    var i = t;
    return p = i.prototype, p.onAddToStage = function() {
        this.removeEventListener(egret.Event.ADDED_TO_STAGE, this.onAddToStage, this);
        var e = Tools.createSwfByName(["page3", "page3_1"]);
        this.mc_page3 = e.createMovie("mc_page3"), this.addChild(this.mc_page3), this.tel_txt = new egret.TextField, this.tel_txt.width = 475, this.tel_txt.height = 40, this.tel_txt.type = "input", this.tel_txt.size = 26, this.tel_txt.textColor = 6710886, this.tel_txt.text = "请输入手机号，领取试驾红包", this.tel_txt.maxChars = 11, this.tel_txt.addEventListener(egret.FocusEvent.FOCUS_IN, this.onFocusIn, this), this.tel_txt.addEventListener(egret.FocusEvent.FOCUS_OUT, this.onFocusOut, this), document.getElementById("egretInput").setAttribute("type", "tel"), this.tel_txt.x = 90, this.tel_txt.y = 460, this.addChild(this.tel_txt), this.tel_txt.visible = !1, this.mc_page3.getMovie("p3pop").gotoAndStop(0), this.mc_page3.getMovie("p3pop").visible = !1, this.mc_page3.getMovie("p3pop").touchEnabled = !0, this.mc_page3.getMovie("popsubmit").visible = !1, this.mc_page3.getMovie("popsubmit").touchEnabled = !0, this.cancelBtn = this.mc_page3.getMovie("popsubmit").getImage("cancelBtn"), this.submitBtn = this.mc_page3.getMovie("popsubmit").getImage("subBtn"), this.cancelBtn.touchEnabled = !0, this.submitBtn.touchEnabled = !0, this.cancelBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.cancle_tap, this), this.submitBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.submit_tap, this), this.mc_page3.getSprite("numMc").getTextField("numTxt").text = DataCollecter.correctNum.toString(), this.mc_page3.getSprite("perMc").getTextField("perTxt").text = window.getData(DataCollecter.correctNum, 30 - DataCollecter.countdownNum), this.mc_page3.getImage("againBtn").addEventListener(egret.TouchEvent.TOUCH_TAP, this.again_tap, this), this.mc_page3.getImage("shareBtn").addEventListener(egret.TouchEvent.TOUCH_TAP, this.share_tap, this), this.mc_page3.getImage("getBtn").addEventListener(egret.TouchEvent.TOUCH_TAP, this.gethb_tap, this), this.mc_page3.getMovie("moreBtn").addEventListener(egret.TouchEvent.TOUCH_TAP, this.more_tap, this), this.mc_page3.getMovie("moreMc").getImage("backBtn").addEventListener(egret.TouchEvent.TOUCH_TAP, this.back_tap, this), this.mc_page3.getImage("againBtn").touchEnabled = !0, this.mc_page3.getImage("shareBtn").touchEnabled = !0, this.mc_page3.getImage("getBtn").touchEnabled = !0, this.mc_page3.getMovie("moreBtn").touchEnabled = !0, this.mc_page3.getMovie("moreMc").getImage("backBtn").touchEnabled = !0, this.mc_page3.getMovie("p3pop").touchEnabled = !0, this.mc_page3.getMovie("p3pop").addEventListener(egret.TouchEvent.TOUCH_TAP, this.p3pop_tap, this), this.mc_page3.getMovie("popsubmit").getChildAt(0).alpha = .7
    }, p.onFocusIn = function(e) {
        "请输入手机号，领取试驾红包" == e.target.text && (e.target.text = "")
    }, p.onFocusOut = function(e) {
        "" == e.target.text && (e.target.text = "请输入手机号，领取试驾红包")
    }, p.cancle_tap = function() {
        this.mc_page3.getMovie("popsubmit").visible = !1, this.tel_txt.visible = !1
    }, p.submit_tap = function() {
        window.saveuser(this.tel_txt.text)
    }, p.again_tap = function() {
        window.jiance("b"), location.reload()
    }, p.share_tap = function() {
        window.isInDidi() ? window.linkShare() : (this.mc_page3.getMovie("p3pop").gotoAndPlay(0), this.mc_page3.getMovie("p3pop").visible = !0, Subject.getInstance().dispatchEvent(new AllEvent(AllEvent.HIDEMUSIC_EVENT))), window.jiance("c")
    }, p.gethb_tap = function() {
        window.jiance("d"), window.getPick()
    }, p.more_tap = function() {
        TweenMax.to(this, .5, {
            x: -DataCollecter.stageW,
            ease: Expo.easeOut
        }), window.jiance("e")
    }, p.back_tap = function() {
        TweenMax.to(this, .5, {
            x: 0,
            ease: Expo.easeOut
        })
    }, p.p3pop_tap = function() {
        this.mc_page3.getMovie("p3pop").visible = !1, this.mc_page3.getMovie("p3pop").gotoAndStop(0), Subject.getInstance().dispatchEvent(new AllEvent(AllEvent.HIDEMUSIC_EVENT))
    }, p.result = function() {
        this.mc_page3.getMovie("popsubmit").visible = !1, this.tel_txt.visible = !1
    }, p.onRemoveToStage = function() {
        this.removeChildAt(0), this.removeEventListener(egret.Event.REMOVED_FROM_STAGE, this.onRemoveToStage, this)
    }, t
}(egret.Sprite);
egret.registerClass(Page3UI, "Page3UI");
var PicUI = function(e) {
    function t() {
        e.call(this), this.addEventListener(egret.Event.ADDED_TO_STAGE, this.onAddToStage, this), this.addEventListener(egret.Event.REMOVED_FROM_STAGE, this.onRemoveToStage, this)
    }
    __extends(t, e);
    var i = t;
    return p = i.prototype, p.onAddToStage = function() {
        this.removeEventListener(egret.Event.ADDED_TO_STAGE, this.onAddToStage, this), Subject.getInstance().addEventListener(AllEvent.PICLEAVE_EVENT, this.picleave, this), this.pic = Tools.createBitmapByName(DataCollecter.currentNum < 5 ? DataCollecter.easyAnswer[DataCollecter.chouquArray[DataCollecter.currentNum]][0] + "_jpg" : DataCollecter.hardAnswer[DataCollecter.chouquArray[DataCollecter.currentNum]][0] + "_jpg"), this.pic.alpha = 0, this.pic.x = this.pic.anchorOffsetX = this.pic.width / 2, this.pic.y = this.pic.anchorOffsetY = this.pic.height / 2, this.pic.scaleX = this.pic.scaleY = 1.2, TweenMax.to(this.pic, .5, {
            alpha: 1,
            scaleX: 1,
            scaleY: 1,
            ease: Linear.easeNone
        }), this.addChild(this.pic)
    }, p.picleave = function() {
        Subject.getInstance().removeEventListener(AllEvent.PICLEAVE_EVENT, this.picleave, this);
        var e = this;
        TweenMax.to(this.pic, .5, {
            alpha: 0,
            scaleX: 1.2,
            scaleY: 1.2,
            ease: Linear.easeNone,
            onComplete: function() {
                e.parent.removeChild(e)
            }
        })
    }, p.onRemoveToStage = function() {
        this.removeChildAt(0), this.pic = null, this.removeEventListener(egret.Event.REMOVED_FROM_STAGE, this.onRemoveToStage, this)
    }, t
}(egret.Sprite);
egret.registerClass(PicUI, "PicUI");
var QuestionUI = function(e) {
    function t() {
        e.call(this), this.contentArray = [], this.addEventListener(egret.Event.ADDED_TO_STAGE, this.onAddToStage, this), this.addEventListener(egret.Event.REMOVED_FROM_STAGE, this.onRemoveToStage, this)
    }
    __extends(t, e);
    var i = t;
    return p = i.prototype, p.onAddToStage = function() {
        this.removeEventListener(egret.Event.ADDED_TO_STAGE, this.onAddToStage, this), this.visible = !1;
        var e = DataCollecter.page2Swf.createMovie("mc_title");
        e.x = 267, e.y = 440, this.addChild(e), e.gotoAndStop(DataCollecter.currentNum), this.contentArray.push(e);
        var t = DataCollecter.page2Swf.createImage("img_question");
        t.x = 50, t.y = 520, this.addChild(t), this.contentArray.push(t);
        for (var i = ["A. ", "B. ", "C. "], n = 0; 3 > n; n++) {
            var a = DataCollecter.page2Swf.createSprite("spr_answerbox");
            a.getImage("box").visible = !1, a.x = 46, a.y = 580 + 90 * n, this.addChild(a), a.getTextField("answer").text = DataCollecter.currentNum < 5 ? i[n] + DataCollecter.easyOption[DataCollecter.chouquArray[DataCollecter.currentNum]][n] : i[n] + DataCollecter.hardOption[DataCollecter.chouquArray[DataCollecter.currentNum]][n], a.touchEnabled = !0, a.touchChildren = !1, a.name = (n + 1).toString(), a.addEventListener(egret.TouchEvent.TOUCH_TAP, this.answer_tap, this), this.contentArray.push(a)
        }
        var s = this;
        TweenMax.staggerFrom(this.contentArray, .5, {
            alpha: 0,
            x: DataCollecter.stageW,
            ease: Expo.easeOut,
            onStart: function() {
                s.visible = !0
            }
        }, .1)
    }, p.answer_tap = function(e) {
        if (DataCollecter.currentNum < 5) var t = DataCollecter.easyAnswer[DataCollecter.chouquArray[DataCollecter.currentNum]][1];
        else var t = DataCollecter.hardAnswer[DataCollecter.chouquArray[DataCollecter.currentNum]][1];
        e.target.getImage("box").visible = !0, e.target.name == t.toString() && DataCollecter.correctNum++;
        for (var i = 2; 5 > i; i++) this.contentArray[i].removeEventListener(egret.TouchEvent.TOUCH_TAP, this.answer_tap, this), this.contentArray[i].touchEnabled = !1;
        if (DataCollecter.currentNum < 9) {
            DataCollecter.currentNum++, DataCollecter.spr_page2.getMovie("numMc").gotoAndStop(DataCollecter.currentNum);
            var n = this;
            TweenMax.staggerTo(this.contentArray, .5, {
                x: -548,
                ease: Expo.easeOut
            }, .1, function() {
                n.parent.removeChild(n)
            }), Subject.getInstance().dispatchEvent(new AllEvent(AllEvent.PICLEAVE_EVENT))
        } else Subject.getInstance().dispatchEvent(new AllEvent(AllEvent.PAGE3INTO_EVENT))
    }, p.onRemoveToStage = function() {
        for (var e = 0; 5 > e; e++) this.removeChildAt(0);
        this.contentArray = null, this.removeEventListener(egret.Event.REMOVED_FROM_STAGE, this.onRemoveToStage, this)
    }, t
}(egret.Sprite);
egret.registerClass(QuestionUI, "QuestionUI");
var SoundManager = function() {
    function e() {
        this.channelList = []
    }
    var t = e;
    return p = t.prototype, p.playSound = function(e, t) {
        this.sound = Tools.getSound(e), this.channel = this.sound.play(0, t), console.log(this.channel.hashCode)
    }, p.stopSound = function() {
        this.channel && (this.channel.stop(), this.channel = null, this.sound = null)
    }, e
}();
egret.registerClass(SoundManager, "SoundManager");
var Tools = function() {
    function e() {}
    var t = e;
    return p = t.prototype, e.createSwfByName = function(e) {
        for (var t = RES.getRes(e[0] + "_swf_json"), i = new starlingswf.SwfAssetManager, n = 0; n < e.length; n++) {
            var a = RES.getRes(e[n] + "_json");
            i.addSpriteSheet(e[n], a)
        }
        var s;
        return s = new starlingswf.Swf(t, i, 30)
    }, e.createBitmapByName = function(e) {
        var t = new egret.Bitmap,
            i = RES.getRes(e);
        return t.texture = i, t
    }, e.getSound = function(e) {
        var t = new egret.Sound;
        return t = RES.getRes(e)
    }, e.randomArray = function(e) {
        for (var t = [], i = 0; e > i; i++) t.push(i);
        for (i = 0; e > i; i++) {
            var n = Math.floor(Math.random() * e),
                a = t[i];
            t[i] = t[n], t[n] = a
        }
        return t
    }, e
}();
egret.registerClass(Tools, "Tools");
var AllEvent = function(e) {
    function t(t, i, n, a) {
        void 0 === i && (i = !1), void 0 === n && (n = !1), void 0 === a && (a = null), e.call(this, t, i, n), this.data = a
    }
    __extends(t, e);
    var i = t;
    return p = i.prototype, t.PAGE1INTO_EVENT = "page1into", t.PAGE2INTO_EVENT = "page2into", t.PAGE3INTO_EVENT = "page3into", t.MUSIC_EVENT = "musicopen", t.HIDEMUSIC_EVENT = "hidemusic", t.CHANGEMUSIC_EVENT = "changemusic", t.PICLEAVE_EVENT = "picleave", t
}(egret.Event);
egret.registerClass(AllEvent, "AllEvent");
var Subject = function(e) {
    function t() {
        e.call(this)
    }
    __extends(t, e);
    var i = t;
    return p = i.prototype, t.getInstance = function() {
        return this._instance || (this._instance = new t), this._instance
    }, t
}(egret.EventDispatcher);
egret.registerClass(Subject, "Subject");
var starlingswf;
! function(e) {
    var t = function() {
        function t(i, n, a) {
            void 0 === a && (a = 24), this._swfData = i, this._assetManager = n, this._createDisplayFuns = new Object, this._createDisplayFuns[t.dataKey_Sprite] = this.createSprite, this._createDisplayFuns[t.dataKey_MovieClip] = this.createMovie, this._createDisplayFuns[t.dataKey_Image] = this.createImage, this._createDisplayFuns[t.dataKey_Scale9] = this.createS9Image, this._createDisplayFuns[t.dataKey_ShapeImg] = this.createShapeImage, this._createDisplayFuns[t.dataKey_TextField] = this.createTextField, this.swfUpdateManager = e.SwfUpdateManager.createSwfUpdateManager(a)
        }
        var i = t;
        return p = i.prototype, p.createSprite = function(i, n, a) {
            void 0 === n && (n = null), void 0 === a && (a = null), null == a && (a = this._swfData[t.dataKey_Sprite][i]);
            for (var s, r, o, h = new e.SwfSprite, l = a.length, c = 0; l > c; c++) s = a[c], o = this._createDisplayFuns[s[1]], null != o && (r = o.apply(this, [s[0], s]), r.name = s[9], r.x = s[2], r.y = s[3], s[1] != t.dataKey_Scale9 && s[1] != t.dataKey_ShapeImg && (r.scaleX = s[4], r.scaleY = s[5]), r.skewX = s[6], r.skewY = s[7], r.alpha = s[8], h.addChild(r));
            return null != n && e.SwfBlendMode.setBlendMode(h, n[11]), h
        }, p.createMovie = function(i, n) {
            void 0 === n && (n = null);
            var a, s, r, o, h, l = this._swfData[t.dataKey_MovieClip][i],
                c = l.objCount,
                g = {};
            for (h in c) {
                s = c[h][0], r = c[h][1], a = null == g[h] ? [] : g[h];
                for (var p = 0; r > p; p++) o = this._createDisplayFuns[s], null != o && a.push(o.apply(this, [h, null]));
                g[h] = a
            }
            var u = new e.SwfMovieClip(l.frames, l.labels, g, this, l.frameEvents);
            return u.loop = l.loop, null != n && e.SwfBlendMode.setBlendMode(u, n[11]), u
        }, p.createImage = function(i, n) {
            void 0 === n && (n = null);
            var a = this._swfData[t.dataKey_Image][i],
                s = this._assetManager.createBitmap(i);
            return s.anchorOffsetX = a[0], s.anchorOffsetY = a[1], null != n && e.SwfBlendMode.setBlendMode(s, n[11]), s
        }, p.createS9Image = function(i, n) {
            void 0 === n && (n = null);
            var a = this._swfData[t.dataKey_Scale9][i],
                s = this._assetManager.createBitmap(i);
            return s.scale9Grid = new egret.Rectangle(a[0], a[1], a[2], a[3]), null != n && (s.width = n[10], s.height = n[11], e.SwfBlendMode.setBlendMode(s, n[13])), s
        }, p.createShapeImage = function(t, i) {
            void 0 === i && (i = null);
            var n = this._assetManager.createBitmap(t);
            return n.fillMode = egret.BitmapFillMode.REPEAT, null != i && (n.width = i[10], n.height = i[11], e.SwfBlendMode.setBlendMode(n, i[13])), n
        }, p.createTextField = function(t, i) {
            void 0 === i && (i = null);
            var n = new egret.TextField;
            return null != i && (n.width = i[10], n.height = i[11], n.fontFamily = i[12], n.textColor = i[13], n.size = i[14], n.textAlign = i[15], n.text = i[18], e.SwfBlendMode.setBlendMode(n, i[20])), n
        }, t.dataKey_Sprite = "spr", t.dataKey_Image = "img", t.dataKey_MovieClip = "mc", t.dataKey_TextField = "text", t.dataKey_Button = "btn", t.dataKey_Scale9 = "s9", t.dataKey_ShapeImg = "shapeImg", t.dataKey_Component = "comp", t.dataKey_Particle = "particle", t
    }();
    e.Swf = t, egret.registerClass(t, "starlingswf.Swf")
}(starlingswf || (starlingswf = {}));
var starlingswf;
! function(e) {
    var t = function() {
        function e() {
            this._sheets = {}, this._textures = {}
        }
        var t = e;
        return p = t.prototype, p.addSpriteSheet = function(e, t) {
            this._sheets[e] = t
        }, p.addTexture = function(e, t) {
            this._textures[e] = t
        }, p.createBitmap = function(e) {
            var t, i, n, a;
            for (a in this._sheets)
                if (t = this._sheets[a], n = t.getTexture(e), null != n) break;
            return null == n && (n = this._textures[e]), null == n ? null : (i = new egret.Bitmap, i.texture = n, i)
        }, e
    }();
    e.SwfAssetManager = t, egret.registerClass(t, "starlingswf.SwfAssetManager")
}(starlingswf || (starlingswf = {}));
var starlingswf;
! function(e) {
    var t = function() {
        function e() {}
        var t = e;
        return p = t.prototype, e.createSwfUpdateManager = function(t) {
            var i = new e;
            return i._animations = [], i._addQueue = [], i._removeQueue = [], i._currentTime = 0, i.setFps(t), egret.Ticker.getInstance().register(i.update, i), i
        }, p.setFps = function(e) {
            this._fps = e, this._fpsTime = 1e3 / e
        }, p.addSwfAnimation = function(e) {
            this._addQueue.push(e)
        }, p.removeSwfAnimation = function(e) {
            this._removeQueue.push(e)
        }, p.updateAdd = function() {
            for (var e, t, i = this._addQueue.length, n = 0; i > n; n++) t = this._addQueue.pop(), e = this._animations.indexOf(t), -1 == e && this._animations.push(t)
        }, p.updateRemove = function() {
            for (var e, t, i = this._removeQueue.length, n = 0; i > n; n++) t = this._removeQueue.pop(), e = this._animations.indexOf(t), -1 != e && this._animations.splice(e, 1)
        }, p.update = function(e) {
            if (this._currentTime += e, !(this._currentTime < this._fpsTime)) {
                this._currentTime -= this._fpsTime, this._currentTime > this._fpsTime && (this._currentTime = 0), this.updateRemove(), this.updateAdd();
                for (var t = this._animations.length, i = 0; t > i; i++) this._animations[i].update()
            }
        }, e
    }();
    e.SwfUpdateManager = t, egret.registerClass(t, "starlingswf.SwfUpdateManager")
}(starlingswf || (starlingswf = {}));
var starlingswf;
! function(e) {
    var t = function() {
        function e() {}
        var t = e;
        return p = t.prototype, e.setBlendMode = function(t, i) {
            e.modes[i] && (t.blendMode = i)
        }, e.modes = {
            normal: !0,
            add: !0
        }, e
    }();
    e.SwfBlendMode = t, egret.registerClass(t, "starlingswf.SwfBlendMode")
}(starlingswf || (starlingswf = {}));
var starlingswf;
! function(e) {
    var t = function(e) {
        function t() {
            e.apply(this, arguments)
        }
        __extends(t, e);
        var i = t;
        return p = i.prototype, p.getTextField = function(e) {
            return this.getChildByName(e)
        }, p.getMovie = function(e) {
            return this.getChildByName(e)
        }, p.getSprite = function(e) {
            return this.getChildByName(e)
        }, p.getImage = function(e) {
            return this.getChildByName(e)
        }, t
    }(egret.DisplayObjectContainer);
    e.SwfSprite = t, egret.registerClass(t, "starlingswf.SwfSprite")
}(starlingswf || (starlingswf = {}));
var starlingswf;
! function(e) {
    var t = function(t) {
        function i(e, i, n, a, s) {
            void 0 === s && (s = null), t.call(this), this._isPlay = !1, this.loop = !0, this._completeFunction = null, this._hasCompleteListener = !1, this._frames = e, this._labels = i, this._displayObjects = n, this._frameEvents = s, this._startFrame = 0, this._endFrame = this._frames.length - 1, this._ownerSwf = a, this.setCurrentFrame(0), this.play()
        }
        __extends(i, t);
        var n = i;
        return p = n.prototype, p.update = function() {
            if (this._isPlay)
                if (this._currentFrame > this._endFrame) {
                    var e = !1;
                    if (this.loop && this._startFrame != this._endFrame || (this._ownerSwf && this.stop(!1), e = !0), this._hasCompleteListener && this.dispatchEventWith(egret.Event.COMPLETE), e) return;
                    this.setCurrentFrame(this._startFrame)
                } else this.setCurrentFrame(this._currentFrame), this._currentFrame += 1
        }, p.setCurrentFrame = function(t) {
            this.removeChildren(), this._currentFrame = t, this.__frameInfos = this._frames[this._currentFrame];
            for (var i, n, a, s, r = this.__frameInfos.length, o = 0; r > o; o++) {
                switch (i = this.__frameInfos[o], s = i[10], n = this._displayObjects[i[0]][s], n.skewX = i[6], n.skewY = i[7], n.alpha = i[8], n.name = i[9], n.x = i[2], n.y = i[3], i[1]) {
                    case e.Swf.dataKey_Scale9:
                        n.width = i[11], n.height = i[12], e.SwfBlendMode.setBlendMode(n, i[13]);
                        break;
                    case e.Swf.dataKey_ShapeImg:
                        n.width = i[11], n.height = i[12], e.SwfBlendMode.setBlendMode(n, i[13]);
                        break;
                    case e.Swf.dataKey_TextField:
                        a = n, a.width = i[11], a.height = i[12], a.fontFamily = i[13], a.textColor = i[14], a.size = i[15], a.textAlign = i[16], i[19] && "\r" != i[19] && "" != i[19] && (a.text = i[19]), e.SwfBlendMode.setBlendMode(a, i[20]);
                        break;
                    default:
                        n.scaleX = i[4], n.scaleY = i[5], e.SwfBlendMode.setBlendMode(n, i[11])
                }
                this.$children.push(n), this.addChild(n)
            }
            null != this._frameEvents && null != this._frameEvents[this._currentFrame] && this.dispatchEventWith(this._frameEvents[this._currentFrame])
        }, p.getCurrentFrame = function() {
            return this._currentFrame
        }, p.play = function() {
            this._isPlay = !0, this._ownerSwf.swfUpdateManager.addSwfAnimation(this);
            var t, i, n;
            for (t in this._displayObjects)
                if (0 == t.indexOf(e.Swf.dataKey_MovieClip)) {
                    i = this._displayObjects[t], n = i.length;
                    for (var a = 0; n > a; a++) i[a].play()
                }
        }, p.stop = function(t) {
            if (void 0 === t && (t = !0), this._isPlay = !1, this._ownerSwf.swfUpdateManager.removeSwfAnimation(this), t) {
                var i, n, a;
                for (i in this._displayObjects)
                    if (0 == i.indexOf(e.Swf.dataKey_MovieClip)) {
                        n = this._displayObjects[i], a = n.length;
                        for (var s = 0; a > s; s++) n[s].stop(t)
                    }
            }
        }, p.gotoAndStop = function(e, t) {
            void 0 === t && (t = !0), this.goTo(e), this.stop(t)
        }, p.gotoAndPlay = function(e) {
            this.goTo(e), this.play()
        }, p.goTo = function(e) {
            if ("string" == typeof e) {
                var t = this.getLabelData(e);
                this._currentLabel = t[0], this._currentFrame = this._startFrame = t[1], this._endFrame = t[2]
            } else "number" == typeof e && (this._currentFrame = this._startFrame = e, this._endFrame = this._frames.length - 1);
            this.setCurrentFrame(this._currentFrame)
        }, p.getLabelData = function(e) {
            for (var t, i = this._labels.length, n = 0; i > n; n++)
                if (t = this._labels[n], t[0] == e) return t;
            return null
        }, p.isPlay = function() {
            return this._isPlay
        }, p.totalFrames = function() {
            return this._frames.length
        }, p.currentLabel = function() {
            return this._currentLabel
        }, p.labels = function() {
            for (var e = this._labels.length, t = [], i = 0; e > i; i++) t.push(this._labels[i][0]);
            return t
        }, p.hasLabel = function(e) {
            var t = this.labels();
            return !(-1 == t.indexOf(e))
        }, p.addEventListener = function(e, i, n, a, s) {
            void 0 === a && (a = !1), void 0 === s && (s = 0), t.prototype.addEventListener.call(this, e, i, n, a, s), this._hasCompleteListener = this.hasEventListener(egret.Event.COMPLETE)
        }, p.removeEventListener = function(e, i, n, a) {
            void 0 === a && (a = !1), t.prototype.removeEventListener.call(this, e, i, n, a), this._hasCompleteListener = this.hasEventListener(egret.Event.COMPLETE)
        }, i
    }(e.SwfSprite);
    e.SwfMovieClip = t, egret.registerClass(t, "starlingswf.SwfMovieClip", ["starlingswf.ISwfAnimation"])
}(starlingswf || (starlingswf = {}));
