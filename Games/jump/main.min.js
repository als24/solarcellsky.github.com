var LoadingPanel = function(t) {
    function e() {
        t.call(this),
        this.bg = new egret.Sprite,
        this.w = 0,
        this.h = 0,
        this.mySheet = RES.getRes("load"),
        this.createView()
    }
    __extends(e, t);
    var i = (__define,
    e)
      , n = i.prototype;
    return n.createView = function() {
        this.w = egret.MainContext.instance.stage.stageWidth,
        this.h = egret.MainContext.instance.stage.stageHeight,
        this.bg.graphics.beginFill(3223857, 1),
        this.bg.graphics.drawRect(0, 0, this.w, this.h),
        this.bg.graphics.endFill(),
        this.bg.width = this.w,
        this.bg.height = this.h,
        this.addChild(this.bg),
        this.touchEnabled = !0,
        this.pgBg = new egret.Bitmap,
        this.pgBg.anchorOffsetX = .5 * this.pgBg.width,
        this.pgBg.anchorOffsetY = .5 * this.pgBg.height,
        this.pgBg.texture = this.mySheet.getTexture("pgBg"),
        this.pgBg.x = this.w / 2,
        this.pgBg.y = this.h / 2,
        this.addChild(this.pgBg),
        this.pgBar = new egret.Bitmap,
        this.pgBar.anchorOffsetX = .5 * this.pgBg.width,
        this.pgBar.anchorOffsetY = .5 * this.pgBg.height,
        this.pgBar.texture = this.mySheet.getTexture("pgBar"),
        this.pgBar.x = this.w / 2 - 34,
        this.pgBar.y = this.h / 2,
        this.addChild(this.pgBar),
        this.textField = new egret.TextField,
        this.textField.size = 24,
        this.textField.textColor = 16777215,
        this.textField.bold = !0,
        this.textField.stroke = 1,
        this.textField.strokeColor = 0,
        this.addChild(this.textField),
        this.textField.width = 100,
        this.textField.x = this.w / 2 - this.textField.width / 2,
        this.textField.y = this.h / 2 - this.textField.height / 2 - 10,
        this.textField.textAlign = "center",
        this.textField.text = "0%"
    }
    ,
    n.setProgress = function(t, e) {
        var i = Math.round(t / e * 100);
        this.textField.text = i + "%",
        this.pgBar.width = 282 * (t / e)
    }
    ,
    e
}(egret.Sprite);
egret.registerClass(LoadingPanel, "LoadingPanel");
var BasePanel = function(t) {
    function e() {
        t.call(this),
        this.w = 0,
        this.h = 0,
        this.w = GameConfig.curWidth(),
        this.h = GameConfig.curHeight(),
        this.addEventListener(egret.Event.ADDED_TO_STAGE, this.initPanel, this)
    }
    __extends(e, t);
    var i = (__define,
    e)
      , n = i.prototype;
    return n.initPanel = function() {}
    ,
    n.initData = function() {}
    ,
    n.onEnter = function() {}
    ,
    n.onExit = function() {}
    ,
    n.closePanel = function() {
        PopUpManager.removePopUp(this)
    }
    ,
    n.getWidth = function() {
        return this.width
    }
    ,
    n.getHeight = function() {
        return this.height
    }
    ,
    e
}(egret.DisplayObjectContainer);
egret.registerClass(BasePanel, "BasePanel");
var ShareIconPanel = function(t) {
    function e() {
        t.call(this),
        this.bg = new egret.Sprite,
        this.shareIconRender = new ShareIconRender,
        this.initUI()
    }
    __extends(e, t);
    var i = (__define,
    e)
      , n = i.prototype;
    return n.initUI = function() {
        this.bg.graphics.beginFill(0, .5),
        this.bg.graphics.drawRect(0, 0, this.w, this.h),
        this.bg.graphics.endFill(),
        this.bg.width = this.w,
        this.bg.height = this.h,
        this.addChild(this.bg),
        this.bg.alpha = 0,
        this.bg.touchEnabled = !0,
        this.bg.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onBgBtnTouchTap, this),
        egret.Tween.get(this.bg).to({
            alpha: 1
        }, 300),
        this.shareIconRender = new ShareIconRender,
        this.shareIconRender.y = this.h,
        this.addChild(this.shareIconRender),
        egret.Tween.get(this.shareIconRender).to({
            y: this.h - this.shareIconRender.height + 60
        }, 300, egret.Ease.backOut),
        this.descTF = new egret.TextField,
        this.descTF.size = 24,
        this.descTF.height = 140,
        this.descTF.width = 230,
        this.descTF.lineSpacing = 10,
        this.descTF.text = "请点击右上角\n将它发送给指定朋友\n或分享到朋友圈",
        this.descTF.x = this.w - this.descTF.width - 40,
        this.descTF.y = 120,
        this.descTF.textAlign = egret.HorizontalAlign.CENTER,
        this.addChild(this.descTF),
        this.descTF.alpha = 0,
        this.arrowImg = new egret.Bitmap,
        this.arrowImg.texture = RES.getRes("arrow_png"),
        this.arrowImg.x = this.w - this.arrowImg.width - 30,
        this.arrowImg.y = 20,
        this.addChild(this.arrowImg),
        this.arrowImg.alpha = 0,
        Global.addEventListener(MainNotify.updateShareNotify, this.onUpdateShare, this)
    }
    ,
    n.onBgBtnTouchTap = function() {
        var t = function() {
            Global.dispatchEvent(MainNotify.closeShareNotify)
        }
        ;
        this.descTF.alpha = 0,
        this.arrowImg.alpha = 0,
        egret.Tween.get(this.bg).to({
            alpha: 0
        }, 150).call(t, this),
        egret.Tween.get(this.shareIconRender).to({
            y: this.h
        }, 300)
    }
    ,
    n.onUpdateShare = function(t) {
        var e = GameConfig.platformType()
          , i = t.param;
        switch (e) {
        case "micromessenger":
            "micromessenger" == i ? (this.descTF.text = "请点击右上角\n将它发送给指定朋友\n或分享到朋友圈",
            this.descTF.x = this.w - this.descTF.width - 40,
            this.descTF.y = 120,
            egret.Tween.get(this.descTF).to({
                alpha: 1
            }, 150),
            egret.Tween.get(this.arrowImg).to({
                alpha: 1
            }, 150)) : (Global.shareUtils(i),
            egret.Tween.get(this.bg).to({
                alpha: 0
            }, 150));
            break;
        case "qzone":
            "micromessenger" == i ? (EffectUtils.showTips("抱歉，暂不支持从空间直接分享到微信！"),
            egret.Tween.get(this.bg).to({
                alpha: 0
            }, 150)) : "qzone" == i ? (this.descTF.text = "退出应用后\n从全部动态中转发吧",
            this.descTF.x = this.w / 2 - this.descTF.width / 2,
            this.descTF.y = this.h / 2 - this.descTF.height / 2,
            egret.Tween.get(this.descTF).to({
                alpha: 1
            }, 150)) : (Global.shareUtils(i),
            egret.Tween.get(this.bg).to({
                alpha: 0
            }, 150));
            break;
        case "weibo":
            "micromessenger" == i ? (this.descTF.text = "请点击右上角\n将它发送给指定朋友\n或分享到朋友圈",
            this.descTF.x = this.w - this.descTF.width - 40,
            this.descTF.y = 120,
            egret.Tween.get(this.descTF).to({
                alpha: 1
            }, 150),
            egret.Tween.get(this.arrowImg).to({
                alpha: 1
            }, 150)) : "weibo" == i ? (this.descTF.text = "退出应用后\n转发正文\n与朋友一块玩吧",
            this.descTF.x = this.w / 2 - this.descTF.width / 2,
            this.descTF.y = this.h / 2 - this.descTF.height / 2,
            egret.Tween.get(this.descTF).to({
                alpha: 1
            }, 150)) : (Global.shareUtils(i),
            egret.Tween.get(this.bg).to({
                alpha: 0
            }, 150));
            break;
        case "qq":
            "micromessenger" == i || "qzone" == i || "qq" == i ? (this.descTF.text = "请点击右上角\n将它发送给朋友\n与朋友一块玩吧",
            this.descTF.x = this.w - this.descTF.width - 40,
            this.descTF.y = 120,
            egret.Tween.get(this.descTF).to({
                alpha: 1
            }, 150),
            egret.Tween.get(this.arrowImg).to({
                alpha: 1
            }, 150)) : (Global.shareUtils(i),
            egret.Tween.get(this.bg).to({
                alpha: 0
            }, 150));
            break;
        case "renren":
            "micromessenger" == i ? (EffectUtils.showTips("抱歉，暂不支持从空间直接分享到微信！"),
            egret.Tween.get(this.bg).to({
                alpha: 0
            }, 150)) : "renren" == i ? (this.descTF.text = "请点击右上角\n将它发送给朋友\n与朋友一块玩吧",
            this.descTF.x = this.w - this.descTF.width - 40,
            this.descTF.y = 120,
            egret.Tween.get(this.descTF).to({
                alpha: 1
            }, 150),
            egret.Tween.get(this.arrowImg).to({
                alpha: 1
            }, 150)) : (Global.shareUtils(i),
            egret.Tween.get(this.bg).to({
                alpha: 0
            }, 150));
            break;
        case "txmicroblog":
            "micromessenger" == i || "qzone" == i || "qq" == i ? (this.descTF.text = "请点击右上角\n将它发送给朋友\n与朋友一块玩吧",
            this.descTF.x = this.w - this.descTF.width - 40,
            this.descTF.y = 120,
            egret.Tween.get(this.descTF).to({
                alpha: 1
            }, 150),
            egret.Tween.get(this.arrowImg).to({
                alpha: 1
            }, 150)) : (Global.shareUtils(i),
            egret.Tween.get(this.bg).to({
                alpha: 0
            }, 150));
            break;
        case "douban":
            "micromessenger" == i ? (EffectUtils.showTips("抱歉，暂不支持从空间直接分享到微信！"),
            egret.Tween.get(this.bg).to({
                alpha: 0
            }, 150)) : (this.descTF.text = "请点击右上角\n将它发送给朋友\n与朋友一块玩吧",
            this.descTF.x = this.w - this.descTF.width - 40,
            this.descTF.y = 120,
            egret.Tween.get(this.descTF).to({
                alpha: 1
            }, 150),
            egret.Tween.get(this.arrowImg).to({
                alpha: 1
            }, 150));
            break;
        case "other":
            Global.shareUtils(i),
            egret.Tween.get(this.bg).to({
                alpha: 0
            }, 150)
        }
        egret.Tween.get(this.shareIconRender).to({
            y: this.h
        }, 300)
    }
    ,
    e
}(BasePanel);
egret.registerClass(ShareIconPanel, "ShareIconPanel");
var VerticalTipsPanel = function(t) {
    function e(e) {
        void 0 === e && (e = !1),
        t.call(this),
        this.bg = new egret.Sprite,
        this.w = 0,
        this.h = 0,
        this.needExchange = !1,
        this.needExchange = e,
        this.createView()
    }
    __extends(e, t);
    var i = (__define,
    e)
      , n = i.prototype;
    return n.createView = function() {
        this.w = egret.MainContext.instance.stage.stageWidth,
        this.h = egret.MainContext.instance.stage.stageHeight,
        this.textField = new egret.TextField,
        this.textField.size = 36,
        this.textField.textColor = 16777215,
        this.textField.bold = !0,
        this.textField.stroke = 1,
        this.textField.strokeColor = 0,
        this.addChild(this.textField),
        this.textField.width = 480,
        this.textField.textAlign = "center",
        this.textField.text = "亲，请开启手机横屏体验哦！",
        this.needExchange ? (this.textField.x = 4,
        this.textField.y = this.h / 2 - this.textField.height / 2 - 10) : (this.textField.x = this.w / 2 - this.textField.width / 2,
        this.textField.y = this.h / 2 - this.textField.height / 2 - 10)
    }
    ,
    e
}(egret.Sprite);
egret.registerClass(VerticalTipsPanel, "VerticalTipsPanel");
var WaitPanel = function(t) {
    function e(e) {
        switch (void 0 === e && (e = 1),
        t.call(this),
        this.bg = new egret.Sprite,
        this.cartoonType = "loadingCircle1",
        this.w = 0,
        this.h = 0,
        e) {
        case 1:
            this.cartoonType = "loadingCircle1";
            break;
        case 2:
            this.cartoonType = "loadingCircle2"
        }
        this.mySheet = RES.getRes("assets"),
        this.createView()
    }
    __extends(e, t);
    var i = (__define,
    e)
      , n = i.prototype;
    return n.createView = function() {
        this.w = egret.MainContext.instance.stage.stageWidth,
        this.h = egret.MainContext.instance.stage.stageHeight,
        this.bg.graphics.beginFill(0, .2),
        this.bg.graphics.drawRect(0, 0, this.w, this.h),
        this.bg.graphics.endFill(),
        this.bg.width = this.w,
        this.bg.height = this.h,
        this.addChild(this.bg),
        this.touchEnabled = !0,
        this.waitImg = new egret.Bitmap,
        this.waitImg.anchorOffsetX = .5 * this.waitImg.width,
        this.waitImg.anchorOffsetY = .5 * this.waitImg.height,
        this.waitImg.texture = this.mySheet.getTexture(this.cartoonType),
        this.waitImg.x = this.w / 2,
        this.waitImg.y = this.h / 2,
        this.addChild(this.waitImg),
        EffectUtils.rotationEffect(this.waitImg, 1e3)
    }
    ,
    e
}(egret.Sprite);
egret.registerClass(WaitPanel, "WaitPanel");
var AlertPanel = function(t) {
    function e(e, i, n, s, a) {
        void 0 === e && (e = ""),
        void 0 === i && (i = ""),
        void 0 === n && (n = null ),
        void 0 === s && (s = null ),
        void 0 === a && (a = 1),
        t.call(this),
        this.titleStr = "",
        this.descStr = "",
        this.type = 1,
        this.titleStr = e,
        this.descStr = i,
        this.cancelFun = n,
        this.acceptFun = s,
        this.type = a,
        this.initUI()
    }
    __extends(e, t);
    var i = (__define,
    e)
      , n = i.prototype;
    return n.initUI = function() {
        this.bg = new egret.Bitmap,
        this.bg.texture = RES.getRes("alertBg"),
        this.addChild(this.bg),
        this.bg.touchEnabled = !0,
        "" != this.titleStr && (this.titleTF = new egret.TextField,
        this.addChild(this.titleTF),
        this.titleTF.textColor = 0,
        this.titleTF.size = 24,
        this.titleTF.width = this.bg.width,
        this.titleTF.height = 24,
        this.titleTF.y = 23,
        this.titleTF.textAlign = "center",
        this.titleTF.text = this.titleStr),
        "" != this.descStr && (this.descTF = new egret.TextField,
        this.addChild(this.descTF),
        this.descTF.textColor = 0,
        this.descTF.size = 20,
        this.descTF.width = this.bg.width,
        this.descTF.height = 24,
        this.descTF.y = this.bg.height / 2 - this.descTF.height / 2 + 10,
        this.descTF.textAlign = "center",
        this.descTF.text = this.descStr);
        var t = this
          , e = function(e) {
            null != t.cancelFun && t.cancelFun(),
            Global.dispatchEvent(MainNotify.closeAlertNotify)
        }
          , i = function(e) {
            null != t.acceptFun && t.acceptFun(),
            Global.dispatchEvent(MainNotify.closeAlertNotify)
        }
        ;
        this.acceptBtn = new EButton(this,"acceptBtn",i),
        this.addChild(this.acceptBtn),
        1 == this.type ? (this.acceptBtn.x = this.bg.width / 2 - this.acceptBtn.width / 2,
        this.acceptBtn.y = this.bg.height - this.acceptBtn.height / 2 - 10) : (this.cancelBtn = new EButton(this,"cancelBtn",e),
        this.cancelBtn.x = 110,
        this.cancelBtn.y = this.bg.height - this.cancelBtn.height / 2 - 10,
        this.addChild(this.cancelBtn),
        this.acceptBtn.x = this.bg.width - this.acceptBtn.width - 60 - 50,
        this.acceptBtn.y = this.bg.height - this.acceptBtn.height / 2 - 10)
    }
    ,
    n.getWidth = function() {
        return this.bg.width
    }
    ,
    n.getHeight = function() {
        return this.bg.height
    }
    ,
    e
}(BasePanel);
egret.registerClass(AlertPanel, "AlertPanel");
var EButton = function(t) {
    function e(e, i, n, s, a, h, r) {
        void 0 === n && (n = null ),
        void 0 === s && (s = ""),
        void 0 === a && (a = 30),
        void 0 === h && (h = 1),
        void 0 === r && (r = "assets"),
        t.call(this),
        this.isPlayCartoon = !1,
        this.cartoonType = 1,
        this.param = {
            context: null ,
            data: null
        },
        this.param.context = e,
        this.init(i, n, s, a, h, r)
    }
    __extends(e, t);
    var i = (__define,
    e)
      , n = i.prototype;
    return n.init = function(t, e, i, n, s, a) {
        void 0 === e && (e = null ),
        void 0 === i && (i = ""),
        void 0 === n && (n = 30),
        void 0 === s && (s = 1),
        void 0 === a && (a = "assets");
        var h = this;
        h.cartoonType = s,
        h.backFun = e,
        h.btnImg = new egret.Bitmap,
        h.btnImg.texture = RES.getRes(t),
        h.addChild(h.btnImg),
        "" != i && (h.textField = new egret.TextField,
        h.addChild(h.textField),
        h.textField.size = n,
        h.textField.textAlign = "center",
        h.textField.stroke = 1,
        h.textField.strokeColor = 0,
        h.textField.text = i,
        h.textField.width = h.btnImg.width,
        h.textField.x = h.btnImg.width / 2 - h.textField.width / 2,
        h.textField.y = h.btnImg.height / 2 - h.textField.height / 2),
        h.touchEnabled = !0,
        h.addEventListener(egret.TouchEvent.TOUCH_TAP, h.onbuttonTouchTap, h)
    }
    ,
    n.setIcon = function(t) {
        var e = new egret.Bitmap(RES.getRes(t));
        e.x = (this.btnImg.width - e.width) / 2,
        e.y = (this.btnImg.height - e.height) / 2,
        this.addChild(e)
    }
    ,
    n.onbuttonTouchTap = function(t) {
        if (!this.isPlayCartoon) {
            this.isPlayCartoon = !0;
            var e = function() {
                this.isPlayCartoon = !1
            }
              , i = function() {
                1 == this.cartoonType ? egret.Tween.get(this).to({
                    scaleX: 1,
                    scaleY: 1,
                    x: this.x - this.btnImg.width / 4,
                    y: this.y - this.btnImg.height / 4
                }, 500, egret.Ease.elasticOut).call(e, this) : 2 == this.cartoonType ? egret.Tween.get(this).to({
                    scaleX: 1,
                    scaleY: 1,
                    x: this.x - this.btnImg.width / 4,
                    y: this.y - this.btnImg.height / 4
                }, 500, egret.Ease.backOut).call(e, this) : 3 == this.cartoonType && egret.Tween.get(this).to({
                    scaleX: 1,
                    scaleY: 1,
                    x: this.x - this.btnImg.width / 4,
                    y: this.y - this.btnImg.height / 4
                }, 100).call(e, this)
            }
            ;
            egret.Tween.get(this).to({
                scaleX: .5,
                scaleY: .5,
                x: this.x + this.btnImg.width / 4,
                y: this.y + this.btnImg.height / 4
            }, 100, egret.Ease.sineIn).call(i, this),
            egret.setTimeout(function() {
                null != this.backFun && this.backFun.apply(this.param.context, [this.param.data])
            }, this, 300)
        }
    }
    ,
    n.setBindData = function(t) {
        this.param.data = t
    }
    ,
    n.getBindData = function() {
        return this.param.data
    }
    ,
    n.getBitmap = function() {
        return this.btnImg
    }
    ,
    e
}(egret.DisplayObjectContainer);
egret.registerClass(EButton, "EButton");
var EImage = function(t) {
    function e(e) {
        t.call(this),
        this._src = null ,
        this._comp = !1,
        null != e && this.load(e)
    }
    __extends(e, t);
    var i = __define
      , n = e
      , s = n.prototype;
    return i(s, "src", function() {
        return this._src
    }, function(t) {
        this.load(t)
    }),
    e.$ = function(t) {
        var e = t.$;
        return delete t.$,
        t.onload = null ,
        t.onerror = null ,
        e
    }
    ,
    s.onLoadBack = function(t, e) {
        if (e == this._src) {
            if (t) {
                var i = new egret.Texture;
                i._setBitmapData(t),
                this.texture = i
            } else
                this.texture = null ;
            this._comp = !0
        }
    }
    ,
    s.load = function(t) {
        if (this._src != t || !this._comp)
            if (this._src = t,
            null != t && t.length > 0) {
                this._comp = !1;
                var i = new Image;
                i.$ = this,
                i.onload = function() {
                    e.$(this).onLoadBack(this, this.src)
                }
                ,
                i.onerror = function() {
                    e.$(this).onLoadBack(this, this.src)
                }
                ,
                i.src = t
            } else
                this.texture = null ,
                this._comp = !0
    }
    ,
    s.size = function(t, e) {
        this.width = t,
        this.height = e
    }
    ,
    s.move = function(t, e) {
        this.x = t,
        this.y = e
    }
    ,
    e.loadAsync = function(t, e, i) {
        void 0 === e && (e = null ),
        void 0 === i && (i = null );
        var n = new Image
          , s = new egret.Bitmap;
        return n.$ = s,
        n.onload = function() {
            var t = this.$;
            delete this.$,
            this.onload = null ,
            this.onerror = null ;
            var n = new egret.Texture;
            n._setBitmapData(this),
            t.texture = n,
            null != e && e.apply(i, [t])
        }
        ,
        n.onerror = function() {
            var t = this.$;
            delete this.$,
            this.onload = null ,
            this.onerror = null ,
            t.texture = null ,
            null != e && e.apply(i, null )
        }
        ,
        n.src = t,
        s
    }
    ,
    e
}(egret.Bitmap);
egret.registerClass(EImage, "EImage");
var ETabBar = function(t) {
    function e(e, i, n, s, a, h, r, o) {
        void 0 === s && (s = null ),
        void 0 === a && (a = []),
        void 0 === h && (h = 30),
        void 0 === r && (r = 1),
        void 0 === o && (o = "assets"),
        t.call(this),
        this.assets = RES.getRes("assets"),
        this.btnArr = [],
        this.descStrArr = [],
        this.isPlayCartoon = !1,
        this.cartoonType = 1,
        this.isSelectIndex = 0,
        this.imgNormalName = "",
        this.imgSelectName = "",
        this.param = {
            context: null ,
            data: null
        },
        this.param.context = e,
        this.imgNormalName = i,
        this.imgSelectName = n,
        this.descStrArr = a,
        this.init(e, s, a, h, r, o)
    }
    __extends(e, t);
    var i = (__define,
    e)
      , n = i.prototype;
    return n.init = function(t, e, i, n, s, a) {
        void 0 === e && (e = null ),
        void 0 === i && (i = []),
        void 0 === n && (n = 30),
        void 0 === s && (s = 1),
        void 0 === a && (a = "assets"),
        this.cartoonType = s,
        this.backFun = e,
        "assets" != a && (this.assets = RES.getRes(a));
        for (var h = 0; h < i.length; h++) {
            var r = new EToggleButton(this,this.imgNormalName,this.imgSelectName,this.onSelectBack,i[h],n,s,a);
            r.setBindData(h),
            r.x = r.width * h,
            this.addChild(r),
            this.btnArr.push(r),
            0 == h && (r.setSelected(!0),
            r.setEnable(!1))
        }
    }
    ,
    n.onSelectBack = function(t) {
        this.retset(),
        this.param.data = t,
        this.setSelectedIndex(t),
        this.backFun.apply(this.param.context, [this.param.data])
    }
    ,
    n.getSelectedIndex = function() {
        return this.isSelectIndex
    }
    ,
    n.setSelectedIndex = function(t) {
        void 0 === t && (t = 0),
        this.retset(),
        this.btnArr[t].setSelected(!0),
        this.isSelectIndex = t,
        this.btnArr[t].setEnable(!1)
    }
    ,
    n.setBindData = function(t) {
        this.param.data = t
    }
    ,
    n.getBindData = function() {
        return this.param.data
    }
    ,
    n.retset = function() {
        for (var t = 0; t < this.descStrArr.length; t++) {
            var e = this.btnArr[t];
            e.setSelected(!1),
            e.setEnable(!0)
        }
    }
    ,
    e
}(egret.DisplayObjectContainer);
egret.registerClass(ETabBar, "ETabBar");
var ETextField = function(t) {
    function e() {
        t.call(this)
    }
    __extends(e, t);
    var i = (__define,
    e)
      , n = i.prototype;
    return n.setText = function(t) {
        void 0 === t && (t = "");
        var e = new egret.HtmlTextParser;
        this.textFlow = e.parser(t)
    }
    ,
    e
}(egret.TextField);
egret.registerClass(ETextField, "ETextField");
var EToggleButton = function(t) {
    function e(e, i, n, s, a, h, r, o) {
        void 0 === s && (s = null ),
        void 0 === a && (a = ""),
        void 0 === h && (h = 30),
        void 0 === r && (r = 1),
        void 0 === o && (o = "assets"),
        t.call(this),
        this.isPlayCartoon = !1,
        this.cartoonType = 1,
        this.isSelected = !1,
        this.imgNormalName = "",
        this.imgSelectName = "",
        this.param = {
            context: null ,
            data: null
        },
        this.param.context = e,
        this.imgNormalName = i,
        this.imgSelectName = n,
        this.init(s, a, h, r, o)
    }
    __extends(e, t);
    var i = (__define,
    e)
      , n = i.prototype;
    return n.init = function(t, e, i, n, s) {
        void 0 === t && (t = null ),
        void 0 === e && (e = ""),
        void 0 === i && (i = 30),
        void 0 === n && (n = 1),
        void 0 === s && (s = "assets"),
        this.cartoonType = n,
        this.backFun = t,
        this.btnImg = new egret.Bitmap,
        this.btnImg.texture = RES.getRes(this.imgNormalName),
        this.addChild(this.btnImg),
        "" != e && (this.textField = new egret.TextField,
        this.addChild(this.textField),
        this.textField.size = i,
        this.textField.textAlign = "center",
        this.textField.bold = !0,
        this.textField.stroke = 1,
        this.textField.strokeColor = 6705737,
        this.textField.textColor = 12432042,
        this.textField.text = e,
        this.textField.width = this.btnImg.width,
        this.textField.x = this.btnImg.width / 2 - this.textField.width / 2,
        this.textField.y = this.btnImg.height / 2 - this.textField.height / 2),
        this.touchEnabled = !0,
        this.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onbuttonTouchTap, this)
    }
    ,
    n.onbuttonTouchTap = function(t) {
        if (!this.isPlayCartoon) {
            this.isPlayCartoon = !0;
            var e = function() {
                this.isPlayCartoon = !1
            }
              , i = function() {
                this.isSelected ? this.btnImg.texture = RES.getRes(this.imgNormalName) : this.btnImg.texture = RES.getRes(this.imgSelectName),
                this.isSelected = !this.isSelected,
                1 == this.cartoonType ? egret.Tween.get(this).to({
                    scaleX: 1,
                    scaleY: 1,
                    x: this.x - this.btnImg.width / 4,
                    y: this.y - this.btnImg.height / 4
                }, 500, egret.Ease.elasticOut).call(e, this) : 2 == this.cartoonType ? egret.Tween.get(this).to({
                    scaleX: 1,
                    scaleY: 1,
                    x: this.x - this.btnImg.width / 4,
                    y: this.y - this.btnImg.height / 4
                }, 500, egret.Ease.backOut).call(e, this) : 3 == this.cartoonType && egret.Tween.get(this).to({
                    scaleX: 1,
                    scaleY: 1,
                    x: this.x - this.btnImg.width / 4,
                    y: this.y - this.btnImg.height / 4
                }, 100).call(e, this)
            }
            ;
            egret.Tween.get(this).to({
                scaleX: .5,
                scaleY: .5,
                x: this.x + this.btnImg.width / 4,
                y: this.y + this.btnImg.height / 4
            }, 100, egret.Ease.sineIn).call(i, this),
            egret.setTimeout(function() {
                null != this.backFun && this.backFun.apply(this.param.context, [this.param.data])
            }, this, 200)
        }
    }
    ,
    n.getBitmap = function() {
        return this.btnImg
    }
    ,
    n.setBindData = function(t) {
        this.param.data = t
    }
    ,
    n.getBindData = function() {
        return this.param.data
    }
    ,
    n.getSelected = function() {
        return this.isSelected
    }
    ,
    n.setEnable = function(t) {
        this.touchEnabled = t
    }
    ,
    n.setSelected = function(t) {
        this.isSelected = t,
        t ? this.btnImg.texture = RES.getRes(this.imgSelectName) : this.btnImg.texture = RES.getRes(this.imgNormalName)
    }
    ,
    e
}(egret.DisplayObjectContainer);
egret.registerClass(EToggleButton, "EToggleButton");
var EToggleSwitch = function(t) {
    function e(e, i, n, s, a, h) {
        void 0 === i && (i = ""),
        void 0 === n && (n = ""),
        void 0 === s && (s = ""),
        void 0 === a && (a = null ),
        void 0 === h && (h = "assets"),
        t.call(this),
        this.assets = RES.getRes("assets"),
        this.isPlayCartoon = !1,
        this.isSelected = !1,
        this.switchOffName = "",
        this.switchOnName = "",
        this.switchBarName = "",
        this.param = {
            context: null ,
            data: null
        },
        this.param.context = e,
        this.switchOffName = i,
        this.switchOnName = n,
        this.switchBarName = s,
        this.init(a, h)
    }
    __extends(e, t);
    var i = (__define,
    e)
      , n = i.prototype;
    return n.init = function(t, e) {
        void 0 === t && (t = null ),
        void 0 === e && (e = "assets"),
        this.backFun = t,
        this.switchOffImg = new egret.Bitmap,
        this.switchOnImg = new egret.Bitmap,
        this.switchBarImg = new egret.Bitmap,
        "assets" != e && (this.assets = RES.getRes(e)),
        this.switchOffImg.texture = this.assets.getTexture(this.switchOffName),
        this.addChild(this.switchOffImg),
        this.switchOnImg.texture = this.assets.getTexture(this.switchOnName),
        this.addChild(this.switchOnImg),
        this.switchOnImg.alpha = 0,
        this.switchBarImg.texture = this.assets.getTexture(this.switchBarName),
        this.switchBarImg.x = 5,
        this.switchBarImg.y = this.switchOffImg.height / 2 - this.switchBarImg.height / 2 + 4,
        this.addChild(this.switchBarImg),
        this.touchEnabled = !0,
        this.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onbuttonTouchTap, this)
    }
    ,
    n.onbuttonTouchTap = function(t) {
        if (!this.isPlayCartoon) {
            this.isPlayCartoon = !0;
            var e = function() {
                this.isPlayCartoon = !1,
                this.isSelected = !this.isSelected,
                null != this.backFun && this.backFun.apply(this.param.context, [this.param.data])
            }
            ;
            this.isSelected ? (egret.Tween.get(this.switchBarImg).to({
                x: 5
            }, 400).call(e, this),
            egret.Tween.get(this.switchOffImg).to({
                alpha: 1
            }, 400),
            egret.Tween.get(this.switchOnImg).to({
                alpha: 0
            }, 400)) : (egret.Tween.get(this.switchBarImg).to({
                x: this.switchOffImg.width - this.switchBarImg.width - 6
            }, 400).call(e, this),
            egret.Tween.get(this.switchOffImg).to({
                alpha: 0
            }, 400),
            egret.Tween.get(this.switchOnImg).to({
                alpha: 1
            }, 400))
        }
    }
    ,
    n.setBindData = function(t) {
        this.param.data = t
    }
    ,
    n.getBindData = function() {
        return this.param.data
    }
    ,
    n.getSelected = function() {
        return this.isSelected
    }
    ,
    e
}(egret.DisplayObjectContainer);
egret.registerClass(EToggleSwitch, "EToggleSwitch");
var ShareIconRender = function(t) {
    function e() {
        t.call(this),
        this.titleTF = new egret.TextField,
        this.weixinTF = new egret.TextField,
        this.qqzoneTF = new egret.TextField,
        this.sinaweiboTF = new egret.TextField,
        this.qqTF = new egret.TextField,
        this.renrenTF = new egret.TextField,
        this.qqweiboTF = new egret.TextField,
        this.doubanTF = new egret.TextField,
        this.assets = RES.getRes("socialIcon"),
        this.bg = new egret.Sprite,
        this.w = 0,
        this.h = 0,
        this.w = GameConfig.curWidth(),
        this.h = GameConfig.curHeight(),
        this.init()
    }
    __extends(e, t);
    var i = (__define,
    e)
      , n = i.prototype;
    return n.init = function() {
        this.bg.graphics.beginFill(16777215, .9),
        this.bg.graphics.drawRect(0, 0, this.w, 300),
        this.bg.graphics.endFill(),
        this.bg.width = this.w,
        this.bg.height = 300,
        this.addChild(this.bg),
        this.bg.alpha = 1,
        this.bg.touchEnabled = !0,
        this.titleTF.size = 24,
        this.titleTF.textColor = 0,
        this.titleTF.text = "分享到",
        this.titleTF.x = this.w / 2 - this.titleTF.width / 2,
        this.titleTF.y = 10,
        this.titleTF.bold = !0,
        this.titleTF.textAlign = egret.HorizontalAlign.CENTER,
        this.addChild(this.titleTF);
        var t = 40
          , e = 130;
        this.weixinBtn = new EButton(this,"weixin",null ,"",30,1,"socialIcon"),
        this.weixinBtn.x = 20,
        this.weixinBtn.y = t,
        this.addChild(this.weixinBtn),
        this.weixinBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onWeixinBtnTouchTap, this),
        this.qqzoneBtn = new EButton(this,"qqzone",null ,"",30,1,"socialIcon"),
        this.qqzoneBtn.x = this.weixinBtn.x + this.qqzoneBtn.width + 20,
        this.qqzoneBtn.y = t,
        this.addChild(this.qqzoneBtn),
        this.qqzoneBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onQQzoneBtnTouchTap, this),
        this.sinaweiboBtn = new EButton(this,"sinaweibo",null ,"",30,1,"socialIcon"),
        this.sinaweiboBtn.x = this.qqzoneBtn.x + this.sinaweiboBtn.width + 20,
        this.sinaweiboBtn.y = t,
        this.addChild(this.sinaweiboBtn),
        this.sinaweiboBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onSinaweiboBtnTouchTap, this),
        this.qqBtn = new EButton(this,"qq",null ,"",30,1,"socialIcon"),
        this.qqBtn.x = this.sinaweiboBtn.x + this.qqBtn.width + 20,
        this.qqBtn.y = t,
        this.addChild(this.qqBtn),
        this.qqBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onQQBtnTouchTap, this),
        this.renrenBtn = new EButton(this,"renren",null ,"",30,1,"socialIcon"),
        this.renrenBtn.x = this.qqBtn.x + this.renrenBtn.width + 20,
        this.renrenBtn.y = t,
        this.addChild(this.renrenBtn),
        this.renrenBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onRenrenBtnTouchTap, this),
        this.qqweiboBtn = new EButton(this,"qqweibo",null ,"",30,1,"socialIcon"),
        this.qqweiboBtn.x = 20,
        this.qqweiboBtn.y = e,
        this.addChild(this.qqweiboBtn),
        this.qqweiboBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onQQweiboBtnTouchTap, this),
        this.doubanBtn = new EButton(this,"douban",null ,"",30,1,"socialIcon"),
        this.doubanBtn.x = this.qqweiboBtn.x + this.doubanBtn.width + 20,
        this.doubanBtn.y = e,
        this.addChild(this.doubanBtn),
        this.doubanBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onDoubanBtnTouchTap, this);
        var i = 16;
        this.weixinTF.size = i,
        this.weixinTF.textColor = 0,
        this.weixinTF.text = "微信",
        this.weixinTF.x = this.weixinBtn.x + this.weixinBtn.width / 2 - this.weixinTF.width / 2,
        this.weixinTF.y = t + this.weixinBtn.height,
        this.weixinTF.textAlign = egret.HorizontalAlign.CENTER,
        this.addChild(this.weixinTF),
        this.qqzoneTF.size = i,
        this.qqzoneTF.textColor = 0,
        this.qqzoneTF.text = "QQ空间",
        this.qqzoneTF.x = this.qqzoneBtn.x + this.qqzoneBtn.width / 2 - this.qqzoneTF.width / 2,
        this.qqzoneTF.y = t + this.qqzoneBtn.height,
        this.qqzoneTF.textAlign = egret.HorizontalAlign.CENTER,
        this.addChild(this.qqzoneTF),
        this.sinaweiboTF.size = i,
        this.sinaweiboTF.textColor = 0,
        this.sinaweiboTF.text = "新浪微博",
        this.sinaweiboTF.x = this.sinaweiboBtn.x + this.sinaweiboBtn.width / 2 - this.sinaweiboTF.width / 2,
        this.sinaweiboTF.y = t + this.sinaweiboBtn.height,
        this.sinaweiboTF.textAlign = egret.HorizontalAlign.CENTER,
        this.addChild(this.sinaweiboTF),
        this.qqTF.size = i,
        this.qqTF.textColor = 0,
        this.qqTF.text = "QQ好友",
        this.qqTF.x = this.qqBtn.x + this.qqBtn.width / 2 - this.qqTF.width / 2,
        this.qqTF.y = t + this.qqBtn.height,
        this.qqTF.textAlign = egret.HorizontalAlign.CENTER,
        this.addChild(this.qqTF),
        this.renrenTF.size = i,
        this.renrenTF.textColor = 0,
        this.renrenTF.text = "人人网",
        this.renrenTF.x = this.renrenBtn.x + this.renrenBtn.width / 2 - this.renrenTF.width / 2,
        this.renrenTF.y = t + this.renrenBtn.height,
        this.renrenTF.textAlign = egret.HorizontalAlign.CENTER,
        this.addChild(this.renrenTF),
        this.qqweiboTF.size = i,
        this.qqweiboTF.textColor = 0,
        this.qqweiboTF.text = "QQ微博",
        this.qqweiboTF.x = this.qqweiboBtn.x + this.qqweiboBtn.width / 2 - this.qqweiboTF.width / 2,
        this.qqweiboTF.y = e + this.qqweiboBtn.height,
        this.qqweiboTF.textAlign = egret.HorizontalAlign.CENTER,
        this.addChild(this.qqweiboTF),
        this.doubanTF.size = i,
        this.doubanTF.textColor = 0,
        this.doubanTF.text = "豆瓣广播",
        this.doubanTF.x = this.doubanBtn.x + this.doubanBtn.width / 2 - this.doubanTF.width / 2,
        this.doubanTF.y = e + this.doubanBtn.height,
        this.doubanTF.textAlign = egret.HorizontalAlign.CENTER,
        this.addChild(this.doubanTF)
    }
    ,
    n.onWeixinBtnTouchTap = function() {
        Global.dispatchEvent(MainNotify.updateShareNotify, "micromessenger")
    }
    ,
    n.onQQzoneBtnTouchTap = function() {
        Global.dispatchEvent(MainNotify.updateShareNotify, "qzone")
    }
    ,
    n.onSinaweiboBtnTouchTap = function() {
        Global.dispatchEvent(MainNotify.updateShareNotify, "weibo")
    }
    ,
    n.onQQBtnTouchTap = function() {
        Global.dispatchEvent(MainNotify.updateShareNotify, "qq")
    }
    ,
    n.onRenrenBtnTouchTap = function() {
        Global.dispatchEvent(MainNotify.updateShareNotify, "renren")
    }
    ,
    n.onQQweiboBtnTouchTap = function() {
        Global.dispatchEvent(MainNotify.updateShareNotify, "txmicroblog")
    }
    ,
    n.onDoubanBtnTouchTap = function() {
        Global.dispatchEvent(MainNotify.updateShareNotify, "douban")
    }
    ,
    e
}(egret.DisplayObjectContainer);
egret.registerClass(ShareIconRender, "ShareIconRender");
var TipsManager;
!function(t) {
    function e(t, e, i) {
        void 0 === e && (e = ""),
        void 0 === i && (i = 0),
        null == this._dict && (this._dict = []),
        t.addEventListener(egret.TouchEvent.TOUCH_BEGIN, this.showTips, this),
        t.addEventListener(egret.TouchEvent.TOUCH_END, this.removeTips, this),
        t.addEventListener(egret.TouchEvent.TOUCH_RELEASE_OUTSIDE, this.removeTips, this),
        null == this._dict[t.hashCode] && (this._dict[t.hashCode] = [],
        this._dict[t.hashCode].descStr = e,
        this._dict[t.hashCode].effectType = i)
    }
    function i(t) {
        var e = t.currentTarget
          , i = ""
          , n = 0;
        if (null == this._tips) {
            null != this._dict[e.hashCode] && (i = this._dict[e.hashCode].descStr,
            n = this._dict[e.hashCode].effectType),
            this._tips = new TipsPanel(this._dict[e.hashCode].descStr),
            GameConfig.gameScene().topLayer.contains(this._tips) || GameConfig.gameScene().topLayer.addChild(this._tips);
            var s = e.parent.localToGlobal(e.x, e.y);
            switch (s.x = s.x + e.width / 2,
            s.y = s.y - this._tips.height,
            s.x + this._tips.width > GameConfig.curWidth() ? s.x = GameConfig.curWidth() - this._tips.width : s.x < 0 && (s.x = 0),
            s.y + this._tips.height > GameConfig.curHeight() ? s.y = GameConfig.curHeight() - this._tips.height : s.y < 0 && (s.y = 0),
            this._tips.x = s.x,
            this._tips.y = s.y,
            n) {
            case 0:
                this._tips.alpha = 0,
                egret.Tween.get(this._tips).to({
                    alpha: 1
                }, 300);
                break;
            case 1:
                this._tips.alpha = 0,
                this._tips.y += this._tips.height,
                egret.Tween.get(this._tips).to({
                    alpha: 1,
                    y: this._tips.y - this._tips.height
                }, 500, egret.Ease.backOut);
                break;
            case 2:
                this._tips.alpha = 0,
                this._tips.x -= this._tips.width,
                egret.Tween.get(this._tips).to({
                    alpha: 1,
                    x: this._tips.x + this._tips.width
                }, 500, egret.Ease.backOut);
                break;
            case 3:
                this._tips.alpha = 0,
                this._tips.x += this._tips.width,
                egret.Tween.get(this._tips).to({
                    alpha: 1,
                    x: this._tips.x - this._tips.width
                }, 500, egret.Ease.backOut)
            }
        }
    }
    function n(t) {
        t.currentTarget;
        if (null != this._tips) {
            var e = function() {
                GameConfig.gameScene().topLayer.contains(this._tips) && (GameConfig.gameScene().topLayer.removeChild(this._tips),
                this._tips = null )
            }
            ;
            egret.Tween.get(this._tips).to({
                alpha: 0
            }, 300).call(e, this)
        }
    }
    t.addTips = e,
    t.showTips = i,
    t.removeTips = n
}(TipsManager || (TipsManager = {}));
var TipsPanel = function(t) {
    function e(e) {
        void 0 === e && (e = ""),
        t.call(this),
        this.descStr = "",
        this.descStr = e,
        this.initUI()
    }
    __extends(e, t);
    var i = (__define,
    e)
      , n = i.prototype;
    return n.initUI = function() {
        this.bg = new egret.Bitmap,
        this.bg.texture = RES.getRes("tipsBg"),
        this.addChild(this.bg),
        this.bg.touchEnabled = !0,
        this.descTF = new egret.TextField,
        this.addChild(this.descTF),
        this.descTF.textColor = 0,
        this.descTF.size = 20,
        this.descTF.x = 5,
        this.descTF.textAlign = "center",
        this.descTF.text = this.descStr;
        var t = new egret.Rectangle(5,5,5,5);
        this.bg.scale9Grid = t,
        this.bg.width = this.descTF.width + 10,
        this.bg.height = 3 * this.descTF.height,
        this.descTF.y = this.bg.height / 2 - this.descTF.height / 2 + 2
    }
    ,
    e
}(BasePanel);
egret.registerClass(TipsPanel, "TipsPanel");
var GameConfig;
!function(t) {
    function e() {
        var t = window.navigator.userAgent.toLowerCase()
          , e = "" + t.match(/MicroMessenger/i);
        return "null" == e ? !1 : "micromessenger" == e ? !0 : void 0
    }
    function i() {
        return document.body.clientHeight / document.body.clientWidth > 1.32
    }
    function n() {
        var t = window.navigator.userAgent.toLowerCase();
        "" + t.match(/MicroMessenger/i);
        return "" + t.match(/windows nt/i) == "windows nt" ? "windows" : "" + t.match(/iphone/i) == "iphone" ? "ios" : "" + t.match(/android/i) == "android" ? "android" : "" + t.match(/ipad/i) == "ipad" ? "ipad" : "" + t.match(/linux/i) == "linux" ? "linux" : "" + t.match(/mac/i) == "mac" ? "mac" : "" + t.match(/ucbrower/i) == "ucbrower" ? "ucbrower" : void console.log("未知系统类型")
    }
    function s() {
        var t = window.navigator.userAgent.toLowerCase();
        return "" + t.match(/micromessenger/i) == "micromessenger" ? "micromessenger" : "" + t.match(/qzone/i) == "qzone" ? "qzone" : "" + t.match(/weibo/i) == "weibo" ? "weibo" : "" + t.match(/qq/i) == "qq" ? "qq" : "" + t.match(/renren/i) == "renren" ? "renren" : "" + t.match(/txmicroblog/i) == "txmicroblog" ? "txmicroblog" : "" + t.match(/douban/i) == "douban" ? "douban" : "other"
    }
    function a() {
        return null == this.curScene && (this.curScene = new GameScene),
        this.curScene
    }
    function h() {
        return egret.MainContext.instance.stage
    }
    function r() {
        return egret.MainContext.instance.stage.stageWidth
    }
    function o() {
        return egret.MainContext.instance.stage.stageHeight
    }
    function l() {
        var t = window.orientation;
        return 90 == t ? !1 : !0
    }
    t.IS_MUSIC = !0,
    t.isDebug = !1,
    t.URLHEAD = "http://www.mun-u.com/",
    t.FLOOR_PADDING_X = 140,
    t.FLOOR_PADDING_y = -80,
    t.wheel_count = 2,
    t.role_cfg = [{
        price: 0,
        key: "zxh"
    }, {
        price: 20,
        key: "ll"
    }, {
        price: 50,
        key: "hxk"
    }, {
        price: 100,
        key: "cml"
    }],
    t.level_cfg = [[11, 2e3], [20, 1800], [35, 1500], [50, 1200], [99, 1e3], [200, 900], [2e5, 800]],
    t.TextColors = {
        white: 16777215,
        milkWhite: 16511407,
        grayWhite: 13547170,
        yellow: 16776960,
        lightYellow: 16765813,
        orangeYellow: 16750848,
        red: 15799040,
        green: 58624,
        blue: 1742039,
        grayBlue: 3101047,
        purple: 15284466,
        pink: 16724016,
        black: 3026221,
        golden: 16766720
    },
    t.LabelFontSize = {
        littleSize: 12,
        middleSize: 18,
        normalSize: 24,
        bigSize: 36
    },
    t.isWeiXin = e,
    t.isBigScreen = i,
    t.systemType = n,
    t.platformType = s;
    t.gameScene = a,
    t.curStage = h,
    t.curWidth = r,
    t.curHeight = o,
    t.isVertical = l
}(GameConfig || (GameConfig = {}));
var GameLangs;
!function(t) {
    t.share_desc = "一路狂奔之下，获得了惊人的{0}分 ！实在太不容易了！"
}(GameLangs || (GameLangs = {}));
var GlobalData;
!function(t) {
    t.initIsVertical = !1,
    t.isVerticalGame = !1
}(GlobalData || (GlobalData = {}));
var JsonpReq = function() {
    function t() {}
    var e = (__define,
    t);
    e.prototype;
    return t.process = function(e) {
        t.completeCall["call_" + t._regID] = function(i) {
            var n = t._regID;
            e.data = i,
            e.dispatchEvent(new egret.Event(egret.Event.COMPLETE)),
            delete t.completeCall["call_" + n]
        }
        ,
        t.startLoader(e, t._regID++)
    }
    ,
    t.startLoader = function(t, e) {
        var i = document.createElement("script");
        i.src = t._request.url + "JsonpReq.completeCall.call_" + e,
        document.body.appendChild(i)
    }
    ,
    t._regID = 0,
    t.completeCall = {},
    t
}();
egret.registerClass(JsonpReq, "JsonpReq");
var Network;
!function(Network) {
    function sendInfo(t, e) {
        void 0 === t && (t = ""),
        void 0 === e && (e = ""),
        Global.waitPanel = new WaitPanel(1),
        GameConfig.gameScene().maskLayer.removeChildren(),
        GameConfig.gameScene().maskLayer.addChild(Global.waitPanel);
        var i = new egret.URLLoader;
        i.dataFormat = egret.URLLoaderDataFormat.TEXT,
        i.addEventListener(egret.Event.COMPLETE, this.onGetComplete, this);
        var n = new egret.URLRequest(t);
        n.method = egret.URLRequestMethod.GET,
        n.data = new egret.URLVariables(e),
        i.load(n)
    }
    function getSign(t) {
        var e = [];
        for (var i in t) {
            var n = t[i];
            "sign" != i && "" != n && e.push(i + "=" + n + "&")
        }
        e.sort();
        var s = "";
        for (var i in e)
            s += e[i];
        return s = s.substr(0, s.length - 1),
        [(new md5).hex_md5(s + "munu-hw"), s]
    }
    function JsonpServerData(t, e, i, n) {
        void 0 === n && (n = "http://www.mun-u.com/huowu_game/huowu_api.php");
        var s = getSign(t)
          , a = new egret.URLLoader;
        n = n + "?" + s[1] + "&sign=" + s[0] + "&callback=";
        var h = new egret.URLRequest(n);
        a._request = h,
        a.addEventListener(egret.Event.COMPLETE, e, i),
        JsonpReq.process(a)
    }
    function onGetComplete(event) {
        GameConfig.gameScene().maskLayer.removeChild(Global.waitPanel),
        Global.waitPanel = null ;
        var loader = event.target;
        loader.dataFormat = egret.URLLoaderDataFormat.TEXT;
        var data = loader.data
          , data2 = eval("(" + data + ")")
          , notify = loader._eventTarget._request.url;
        lcp.LListener.getInstance().dispatchEvent(new lcp.LEvent(notify,data2,!1))
    }
    Network.sendInfo = sendInfo,
    Network.getSign = getSign,
    Network.JsonpServerData = JsonpServerData,
    Network.onGetComplete = onGetComplete
}(Network || (Network = {}));
var MainNotify;
!function(t) {
    t.onOrientationChange = "onOrientationChange",
    t.onDeviceOrientation = "onDeviceOrientation",
    t.onDeviceMotion = "onDeviceMotion",
    t.closeAlertNotify = "closeAlertNotify",
    t.closeShareNotify = "closeAlertNotify",
    t.updateShareNotify = "updateShareNotify",
    t.confirmationPackNotify = "confirmationPackNotify",
    t.openStartPanelNotify = "openStartPanelNotify",
    t.closeStartPanelNotify = "closeStartPanelNotify",
    t.openGamePanelNotify = "openGamePanelNotify",
    t.closeGamePanelNotify = "closeGamePanelNotify",
    t.openGameOverPanelNotify = "openGameOverPanelNotify",
    t.closeGameOverPanelNotify = "closeGameOverPanelNotify",
    t.openSetPanelNotify = "openSetPanelNotify",
    t.closeSetPanelNotify = "closeSetPanelNotify",
    t.openAlertPanelNotify = "openAlertPanelNotify",
    t.closeAlertPanelNotify = "closeAlertPanelNotify",
    t.openSelectPanelNotify = "openSelectPanelNotify",
    t.closeSelectPanelNotify = "closeSelectPanelNotify"
}(MainNotify || (MainNotify = {}));
var EffectUtils;
!function(t) {
    function e(t, e) {
        if (void 0 === e && (e = 1e3),
        null == this.rotationArr && (this.rotationArr = []),
        !this.rotationArr[t.hashCode]) {
            null != this.rotationArr[t.hashCode] && this.rotationArr[t.hashCode] || (this.rotationArr[t.hashCode] = !0);
            var i = function() {
                this.rotationArr[t.hashCode] && null != t && (t.rotation = 0,
                egret.Tween.get(t).to({
                    rotation: 360
                }, e).call(i, this))
            }
            ;
            t.rotation = 0,
            egret.Tween.get(t).to({
                rotation: 360
            }, e).call(i, this)
        }
    }
    function i(t) {
        null == this.rotationArr && (this.rotationArr = []),
        this.rotationArr[t.hashCode] = !1
    }
    function n(t, e) {
        void 0 === e && (e = 1e3),
        new BitmapBlink(t,e)
    }
    function s(t) {
        var e = 80
          , i = t.x;
        egret.Tween.get(t).to({
            x: t.x - 10
        }, e),
        egret.setTimeout(function() {
            egret.Tween.get(t).to({
                x: t.x + 20
            }, e)
        }, this, 2 * e),
        egret.setTimeout(function() {
            egret.Tween.get(t).to({
                x: t.x - 20
            }, e)
        }, this, 3 * e),
        egret.setTimeout(function() {
            egret.Tween.get(t).to({
                x: t.x + 20
            }, e)
        }, this, 4 * e),
        egret.setTimeout(function() {
            egret.Tween.get(t).to({
                x: i
            }, e)
        }, this, 5 * e)
    }
    function a(t) {
        void 0 === t && (t = 1);
        var e = GameConfig.curPanel
          , i = 40
          , n = e.x
          , s = e.y;
        1 == t ? (egret.Tween.get(e).to({
            x: e.x - 10
        }, i),
        egret.setTimeout(function() {
            egret.Tween.get(e).to({
                x: e.x + 20
            }, i)
        }, this, 2 * i),
        egret.setTimeout(function() {
            egret.Tween.get(e).to({
                x: e.x - 20
            }, i)
        }, this, 3 * i),
        egret.setTimeout(function() {
            egret.Tween.get(e).to({
                x: e.x + 20
            }, i)
        }, this, 4 * i),
        egret.setTimeout(function() {
            egret.Tween.get(e).to({
                x: n
            }, i)
        }, this, 5 * i)) : (egret.Tween.get(e).to({
            x: e.x - 10,
            y: e.y
        }, i),
        egret.setTimeout(function() {
            egret.Tween.get(e).to({
                x: e.x + 20,
                y: e.y
            }, i)
        }, this, 2 * i),
        egret.setTimeout(function() {
            egret.Tween.get(e).to({
                x: e.x,
                y: e.y + 15
            }, i)
        }, this, 3 * i),
        egret.setTimeout(function() {
            egret.Tween.get(e).to({
                x: e.x,
                y: e.y - 20
            }, i)
        }, this, 4 * i),
        egret.setTimeout(function() {
            egret.Tween.get(e).to({
                x: e.x,
                y: e.y + 10
            }, i)
        }, this, 5 * i),
        egret.setTimeout(function() {
            egret.Tween.get(e).to({
                x: n,
                y: s
            }, i)
        }, this, 6 * i))
    }
    function h(t, e, i) {
        switch (void 0 === t && (t = ""),
        void 0 === e && (e = 1),
        void 0 === i && (i = !1),
        e) {
        case 1:
            TipsUtils.showTipsDownToUp(t, i);
            break;
        case 2:
            TipsUtils.showTipsLeftOrRight(t, i, !0);
            break;
        case 3:
            TipsUtils.showTipsLeftOrRight(t, i, !1);
            break;
        case 4:
            TipsUtils.showTipsFromCenter(t, i);
            break;
        case 5:
            TipsUtils.showTipsBigToSmall(t, i)
        }
    }
    function r(t, e) {
        if (void 0 === e && (e = 1),
        !this.isPlayEffectPlay) {
            this.isPlayEffectPlay = !0;
            var i = function() {
                this.isPlayEffectPlay = !1
            }
              , n = function() {
                1 == e ? egret.Tween.get(t).to({
                    scaleX: 1,
                    scaleY: 1,
                    x: t.x - t.width / 4,
                    y: t.y - t.height / 4
                }, 500, egret.Ease.elasticOut).call(i, this) : 2 == e ? egret.Tween.get(t).to({
                    scaleX: 1,
                    scaleY: 1,
                    x: t.x - t.width / 4,
                    y: t.y - t.height / 4
                }, 500, egret.Ease.backOut).call(i, this) : 3 == e && egret.Tween.get(t).to({
                    scaleX: 1,
                    scaleY: 1,
                    x: t.x - t.width / 4,
                    y: t.y - t.height / 4
                }, 100).call(i, this)
            }
            ;
            egret.Tween.get(t).to({
                scaleX: .5,
                scaleY: .5,
                x: t.x + t.width / 4,
                y: t.y + t.height / 4
            }, 100, egret.Ease.sineIn).call(n, this)
        }
    }
    function o(t) {
        var e = function() {
            if (null != t) {
                var i = function() {
                    t.scaleX = 1,
                    t.scaleY = 1,
                    egret.Tween.get(t).to({
                        alpha: 1
                    }, 1e3).call(e, self)
                }
                ;
                t.alpha = 1,
                egret.Tween.get(t).to({
                    scaleX: 1.5,
                    scaleY: 1.5,
                    alpha: 0
                }, 1e3).call(i, self)
            }
        }
        ;
        e()
    }
    function l(t, e, i) {
        void 0 === i && (i = 50);
        var n = function() {
            if (null != t) {
                var s = function() {
                    egret.Tween.get(t).to({
                        y: t.y - i
                    }, e).call(n, this)
                }
                ;
                egret.Tween.get(t).to({
                    y: t.y + i
                }, e).call(s, this)
            }
        }
        ;
        n()
    }
    function c(t, e, i) {
        void 0 === i && (i = 20);
        var n = function() {
            if (null != t) {
                var s = function() {
                    egret.Tween.get(t).to({
                        rotation: -i
                    }, e).call(n, this)
                }
                ;
                egret.Tween.get(t).to({
                    rotation: i
                }, e).call(s, this)
            }
        }
        ;
        n()
    }
    function g(t, e, i) {
        void 0 === e && (e = ""),
        void 0 === i && (i = 200);
        for (var n = e.split(""), s = n.length, a = 0; s > a; a++)
            egret.setTimeout(function() {
                t.appendText(n[Number(this)])
            }, a, i * a)
    }
    t.rotationEffect = e,
    t.removeRotationEffect = i,
    t.blinkEffect = n,
    t.shakeObj = s,
    t.shakeScreen = a,
    t.showTips = h;
    t.playEffect = r,
    t.playScaleEffect = o,
    t.flyObj = l,
    t.rockObj = c,
    t.typerEffect = g
}(EffectUtils || (EffectUtils = {}));
var Global;
!function(t) {
    function e(t, e) {
        return NativeApi.datas.is_music ? createjs.Sound.play(t) : void 0
    }
    function i(e, i) {
        return _ = e,
        NativeApi.datas.is_music ? (t.bg_music = createjs.Sound.play(e, {
            loop: -1
        }),
        t.bg_music) : void 0
    }
    function n() {
        t.bg_music ? t.bg_music.play({
            loop: -1
        }) : t.bg_music = createjs.Sound.play(_, {
            loop: -1
        })
    }
    function s(t, e, i, n) {
        return void 0 === e && (e = null ),
        void 0 === i && (i = !1),
        void 0 === n && (n = !1),
        new lcp.LEvent(t,e,i,n)
    }
    function a(t, e, i, n) {
        void 0 === e && (e = null ),
        void 0 === i && (i = !1),
        void 0 === n && (n = !1);
        var s = new lcp.LEvent(t,e,i,n);
        lcp.LListener.getInstance().dispatchEvent(s)
    }
    function h(t, e, i, n, s) {
        void 0 === n && (n = !1),
        void 0 === s && (s = 0),
        lcp.LListener.getInstance().addEventListener(t, e, i, n, s)
    }
    function r(t, e, i, n) {
        void 0 === n && (n = !1),
        lcp.LListener.getInstance().removeEventListener(t, e, i, n)
    }
    function o(t) {}
    function l(t, e) {
        return t && e ? !(t.x >= e.x || t.y >= e.y || t.x + t.width <= e.x + e.width || t.y + t.height <= e.y + e.height) : !1
    }
    function c(t, e) {
        var i = t.x + t.width
          , n = t.y + t.height
          , s = e.x + e.width
          , a = e.y + e.height;
        return !(i < e.x || s < t.x || n < e.y || a < t.y)
    }
    function g(t) {
        void 0 === t && (t = !1)
    }
    function d(e, i, n, s) {
        void 0 === e && (e = ""),
        void 0 === i && (i = ""),
        void 0 === n && (n = null ),
        void 0 === s && (s = 1),
        null == this._alert && (this._alert = new AlertPanel(e,i,null ,n),
        PopUpManager.addPopUp(this._alert, !0, this._alert.getWidth(), this._alert.getHeight(), s, !0),
        t.addEventListener(MainNotify.closeAlertNotify, this.closeAlertPanel, this))
    }
    function u(e, i, n, s, a) {
        void 0 === e && (e = ""),
        void 0 === i && (i = ""),
        void 0 === n && (n = null ),
        void 0 === s && (s = null ),
        void 0 === a && (a = 1),
        null == this._alert && (this._alert = new AlertPanel(e,i,n,s,2),
        PopUpManager.addPopUp(this._alert, !0, this._alert.getWidth(), this._alert.getHeight(), a, !0),
        t.addEventListener(MainNotify.closeAlertNotify, this.closeAlertPanel, this))
    }
    function f() {
        null != this._alert && (PopUpManager.removePopUp(this._alert, 1),
        this._alert = null )
    }
    function p() {
        null == this._share && (this._share = new ShareIconPanel,
        PopUpManager.addPopUp(this._share, !1, GameConfig.curWidth(), GameConfig.curHeight()),
        t.addEventListener(MainNotify.closeShareNotify, this.closeSharePanel, this))
    }
    function m() {
        null != this._share && (PopUpManager.removePopUp(this._share, 0),
        this._share = null )
    }
    RES;
    t.key = "zxh";
    var _ = null ;
    t.playEffect = e,
    t.playMusic = i,
    t.resumMusic = n,
    t.Event = s,
    t.dispatchEvent = a,
    t.addEventListener = h,
    t.removeEventListener = r,
    t.shareUtils = o,
    t.rectContainsRect = l,
    t.rectIntersectsRect = c,
    t.rotationResize = g;
    t.alert = d,
    t.confirm = u,
    t.closeAlertPanel = f;
    t.share = p,
    t.closeSharePanel = m
}(Global || (Global = {}));
var md5 = function() {
    function t() {
        this.hexcase = 0,
        this.b64pad = ""
    }
    var e = (__define,
    t)
      , i = e.prototype;
    return i.hex_md5 = function(t) {
        return this.rstr2hex(this.rstr_md5(this.str2rstr_utf8(t)))
    }
    ,
    i.b64_md5 = function(t) {
        return this.rstr2b64(this.rstr_md5(this.str2rstr_utf8(t)))
    }
    ,
    i.any_md5 = function(t, e) {
        return this.rstr2any(this.rstr_md5(this.str2rstr_utf8(t)), e)
    }
    ,
    i.hex_hmac_md5 = function(t, e) {
        return this.rstr2hex(this.rstr_hmac_md5(this.str2rstr_utf8(t), this.str2rstr_utf8(e)))
    }
    ,
    i.b64_hmac_md5 = function(t, e) {
        return this.rstr2b64(this.rstr_hmac_md5(this.str2rstr_utf8(t), this.str2rstr_utf8(e)))
    }
    ,
    i.any_hmac_md5 = function(t, e, i) {
        return this.rstr2any(this.rstr_hmac_md5(this.str2rstr_utf8(t), this.str2rstr_utf8(e)), i)
    }
    ,
    i.md5_vm_test = function() {
        return "900150983cd24fb0d6963f7d28e17f72" == this.hex_md5("abc").toLowerCase()
    }
    ,
    i.rstr_md5 = function(t) {
        return this.binl2rstr(this.binl_md5(this.rstr2binl(t), 8 * t.length))
    }
    ,
    i.rstr_hmac_md5 = function(t, e) {
        var i = this.rstr2binl(t);
        i.length > 16 && (i = this.binl_md5(i, 8 * t.length));
        for (var n = Array(16), s = Array(16), a = 0; 16 > a; a++)
            n[a] = 909522486 ^ i[a],
            s[a] = 1549556828 ^ i[a];
        var h = this.binl_md5(n.concat(this.rstr2binl(e)), 512 + 8 * e.length);
        return this.binl2rstr(this.binl_md5(s.concat(h), 640))
    }
    ,
    i.rstr2hex = function(t) {
        try {
            this.hexcase
        } catch (e) {
            this.hexcase = 0
        }
        for (var i, n = this.hexcase ? "0123456789ABCDEF" : "0123456789abcdef", s = "", a = 0; a < t.length; a++)
            i = t.charCodeAt(a),
            s += n.charAt(i >>> 4 & 15) + n.charAt(15 & i);
        return s
    }
    ,
    i.rstr2b64 = function(t) {
        try {
            this.b64pad
        } catch (e) {
            this.b64pad = ""
        }
        for (var i = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", n = "", s = t.length, a = 0; s > a; a += 3)
            for (var h = t.charCodeAt(a) << 16 | (s > a + 1 ? t.charCodeAt(a + 1) << 8 : 0) | (s > a + 2 ? t.charCodeAt(a + 2) : 0), r = 0; 4 > r; r++)
                n += 8 * a + 6 * r > 8 * t.length ? this.b64pad : i.charAt(h >>> 6 * (3 - r) & 63);
        return n
    }
    ,
    i.rstr2any = function(t, e) {
        var i, n, s, a, h, r = e.length, o = Array(Math.ceil(t.length / 2));
        for (i = 0; i < o.length; i++)
            o[i] = t.charCodeAt(2 * i) << 8 | t.charCodeAt(2 * i + 1);
        var l = Math.ceil(8 * t.length / (Math.log(e.length) / Math.log(2)))
          , c = Array(l);
        for (n = 0; l > n; n++) {
            for (h = Array(),
            a = 0,
            i = 0; i < o.length; i++)
                a = (a << 16) + o[i],
                s = Math.floor(a / r),
                a -= s * r,
                (h.length > 0 || s > 0) && (h[h.length] = s);
            c[n] = a,
            o = h
        }
        var g = "";
        for (i = c.length - 1; i >= 0; i--)
            g += e.charAt(c[i]);
        return g
    }
    ,
    i.str2rstr_utf8 = function(t) {
        for (var e, i, n = "", s = -1; ++s < t.length; )
            e = t.charCodeAt(s),
            i = s + 1 < t.length ? t.charCodeAt(s + 1) : 0,
            e >= 55296 && 56319 >= e && i >= 56320 && 57343 >= i && (e = 65536 + ((1023 & e) << 10) + (1023 & i),
            s++),
            127 >= e ? n += String.fromCharCode(e) : 2047 >= e ? n += String.fromCharCode(192 | e >>> 6 & 31, 128 | 63 & e) : 65535 >= e ? n += String.fromCharCode(224 | e >>> 12 & 15, 128 | e >>> 6 & 63, 128 | 63 & e) : 2097151 >= e && (n += String.fromCharCode(240 | e >>> 18 & 7, 128 | e >>> 12 & 63, 128 | e >>> 6 & 63, 128 | 63 & e));
        return n
    }
    ,
    i.str2rstr_utf16le = function(t) {
        for (var e = "", i = 0; i < t.length; i++)
            e += String.fromCharCode(255 & t.charCodeAt(i), t.charCodeAt(i) >>> 8 & 255);
        return e
    }
    ,
    i.str2rstr_utf16be = function(t) {
        for (var e = "", i = 0; i < t.length; i++)
            e += String.fromCharCode(t.charCodeAt(i) >>> 8 & 255, 255 & t.charCodeAt(i));
        return e
    }
    ,
    i.rstr2binl = function(t) {
        for (var e = Array(t.length >> 2), i = 0; i < e.length; i++)
            e[i] = 0;
        for (var i = 0; i < 8 * t.length; i += 8)
            e[i >> 5] |= (255 & t.charCodeAt(i / 8)) << i % 32;
        return e
    }
    ,
    i.binl2rstr = function(t) {
        for (var e = "", i = 0; i < 32 * t.length; i += 8)
            e += String.fromCharCode(t[i >> 5] >>> i % 32 & 255);
        return e
    }
    ,
    i.binl_md5 = function(t, e) {
        t[e >> 5] |= 128 << e % 32,
        t[(e + 64 >>> 9 << 4) + 14] = e;
        for (var i = 1732584193, n = -271733879, s = -1732584194, a = 271733878, h = 0; h < t.length; h += 16) {
            var r = i
              , o = n
              , l = s
              , c = a;
            i = this.md5_ff(i, n, s, a, t[h + 0], 7, -680876936),
            a = this.md5_ff(a, i, n, s, t[h + 1], 12, -389564586),
            s = this.md5_ff(s, a, i, n, t[h + 2], 17, 606105819),
            n = this.md5_ff(n, s, a, i, t[h + 3], 22, -1044525330),
            i = this.md5_ff(i, n, s, a, t[h + 4], 7, -176418897),
            a = this.md5_ff(a, i, n, s, t[h + 5], 12, 1200080426),
            s = this.md5_ff(s, a, i, n, t[h + 6], 17, -1473231341),
            n = this.md5_ff(n, s, a, i, t[h + 7], 22, -45705983),
            i = this.md5_ff(i, n, s, a, t[h + 8], 7, 1770035416),
            a = this.md5_ff(a, i, n, s, t[h + 9], 12, -1958414417),
            s = this.md5_ff(s, a, i, n, t[h + 10], 17, -42063),
            n = this.md5_ff(n, s, a, i, t[h + 11], 22, -1990404162),
            i = this.md5_ff(i, n, s, a, t[h + 12], 7, 1804603682),
            a = this.md5_ff(a, i, n, s, t[h + 13], 12, -40341101),
            s = this.md5_ff(s, a, i, n, t[h + 14], 17, -1502002290),
            n = this.md5_ff(n, s, a, i, t[h + 15], 22, 1236535329),
            i = this.md5_gg(i, n, s, a, t[h + 1], 5, -165796510),
            a = this.md5_gg(a, i, n, s, t[h + 6], 9, -1069501632),
            s = this.md5_gg(s, a, i, n, t[h + 11], 14, 643717713),
            n = this.md5_gg(n, s, a, i, t[h + 0], 20, -373897302),
            i = this.md5_gg(i, n, s, a, t[h + 5], 5, -701558691),
            a = this.md5_gg(a, i, n, s, t[h + 10], 9, 38016083),
            s = this.md5_gg(s, a, i, n, t[h + 15], 14, -660478335),
            n = this.md5_gg(n, s, a, i, t[h + 4], 20, -405537848),
            i = this.md5_gg(i, n, s, a, t[h + 9], 5, 568446438),
            a = this.md5_gg(a, i, n, s, t[h + 14], 9, -1019803690),
            s = this.md5_gg(s, a, i, n, t[h + 3], 14, -187363961),
            n = this.md5_gg(n, s, a, i, t[h + 8], 20, 1163531501),
            i = this.md5_gg(i, n, s, a, t[h + 13], 5, -1444681467),
            a = this.md5_gg(a, i, n, s, t[h + 2], 9, -51403784),
            s = this.md5_gg(s, a, i, n, t[h + 7], 14, 1735328473),
            n = this.md5_gg(n, s, a, i, t[h + 12], 20, -1926607734),
            i = this.md5_hh(i, n, s, a, t[h + 5], 4, -378558),
            a = this.md5_hh(a, i, n, s, t[h + 8], 11, -2022574463),
            s = this.md5_hh(s, a, i, n, t[h + 11], 16, 1839030562),
            n = this.md5_hh(n, s, a, i, t[h + 14], 23, -35309556),
            i = this.md5_hh(i, n, s, a, t[h + 1], 4, -1530992060),
            a = this.md5_hh(a, i, n, s, t[h + 4], 11, 1272893353),
            s = this.md5_hh(s, a, i, n, t[h + 7], 16, -155497632),
            n = this.md5_hh(n, s, a, i, t[h + 10], 23, -1094730640),
            i = this.md5_hh(i, n, s, a, t[h + 13], 4, 681279174),
            a = this.md5_hh(a, i, n, s, t[h + 0], 11, -358537222),
            s = this.md5_hh(s, a, i, n, t[h + 3], 16, -722521979),
            n = this.md5_hh(n, s, a, i, t[h + 6], 23, 76029189),
            i = this.md5_hh(i, n, s, a, t[h + 9], 4, -640364487),
            a = this.md5_hh(a, i, n, s, t[h + 12], 11, -421815835),
            s = this.md5_hh(s, a, i, n, t[h + 15], 16, 530742520),
            n = this.md5_hh(n, s, a, i, t[h + 2], 23, -995338651),
            i = this.md5_ii(i, n, s, a, t[h + 0], 6, -198630844),
            a = this.md5_ii(a, i, n, s, t[h + 7], 10, 1126891415),
            s = this.md5_ii(s, a, i, n, t[h + 14], 15, -1416354905),
            n = this.md5_ii(n, s, a, i, t[h + 5], 21, -57434055),
            i = this.md5_ii(i, n, s, a, t[h + 12], 6, 1700485571),
            a = this.md5_ii(a, i, n, s, t[h + 3], 10, -1894986606),
            s = this.md5_ii(s, a, i, n, t[h + 10], 15, -1051523),
            n = this.md5_ii(n, s, a, i, t[h + 1], 21, -2054922799),
            i = this.md5_ii(i, n, s, a, t[h + 8], 6, 1873313359),
            a = this.md5_ii(a, i, n, s, t[h + 15], 10, -30611744),
            s = this.md5_ii(s, a, i, n, t[h + 6], 15, -1560198380),
            n = this.md5_ii(n, s, a, i, t[h + 13], 21, 1309151649),
            i = this.md5_ii(i, n, s, a, t[h + 4], 6, -145523070),
            a = this.md5_ii(a, i, n, s, t[h + 11], 10, -1120210379),
            s = this.md5_ii(s, a, i, n, t[h + 2], 15, 718787259),
            n = this.md5_ii(n, s, a, i, t[h + 9], 21, -343485551),
            i = this.safe_add(i, r),
            n = this.safe_add(n, o),
            s = this.safe_add(s, l),
            a = this.safe_add(a, c)
        }
        return [i, n, s, a]
    }
    ,
    i.md5_cmn = function(t, e, i, n, s, a) {
        return this.safe_add(this.bit_rol(this.safe_add(this.safe_add(e, t), this.safe_add(n, a)), s), i)
    }
    ,
    i.md5_ff = function(t, e, i, n, s, a, h) {
        return this.md5_cmn(e & i | ~e & n, t, e, s, a, h)
    }
    ,
    i.md5_gg = function(t, e, i, n, s, a, h) {
        return this.md5_cmn(e & n | i & ~n, t, e, s, a, h)
    }
    ,
    i.md5_hh = function(t, e, i, n, s, a, h) {
        return this.md5_cmn(e ^ i ^ n, t, e, s, a, h)
    }
    ,
    i.md5_ii = function(t, e, i, n, s, a, h) {
        return this.md5_cmn(i ^ (e | ~n), t, e, s, a, h)
    }
    ,
    i.safe_add = function(t, e) {
        var i = (65535 & t) + (65535 & e)
          , n = (t >> 16) + (e >> 16) + (i >> 16);
        return n << 16 | 65535 & i
    }
    ,
    i.bit_rol = function(t, e) {
        return t << e | t >>> 32 - e
    }
    ,
    t
}();
egret.registerClass(md5, "md5");
var game;
!function(t) {
    var e = function() {
        function t() {}
        var e = (__define,
        t);
        e.prototype;
        return t
    }();
    t.MSound = e,
    egret.registerClass(e, "game.MSound")
}(game || (game = {}));
var NativeApi;
!function(t) {
    function e() {
        var e = JSON.stringify(t.datas);
        egret.localStorage.setItem(t.key, e)
    }
    function i() {
        t.key = munu.url_data.channel + munu.game_id;
        var i = egret.localStorage.getItem(t.key);
        null == i || "" == i ? (t.datas = {
            maxScore: 0,
            is_music: 1,
            coins: 0,
            unlock: {
                zxh: 1,
                ll: 0,
                hxk: 0,
                cml: 0
            },
            version: r
        },
        e()) : t.datas = JSON.parse(i)
    }
    function n(t, e) {
        egret.localStorage.setItem(t, e)
    }
    function s(t) {
        return egret.localStorage.getItem(t)
    }
    function a(t) {
        egret.localStorage.removeItem(t)
    }
    function h() {
        egret.localStorage.clear()
    }
    t.key = null ;
    var r = 1;
    t.saveData = e,
    t.loadData = i,
    t.setLocalData = n,
    t.getLocalData = s,
    t.deleteLocalData = a,
    t.clearLocalData = h
}(NativeApi || (NativeApi = {}));
var game;
!function(t) {
    var e = function() {
        function t(t, e, i, n, s, a, h, r, o) {
            void 0 === n && (n = 0),
            void 0 === s && (s = 60),
            void 0 === a && (a = 0),
            void 0 === h && (h = null ),
            void 0 === r && (r = null );
            var l = s * Math.PI / 180;
            this.startT = a,
            this.p = [0, 0],
            this.m = [0, 0],
            this.q = [0, 0],
            this.p[0] = e[0] + (i[0] - e[0]) * this.startT,
            this.p[1] = -n + e[1],
            this.m[0] = e[0] + .5 * (i[0] - e[0]),
            this.m[1] = -n + e[1] - Math.tan(l) * (this.m[0] - e[0]),
            this.q = i,
            this.tween = egret.Tween.get(this, h).to({
                factor: 1
            }, t, r).call(this.complete, this),
            this.time = t,
            this.move_y = o,
            this.finishedCallback = null ,
            this.finishedCbTarget = null
        }
        var e = __define
          , i = t
          , n = i.prototype;
        return n.doOppTween = function() {}
        ,
        n.setTarget = function(t, e) {
            this.target1 = t,
            this.target2 = e,
            this.start_y = this.target2.y
        }
        ,
        e(n, "factor", function() {
            return this.startT
        }, function(t) {
            this.target1.x = (1 - t) * (1 - t) * this.p[0] + 2 * t * (1 - t) * this.m[0] + t * t * this.q[0],
            this.target2.y = this.start_y + this.move_y * t,
            this.target1.y = (1 - t) * (1 - t) * this.p[1] + 2 * t * (1 - t) * this.m[1] + t * t * this.q[1],
            t >= .5 && this.target1.status && this.target1.changeToDrop()
        }),
        n.setLoop = function(t) {
            this.isLoop = t
        }
        ,
        n.setFillMotion = function(t) {
            this.isFillMotion = t
        }
        ,
        n.complete = function() {
            this.isFillMotion ? this.doOppTween() : null != this.finishedCallback && this.finishedCbTarget && this.finishedCallback.call(this.finishedCbTarget, this.target2, this.finishedCbParams)
        }
        ,
        n.setCallback = function(t, e, i) {
            this.finishedCallback = t,
            this.finishedCbTarget = e,
            this.finishedCbParams = i
        }
        ,
        n.registerOnChange = function(t, e) {
            void 0 === e && (e = null ),
            this.onChangeFunc = t,
            this.onChangeObj = e
        }
        ,
        n.remove = function() {
            this.tween && (egret.Tween.removeTweens(this),
            this.tween = null ,
            this.target1 = null ,
            this.target2 = null ,
            this.finishedCbTarget = null )
        }
        ,
        n.pause = function() {
            this.tween.setPaused(!0)
        }
        ,
        n.resume = function() {
            this.tween.setPaused(!1)
        }
        ,
        t
    }();
    t.ParabolaTo = e,
    egret.registerClass(e, "game.ParabolaTo")
}(game || (game = {}));
var RegUtils;
!function(t) {
    function e(t) {
        var e = /^[\w-]+(\.[\w-]+)*@[\w-]+(\.[\w-]+)+$/;
        return e.test(t) ? !0 : (alert("您输入的Email地址格式不正确！"),
        !1)
    }
    function i(t) {
        if (a(t))
            return !1;
        var e = /^(\d+)\.(\d+)\.(\d+)\.(\d+)$/g;
        return e.test(t) && Number(RegExp.$1) < 256 && Number(RegExp.$2) < 256 && Number(RegExp.$3) < 256 && Number(RegExp.$4) < 256 ? !0 : !1
    }
    function n(t) {
        var e = "/^[1][3][0-9]{9}$/"
          , i = new RegExp(e);
        return i.test(t) ? !0 : !1
    }
    function s(t) {
        var e = /^[0][1-9]{2,3}-[0-9]{5,10}$/
          , i = /^[1-9]{1}[0-9]{5,8}$/
          , n = "您输入的电话号码不正确!";
        return t.length > 9 ? e.test(t) ? !0 : (alert(n),
        !1) : i.test(t) ? !0 : (alert(n),
        !1)
    }
    function a(t) {
        if ("" == t)
            return !0;
        var e = "^[ ]+$"
          , i = new RegExp(e);
        return i.test(t)
    }
    function h(t) {
        var e = /^[-]{0,1}[0-9]{1,}$/;
        return e.test(t)
    }
    function r(t) {
        var e = "^[0-9]+$"
          , i = new RegExp(e);
        return -1 != t.search(i) ? !0 : !1
    }
    function o(t) {
        var e = "^[0-9]+[.][0-9]{0,3}$"
          , i = new RegExp(e);
        return i.test(t) ? !0 : !1
    }
    function l(t, e) {
        var i = " "
          , n = -1;
        if (0 == e || 1 == e) {
            for (; " " == i; )
                ++n,
                i = t.substr(n, 1);
            t = t.substring(n)
        }
        if (0 == e || 2 == e) {
            for (i = " ",
            n = t.length; " " == i; )
                --n,
                i = t.substr(n, 1);
            t = t.substring(0, n + 1)
        }
        return t
    }
    t.checkEmail = e,
    t.isIP = i,
    t.checkMobile = n,
    t.checkPhone = s,
    t.isNull = a,
    t.isInteger = h,
    t.isNumber = r,
    t.isMoney = o,
    t.cTrim = l
}(RegUtils || (RegUtils = {}));
var munu;
!function(t) {
    var e = function(t) {
        function e() {
            t.call(this),
            e._instance = this
        }
        __extends(e, t);
        var i = (__define,
        e)
          , n = i.prototype;
        return e.getInstance = function() {
            return e._instance
        }
        ,
        n.getVisibleRect = function() {
            return this.visibleRect
        }
        ,
        n.calculateStageSize = function(i, n, s, a, h) {
            e.SCREEN_WIDTH = n,
            e.SCREEN_HEIGHT = s,
            e.DESIGN_WIDTH = a,
            e.DESIGN_HEIGHT = h;
            var r = {
                x: 0,
                y: 0,
                width: e.DESIGN_WIDTH,
                height: e.DESIGN_HEIGHT
            };
            if (egret.log("scaleMode:", i),
            i == egret.StageScaleMode.NO_BORDER) {
                var o = n / e.DESIGN_WIDTH || 0
                  , l = s / e.DESIGN_HEIGHT || 0
                  , c = 0;
                o > l ? (c = 1,
                this.widthScale = o,
                this.heightScale = this.widthScale) : (c = 2,
                this.heightScale = l,
                this.widthScale = this.heightScale);
                var g;
                1 == c && (g = e.DESIGN_HEIGHT - e.SCREEN_HEIGHT / this.heightScale) ? (r.y = .5 * g,
                r.height = e.DESIGN_HEIGHT - 2 * r.y) : 2 == c && (g = e.DESIGN_WIDTH - e.SCREEN_WIDTH / this.widthScale) && (r.x = .5 * g,
                r.width = e.DESIGN_WIDTH - 2 * r.x)
            } else if (i == egret.StageScaleMode.FIXED_WIDTH) {
                this.widthScale = n / e.DESIGN_WIDTH || 0,
                this.heightScale = this.widthScale;
                var g = e.DESIGN_HEIGHT - e.SCREEN_HEIGHT / this.heightScale;
                r.height = e.DESIGN_HEIGHT - g
            } else if (i == egret.StageScaleMode.FIXED_HEIGHT) {
                this.heightScale = n / e.DESIGN_HEIGHT || 0,
                this.widthScale = this.heightScale;
                var g = e.DESIGN_WIDTH - e.SCREEN_WIDTH / this.widthScale;
                r.width = e.DESIGN_WIDTH - g
            }
            return this.visibleRect = r,
            this.scaleMode = i,
            t.prototype.calculateStageSize.call(this, i, n, s, a, h)
        }
        ,
        n.justEnableAnchor = function(t) {
            if (t instanceof egret.DisplayObjectContainer)
                for (var e, i = t.numChildren, n = 0; i > n; n++)
                    e = t.getChildAt(n),
                    e instanceof egret.DisplayObjectContainer ? this.justEnableAnchor(e) : (void 0 != e.anchorX && (e.x -= e.width * e.anchorX),
                    void 0 != e.anchorY && (e.y -= e.height * e.anchorY));
            else
                void 0 != e.anchorX && (e.x -= e.width * e.anchorX),
                void 0 != e.anchorY && (e.y -= e.height * e.anchorY)
        }
        ,
        n.fixPositon = function(t) {
            var e = this.visibleRect;
            t.x = e.x,
            t.y = e.y;
            for (var i, n = t.numChildren, s = 0; n > s; s++)
                i = t.getChildAt(s),
                i instanceof egret.DisplayObjectContainer ? this.processContainer(i) : this.processChild(i)
        }
        ,
        n.processContainer = function(t) {
            for (var e, i = t.numChildren, n = 0; i > n; n++)
                e = t.getChildAt(n),
                e instanceof egret.DisplayObjectContainer ? this.processContainer(e) : this.processChild(e)
        }
        ,
        n.processChild = function(t) {
            egret.log("processChild", t.anchorX, t.anchorY);
            var i = t.anchorX || 0
              , n = t.anchorY || 0
              , s = t
              , a = s.x / e.DESIGN_WIDTH
              , h = s.y / e.DESIGN_HEIGHT;
            s.x = a * this.visibleRect.width - s.width * i,
            s.y = h * this.visibleRect.height - s.height * n
        }
        ,
        e
    }(egret.sys.ScreenAdapter);
    t.ScreenAdapter = e,
    egret.registerClass(e, "munu.ScreenAdapter")
}(munu || (munu = {}));
var BitmapBlink = function(t) {
    function e(e, i, n) {
        void 0 === n && (n = !0),
        t.call(this),
        this._target = e,
        this._time = i,
        n && this.start()
    }
    __extends(e, t);
    var i = (__define,
    e)
      , n = i.prototype;
    return n.start = function() {
        this._currTime = egret.getTimer(),
        this._target.addEventListener(egret.Event.ENTER_FRAME, this.runDown, this)
    }
    ,
    n.runDown = function(t) {
        this._target.alpha -= .045,
        this.checkOver() || this._target.alpha <= .6 && (this._target.removeEventListener(egret.Event.ENTER_FRAME, this.runDown, this),
        this._target.addEventListener(egret.Event.ENTER_FRAME, this.runUp, this))
    }
    ,
    n.runUp = function(t) {
        this._target.alpha += .045,
        this.checkOver() || this._target.alpha >= 1 && (this._target.removeEventListener(egret.Event.ENTER_FRAME, this.runUp, this),
        this._target.addEventListener(egret.Event.ENTER_FRAME, this.runDown, this))
    }
    ,
    n.checkOver = function() {
        var t = egret.getTimer();
        return t - this._currTime >= this._time ? (this.destroy(),
        !0) : !1
    }
    ,
    n.destroy = function() {
        this._target.alpha = 1,
        this._target.removeEventListener(egret.Event.ENTER_FRAME, this.runDown, this),
        this._target.removeEventListener(egret.Event.ENTER_FRAME, this.runUp, this),
        this.dispatchEventWith(egret.Event.COMPLETE, !1, this._target),
        this._target = null
    }
    ,
    e
}(egret.EventDispatcher);
egret.registerClass(BitmapBlink, "BitmapBlink");
var lcp;
!function(t) {
    var e = function(t) {
        function e(e, i, n, s) {
            void 0 === i && (i = null ),
            void 0 === n && (n = !1),
            void 0 === s && (s = !1),
            t.call(this, e, n, s),
            this.CLASS_NAME = "LEvent",
            i && (this._obj = i)
        }
        __extends(e, t);
        var i = __define
          , n = e
          , s = n.prototype;
        return s.clone = function(t) {
            return new e(this.type,t ? t : this._obj,this.bubbles,this.cancelable)
        }
        ,
        s.toString = function() {
            console.log(this.CLASS_NAME, "type", "bubbles", "cancelable")
        }
        ,
        i(s, "param", function() {
            return this._obj
        }),
        e
    }(egret.Event);
    t.LEvent = e,
    egret.registerClass(e, "lcp.LEvent")
}(lcp || (lcp = {}));
var lcp;
!function(t) {
    var e = function() {
        function t() {
            this.CLASS_NAME = "LListener",
            this.isInit = !1,
            this.isInit,
            null == this._dispatcher && (this._dispatcher = new egret.EventDispatcher,
            this.isInit = !0)
        }
        var e = (__define,
        t)
          , i = e.prototype;
        return t.getInstance = function() {
            return null == this._instance && (this._instance = new t),
            this._instance
        }
        ,
        i.addEventListener = function(t, e, i, n, s) {
            void 0 === n && (n = !1),
            void 0 === s && (s = 0),
            this._dispatcher.addEventListener(t, e, i, n, s)
        }
        ,
        i.removeEventListener = function(t, e, i, n) {
            void 0 === n && (n = !1),
            this._dispatcher.removeEventListener(t, e, i, n)
        }
        ,
        i.hasEventListener = function(t) {
            return this._dispatcher.hasEventListener(t)
        }
        ,
        i.willTrigger = function(t) {
            return this._dispatcher.willTrigger(t)
        }
        ,
        i.dispatchEvent = function(t) {
            return this._dispatcher.dispatchEvent(t)
        }
        ,
        i.toString = function() {
            return this._dispatcher.toString()
        }
        ,
        t
    }();
    t.LListener = e,
    egret.registerClass(e, "lcp.LListener")
}(lcp || (lcp = {}));
var TipsUtils;
!function(t) {
    function e(t, e) {
        void 0 === t && (t = ""),
        void 0 === e && (e = !1);
        var i = new egret.TextField;
        i.size = 24,
        i.y = GameConfig.curHeight() / 2,
        e ? i.textColor = GameConfig.TextColors.red : i.textColor = GameConfig.TextColors.green,
        i.alpha = 0,
        i.text = t,
        i.strokeColor = 0,
        i.x = GameConfig.curWidth() / 2 - i.width / 2,
        i.stroke = 2,
        i.bold = !0,
        i.textAlign = egret.HorizontalAlign.CENTER,
        GameConfig.gameScene().topLayer.contains(i) || GameConfig.gameScene().topLayer.addChild(i);
        var n = function() {
            GameConfig.gameScene().topLayer.contains(i) && (GameConfig.gameScene().topLayer.removeChild(i),
            i = null )
        }
          , s = function() {
            egret.Tween.get(i).to({
                alpha: 0
            }, 500).call(n, this)
        }
        ;
        i.visible = !0,
        egret.Tween.get(i).to({
            y: i.y - 120,
            alpha: 1
        }, 800, egret.Ease.backOut).call(s, this)
    }
    function i(t, e, i) {
        void 0 === t && (t = ""),
        void 0 === e && (e = !1),
        void 0 === i && (i = !0);
        var n = new egret.TextField;
        n.size = 32,
        n.y = GameConfig.curHeight() / 2,
        e ? n.textColor = GameConfig.TextColors.red : n.textColor = GameConfig.TextColors.white,
        n.alpha = 0,
        n.text = t,
        n.strokeColor = GameConfig.TextColors.black,
        i ? n.x = -n.width : n.x = GameConfig.curWidth(),
        n.stroke = 2,
        n.bold = !0,
        n.textAlign = egret.HorizontalAlign.CENTER,
        GameConfig.gameScene().topLayer.contains(n) || GameConfig.gameScene().topLayer.addChild(n),
        i ? egret.Tween.get(n).to({
            x: GameConfig.curWidth() / 2 - n.width / 2,
            alpha: 1
        }, 300, egret.Ease.sineInOut) : egret.Tween.get(n).to({
            x: GameConfig.curWidth() / 2 - n.width / 2,
            alpha: 1
        }, 300, egret.Ease.sineInOut);
        var s = 1e3;
        egret.setTimeout(function() {
            i ? egret.Tween.get(n).to({
                x: n.x + 100
            }, 500) : egret.Tween.get(n).to({
                x: n.x - 100
            }, 500)
        }, this, 300 + s),
        egret.setTimeout(function() {
            i ? egret.Tween.get(n).to({
                x: GameConfig.curWidth()
            }, 300, egret.Ease.sineIn) : egret.Tween.get(n).to({
                x: -n.width
            }, 300, egret.Ease.sineIn)
        }, this, 800 + s),
        egret.setTimeout(function() {
            GameConfig.gameScene().topLayer.contains(n) && (GameConfig.gameScene().topLayer.removeChild(n),
            n = null )
        }, this, 1100 + s)
    }
    function n(t, e) {
        void 0 === t && (t = ""),
        void 0 === e && (e = !1);
        var i = new egret.TextField;
        i.size = 24,
        i.y = GameConfig.curHeight() / 2,
        e ? i.textColor = GameConfig.TextColors.red : i.textColor = GameConfig.TextColors.green,
        i.alpha = 0,
        i.text = t,
        i.strokeColor = 0,
        i.x = GameConfig.curWidth() / 2,
        i.stroke = 2,
        i.bold = !0,
        i.textAlign = egret.HorizontalAlign.CENTER,
        i.anchorOffsetX = .5 * i.width,
        i.anchorOffsetY = .5 * i.height,
        i.scaleX = 0,
        i.scaleY = 0,
        GameConfig.gameScene().topLayer.contains(i) || GameConfig.gameScene().topLayer.addChild(i);
        var n = function() {
            GameConfig.gameScene().topLayer.contains(i) && (GameConfig.gameScene().topLayer.removeChild(i),
            i = null )
        }
        ;
        egret.Tween.get(i).to({
            scaleX: 1,
            scaleY: 1,
            alpha: 1
        }, 200),
        egret.setTimeout(function() {
            egret.Tween.get(i).to({
                alpha: 0
            }, 500).call(n, this)
        }, this, 1e3)
    }
    function s(t, e) {
        void 0 === t && (t = ""),
        void 0 === e && (e = !1);
        var i = new egret.TextField;
        i.size = 24,
        i.y = GameConfig.curHeight() / 2,
        e ? i.textColor = GameConfig.TextColors.red : i.textColor = GameConfig.TextColors.green,
        i.alpha = 0,
        i.text = t,
        i.strokeColor = 0,
        i.x = GameConfig.curWidth() / 2,
        i.stroke = 2,
        i.bold = !0,
        i.textAlign = egret.HorizontalAlign.CENTER,
        i.anchorOffsetX = .5 * i.width,
        i.anchorOffsetY = .5 * i.height,
        i.scaleX = 4,
        i.scaleY = 4,
        GameConfig.gameScene().topLayer.contains(i) || GameConfig.gameScene().topLayer.addChild(i);
        var n = function() {
            GameConfig.gameScene().topLayer.contains(i) && (GameConfig.gameScene().topLayer.removeChild(i),
            i = null )
        }
        ;
        egret.Tween.get(i).to({
            scaleX: 1,
            scaleY: 1,
            alpha: 1
        }, 200),
        egret.setTimeout(function() {
            egret.Tween.get(i).to({
                alpha: 0
            }, 500).call(n, this)
        }, this, 1e3)
    }
    t.showTipsDownToUp = e,
    t.showTipsLeftOrRight = i,
    t.showTipsFromCenter = n,
    t.showTipsBigToSmall = s
}(TipsUtils || (TipsUtils = {}));
var GameScene = function(t) {
    function e() {
        t.call(this),
        this.uiLayer = new egret.DisplayObjectContainer,
        this.topLayer = new egret.DisplayObjectContainer,
        this.effectLayer = new egret.DisplayObjectContainer,
        this.mainUILayer = new egret.DisplayObjectContainer,
        this.maskLayer = new egret.DisplayObjectContainer,
        this.rotationTipsLayer = new egret.DisplayObjectContainer,
        this.init()
    }
    __extends(e, t);
    var i = (__define,
    e)
      , n = i.prototype;
    return n.init = function() {
        this.addChild(this.uiLayer),
        this.addChild(this.topLayer),
        this.addChild(this.effectLayer),
        this.addChild(this.mainUILayer),
        this.addChild(this.maskLayer),
        this.addChild(this.rotationTipsLayer)
    }
    ,
    e
}(egret.DisplayObjectContainer);
egret.registerClass(GameScene, "GameScene");
var PanelManager;
!function(t) {
    function e() {
        var t = document.documentElement.clientWidth
          , e = document.documentElement.clientHeight;
        e > t && (GlobalData.initIsVertical = !0),
        game.FloorObject.initTexture(),
        Global.addEventListener(MainNotify.openStartPanelNotify, this.openStartPanel, this),
        Global.addEventListener(MainNotify.closeStartPanelNotify, this.closeStartPanel, this),
        Global.addEventListener(MainNotify.openGamePanelNotify, this.openGamePanel, this),
        Global.addEventListener(MainNotify.closeGamePanelNotify, this.closeGamePanel, this),
        Global.addEventListener(MainNotify.openGameOverPanelNotify, this.openGameOverPanel, this),
        Global.addEventListener(MainNotify.closeGameOverPanelNotify, this.closeGameOverPanel, this),
        Global.addEventListener(MainNotify.openSelectPanelNotify, this.openSelectPanel, this),
        Global.addEventListener(MainNotify.closeSelectPanelNotify, this.closeSelectPanel, this)
    }
    function i() {
        null == this.startPanel && (this.startPanel = new StartPanel,
        PopUpManager.addPopUp(this.startPanel, !1, 0, 0, 3))
    }
    function n() {
        null != this.startPanel && (PopUpManager.removePopUp(this.startPanel, 3),
        this.startPanel = null )
    }
    function s() {
        null == this.selectPanel && (this.selectPanel = new SelectPanel,
        PopUpManager.addPopUp(this.selectPanel, !1, 0, 0, 3))
    }
    function a() {
        null != this.selectPanel && (PopUpManager.removePopUp(this.selectPanel, 3),
        this.selectPanel = null )
    }
    function h(t) {
        null == this.gamePanel && (this.gamePanel = new GamePanel(t.param),
        PopUpManager.addPopUp(this.gamePanel, !1, 0, 0, 0))
    }
    function r() {
        null != this.gamePanel && (PopUpManager.removePopUp(this.gamePanel, 3),
        this.gamePanel = null )
    }
    function o(t) {
        null == this.gameOverPanel && (this.gameOverPanel = new GameOverPanel(t.param),
        PopUpManager.addPopUp(this.gameOverPanel, !1, 0, 0, 3))
    }
    function l() {
        null != this.gameOverPanel && (PopUpManager.removePopUp(this.gameOverPanel, 3),
        this.gameOverPanel = null )
    }
    t.initPanel = e,
    t.openStartPanel = i,
    t.closeStartPanel = n,
    t.openSelectPanel = s,
    t.closeSelectPanel = a,
    t.openGamePanel = h,
    t.closeGamePanel = r,
    t.openGameOverPanel = o,
    t.closeGameOverPanel = l
}(PanelManager || (PanelManager = {}));
var PopUpManager;
!function(t) {
    function e(t, e, i, n, s, a) {
        if (void 0 === e && (e = !1),
        void 0 === i && (i = 0),
        void 0 === n && (n = 0),
        void 0 === s && (s = 0),
        void 0 === a && (a = !1),
        !GameConfig.gameScene().uiLayer.contains(t)) {
            e && (this.darkSprite = new egret.Sprite,
            this.darkSprite.graphics.clear(),
            this.darkSprite.graphics.beginFill(0, .3),
            this.darkSprite.graphics.drawRect(0, 0, GameConfig.curWidth(), GameConfig.curHeight()),
            this.darkSprite.graphics.endFill(),
            this.darkSprite.width = GameConfig.curWidth(),
            this.darkSprite.height = GameConfig.curHeight(),
            GameConfig.gameScene().uiLayer.contains(this.darkSprite) || GameConfig.gameScene().uiLayer.addChild(this.darkSprite),
            this.darkSprite.touchEnabled = !0,
            egret.Tween.get(this.darkSprite).to({
                alpha: 1
            }, 150),
            this.darkSprite.visible = !0),
            GameConfig.gameScene().uiLayer.addChild(t),
            GameConfig.curPanel = t,
            0 != i ? (t.x = GameConfig.curWidth() / 2 - i / 2,
            t.y = GameConfig.curHeight() / 2 - n / 2) : (i = t.width,
            n = t.height);
            var h = GameConfig.curWidth() / 2 - i / 2
              , r = GameConfig.curHeight() / 2 - n / 2;
            switch (s) {
            case 0:
                break;
            case 1:
                t.alpha = 0,
                t.scaleX = .5,
                t.scaleY = .5,
                t.x = t.x + i / 4,
                t.y = t.y + n / 4,
                egret.Tween.get(t).to({
                    alpha: 1,
                    scaleX: 1,
                    scaleY: 1,
                    x: t.x - i / 4,
                    y: t.y - n / 4
                }, 300, egret.Ease.backOut);
                break;
            case 2:
                t.alpha = 0,
                t.scaleX = .5,
                t.scaleY = .5,
                t.x = t.x + i / 4,
                t.y = t.y + n / 4,
                egret.Tween.get(t).to({
                    alpha: 1,
                    scaleX: 1,
                    scaleY: 1,
                    x: t.x - i / 4,
                    y: t.y - n / 4
                }, 600, egret.Ease.elasticOut);
                break;
            case 3:
                a ? (t.x = -i,
                egret.Tween.get(t).to({
                    x: h
                }, 500, egret.Ease.cubicOut)) : (t.x = -i,
                egret.Tween.get(t).to({
                    x: 0
                }, 500, egret.Ease.cubicOut));
                break;
            case 4:
                a ? (t.x = i,
                egret.Tween.get(t).to({
                    x: h
                }, 500, egret.Ease.cubicOut)) : (t.x = i,
                egret.Tween.get(t).to({
                    x: 0
                }, 500, egret.Ease.cubicOut));
                break;
            case 5:
                a ? (t.y = -n,
                egret.Tween.get(t).to({
                    y: r
                }, 500, egret.Ease.cubicOut)) : (t.y = -n,
                egret.Tween.get(t).to({
                    y: 0
                }, 500, egret.Ease.cubicOut));
                break;
            case 6:
                a ? (t.y = GameConfig.curHeight(),
                egret.Tween.get(t).to({
                    y: r
                }, 500, egret.Ease.cubicOut)) : (t.y = n,
                egret.Tween.get(t).to({
                    y: 0
                }, 500, egret.Ease.cubicOut))
            }
        }
    }
    function i(t, e) {
        if (void 0 === e && (e = 0),
        this.darkSprite) {
            var i = function() {
                GameConfig.gameScene().uiLayer.contains(this.darkSprite) && GameConfig.gameScene().uiLayer.removeChild(this.darkSprite)
            }
            ;
            egret.Tween.get(this.darkSprite).to({
                alpha: 0
            }, 100).call(i, this)
        }
        var n = null ;
        switch (e) {
        case 0:
            break;
        case 1:
            n = egret.Tween.get(t).to({
                alpha: 0,
                scaleX: 0,
                scaleY: 0,
                x: t.x + t.getWidth() / 2,
                y: t.y + t.getHeight() / 2
            }, 300);
            break;
        case 2:
            n = egret.Tween.get(t).to({
                alpha: 0,
                scaleX: 0,
                scaleY: 0,
                x: t.x + t.getWidth() / 2,
                y: t.y + t.getHeight() / 2
            }, 300);
            break;
        case 3:
            n = egret.Tween.get(t).to({
                x: t.getWidth()
            }, 500, egret.Ease.cubicOut);
            break;
        case 4:
            n = egret.Tween.get(t).to({
                x: -t.getWidth()
            }, 500, egret.Ease.cubicOut);
            break;
        case 5:
            n = egret.Tween.get(t).to({
                y: t.getHeight()
            }, 500, egret.Ease.cubicOut);
            break;
        case 6:
            n = egret.Tween.get(t).to({
                y: -t.getHeight()
            }, 500, egret.Ease.cubicOut)
        }
        n ? n.call(function() {
            GameConfig.gameScene().uiLayer.contains(t) && GameConfig.gameScene().uiLayer.removeChild(t)
        }) : GameConfig.gameScene().uiLayer.contains(t) && GameConfig.gameScene().uiLayer.removeChild(t)
    }
    t.addPopUp = e,
    t.removePopUp = i
}(PopUpManager || (PopUpManager = {}));
var game;
!function(t) {
    var e = function(e) {
        function i() {
            e.call(this);
            var t = this;
            t.texture = RES.getRes(Global.key + "_jump_r_png"),
            t.textures = [RES.getRes(Global.key + "_c1_png"), RES.getRes(Global.key + "_c2_png"), RES.getRes(Global.key + "_jump_r_png"), RES.getRes(Global.key + "_jump_l_png"), RES.getRes(Global.key + "_drop_r_png"), RES.getRes(Global.key + "_drop_l_png")],
            t.cur_index = 0,
            t.jump_padding_x = GameConfig.FLOOR_PADDING_X,
            t.jump_angle = 70,
            t.is_left = !1,
            t.is_jumping = !1,
            t.status = 1
        }
        __extends(i, e);
        var n = (__define,
        i)
          , s = n.prototype;
        return s.setIndex = function(t) {
            this.cur_index = t + 1
        }
        ,
        s.cry = function() {
            egret.Tween.get(this, {
                loop: !0
            }).set({
                texture: this.textures[0]
            }).wait(200).set({
                texture: this.textures[1]
            }).wait(200)
        }
        ,
        s.autoJump = function(e, i, n) {
            if (i) {
                var s = this;
                s.c_y -= GameConfig.FLOOR_PADDING_y,
                egret.Tween.removeTweens(s),
                Global.playEffect("jump_mp3", 1),
                s.is_jumping = !0,
                i--;
                var a = new t.ParabolaTo(150,[s.x, s.y],[s.x + s.jump_padding_x, s.c_y],0,s.jump_angle,0,null ,null ,GameConfig.FLOOR_PADDING_y);
                a.setTarget(s, e),
                a.setCallback(function(t, e) {
                    n(),
                    s.autoJump(t, e, n)
                }, s, i)
            } else
                this.is_jumping = !1
        }
        ,
        s.changeToDrop = function() {
            this.status = 0
        }
        ,
        s.jump = function(e, i, n) {
            egret.Tween.removeTweens(this),
            Global.playEffect("jump_mp3", 1),
            this.c_y -= GameConfig.FLOOR_PADDING_y,
            this.status = 1;
            var s = new t.ParabolaTo(150,[this.x, this.y],[this.x + this.jump_padding_x, this.c_y],0,this.jump_angle,0,null ,null ,GameConfig.FLOOR_PADDING_y);
            s.setTarget(this, e),
            s.setCallback(i, n, {})
        }
        ,
        s.jumpCallBack = function() {
            ++this.cur_index % GameConfig.wheel_count === 0 && (this.jump_padding_x = -this.jump_padding_x,
            this.jump_angle = -this.jump_angle,
            this.is_left = !this.is_left,
            this.texture = this.is_left ? this.textures[3] : this.textures[2])
        }
        ,
        i
    }(egret.Bitmap);
    t.CaiCai = e,
    egret.registerClass(e, "game.CaiCai")
}(game || (game = {}));
var game;
!function(t) {
    var e = function(e) {
        function i() {
            e.call(this),
            this.alpha = 0
        }
        __extends(i, e);
        var n = (__define,
        i)
          , s = n.prototype;
        return i.initTexture = function() {
            i.texture_r = RES.getRes("stone_red_png"),
            i.texture_y = RES.getRes("stone_yellow_png")
        }
        ,
        s.setToolMark = function(e) {
            var i = t.ToolObject.create()
              , n = this;
            n.parent.addChild(i),
            i.setType(e),
            i.x = n.x + .3 * n.width,
            i.y = n.y - .65 * n.height,
            n.tool_mark = i
        }
        ,
        s.destroyToolMark = function() {
            if (this.tool_mark) {
                var t = this.tool_mark.type;
                return this.tool_mark.destroy(),
                this.tool_mark = null ,
                t
            }
            return 0
        }
        ,
        s.setType = function(t) {
            this.type = t,
            this.texture = i["texture_" + t]
        }
        ,
        s.destroyByTime = function(t) {
            this.parent && (this.parent.removeChild(this),
            i.pools.push(this)),
            this.is_game_over && (this.is_game_over = null ,
            Global.dispatchEvent("GameOver", 1))
        }
        ,
        s.destroy = function() {
            this.parent && this.parent.removeChild(this),
            i.pools.push(this),
            this.tool_mark && (this.tool_mark.destroy(),
            this.tool_mark = null )
        }
        ,
        i.create = function(t) {
            var e = i.pools.pop();
            return e || (e = new i),
            e.setType(t),
            e
        }
        ,
        i.pools = [],
        i
    }(egret.Bitmap);
    t.FloorObject = e,
    egret.registerClass(e, "game.FloorObject")
}(game || (game = {}));
var game;
!function(t) {
    var e = null
      , i = function(t) {
        function i() {
            t.call(this),
            this.bg = new egret.Bitmap(e[2]),
            this.bg.anchorOffsetY = -122,
            this.anchorOffsetY = -80,
            this.bg.anchorOffsetX = -15,
            this.anchorOffsetX = 20
        }
        __extends(i, t);
        var n = (__define,
        i)
          , s = n.prototype;
        return i.initTexture = function() {
            e = [RES.getRes("effect1_png"), RES.getRes("effect2_png"), RES.getRes("effect_bg_png")]
        }
        ,
        s.play = function(t, i) {
            this.bg.x = this.x = t,
            this.bg.y = this.y = i,
            egret.Tween.get(this).set({
                texture: e[0]
            }).wait(150).set({
                texture: e[1]
            }).wait(150).call(this.destroy)
        }
        ,
        s.destroy = function() {
            this.parent && this.parent.removeChild(this),
            this.bg.parent && this.bg.parent.removeChild(this.bg),
            i.pools.push(this)
        }
        ,
        i.create = function(t) {
            return i.pools.pop() || new i
        }
        ,
        i.pools = [],
        i
    }(egret.Bitmap);
    t.LightEffect = i,
    egret.registerClass(i, "game.LightEffect")
}(game || (game = {}));
var game;
!function(t) {
    var e = function(e) {
        function i() {
            e.call(this),
            this.addEventListener(egret.Event.ADDED_TO_STAGE, this.addToStage, this),
            this.c_list = []
        }
        __extends(i, e);
        var n = (__define,
        i)
          , s = n.prototype;
        return s.addFloorObject = function() {
            var e = this
              , i = t.FloorObject.create(e.c_list.pop() || Math.random() > .5 ? "y" : "r");
            if (e.floor_layer.addChild(i),
            i.x = e.cur_x,
            i.y = e.cur_y,
            e.index && e.index === NativeApi.datas.maxScore + 1) {
                var n = new egret.Bitmap(RES.getRes("new_score_icon_png"));
                e.addChild(n),
                n.x = e.cur_x + 95,
                n.y = e.cur_y - 8
            }
            if (egret.Tween.get(i).to({
                alpha: 1
            }, 250),
            0 === --e.is_tool) {
                e.is_tool = Math.floor(6 * Math.random()) + 10;
                var s = Math.random();
                .5 > s ? i.setToolMark(3) : .75 > s ? i.setToolMark(2) : i.setToolMark(1)
            }
            e.is_left = !e.is_left,
            ++e.index % GameConfig.wheel_count || (e.padding_x = -e.padding_x),
            e.cur_x += e.padding_x,
            e.cur_y -= GameConfig.FLOOR_PADDING_y,
            e.floor_list.push(i)
        }
        ,
        s.changeColor = function(t) {
            for (var e = this.floor_list[1].type, i = 0; 5 > i; i++)
                this.floor_list[i + 2].setType(e);
            for (var i = 0; t - 5 > i; i++)
                this.c_list.push(e)
        }
        ,
        s.checkIsRight = function(t, e) {
            if (this.floor_list[1].type === e) {
                var i = this.floor_list[1].destroyToolMark();
                return i ? i + 1 : 1
            }
            return 0
        }
        ,
        s.destroy = function() {
            for (var t = this.floor_layer.numChildren - 1; t >= 0; t--) {
                var e = this.floor_layer.getChildAt(t);
                e.destroy()
            }
        }
        ,
        s.check = function(t) {
            var e = this.floor_list.shift();
            e.is_game_over = !1;
            var i = this.floor_list[0];
            i.is_game_over = !0,
            egret.Tween.get(i).to({
                alpha: 0
            }, t, egret.Ease.sineIn).call(i.destroyByTime, i),
            egret.Tween.get(i).to({
                y: i.y + 20
            }, 100, egret.Ease.sineOut).to({
                y: i.y
            }, 50, egret.Ease.sineInOut),
            this.addFloorObject()
        }
        ,
        s.start = function(t) {
            var e = this.floor_list[0];
            e.is_game_over = !0,
            e.alpha = 1,
            egret.Tween.removeTweens(e),
            egret.Tween.get(e).to({
                alpha: 0
            }, t, egret.Ease.sineIn).call(e.destroyByTime, e)
        }
        ,
        s.addToStage = function(t) {
            var e = this;
            e.is_tool = Math.floor(6 * Math.random()) + 15,
            e.destroy_y = e.stage.height;
            var i = GameConfig.curWidth()
              , n = GameConfig.curHeight();
            e.floor_layer = new egret.DisplayObjectContainer,
            e.addChild(e.floor_layer),
            e.floor_list = [],
            e.index = 0,
            e.is_left = !1,
            e.cur_x = i / 2 - 116;
            var s = 7;
            e.cur_y = (n + GameConfig.FLOOR_PADDING_y * s) / 2,
            e.padding_x = GameConfig.FLOOR_PADDING_X;
            for (var a = 0; s > a; a++)
                e.addFloorObject()
        }
        ,
        i
    }(egret.Sprite);
    t.MoveLayer = e,
    egret.registerClass(e, "game.MoveLayer")
}(game || (game = {}));
var game;
!function(t) {
    var e = function(t) {
        function e() {
            t.call(this);
            var e = new egret.Bitmap(RES.getRes("tool_bg_png"));
            this.addChild(e);
            var i = new egret.Bitmap;
            this.addChild(i),
            i.x = e.width / 2,
            i.y = e.height / 2,
            this.tool_icon = i
        }
        __extends(e, t);
        var i = (__define,
        e)
          , n = i.prototype;
        return n.setType = function(t) {
            this.tool_icon.texture = RES.getRes("tool" + t + "_png"),
            this.tool_icon.anchorOffsetX = this.tool_icon.width / 2,
            this.tool_icon.anchorOffsetY = this.tool_icon.height / 2,
            this.type = t
        }
        ,
        n.destroy = function() {
            this.parent && (this.parent.removeChild(this),
            e.list.push(this))
        }
        ,
        e.create = function() {
            var t = e.list.pop();
            return t ? t : new e
        }
        ,
        e.list = [],
        e
    }(egret.DisplayObjectContainer);
    t.ToolObject = e,
    egret.registerClass(e, "game.ToolObject")
}(game || (game = {}));
var LoadingUI = function(t) {
    function e() {
        t.call(this),
        this.createView()
    }
    __extends(e, t);
    var i = (__define,
    e)
      , n = i.prototype;
    return n.createView = function() {
        var t = new egret.Bitmap(RES.getRes("login_icon_png"));
        t.x = GameConfig.curWidth() / 2 - t.width / 2,
        t.y = .3 * GameConfig.curHeight(),
        this.graphics.beginFill(16777215),
        this.graphics.drawRect(0, 0, GameConfig.curWidth(), GameConfig.curHeight()),
        this.graphics.endFill(),
        this.addChild(t),
        this.textField = new egret.TextField,
        this.addChild(this.textField),
        this.textField.y = .7 * GameConfig.curHeight(),
        this.textField.textColor = 16711680,
        this.textField.width = GameConfig.curWidth(),
        this.textField.height = 100,
        this.textField.textAlign = "center"
    }
    ,
    n.createBg = function(t, e) {}
    ,
    n.setProgress = function(t, e) {
        "huowu" == munu.url_data.channel || (this.textField.text = "Loading..." + t + "/" + e)
    }
    ,
    e
}(egret.Sprite);
egret.registerClass(LoadingUI, "LoadingUI");
var eg = egret
  , Main = function(t) {
    function e() {
        t.call(this),
        NativeApi.loadData(),
        this.addEventListener(egret.Event.ADDED_TO_STAGE, this.onAddToStage, this)
    }
    __extends(e, t);
    var i = (__define,
    e)
      , n = i.prototype;
    return n.onAddToStage = function(t) {
        this.removeEventListener(egret.Event.ADDED_TO_STAGE, this.onAddToStage, this);
        var e = GameConfig.systemType();
        document.documentElement.clientWidth,
        document.documentElement.clientHeight;
        "windows" != e && "max" != e && "linux" != e && (this.stage.scaleMode = egret.StageScaleMode.FIXED_WIDTH),
        this.addChild(GameConfig.gameScene()),
        RES.addEventListener(RES.ResourceEvent.CONFIG_COMPLETE, this.onConfigComplete, this),
        RES.loadConfig("resource/default.res.json", "resource/")
    }
    ,
    n.onConfigComplete = function(t) {
        RES.removeEventListener(RES.ResourceEvent.CONFIG_COMPLETE, this.onConfigComplete, this),
        RES.addEventListener(RES.ResourceEvent.GROUP_COMPLETE, this.onResourceLoadComplete, this),
        RES.addEventListener(RES.ResourceEvent.GROUP_LOAD_ERROR, this.onResourceLoadError, this),
        RES.addEventListener(RES.ResourceEvent.GROUP_PROGRESS, this.onResourceProgress, this),
        RES.loadGroup("login")
    }
    ,
    n.onResourceLoadComplete = function(t) {
        function e(t) {
            t.id == s && Global.playMusic(s)
        }
        if ("preload" == t.groupName) {
            this.stage.removeChild(this.loadingView),
            this.loadingView = null ,
            RES.removeEventListener(RES.ResourceEvent.GROUP_COMPLETE, this.onResourceLoadComplete, this),
            RES.removeEventListener(RES.ResourceEvent.GROUP_LOAD_ERROR, this.onResourceLoadError, this),
            RES.removeEventListener(RES.ResourceEvent.GROUP_PROGRESS, this.onResourceProgress, this),
            this.createGameScene();
            var i = RES.getGroupByName("sounds")
              , n = []
              , s = "bg_music" + Math.ceil(2 * Math.random());
            for (var a in i)
                n[a] = {
                    id: i[a].name,
                    src: i[a].url
                };
            n.push({
                id: s + "_mp3",
                src: "resource/assets/sound/" + s + ".mp3"
            }),
            s += "_mp3",
            createjs.Sound.registerSounds(n, ""),
            createjs.Sound.addEventListener("fileload", e)
        } else
            "login" == t.groupName && (RES.loadGroup("preload"),
            this.loadingView = new LoadingUI,
            this.stage.addChild(this.loadingView))
    }
    ,
    n.onResourceLoadError = function(t) {
        console.warn("Group:" + t.groupName + " has failed to load"),
        this.onResourceLoadComplete(t)
    }
    ,
    n.onResourceProgress = function(t) {
        "preload" == t.groupName && this.loadingView.setProgress(t.itemsLoaded, t.itemsTotal)
    }
    ,
    n.createGameScene = function() {
        PanelManager.initPanel(),
        game.LightEffect.initTexture(),
        Global.dispatchEvent(MainNotify.openStartPanelNotify, null , !1)
    }
    ,
    e
}(egret.DisplayObjectContainer);
egret.registerClass(Main, "Main");
var GameOverPanel = function(t) {
    function e(e) {
        this.score = e.score,
        this.coins = e.coins,
        t.call(this)
    }
    __extends(e, t);
    var i = (__define,
    e)
      , n = i.prototype;
    return n.initPanel = function() {
        var t, e, i, n = null , s = 0, a = GameConfig.curWidth(), h = GameConfig.curHeight(), r = this;
        r.bg = new egret.Shape,
        r.bg.graphics.beginFill(0),
        r.bg.graphics.drawRect(0, 0, a, h),
        r.bg.graphics.endFill(),
        r.bg.alpha = .7,
        r.addChild(r.bg);
        var o = egret.Bitmap;
        "g2o" == munu.url_data.channel ? (munu.uploadScore(r.score, r.coins),
        r.coins = r.coins || 0,
        i = new egret.BitmapText,
        i.letterSpacing = -18,
        i.textAlign = egret.HorizontalAlign.CENTER,
        i.font = RES.getRes("number_fnt"),
        i.text = r.coins.toString(),
        i.width = 80,
        i.scaleX = .5,
        i.scaleY = .5,
        r.addChild(i),
        i.x = a / 2 - 80,
        e = new o(RES.getRes("label_g2o_over_png")),
        r.addChild(e),
        e.anchorOffsetX = e.width / 2,
        e.x = a / 2,
        s += e.height,
        e.visible = 0 != r.coins,
        i.visible = e.visible,
        n = new o(RES.getRes("g2o_url_png")),
        r.addChild(n),
        n.anchorOffsetX = n.width / 2,
        n.x = a / 2,
        s += n.height,
        t = new o(RES.getRes("g2o_logo_png")),
        r.addChild(t),
        t.anchorOffsetX = t.width / 2,
        t.anchorOffsetY = t.height / 2,
        t.x = a / 2,
        s += t.height,
        t.addEventListener(egret.TouchEvent.TOUCH_TAP, function(t) {}, r),
        t.touchEnabled = !0,
        egret.Tween.get(t, {
            loop: !0
        }).to({
            scaleX: .8,
            scaleY: .8
        }, 600).to({
            scaleX: 1,
            scaleY: 1
        }, 600),
        r.munu_logo = t) : (t = new o(RES.getRes("login_icon_png")),
        r.addChild(t),
        s += t.height,
        t.x = a / 2 - t.width / 2);
        var l = new o(RES.getRes("game_over_label_png"));
        r.addChild(l),
        l.x = a / 2 - l.width / 2;
        var c = new EButton(r,"btn_bg_png",r.replayGame,"",30,1);
        c.x = a / 2 - c.width / 2,
        r.addChild(c);
        var g = new o(RES.getRes("label_replay_png"));
        c.addChild(g),
        g.x = (c.width - g.width) / 2,
        g.y = (c.height - g.height) / 2;
        var d = new EButton(r,"btn_bg_png",r.share,"",30,1);
        d.x = a / 2 - d.width / 2,
        r.addChild(d);
        var u = new o(RES.getRes("label_share_png"));
        d.addChild(u),
        u.x = (d.width - u.width) / 2,
        u.y = (d.height - u.height) / 2;
        var f = new egret.BitmapText;
        f.font = RES.getRes("number_fnt"),
        f.text = NativeApi.datas.maxScore + "",
        r.addChild(f),
        f.x = 370;
        var p = new egret.BitmapText;
        if (p.font = RES.getRes("number_fnt"),
        p.text = r.score + "",
        r.addChild(p),
        p.x = f.x,
        NativeApi.datas.maxScore < r.score) {
            NativeApi.datas.maxScore = r.score,
            NativeApi.saveData();
            var m = new o(RES.getRes("label_new_score_png"));
            r.addChild(m),
            m.x = p.x + p.width,
            m.scaleX = .6,
            m.scaleY = .6,
            m.rotation = -30
        }
        "abroad" != munu.url_data.channel && (munu.share_desc = GameLangs.share_desc.format(r.score),
        munu.setShare()),
        s += l.height,
        s += c.height,
        s += d.height;
        var _ = h - s;
        n ? (l.y = .25 * _,
        c.y = l.y + l.height + .2 * _,
        d.y = c.y + c.height + .1 * _,
        e.y = +d.y + c.height + .15 * _,
        t.y = +e.y + e.height + .1 * _,
        f.y = l.y + 175,
        p.y = l.y + 275,
        t.y += t.height / 2,
        n.y = t.y + t.height / 2,
        i.y = e.y + 4) : (l.y = .25 * _,
        c.y = l.y + l.height + .2 * _,
        d.y = c.y + c.height + .1 * _,
        t.y = +d.y + c.height + .2 * _,
        f.y = l.y + 190,
        p.y = l.y + 290),
        m && (m.y = p.y + .2 * m.width),
        egret.setTimeout(window.showAD, null , 100)
    }
    ,
    n.createGuideLayer = function() {
        var t = this
          , e = new egret.Sprite;
        e.graphics.beginFill(0, .5),
        e.graphics.drawRect(0, 0, GameConfig.curWidth(), GameConfig.curHeight()),
        e.graphics.endFill(),
        e.width = GameConfig.curWidth(),
        e.height = GameConfig.curHeight(),
        this.addChild(e),
        e.touchEnabled = !0,
        e.addEventListener(egret.TouchEvent.TOUCH_TAP, function(i) {
            t.removeChild(e)
        }, this);
        var i = new egret.Bitmap(RES.getRes("game_bg_jpg"));
        e.addChild(i);
        var n = new egret.Bitmap(RES.getRes("icon_arrows2_png"));
        e.addChild(n),
        n.x = 473,
        n.y = 13;
        var s = new egret.Bitmap(RES.getRes("share_label_png"));
        e.addChild(s),
        s.x = (GameConfig.curWidth() - s.width) / 2,
        s.y = 130
    }
    ,
    n.replayGame = function() {
        this.munu_logo && egret.Tween.removeTweens(this.munu_logo),
        Global.dispatchEvent(MainNotify.closeGamePanelNotify, null , !1),
        Global.dispatchEvent(MainNotify.closeGameOverPanelNotify, null , !1),
        Global.dispatchEvent(MainNotify.openSelectPanelNotify, null , !1)
    }
    ,
    n.share = function() {
        "huowu" == munu.url_data.channel ? window.ih5game.share() : GameConfig.isWeiXin() ? this.createGuideLayer() : window.mobShare.ui.open()
    }
    ,
    n.initEffect = function() {}
    ,
    e
}(BasePanel);
egret.registerClass(GameOverPanel, "GameOverPanel");
var g_cfg = GameConfig
  , GamePanel = function(t) {
    function e(e) {
        t.call(this)
    }
    __extends(e, t);
    var i = (__define,
    e)
      , n = i.prototype;
    return n.initPanel = function() {
        this.bg = new egret.Bitmap(RES.getRes("game_bg_jpg")),
        this.addChild(this.bg),
        this.initGame()
    }
    ,
    n.showTip = function() {
        var t = null
          , i = egret;
        t = new i.Bitmap(RES.getRes("label_new_score_png"));
        var n = this
          , s = GameConfig.curWidth();
        GameConfig.curHeight();
        t.y = GameConfig.curHeight() / 2,
        t.alpha = 0,
        t.x = -t.width,
        n.addChild(t),
        egret.Tween.get(t).wait(150).call(e.effect.start, e.effect, [100]),
        egret.Tween.get(t).to({
            x: s / 2 - t.width / 2,
            alpha: 1
        }, 300, egret.Ease.sineInOut).wait(1e3).to({
            x: s / 2 - t.width / 2 + 100
        }, 500).to({
            x: s
        }, 300, egret.Ease.sineIn).wait(300).call(function(e) {
            n.removeChild(t)
        }, n)
    }
    ,
    n.jumpCallBack = function() {
        var t = this;
        t.score && t.score === NativeApi.datas.maxScore && t.showTip(),
        ++t.score > t.n_level[0] && (t.n_level = GameConfig.level_cfg[++this.i_level]),
        t.caicai.jumpCallBack(),
        t.move_leyer.check(t.n_level[1]);
        var e = new game.LightEffect;
        t.move_leyer.floor_layer.addChild(e.bg),
        t.move_leyer.addChild(e),
        e.play(t.caicai.x, t.caicai.y),
        egret.Tween.get(t.caicai).to({
            y: t.caicai.y + 20
        }, 100, egret.Ease.sineOut).to({
            y: t.caicai.y
        }, 50, egret.Ease.sineInOut),
        t.caicai.is_jumping = !1,
        t.score_label.text = "分数:" + t.score
    }
    ,
    n.pressBtn = function(t) {
        var e = this;
        if (!e.caicai.is_jumping) {
            e.score || e.move_leyer.start(e.n_level[1]);
            var i = e.move_leyer.checkIsRight(e.caicai.cur_index, t.target.name);
            switch (e.caicai.is_jumping = !0,
            i) {
            case 1:
                e.caicai.jump(e.move_leyer, e.jumpCallBack, e);
                break;
            case 4:
                e.coins_label.text = ++NativeApi.datas.coins + "",
                Global.playEffect("combo_mp3", 1),
                e.caicai.jump(e.move_leyer, e.jumpCallBack, e);
                break;
            case 2:
                e.caicai.autoJump(e.move_leyer, Math.floor(6 * Math.random()) + 3, e.jumpCallBack.bind(e));
                break;
            case 3:
                Global.playEffect("use_tool_mp3", 1),
                e.caicai.jump(e.move_leyer, e.jumpCallBack, e),
                e.move_leyer.changeColor(Math.floor(6 * Math.random()) + 3);
                break;
            case 0:
                e.gameOver()
            }
        }
    }
    ,
    n.initGame = function() {
        var t = this;
        Global.addEventListener("GameOver", this.gameOver, t),
        t.n_level = GameConfig.level_cfg[0],
        t.i_level = 0,
        t.coins = 0;
        var i = GameConfig.curWidth()
          , n = GameConfig.curHeight();
        t.move_leyer = new game.MoveLayer,
        t.addChild(t.move_leyer),
        t.caicai = new game.CaiCai,
        t.caicai.setIndex(0),
        t.move_leyer.addChild(t.caicai),
        t.caicai.x = t.move_leyer.floor_list[0].x + 110 - t.caicai.width / 2,
        t.caicai.y = t.caicai.c_y = t.move_leyer.floor_list[0].y - t.caicai.height + 40,
        t.score = 0;
        var s = new egret.Bitmap(RES.getRes("score_bg_png"));
        s.x = i - 30 - s.width,
        s.touchEnabled = !0,
        s.y = 10,
        t.addChild(s);
        var a = new ETextField;
        a.text = "分数:0",
        a.width = 130,
        a.textAlign = egret.HorizontalAlign.CENTER,
        a.textColor = 8533525,
        a.size = 30,
        a.x = s.x + s.width / 2 - a.width / 2,
        a.y = s.y + s.height / 2 - 15,
        t.addChild(a),
        t.score_label = a,
        s = new egret.Bitmap(RES.getRes("score_bg_png")),
        s.x = 30,
        s.touchEnabled = !0,
        s.y = 10,
        t.addChild(s);
        var h = new egret.Bitmap(RES.getRes("tool3_png"));
        t.addChild(h),
        h.x = s.x + .24 * s.width,
        h.y = s.y + s.height / 2 - h.height / 2,
        a = new ETextField,
        a.text = NativeApi.datas.coins + "",
        a.width = 80,
        a.textAlign = egret.HorizontalAlign.CENTER,
        a.textColor = 8533525,
        a.size = 30,
        a.x = h.x + h.width,
        a.y = s.y + s.height / 2 - 15,
        t.addChild(a),
        t.coins_label = a;
        var r = new egret.Bitmap(RES.getRes("btn_red_png"));
        r.addEventListener(egret.TouchEvent.TOUCH_TAP, t.pressBtn, t),
        r.x = 30,
        r.name = "r",
        r.touchEnabled = !0,
        r.y = n - 40 - r.height,
        t.addChild(r);
        var o = new egret.Bitmap(RES.getRes("btn_yellow_png"));
        if (o.name = "y",
        o.touchEnabled = !0,
        o.addEventListener(egret.TouchEvent.TOUCH_TAP, t.pressBtn, t),
        o.x = i - 30 - r.width,
        o.y = n - 40 - r.height,
        t.addChild(o),
        !e.effect) {
            var l = RES.getRes("newParticle_png")
              , c = RES.getRes("newParticle_json")
              , g = new particle.GravityParticleSystem(l,c);
            g.emitterX = i / 2,
            g.emitterY = n / 2,
            e.effect = g
        }
        t.addChild(e.effect)
    }
    ,
    n.onExit = function() {
        this.removeEventListener(egret.Event.REMOVED_FROM_STAGE, this.onExit, this),
        this.move_leyer.destroy(),
        egret.Tween.removeTweens(this.caicai)
    }
    ,
    n.gameOver = function(t) {
        NativeApi.saveData();
        var e = this;
        if (e.caicai.cry(),
        Global.removeEventListener("GameOver", e.gameOver, e),
        e.caicai.is_jumping = !0,
        e.touchChildren = !1,
        e.move_leyer,
        e.addEventListener(egret.Event.REMOVED_FROM_STAGE, e.onExit, e),
        t) {
            var i = Global.playEffect("lose_mp3", 1);
            Global.dispatchEvent(MainNotify.openGameOverPanelNotify, {
                score: e.score,
                coins: e.coins
            }, !1)
        } else {
            var n = e.move_leyer.floor_list[1]
              , s = egret.Tween.get(n).to({
                alpha: 0
            }, 400).to({
                alpha: 1
            }, 400).to({
                alpha: 0
            }, 400).to({
                alpha: 1
            }, 400)
              , i = Global.playEffect("error_mp3", 1);
            i && (Global.bg_music.volume = .1,
            Global.dispatchEvent(MainNotify.openGameOverPanelNotify, {
                score: e.score,
                coins: e.coins
            }, !1),
            i.on("complete", function(t) {
                var i = Global.playEffect("lose_mp3", 1)
                  , n = function(t) {
                    Global.bg_music.volume = 1
                }
                ;
                i.on("complete", n, e)
            }, e)),
            s.call(function(t) {
                Global.dispatchEvent(MainNotify.openGameOverPanelNotify, {
                    score: e.score,
                    coins: e.coins
                }, !1)
            })
        }
    }
    ,
    n.tick = function() {}
    ,
    e
}(BasePanel);
egret.registerClass(GamePanel, "GamePanel"),
g_cfg = null ;
var game;
!function(t) {
    var e = function(t) {
        function e() {
            t.call(this),
            this.max_width = 439.5,
            this.width = this.max_width,
            this.cur_progress = 100,
            this.height = 10,
            this.graphics.beginFill(2657742),
            this.graphics.drawRect(0, 0, this.width, this.height),
            this.graphics.endFill()
        }
        __extends(e, t);
        var i = (__define,
        e)
          , n = i.prototype;
        return n.setProgress = function(t) {
            this.cur_progress = t,
            this.width = t * this.max_width,
            this.graphics.clear(),
            this.graphics.beginFill(2657742),
            this.graphics.drawRect(0, 0, this.width, this.height),
            this.graphics.endFill()
        }
        ,
        e
    }(egret.Shape);
    t.ProgressBar = e,
    egret.registerClass(e, "game.ProgressBar")
}(game || (game = {}));
var SelectPanel = function(t) {
    function e() {
        t.call(this)
    }
    __extends(e, t);
    var i = (__define,
    e)
      , n = i.prototype;
    return n.initPanel = function() {
        var t = this;
        t.index = 0;
        var e = egret.Bitmap
          , i = new e(RES.getRes("game_bg_jpg"));
        t.addChild(i),
        t.removeEventListener(egret.Event.ADDED_TO_STAGE, t.initPanel, t);
        var n = GameConfig.curWidth()
          , s = GameConfig.curHeight()
          , a = new e(RES.getRes("score_bg_png"));
        a.x = 30,
        a.touchEnabled = !0,
        a.y = 10,
        t.addChild(a);
        var h = new e(RES.getRes("tool3_png"));
        t.addChild(h),
        h.x = a.x + .24 * a.width,
        h.y = a.y + a.height / 2 - h.height / 2;
        var r = new ETextField;
        r.text = NativeApi.datas.coins + "",
        r.width = 80,
        r.textAlign = egret.HorizontalAlign.CENTER,
        r.textColor = 8533525,
        r.size = 30,
        r.x = h.x + h.width,
        r.y = a.y + a.height / 2 - 15,
        t.addChild(r),
        t.coin_label = r;
        var o = new e(RES.getRes("title_choise_png"));
        t.addChild(o),
        o.x = (n - o.width) / 2,
        o.y = 140;
        var l = new EButton(t,"btn_bg_png",t.pressSure,"",30,1);
        t.addChild(l),
        l.setIcon("label_sure_png"),
        l.x = (n - l.width) / 2,
        l.y = s - 20 - l.height;
        var c = new e(RES.getRes("tool3_png"));
        t.addChild(c),
        c.x = (n - c.width) / 2 - 30,
        c.y = l.y - c.height - 10,
        t.price_icon = c;
        var g = new ETextField;
        g.text = GameConfig.role_cfg[0].price + "",
        g.width = 80,
        g.textColor = 8533525,
        g.size = 30,
        g.x = c.x + c.width + 8,
        g.y = c.y + (c.height - g.height) / 2,
        t.addChild(g),
        t.price_label = g;
        var d = NativeApi.datas.unlock[GameConfig.role_cfg[0].key];
        t.price_icon.visible = t.price_label.visible = !d;
        var u = new EButton(t,"btn_next_png",t.pressNext,"",30,1);
        u.setBindData(-1),
        t.addChild(u),
        u.x = 20,
        u.y = l.y - 230;
        var f = new e(RES.getRes("role_light_png"));
        t.addChild(f),
        f.x = (n - f.width) / 2,
        f.y = u.y - .7 * f.height;
        var p = new e(RES.getRes("stone_red_png"));
        t.addChild(p),
        p.x = (n - p.width) / 2 + 3,
        p.y = u.y - .7 * p.height + 8;
        var m = .6
          , _ = 130
          , w = 65
          , v = new e(RES.getRes("stone_yellow_png"));
        t.addChild(v),
        v.x = n / 2 - _ - v.width * m,
        v.y = p.y - w,
        v.scaleX = m,
        v.scaleY = m;
        var y = new e(RES.getRes("stone_yellow_png"));
        t.addChild(y),
        y.x = n / 2 + _,
        y.y = v.y,
        y.scaleX = m,
        y.scaleY = m,
        t.length = GameConfig.role_cfg.length;
        var x = new e(RES.getRes(GameConfig.role_cfg[t.length - 1].key + "_icon_png"));
        x.x = v.x + v.width / 2 * m,
        x.y = v.y + .29 * v.height * m,
        x.scaleX = m,
        x.scaleY = m,
        t.addChild(x);
        var T = new e(RES.getRes(GameConfig.role_cfg[0].key + "_icon_png"));
        T.x = p.x + v.width / 2,
        T.y = p.y + .29 * p.height,
        t.addChild(T);
        var b = new e(RES.getRes(GameConfig.role_cfg[1].key + "_icon_png"));
        b.x = y.x + y.width / 2 * m,
        b.y = y.y + .29 * y.height * m,
        b.scaleX = m,
        b.scaleY = m,
        t.addChild(b);
        var C = new EButton(t,"btn_next_png",t.pressNext,"",30,1);
        C.setBindData(1),
        t.addChild(C),
        C.x = n - 20,
        C.y = u.y,
        C.btnImg.scaleX = -1,
        t.r_list = [x, T, b],
        t.r_list[0].anchorOffsetX = t.r_list[0].width / 2,
        t.r_list[0].anchorOffsetY = t.r_list[0].height,
        t.r_list[1].anchorOffsetX = t.r_list[1].width / 2,
        t.r_list[1].anchorOffsetY = t.r_list[1].height,
        t.r_list[2].anchorOffsetX = t.r_list[2].width / 2,
        t.r_list[2].anchorOffsetY = t.r_list[2].height
    }
    ,
    n.pressNext = function(t) {
        var e = this
          , i = null
          , n = null ;
        e.index += t,
        e.index === e.length || 0 === e.index ? (e.index = 0,
        i = GameConfig.role_cfg[e.length - 1],
        n = GameConfig.role_cfg[1]) : e.index < 0 || e.index === e.length - 1 ? (e.index = e.length - 1,
        i = GameConfig.role_cfg[e.index - 1],
        n = GameConfig.role_cfg[0]) : (i = GameConfig.role_cfg[e.index - 1],
        n = GameConfig.role_cfg[e.index + 1]);
        var s = GameConfig.role_cfg[e.index]
          , a = NativeApi.datas.unlock[s.key];
        e.price_icon.visible = e.price_label.visible = !a,
        e.r_list[0].texture = RES.getRes(i.key + "_icon_png"),
        e.r_list[1].texture = RES.getRes(s.key + "_icon_png"),
        e.r_list[2].texture = RES.getRes(n.key + "_icon_png"),
        e.r_list[0].anchorOffsetX = e.r_list[0].width / 2,
        e.r_list[0].anchorOffsetY = e.r_list[0].height,
        e.r_list[1].anchorOffsetX = e.r_list[1].width / 2,
        e.r_list[1].anchorOffsetY = e.r_list[1].height,
        e.r_list[2].anchorOffsetX = e.r_list[2].width / 2,
        e.r_list[2].anchorOffsetY = e.r_list[2].height,
        e.price_label.text = "" + s.price
    }
    ,
    n.pressSure = function() {
        var t = this
          , e = GameConfig.role_cfg[t.index]
          , i = NativeApi.datas.unlock[e.key];
        i ? (Global.dispatchEvent(MainNotify.closeSelectPanelNotify),
        Global.key = e.key,
        Global.dispatchEvent(MainNotify.openGamePanelNotify)) : e.price <= NativeApi.datas.coins ? (NativeApi.datas.coins -= e.price,
        NativeApi.datas.unlock[e.key] = 1,
        t.coin_label.text = "" + NativeApi.datas.coins,
        NativeApi.saveData(),
        Global.key = e.key,
        Global.dispatchEvent(MainNotify.closeSelectPanelNotify),
        Global.dispatchEvent(MainNotify.openGamePanelNotify)) : alert("金币不足!")
    }
    ,
    e
}(BasePanel);
egret.registerClass(SelectPanel, "SelectPanel");
var SharePanel = function(t) {
    function e() {
        t.call(this)
    }
    __extends(e, t);
    var i = (__define,
    e)
      , n = i.prototype;
    return n.initPanel = function() {
        this.bg = new egret.Bitmap,
        this.bg.texture = RES.getRes("bg"),
        this.addChild(this.bg),
        this.bg.touchEnabled = !0,
        this.startBtn = new egret.Bitmap,
        this.startBtn.texture = RES.getRes("startBtn"),
        this.startBtn.x = this.w / 2 - this.startBtn.width / 2,
        this.startBtn.y = this.h / 2 - this.startBtn.height / 2,
        this.addChild(this.startBtn),
        this.startBtn.touchEnabled = !0,
        this.startBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onStartBtnTouchTap, this)
    }
    ,
    n.onStartBtnTouchTap = function(t) {
        Global.dispatchEvent(MainNotify.openGamePanelNotify, null , !1),
        Global.dispatchEvent(MainNotify.closeStartPanelNotify, null , !1)
    }
    ,
    e
}(BasePanel);
egret.registerClass(SharePanel, "SharePanel");
var StartPanel = function(t) {
    function e() {
        t.call(this)
    }
    __extends(e, t);
    var i = (__define,
    e)
      , n = i.prototype;
    return n.initPanel = function() {
        var t = this
          , e = GameConfig.curWidth()
          , i = GameConfig.curHeight();
        t.bg = new egret.Bitmap(RES.getRes("start_bg_jpg")),
        t.bg.x = (e - t.bg.width) / 2,
        t.bg.y = (i - t.bg.height) / 2,
        t.addChild(t.bg);
        var n = new EButton(this,"btn_bg_png",this.openSelectPanel,"",30,1);
        t.addChild(n),
        n.x = (e - n.width) / 2,
        n.y = i - n.height - 40;
        var s = new egret.Bitmap(RES.getRes("label_choise_png"));
        n.addChild(s),
        s.x = (n.width - s.width) / 2,
        s.y = (n.height - s.height) / 2;
        var a = new EButton(this,"btn_bg_png",this.gameBegin,"",30,1);
        t.addChild(a),
        a.x = (e - a.width) / 2,
        a.y = n.y - a.height - 20;
        var h = new egret.Bitmap(RES.getRes("game_start_label_png"));
        a.addChild(h),
        h.x = (a.width - h.width) / 2,
        h.y = (a.height - h.height) / 2;
        var r = new EToggleButton(this,"music_close_png","music_open_png",function(t) {
            NativeApi.datas.is_music ? (NativeApi.datas.is_music = 0,
            Global.bg_music && Global.bg_music.stop()) : (NativeApi.datas.is_music = 1,
            Global.resumMusic()),
            NativeApi.saveData()
        }
        );
        r.setSelected(NativeApi.datas.is_music),
        this.addChild(r),
        r.touchEnabled = !0,
        r.x = GameConfig.curWidth() - r.width - 20,
        r.y = 570
    }
    ,
    n.openSelectPanel = function() {
        Global.dispatchEvent(MainNotify.openSelectPanelNotify, null , !1)
    }
    ,
    n.gameBegin = function() {
        Global.dispatchEvent(MainNotify.closeStartPanelNotify, null , !1),
        Global.dispatchEvent(MainNotify.openGamePanelNotify, null , !1)
    }
    ,
    e
}(BasePanel);
egret.registerClass(StartPanel, "StartPanel");