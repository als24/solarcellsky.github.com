!function t(e, n, r) {
    function i(a, s) {
        if (!n[a]) {
            if (!e[a]) {
                var h = "function" == typeof require && require;
                if (!s && h)
                    return h(a, !0);
                if (o)
                    return o(a, !0);
                var u = new Error("Cannot find module '" + a + "'");
                throw u.code = "MODULE_NOT_FOUND",
                u
            }
            var l = n[a] = {
                exports: {}
            };
            e[a][0].call(l.exports, function(t) {
                var n = e[a][1][t];
                return i(n ? n : t)
            }, l, l.exports, t, e, n, r)
        }
        return n[a].exports
    }
    for (var o = "function" == typeof require && require, a = 0; a < r.length; a++)
        i(r[a]);
    return i
}({
    1: [function(t, e, n) {
        (function(t) {
            !function() {
                function n(t) {
                    var e = !1;
                    return function() {
                        if (e)
                            throw new Error("Callback was already called.");
                        e = !0,
                        t.apply(r, arguments)
                    }
                }
                var r, i, o = {};
                r = this,
                null != r && (i = r.async),
                o.noConflict = function() {
                    return r.async = i,
                    o
                }
                ;
                var a = Object.prototype.toString
                  , s = Array.isArray || function(t) {
                    return "[object Array]" === a.call(t)
                }
                  , h = function(t, e) {
                    for (var n = 0; n < t.length; n += 1)
                        e(t[n], n, t)
                }
                  , u = function(t, e) {
                    if (t.map)
                        return t.map(e);
                    var n = [];
                    return h(t, function(t, r, i) {
                        n.push(e(t, r, i))
                    }),
                    n
                }
                  , l = function(t, e, n) {
                    return t.reduce ? t.reduce(e, n) : (h(t, function(t, r, i) {
                        n = e(n, t, r, i)
                    }),
                    n)
                }
                  , c = function(t) {
                    if (Object.keys)
                        return Object.keys(t);
                    var e = [];
                    for (var n in t)
                        t.hasOwnProperty(n) && e.push(n);
                    return e
                }
                ;
                "undefined" != typeof t && t.nextTick ? (o.nextTick = t.nextTick,
                "undefined" != typeof setImmediate ? o.setImmediate = function(t) {
                    setImmediate(t)
                }
                : o.setImmediate = o.nextTick) : "function" == typeof setImmediate ? (o.nextTick = function(t) {
                    setImmediate(t)
                }
                ,
                o.setImmediate = o.nextTick) : (o.nextTick = function(t) {
                    setTimeout(t, 0)
                }
                ,
                o.setImmediate = o.nextTick),
                o.each = function(t, e, r) {
                    function i(e) {
                        e ? (r(e),
                        r = function() {}
                        ) : (o += 1,
                        o >= t.length && r())
                    }
                    if (r = r || function() {}
                    ,
                    !t.length)
                        return r();
                    var o = 0;
                    h(t, function(t) {
                        e(t, n(i))
                    })
                }
                ,
                o.forEach = o.each,
                o.eachSeries = function(t, e, n) {
                    if (n = n || function() {}
                    ,
                    !t.length)
                        return n();
                    var r = 0
                      , i = function() {
                        e(t[r], function(e) {
                            e ? (n(e),
                            n = function() {}
                            ) : (r += 1,
                            r >= t.length ? n() : i())
                        })
                    }
                    ;
                    i()
                }
                ,
                o.forEachSeries = o.eachSeries,
                o.eachLimit = function(t, e, n, r) {
                    var i = p(e);
                    i.apply(null , [t, n, r])
                }
                ,
                o.forEachLimit = o.eachLimit;
                var p = function(t) {
                    return function(e, n, r) {
                        if (r = r || function() {}
                        ,
                        !e.length || t <= 0)
                            return r();
                        var i = 0
                          , o = 0
                          , a = 0;
                        !function s() {
                            if (i >= e.length)
                                return r();
                            for (; a < t && o < e.length; )
                                o += 1,
                                a += 1,
                                n(e[o - 1], function(t) {
                                    t ? (r(t),
                                    r = function() {}
                                    ) : (i += 1,
                                    a -= 1,
                                    i >= e.length ? r() : s())
                                })
                        }()
                    }
                }
                  , f = function(t) {
                    return function() {
                        var e = Array.prototype.slice.call(arguments);
                        return t.apply(null , [o.each].concat(e))
                    }
                }
                  , d = function(t, e) {
                    return function() {
                        var n = Array.prototype.slice.call(arguments);
                        return e.apply(null , [p(t)].concat(n))
                    }
                }
                  , m = function(t) {
                    return function() {
                        var e = Array.prototype.slice.call(arguments);
                        return t.apply(null , [o.eachSeries].concat(e))
                    }
                }
                  , v = function(t, e, n, r) {
                    if (e = u(e, function(t, e) {
                        return {
                            index: e,
                            value: t
                        }
                    }),
                    r) {
                        var i = [];
                        t(e, function(t, e) {
                            n(t.value, function(n, r) {
                                i[t.index] = r,
                                e(n)
                            })
                        }, function(t) {
                            r(t, i)
                        })
                    } else
                        t(e, function(t, e) {
                            n(t.value, function(t) {
                                e(t)
                            })
                        })
                }
                ;
                o.map = f(v),
                o.mapSeries = m(v),
                o.mapLimit = function(t, e, n, r) {
                    return g(e)(t, n, r)
                }
                ;
                var g = function(t) {
                    return d(t, v)
                }
                ;
                o.reduce = function(t, e, n, r) {
                    o.eachSeries(t, function(t, r) {
                        n(e, t, function(t, n) {
                            e = n,
                            r(t)
                        })
                    }, function(t) {
                        r(t, e)
                    })
                }
                ,
                o.inject = o.reduce,
                o.foldl = o.reduce,
                o.reduceRight = function(t, e, n, r) {
                    var i = u(t, function(t) {
                        return t
                    }).reverse();
                    o.reduce(i, e, n, r)
                }
                ,
                o.foldr = o.reduceRight;
                var y = function(t, e, n, r) {
                    var i = [];
                    e = u(e, function(t, e) {
                        return {
                            index: e,
                            value: t
                        }
                    }),
                    t(e, function(t, e) {
                        n(t.value, function(n) {
                            n && i.push(t),
                            e()
                        })
                    }, function(t) {
                        r(u(i.sort(function(t, e) {
                            return t.index - e.index
                        }), function(t) {
                            return t.value
                        }))
                    })
                }
                ;
                o.filter = f(y),
                o.filterSeries = m(y),
                o.select = o.filter,
                o.selectSeries = o.filterSeries;
                var _ = function(t, e, n, r) {
                    var i = [];
                    e = u(e, function(t, e) {
                        return {
                            index: e,
                            value: t
                        }
                    }),
                    t(e, function(t, e) {
                        n(t.value, function(n) {
                            n || i.push(t),
                            e()
                        })
                    }, function(t) {
                        r(u(i.sort(function(t, e) {
                            return t.index - e.index
                        }), function(t) {
                            return t.value
                        }))
                    })
                }
                ;
                o.reject = f(_),
                o.rejectSeries = m(_);
                var x = function(t, e, n, r) {
                    t(e, function(t, e) {
                        n(t, function(n) {
                            n ? (r(t),
                            r = function() {}
                            ) : e()
                        })
                    }, function(t) {
                        r()
                    })
                }
                ;
                o.detect = f(x),
                o.detectSeries = m(x),
                o.some = function(t, e, n) {
                    o.each(t, function(t, r) {
                        e(t, function(t) {
                            t && (n(!0),
                            n = function() {}
                            ),
                            r()
                        })
                    }, function(t) {
                        n(!1)
                    })
                }
                ,
                o.any = o.some,
                o.every = function(t, e, n) {
                    o.each(t, function(t, r) {
                        e(t, function(t) {
                            t || (n(!1),
                            n = function() {}
                            ),
                            r()
                        })
                    }, function(t) {
                        n(!0)
                    })
                }
                ,
                o.all = o.every,
                o.sortBy = function(t, e, n) {
                    o.map(t, function(t, n) {
                        e(t, function(e, r) {
                            e ? n(e) : n(null , {
                                value: t,
                                criteria: r
                            })
                        })
                    }, function(t, e) {
                        if (t)
                            return n(t);
                        var r = function(t, e) {
                            var n = t.criteria
                              , r = e.criteria;
                            return n < r ? -1 : n > r ? 1 : 0
                        }
                        ;
                        n(null , u(e.sort(r), function(t) {
                            return t.value
                        }))
                    })
                }
                ,
                o.auto = function(t, e) {
                    e = e || function() {}
                    ;
                    var n = c(t)
                      , r = n.length;
                    if (!r)
                        return e();
                    var i = {}
                      , a = []
                      , u = function(t) {
                        a.unshift(t)
                    }
                      , p = function(t) {
                        for (var e = 0; e < a.length; e += 1)
                            if (a[e] === t)
                                return void a.splice(e, 1)
                    }
                      , f = function() {
                        r--,
                        h(a.slice(0), function(t) {
                            t()
                        })
                    }
                    ;
                    u(function() {
                        if (!r) {
                            var t = e;
                            e = function() {}
                            ,
                            t(null , i)
                        }
                    }),
                    h(n, function(n) {
                        var r = s(t[n]) ? t[n] : [t[n]]
                          , a = function(t) {
                            var r = Array.prototype.slice.call(arguments, 1);
                            if (r.length <= 1 && (r = r[0]),
                            t) {
                                var a = {};
                                h(c(i), function(t) {
                                    a[t] = i[t]
                                }),
                                a[n] = r,
                                e(t, a),
                                e = function() {}
                            } else
                                i[n] = r,
                                o.setImmediate(f)
                        }
                          , d = r.slice(0, Math.abs(r.length - 1)) || []
                          , m = function() {
                            return l(d, function(t, e) {
                                return t && i.hasOwnProperty(e)
                            }, !0) && !i.hasOwnProperty(n)
                        }
                        ;
                        if (m())
                            r[r.length - 1](a, i);
                        else {
                            var v = function() {
                                m() && (p(v),
                                r[r.length - 1](a, i))
                            }
                            ;
                            u(v)
                        }
                    })
                }
                ,
                o.retry = function(t, e, n) {
                    var r = 5
                      , i = [];
                    "function" == typeof t && (n = e,
                    e = t,
                    t = r),
                    t = parseInt(t, 10) || r;
                    var a = function(r, a) {
                        for (var s = function(t, e) {
                            return function(n) {
                                t(function(t, r) {
                                    n(!t || e, {
                                        err: t,
                                        result: r
                                    })
                                }, a)
                            }
                        }
                        ; t; )
                            i.push(s(e, !(t -= 1)));
                        o.series(i, function(t, e) {
                            e = e[e.length - 1],
                            (r || n)(e.err, e.result)
                        })
                    }
                    ;
                    return n ? a() : a
                }
                ,
                o.waterfall = function(t, e) {
                    if (e = e || function() {}
                    ,
                    !s(t)) {
                        var n = new Error("First argument to waterfall must be an array of functions");
                        return e(n)
                    }
                    if (!t.length)
                        return e();
                    var r = function(t) {
                        return function(n) {
                            if (n)
                                e.apply(null , arguments),
                                e = function() {}
                                ;
                            else {
                                var i = Array.prototype.slice.call(arguments, 1)
                                  , a = t.next();
                                a ? i.push(r(a)) : i.push(e),
                                o.setImmediate(function() {
                                    t.apply(null , i)
                                })
                            }
                        }
                    }
                    ;
                    r(o.iterator(t))()
                }
                ;
                var b = function(t, e, n) {
                    if (n = n || function() {}
                    ,
                    s(e))
                        t.map(e, function(t, e) {
                            t && t(function(t) {
                                var n = Array.prototype.slice.call(arguments, 1);
                                n.length <= 1 && (n = n[0]),
                                e.call(null , t, n)
                            })
                        }, n);
                    else {
                        var r = {};
                        t.each(c(e), function(t, n) {
                            e[t](function(e) {
                                var i = Array.prototype.slice.call(arguments, 1);
                                i.length <= 1 && (i = i[0]),
                                r[t] = i,
                                n(e)
                            })
                        }, function(t) {
                            n(t, r)
                        })
                    }
                }
                ;
                o.parallel = function(t, e) {
                    b({
                        map: o.map,
                        each: o.each
                    }, t, e)
                }
                ,
                o.parallelLimit = function(t, e, n) {
                    b({
                        map: g(e),
                        each: p(e)
                    }, t, n)
                }
                ,
                o.series = function(t, e) {
                    if (e = e || function() {}
                    ,
                    s(t))
                        o.mapSeries(t, function(t, e) {
                            t && t(function(t) {
                                var n = Array.prototype.slice.call(arguments, 1);
                                n.length <= 1 && (n = n[0]),
                                e.call(null , t, n)
                            })
                        }, e);
                    else {
                        var n = {};
                        o.eachSeries(c(t), function(e, r) {
                            t[e](function(t) {
                                var i = Array.prototype.slice.call(arguments, 1);
                                i.length <= 1 && (i = i[0]),
                                n[e] = i,
                                r(t)
                            })
                        }, function(t) {
                            e(t, n)
                        })
                    }
                }
                ,
                o.iterator = function(t) {
                    var e = function(n) {
                        var r = function() {
                            return t.length && t[n].apply(null , arguments),
                            r.next()
                        }
                        ;
                        return r.next = function() {
                            return n < t.length - 1 ? e(n + 1) : null
                        }
                        ,
                        r
                    }
                    ;
                    return e(0)
                }
                ,
                o.apply = function(t) {
                    var e = Array.prototype.slice.call(arguments, 1);
                    return function() {
                        return t.apply(null , e.concat(Array.prototype.slice.call(arguments)))
                    }
                }
                ;
                var w = function(t, e, n, r) {
                    var i = [];
                    t(e, function(t, e) {
                        n(t, function(t, n) {
                            i = i.concat(n || []),
                            e(t)
                        })
                    }, function(t) {
                        r(t, i)
                    })
                }
                ;
                o.concat = f(w),
                o.concatSeries = m(w),
                o.whilst = function(t, e, n) {
                    t() ? e(function(r) {
                        return r ? n(r) : void o.whilst(t, e, n)
                    }) : n()
                }
                ,
                o.doWhilst = function(t, e, n) {
                    t(function(r) {
                        if (r)
                            return n(r);
                        var i = Array.prototype.slice.call(arguments, 1);
                        e.apply(null , i) ? o.doWhilst(t, e, n) : n()
                    })
                }
                ,
                o.until = function(t, e, n) {
                    t() ? n() : e(function(r) {
                        return r ? n(r) : void o.until(t, e, n)
                    })
                }
                ,
                o.doUntil = function(t, e, n) {
                    t(function(r) {
                        if (r)
                            return n(r);
                        var i = Array.prototype.slice.call(arguments, 1);
                        e.apply(null , i) ? n() : o.doUntil(t, e, n)
                    })
                }
                ,
                o.queue = function(t, e) {
                    function r(t, e, n, r) {
                        return t.started || (t.started = !0),
                        s(e) || (e = [e]),
                        0 == e.length ? o.setImmediate(function() {
                            t.drain && t.drain()
                        }) : void h(e, function(e) {
                            var i = {
                                data: e,
                                callback: "function" == typeof r ? r : null
                            };
                            n ? t.tasks.unshift(i) : t.tasks.push(i),
                            t.saturated && t.tasks.length === t.concurrency && t.saturated(),
                            o.setImmediate(t.process)
                        })
                    }
                    void 0 === e && (e = 1);
                    var i = 0
                      , a = {
                        tasks: [],
                        concurrency: e,
                        saturated: null ,
                        empty: null ,
                        drain: null ,
                        started: !1,
                        paused: !1,
                        push: function(t, e) {
                            r(a, t, !1, e)
                        },
                        kill: function() {
                            a.drain = null ,
                            a.tasks = []
                        },
                        unshift: function(t, e) {
                            r(a, t, !0, e)
                        },
                        process: function() {
                            if (!a.paused && i < a.concurrency && a.tasks.length) {
                                var e = a.tasks.shift();
                                a.empty && 0 === a.tasks.length && a.empty(),
                                i += 1;
                                var r = function() {
                                    i -= 1,
                                    e.callback && e.callback.apply(e, arguments),
                                    a.drain && a.tasks.length + i === 0 && a.drain(),
                                    a.process()
                                }
                                  , o = n(r);
                                t(e.data, o)
                            }
                        },
                        length: function() {
                            return a.tasks.length
                        },
                        running: function() {
                            return i
                        },
                        idle: function() {
                            return a.tasks.length + i === 0
                        },
                        pause: function() {
                            a.paused !== !0 && (a.paused = !0)
                        },
                        resume: function() {
                            if (a.paused !== !1) {
                                a.paused = !1;
                                for (var t = 1; t <= a.concurrency; t++)
                                    o.setImmediate(a.process)
                            }
                        }
                    };
                    return a
                }
                ,
                o.priorityQueue = function(t, e) {
                    function n(t, e) {
                        return t.priority - e.priority
                    }
                    function r(t, e, n) {
                        for (var r = -1, i = t.length - 1; r < i; ) {
                            var o = r + (i - r + 1 >>> 1);
                            n(e, t[o]) >= 0 ? r = o : i = o - 1
                        }
                        return r
                    }
                    function i(t, e, i, a) {
                        return t.started || (t.started = !0),
                        s(e) || (e = [e]),
                        0 == e.length ? o.setImmediate(function() {
                            t.drain && t.drain()
                        }) : void h(e, function(e) {
                            var s = {
                                data: e,
                                priority: i,
                                callback: "function" == typeof a ? a : null
                            };
                            t.tasks.splice(r(t.tasks, s, n) + 1, 0, s),
                            t.saturated && t.tasks.length === t.concurrency && t.saturated(),
                            o.setImmediate(t.process)
                        })
                    }
                    var a = o.queue(t, e);
                    return a.push = function(t, e, n) {
                        i(a, t, e, n)
                    }
                    ,
                    delete a.unshift,
                    a
                }
                ,
                o.cargo = function(t, e) {
                    var n = !1
                      , r = []
                      , i = {
                        tasks: r,
                        payload: e,
                        saturated: null ,
                        empty: null ,
                        drain: null ,
                        drained: !0,
                        push: function(t, n) {
                            s(t) || (t = [t]),
                            h(t, function(t) {
                                r.push({
                                    data: t,
                                    callback: "function" == typeof n ? n : null
                                }),
                                i.drained = !1,
                                i.saturated && r.length === e && i.saturated()
                            }),
                            o.setImmediate(i.process)
                        },
                        process: function a() {
                            if (!n) {
                                if (0 === r.length)
                                    return i.drain && !i.drained && i.drain(),
                                    void (i.drained = !0);
                                var o = "number" == typeof e ? r.splice(0, e) : r.splice(0, r.length)
                                  , s = u(o, function(t) {
                                    return t.data
                                });
                                i.empty && i.empty(),
                                n = !0,
                                t(s, function() {
                                    n = !1;
                                    var t = arguments;
                                    h(o, function(e) {
                                        e.callback && e.callback.apply(null , t)
                                    }),
                                    a()
                                })
                            }
                        },
                        length: function() {
                            return r.length
                        },
                        running: function() {
                            return n
                        }
                    };
                    return i
                }
                ;
                var E = function(t) {
                    return function(e) {
                        var n = Array.prototype.slice.call(arguments, 1);
                        e.apply(null , n.concat([function(e) {
                            var n = Array.prototype.slice.call(arguments, 1);
                            "undefined" != typeof console && (e ? console.error && console.error(e) : console[t] && h(n, function(e) {
                                console[t](e)
                            }))
                        }
                        ]))
                    }
                }
                ;
                o.log = E("log"),
                o.dir = E("dir"),
                o.memoize = function(t, e) {
                    var n = {}
                      , r = {};
                    e = e || function(t) {
                        return t
                    }
                    ;
                    var i = function() {
                        var i = Array.prototype.slice.call(arguments)
                          , a = i.pop()
                          , s = e.apply(null , i);
                        s in n ? o.nextTick(function() {
                            a.apply(null , n[s])
                        }) : s in r ? r[s].push(a) : (r[s] = [a],
                        t.apply(null , i.concat([function() {
                            n[s] = arguments;
                            var t = r[s];
                            delete r[s];
                            for (var e = 0, i = t.length; e < i; e++)
                                t[e].apply(null , arguments)
                        }
                        ])))
                    }
                    ;
                    return i.memo = n,
                    i.unmemoized = t,
                    i
                }
                ,
                o.unmemoize = function(t) {
                    return function() {
                        return (t.unmemoized || t).apply(null , arguments)
                    }
                }
                ,
                o.times = function(t, e, n) {
                    for (var r = [], i = 0; i < t; i++)
                        r.push(i);
                    return o.map(r, e, n)
                }
                ,
                o.timesSeries = function(t, e, n) {
                    for (var r = [], i = 0; i < t; i++)
                        r.push(i);
                    return o.mapSeries(r, e, n)
                }
                ,
                o.seq = function() {
                    var t = arguments;
                    return function() {
                        var e = this
                          , n = Array.prototype.slice.call(arguments)
                          , r = n.pop();
                        o.reduce(t, n, function(t, n, r) {
                            n.apply(e, t.concat([function() {
                                var t = arguments[0]
                                  , e = Array.prototype.slice.call(arguments, 1);
                                r(t, e)
                            }
                            ]))
                        }, function(t, n) {
                            r.apply(e, [t].concat(n))
                        })
                    }
                }
                ,
                o.compose = function() {
                    return o.seq.apply(null , Array.prototype.reverse.call(arguments))
                }
                ;
                var S = function(t, e) {
                    var n = function() {
                        var n = this
                          , r = Array.prototype.slice.call(arguments)
                          , i = r.pop();
                        return t(e, function(t, e) {
                            t.apply(n, r.concat([e]))
                        }, i)
                    }
                    ;
                    if (arguments.length > 2) {
                        var r = Array.prototype.slice.call(arguments, 2);
                        return n.apply(this, r)
                    }
                    return n
                }
                ;
                o.applyEach = f(S),
                o.applyEachSeries = m(S),
                o.forever = function(t, e) {
                    function n(r) {
                        if (r) {
                            if (e)
                                return e(r);
                            throw r
                        }
                        t(n)
                    }
                    n()
                }
                ,
                "undefined" != typeof e && e.exports ? e.exports = o : "undefined" != typeof define && define.amd ? define([], function() {
                    return o
                }) : r.async = o
            }()
        }
        ).call(this, t("_process"))
    }
    , {
        _process: 6
    }],
    2: [function(t, e, n) {
        "use strict";
        function r(t, e, n) {
            this.fn = t,
            this.context = e,
            this.once = n || !1
        }
        function i() {}
        var o = Object.prototype.hasOwnProperty
          , a = "function" != typeof Object.create && "~";
        i.prototype._events = void 0,
        i.prototype.eventNames = function() {
            var t, e = this._events, n = [];
            if (!e)
                return n;
            for (t in e)
                o.call(e, t) && n.push(a ? t.slice(1) : t);
            return Object.getOwnPropertySymbols ? n.concat(Object.getOwnPropertySymbols(e)) : n
        }
        ,
        i.prototype.listeners = function(t, e) {
            var n = a ? a + t : t
              , r = this._events && this._events[n];
            if (e)
                return !!r;
            if (!r)
                return [];
            if (r.fn)
                return [r.fn];
            for (var i = 0, o = r.length, s = new Array(o); i < o; i++)
                s[i] = r[i].fn;
            return s
        }
        ,
        i.prototype.emit = function(t, e, n, r, i, o) {
            var s = a ? a + t : t;
            if (!this._events || !this._events[s])
                return !1;
            var h, u, l = this._events[s], c = arguments.length;
            if ("function" == typeof l.fn) {
                switch (l.once && this.removeListener(t, l.fn, void 0, !0),
                c) {
                case 1:
                    return l.fn.call(l.context),
                    !0;
                case 2:
                    return l.fn.call(l.context, e),
                    !0;
                case 3:
                    return l.fn.call(l.context, e, n),
                    !0;
                case 4:
                    return l.fn.call(l.context, e, n, r),
                    !0;
                case 5:
                    return l.fn.call(l.context, e, n, r, i),
                    !0;
                case 6:
                    return l.fn.call(l.context, e, n, r, i, o),
                    !0
                }
                for (u = 1,
                h = new Array(c - 1); u < c; u++)
                    h[u - 1] = arguments[u];
                l.fn.apply(l.context, h)
            } else {
                var p, f = l.length;
                for (u = 0; u < f; u++)
                    switch (l[u].once && this.removeListener(t, l[u].fn, void 0, !0),
                    c) {
                    case 1:
                        l[u].fn.call(l[u].context);
                        break;
                    case 2:
                        l[u].fn.call(l[u].context, e);
                        break;
                    case 3:
                        l[u].fn.call(l[u].context, e, n);
                        break;
                    default:
                        if (!h)
                            for (p = 1,
                            h = new Array(c - 1); p < c; p++)
                                h[p - 1] = arguments[p];
                        l[u].fn.apply(l[u].context, h)
                    }
            }
            return !0
        }
        ,
        i.prototype.on = function(t, e, n) {
            var i = new r(e,n || this)
              , o = a ? a + t : t;
            return this._events || (this._events = a ? {} : Object.create(null )),
            this._events[o] ? this._events[o].fn ? this._events[o] = [this._events[o], i] : this._events[o].push(i) : this._events[o] = i,
            this
        }
        ,
        i.prototype.once = function(t, e, n) {
            var i = new r(e,n || this,(!0))
              , o = a ? a + t : t;
            return this._events || (this._events = a ? {} : Object.create(null )),
            this._events[o] ? this._events[o].fn ? this._events[o] = [this._events[o], i] : this._events[o].push(i) : this._events[o] = i,
            this
        }
        ,
        i.prototype.removeListener = function(t, e, n, r) {
            var i = a ? a + t : t;
            if (!this._events || !this._events[i])
                return this;
            var o = this._events[i]
              , s = [];
            if (e)
                if (o.fn)
                    (o.fn !== e || r && !o.once || n && o.context !== n) && s.push(o);
                else
                    for (var h = 0, u = o.length; h < u; h++)
                        (o[h].fn !== e || r && !o[h].once || n && o[h].context !== n) && s.push(o[h]);
            return s.length ? this._events[i] = 1 === s.length ? s[0] : s : delete this._events[i],
            this
        }
        ,
        i.prototype.removeAllListeners = function(t) {
            return this._events ? (t ? delete this._events[a ? a + t : t] : this._events = a ? {} : Object.create(null ),
            this) : this
        }
        ,
        i.prototype.off = i.prototype.removeListener,
        i.prototype.addListener = i.prototype.on,
        i.prototype.setMaxListeners = function() {
            return this
        }
        ,
        i.prefixed = a,
        "undefined" != typeof e && (e.exports = i)
    }
    , {}],
    3: [function(t, e, n) {
        (function(t) {
            var n = "undefined" != typeof e && e.exports && "undefined" != typeof t ? t : this || window;
            (n._gsQueue || (n._gsQueue = [])).push(function() {
                "use strict";
                n._gsDefine("TweenMax", ["core.Animation", "core.SimpleTimeline", "TweenLite"], function(t, e, n) {
                    var r = function(t) {
                        var e, n = [], r = t.length;
                        for (e = 0; e !== r; n.push(t[e++]))
                            ;
                        return n
                    }
                      , i = function(t, e, n) {
                        var r, i, o = t.cycle;
                        for (r in o)
                            i = o[r],
                            t[r] = "function" == typeof i ? i.call(e[n], n) : i[n % i.length];
                        delete t.cycle
                    }
                      , o = function(t, e, r) {
                        n.call(this, t, e, r),
                        this._cycle = 0,
                        this._yoyo = this.vars.yoyo === !0,
                        this._repeat = this.vars.repeat || 0,
                        this._repeatDelay = this.vars.repeatDelay || 0,
                        this._dirty = !0,
                        this.render = o.prototype.render
                    }
                      , a = 1e-10
                      , s = n._internals
                      , h = s.isSelector
                      , u = s.isArray
                      , l = o.prototype = n.to({}, .1, {})
                      , c = [];
                    o.version = "1.18.5",
                    l.constructor = o,
                    l.kill()._gc = !1,
                    o.killTweensOf = o.killDelayedCallsTo = n.killTweensOf,
                    o.getTweensOf = n.getTweensOf,
                    o.lagSmoothing = n.lagSmoothing,
                    o.ticker = n.ticker,
                    o.render = n.render,
                    l.invalidate = function() {
                        return this._yoyo = this.vars.yoyo === !0,
                        this._repeat = this.vars.repeat || 0,
                        this._repeatDelay = this.vars.repeatDelay || 0,
                        this._uncache(!0),
                        n.prototype.invalidate.call(this)
                    }
                    ,
                    l.updateTo = function(t, e) {
                        var r, i = this.ratio, o = this.vars.immediateRender || t.immediateRender;
                        e && this._startTime < this._timeline._time && (this._startTime = this._timeline._time,
                        this._uncache(!1),
                        this._gc ? this._enabled(!0, !1) : this._timeline.insert(this, this._startTime - this._delay));
                        for (r in t)
                            this.vars[r] = t[r];
                        if (this._initted || o)
                            if (e)
                                this._initted = !1,
                                o && this.render(0, !0, !0);
                            else if (this._gc && this._enabled(!0, !1),
                            this._notifyPluginsOfEnabled && this._firstPT && n._onPluginEvent("_onDisable", this),
                            this._time / this._duration > .998) {
                                var a = this._totalTime;
                                this.render(0, !0, !1),
                                this._initted = !1,
                                this.render(a, !0, !1)
                            } else if (this._initted = !1,
                            this._init(),
                            this._time > 0 || o)
                                for (var s, h = 1 / (1 - i), u = this._firstPT; u; )
                                    s = u.s + u.c,
                                    u.c *= h,
                                    u.s = s - u.c,
                                    u = u._next;
                        return this
                    }
                    ,
                    l.render = function(t, e, n) {
                        this._initted || 0 === this._duration && this.vars.repeat && this.invalidate();
                        var r, i, o, h, u, l, c, p, f = this._dirty ? this.totalDuration() : this._totalDuration, d = this._time, m = this._totalTime, v = this._cycle, g = this._duration, y = this._rawPrevTime;
                        if (t >= f - 1e-7 ? (this._totalTime = f,
                        this._cycle = this._repeat,
                        this._yoyo && 0 !== (1 & this._cycle) ? (this._time = 0,
                        this.ratio = this._ease._calcEnd ? this._ease.getRatio(0) : 0) : (this._time = g,
                        this.ratio = this._ease._calcEnd ? this._ease.getRatio(1) : 1),
                        this._reversed || (r = !0,
                        i = "onComplete",
                        n = n || this._timeline.autoRemoveChildren),
                        0 === g && (this._initted || !this.vars.lazy || n) && (this._startTime === this._timeline._duration && (t = 0),
                        (y < 0 || t <= 0 && t >= -1e-7 || y === a && "isPause" !== this.data) && y !== t && (n = !0,
                        y > a && (i = "onReverseComplete")),
                        this._rawPrevTime = p = !e || t || y === t ? t : a)) : t < 1e-7 ? (this._totalTime = this._time = this._cycle = 0,
                        this.ratio = this._ease._calcEnd ? this._ease.getRatio(0) : 0,
                        (0 !== m || 0 === g && y > 0) && (i = "onReverseComplete",
                        r = this._reversed),
                        t < 0 && (this._active = !1,
                        0 === g && (this._initted || !this.vars.lazy || n) && (y >= 0 && (n = !0),
                        this._rawPrevTime = p = !e || t || y === t ? t : a)),
                        this._initted || (n = !0)) : (this._totalTime = this._time = t,
                        0 !== this._repeat && (h = g + this._repeatDelay,
                        this._cycle = this._totalTime / h >> 0,
                        0 !== this._cycle && this._cycle === this._totalTime / h && m <= t && this._cycle--,
                        this._time = this._totalTime - this._cycle * h,
                        this._yoyo && 0 !== (1 & this._cycle) && (this._time = g - this._time),
                        this._time > g ? this._time = g : this._time < 0 && (this._time = 0)),
                        this._easeType ? (u = this._time / g,
                        l = this._easeType,
                        c = this._easePower,
                        (1 === l || 3 === l && u >= .5) && (u = 1 - u),
                        3 === l && (u *= 2),
                        1 === c ? u *= u : 2 === c ? u *= u * u : 3 === c ? u *= u * u * u : 4 === c && (u *= u * u * u * u),
                        1 === l ? this.ratio = 1 - u : 2 === l ? this.ratio = u : this._time / g < .5 ? this.ratio = u / 2 : this.ratio = 1 - u / 2) : this.ratio = this._ease.getRatio(this._time / g)),
                        d === this._time && !n && v === this._cycle)
                            return void (m !== this._totalTime && this._onUpdate && (e || this._callback("onUpdate")));
                        if (!this._initted) {
                            if (this._init(),
                            !this._initted || this._gc)
                                return;
                            if (!n && this._firstPT && (this.vars.lazy !== !1 && this._duration || this.vars.lazy && !this._duration))
                                return this._time = d,
                                this._totalTime = m,
                                this._rawPrevTime = y,
                                this._cycle = v,
                                s.lazyTweens.push(this),
                                void (this._lazy = [t, e]);
                            this._time && !r ? this.ratio = this._ease.getRatio(this._time / g) : r && this._ease._calcEnd && (this.ratio = this._ease.getRatio(0 === this._time ? 0 : 1))
                        }
                        for (this._lazy !== !1 && (this._lazy = !1),
                        this._active || !this._paused && this._time !== d && t >= 0 && (this._active = !0),
                        0 === m && (2 === this._initted && t > 0 && this._init(),
                        this._startAt && (t >= 0 ? this._startAt.render(t, e, n) : i || (i = "_dummyGS")),
                        this.vars.onStart && (0 === this._totalTime && 0 !== g || e || this._callback("onStart"))),
                        o = this._firstPT; o; )
                            o.f ? o.t[o.p](o.c * this.ratio + o.s) : o.t[o.p] = o.c * this.ratio + o.s,
                            o = o._next;
                        this._onUpdate && (t < 0 && this._startAt && this._startTime && this._startAt.render(t, e, n),
                        e || (this._totalTime !== m || i) && this._callback("onUpdate")),
                        this._cycle !== v && (e || this._gc || this.vars.onRepeat && this._callback("onRepeat")),
                        i && (this._gc && !n || (t < 0 && this._startAt && !this._onUpdate && this._startTime && this._startAt.render(t, e, n),
                        r && (this._timeline.autoRemoveChildren && this._enabled(!1, !1),
                        this._active = !1),
                        !e && this.vars[i] && this._callback(i),
                        0 === g && this._rawPrevTime === a && p !== a && (this._rawPrevTime = 0)))
                    }
                    ,
                    o.to = function(t, e, n) {
                        return new o(t,e,n)
                    }
                    ,
                    o.from = function(t, e, n) {
                        return n.runBackwards = !0,
                        n.immediateRender = 0 != n.immediateRender,
                        new o(t,e,n)
                    }
                    ,
                    o.fromTo = function(t, e, n, r) {
                        return r.startAt = n,
                        r.immediateRender = 0 != r.immediateRender && 0 != n.immediateRender,
                        new o(t,e,r)
                    }
                    ,
                    o.staggerTo = o.allTo = function(t, e, a, s, l, p, f) {
                        s = s || 0;
                        var d, m, v, g, y = 0, _ = [], x = function() {
                            a.onComplete && a.onComplete.apply(a.onCompleteScope || this, arguments),
                            l.apply(f || a.callbackScope || this, p || c)
                        }
                        , b = a.cycle, w = a.startAt && a.startAt.cycle;
                        for (u(t) || ("string" == typeof t && (t = n.selector(t) || t),
                        h(t) && (t = r(t))),
                        t = t || [],
                        s < 0 && (t = r(t),
                        t.reverse(),
                        s *= -1),
                        d = t.length - 1,
                        v = 0; v <= d; v++) {
                            m = {};
                            for (g in a)
                                m[g] = a[g];
                            if (b && (i(m, t, v),
                            null != m.duration && (e = m.duration,
                            delete m.duration)),
                            w) {
                                w = m.startAt = {};
                                for (g in a.startAt)
                                    w[g] = a.startAt[g];
                                i(m.startAt, t, v)
                            }
                            m.delay = y + (m.delay || 0),
                            v === d && l && (m.onComplete = x),
                            _[v] = new o(t[v],e,m),
                            y += s
                        }
                        return _
                    }
                    ,
                    o.staggerFrom = o.allFrom = function(t, e, n, r, i, a, s) {
                        return n.runBackwards = !0,
                        n.immediateRender = 0 != n.immediateRender,
                        o.staggerTo(t, e, n, r, i, a, s)
                    }
                    ,
                    o.staggerFromTo = o.allFromTo = function(t, e, n, r, i, a, s, h) {
                        return r.startAt = n,
                        r.immediateRender = 0 != r.immediateRender && 0 != n.immediateRender,
                        o.staggerTo(t, e, r, i, a, s, h)
                    }
                    ,
                    o.delayedCall = function(t, e, n, r, i) {
                        return new o(e,0,{
                            delay: t,
                            onComplete: e,
                            onCompleteParams: n,
                            callbackScope: r,
                            onReverseComplete: e,
                            onReverseCompleteParams: n,
                            immediateRender: !1,
                            useFrames: i,
                            overwrite: 0
                        })
                    }
                    ,
                    o.set = function(t, e) {
                        return new o(t,0,e)
                    }
                    ,
                    o.isTweening = function(t) {
                        return n.getTweensOf(t, !0).length > 0
                    }
                    ;
                    var p = function(t, e) {
                        for (var r = [], i = 0, o = t._first; o; )
                            o instanceof n ? r[i++] = o : (e && (r[i++] = o),
                            r = r.concat(p(o, e)),
                            i = r.length),
                            o = o._next;
                        return r
                    }
                      , f = o.getAllTweens = function(e) {
                        return p(t._rootTimeline, e).concat(p(t._rootFramesTimeline, e))
                    }
                    ;
                    o.killAll = function(t, n, r, i) {
                        null == n && (n = !0),
                        null == r && (r = !0);
                        var o, a, s, h = f(0 != i), u = h.length, l = n && r && i;
                        for (s = 0; s < u; s++)
                            a = h[s],
                            (l || a instanceof e || (o = a.target === a.vars.onComplete) && r || n && !o) && (t ? a.totalTime(a._reversed ? 0 : a.totalDuration()) : a._enabled(!1, !1))
                    }
                    ,
                    o.killChildTweensOf = function(t, e) {
                        if (null != t) {
                            var i, a, l, c, p, f = s.tweenLookup;
                            if ("string" == typeof t && (t = n.selector(t) || t),
                            h(t) && (t = r(t)),
                            u(t))
                                for (c = t.length; --c > -1; )
                                    o.killChildTweensOf(t[c], e);
                            else {
                                i = [];
                                for (l in f)
                                    for (a = f[l].target.parentNode; a; )
                                        a === t && (i = i.concat(f[l].tweens)),
                                        a = a.parentNode;
                                for (p = i.length,
                                c = 0; c < p; c++)
                                    e && i[c].totalTime(i[c].totalDuration()),
                                    i[c]._enabled(!1, !1)
                            }
                        }
                    }
                    ;
                    var d = function(t, n, r, i) {
                        n = n !== !1,
                        r = r !== !1,
                        i = i !== !1;
                        for (var o, a, s = f(i), h = n && r && i, u = s.length; --u > -1; )
                            a = s[u],
                            (h || a instanceof e || (o = a.target === a.vars.onComplete) && r || n && !o) && a.paused(t)
                    }
                    ;
                    return o.pauseAll = function(t, e, n) {
                        d(!0, t, e, n)
                    }
                    ,
                    o.resumeAll = function(t, e, n) {
                        d(!1, t, e, n)
                    }
                    ,
                    o.globalTimeScale = function(e) {
                        var r = t._rootTimeline
                          , i = n.ticker.time;
                        return arguments.length ? (e = e || a,
                        r._startTime = i - (i - r._startTime) * r._timeScale / e,
                        r = t._rootFramesTimeline,
                        i = n.ticker.frame,
                        r._startTime = i - (i - r._startTime) * r._timeScale / e,
                        r._timeScale = t._rootTimeline._timeScale = e,
                        e) : r._timeScale
                    }
                    ,
                    l.progress = function(t, e) {
                        return arguments.length ? this.totalTime(this.duration() * (this._yoyo && 0 !== (1 & this._cycle) ? 1 - t : t) + this._cycle * (this._duration + this._repeatDelay), e) : this._time / this.duration()
                    }
                    ,
                    l.totalProgress = function(t, e) {
                        return arguments.length ? this.totalTime(this.totalDuration() * t, e) : this._totalTime / this.totalDuration()
                    }
                    ,
                    l.time = function(t, e) {
                        return arguments.length ? (this._dirty && this.totalDuration(),
                        t > this._duration && (t = this._duration),
                        this._yoyo && 0 !== (1 & this._cycle) ? t = this._duration - t + this._cycle * (this._duration + this._repeatDelay) : 0 !== this._repeat && (t += this._cycle * (this._duration + this._repeatDelay)),
                        this.totalTime(t, e)) : this._time
                    }
                    ,
                    l.duration = function(e) {
                        return arguments.length ? t.prototype.duration.call(this, e) : this._duration
                    }
                    ,
                    l.totalDuration = function(t) {
                        return arguments.length ? this._repeat === -1 ? this : this.duration((t - this._repeat * this._repeatDelay) / (this._repeat + 1)) : (this._dirty && (this._totalDuration = this._repeat === -1 ? 999999999999 : this._duration * (this._repeat + 1) + this._repeatDelay * this._repeat,
                        this._dirty = !1),
                        this._totalDuration)
                    }
                    ,
                    l.repeat = function(t) {
                        return arguments.length ? (this._repeat = t,
                        this._uncache(!0)) : this._repeat
                    }
                    ,
                    l.repeatDelay = function(t) {
                        return arguments.length ? (this._repeatDelay = t,
                        this._uncache(!0)) : this._repeatDelay
                    }
                    ,
                    l.yoyo = function(t) {
                        return arguments.length ? (this._yoyo = t,
                        this) : this._yoyo
                    }
                    ,
                    o
                }, !0),
                n._gsDefine("TimelineLite", ["core.Animation", "core.SimpleTimeline", "TweenLite"], function(t, e, r) {
                    var i = function(t) {
                        e.call(this, t),
                        this._labels = {},
                        this.autoRemoveChildren = this.vars.autoRemoveChildren === !0,
                        this.smoothChildTiming = this.vars.smoothChildTiming === !0,
                        this._sortChildren = !0,
                        this._onUpdate = this.vars.onUpdate;
                        var n, r, i = this.vars;
                        for (r in i)
                            n = i[r],
                            u(n) && n.join("").indexOf("{self}") !== -1 && (i[r] = this._swapSelfInParams(n));
                        u(i.tweens) && this.add(i.tweens, 0, i.align, i.stagger)
                    }
                      , o = 1e-10
                      , a = r._internals
                      , s = i._internals = {}
                      , h = a.isSelector
                      , u = a.isArray
                      , l = a.lazyTweens
                      , c = a.lazyRender
                      , p = n._gsDefine.globals
                      , f = function(t) {
                        var e, n = {};
                        for (e in t)
                            n[e] = t[e];
                        return n
                    }
                      , d = function(t, e, n) {
                        var r, i, o = t.cycle;
                        for (r in o)
                            i = o[r],
                            t[r] = "function" == typeof i ? i.call(e[n], n) : i[n % i.length];
                        delete t.cycle
                    }
                      , m = s.pauseCallback = function() {}
                      , v = function(t) {
                        var e, n = [], r = t.length;
                        for (e = 0; e !== r; n.push(t[e++]))
                            ;
                        return n
                    }
                      , g = i.prototype = new e;
                    return i.version = "1.18.5",
                    g.constructor = i,
                    g.kill()._gc = g._forcingPlayhead = g._hasPause = !1,
                    g.to = function(t, e, n, i) {
                        var o = n.repeat && p.TweenMax || r;
                        return e ? this.add(new o(t,e,n), i) : this.set(t, n, i)
                    }
                    ,
                    g.from = function(t, e, n, i) {
                        return this.add((n.repeat && p.TweenMax || r).from(t, e, n), i)
                    }
                    ,
                    g.fromTo = function(t, e, n, i, o) {
                        var a = i.repeat && p.TweenMax || r;
                        return e ? this.add(a.fromTo(t, e, n, i), o) : this.set(t, i, o)
                    }
                    ,
                    g.staggerTo = function(t, e, n, o, a, s, u, l) {
                        var c, p, m = new i({
                            onComplete: s,
                            onCompleteParams: u,
                            callbackScope: l,
                            smoothChildTiming: this.smoothChildTiming
                        }), g = n.cycle;
                        for ("string" == typeof t && (t = r.selector(t) || t),
                        t = t || [],
                        h(t) && (t = v(t)),
                        o = o || 0,
                        o < 0 && (t = v(t),
                        t.reverse(),
                        o *= -1),
                        p = 0; p < t.length; p++)
                            c = f(n),
                            c.startAt && (c.startAt = f(c.startAt),
                            c.startAt.cycle && d(c.startAt, t, p)),
                            g && (d(c, t, p),
                            null != c.duration && (e = c.duration,
                            delete c.duration)),
                            m.to(t[p], e, c, p * o);
                        return this.add(m, a)
                    }
                    ,
                    g.staggerFrom = function(t, e, n, r, i, o, a, s) {
                        return n.immediateRender = 0 != n.immediateRender,
                        n.runBackwards = !0,
                        this.staggerTo(t, e, n, r, i, o, a, s)
                    }
                    ,
                    g.staggerFromTo = function(t, e, n, r, i, o, a, s, h) {
                        return r.startAt = n,
                        r.immediateRender = 0 != r.immediateRender && 0 != n.immediateRender,
                        this.staggerTo(t, e, r, i, o, a, s, h)
                    }
                    ,
                    g.call = function(t, e, n, i) {
                        return this.add(r.delayedCall(0, t, e, n), i)
                    }
                    ,
                    g.set = function(t, e, n) {
                        return n = this._parseTimeOrLabel(n, 0, !0),
                        null == e.immediateRender && (e.immediateRender = n === this._time && !this._paused),
                        this.add(new r(t,0,e), n)
                    }
                    ,
                    i.exportRoot = function(t, e) {
                        t = t || {},
                        null == t.smoothChildTiming && (t.smoothChildTiming = !0);
                        var n, o, a = new i(t), s = a._timeline;
                        for (null == e && (e = !0),
                        s._remove(a, !0),
                        a._startTime = 0,
                        a._rawPrevTime = a._time = a._totalTime = s._time,
                        n = s._first; n; )
                            o = n._next,
                            e && n instanceof r && n.target === n.vars.onComplete || a.add(n, n._startTime - n._delay),
                            n = o;
                        return s.add(a, 0),
                        a
                    }
                    ,
                    g.add = function(n, o, a, s) {
                        var h, l, c, p, f, d;
                        if ("number" != typeof o && (o = this._parseTimeOrLabel(o, 0, !0, n)),
                        !(n instanceof t)) {
                            if (n instanceof Array || n && n.push && u(n)) {
                                for (a = a || "normal",
                                s = s || 0,
                                h = o,
                                l = n.length,
                                c = 0; c < l; c++)
                                    u(p = n[c]) && (p = new i({
                                        tweens: p
                                    })),
                                    this.add(p, h),
                                    "string" != typeof p && "function" != typeof p && ("sequence" === a ? h = p._startTime + p.totalDuration() / p._timeScale : "start" === a && (p._startTime -= p.delay())),
                                    h += s;
                                return this._uncache(!0)
                            }
                            if ("string" == typeof n)
                                return this.addLabel(n, o);
                            if ("function" != typeof n)
                                throw "Cannot add " + n + " into the timeline; it is not a tween, timeline, function, or string.";
                            n = r.delayedCall(0, n)
                        }
                        if (e.prototype.add.call(this, n, o),
                        (this._gc || this._time === this._duration) && !this._paused && this._duration < this.duration())
                            for (f = this,
                            d = f.rawTime() > n._startTime; f._timeline; )
                                d && f._timeline.smoothChildTiming ? f.totalTime(f._totalTime, !0) : f._gc && f._enabled(!0, !1),
                                f = f._timeline;
                        return this
                    }
                    ,
                    g.remove = function(e) {
                        if (e instanceof t) {
                            this._remove(e, !1);
                            var n = e._timeline = e.vars.useFrames ? t._rootFramesTimeline : t._rootTimeline;
                            return e._startTime = (e._paused ? e._pauseTime : n._time) - (e._reversed ? e.totalDuration() - e._totalTime : e._totalTime) / e._timeScale,
                            this
                        }
                        if (e instanceof Array || e && e.push && u(e)) {
                            for (var r = e.length; --r > -1; )
                                this.remove(e[r]);
                            return this
                        }
                        return "string" == typeof e ? this.removeLabel(e) : this.kill(null , e)
                    }
                    ,
                    g._remove = function(t, n) {
                        e.prototype._remove.call(this, t, n);
                        var r = this._last;
                        return r ? this._time > r._startTime + r._totalDuration / r._timeScale && (this._time = this.duration(),
                        this._totalTime = this._totalDuration) : this._time = this._totalTime = this._duration = this._totalDuration = 0,
                        this
                    }
                    ,
                    g.append = function(t, e) {
                        return this.add(t, this._parseTimeOrLabel(null , e, !0, t))
                    }
                    ,
                    g.insert = g.insertMultiple = function(t, e, n, r) {
                        return this.add(t, e || 0, n, r)
                    }
                    ,
                    g.appendMultiple = function(t, e, n, r) {
                        return this.add(t, this._parseTimeOrLabel(null , e, !0, t), n, r)
                    }
                    ,
                    g.addLabel = function(t, e) {
                        return this._labels[t] = this._parseTimeOrLabel(e),
                        this
                    }
                    ,
                    g.addPause = function(t, e, n, i) {
                        var o = r.delayedCall(0, m, n, i || this);
                        return o.vars.onComplete = o.vars.onReverseComplete = e,
                        o.data = "isPause",
                        this._hasPause = !0,
                        this.add(o, t)
                    }
                    ,
                    g.removeLabel = function(t) {
                        return delete this._labels[t],
                        this
                    }
                    ,
                    g.getLabelTime = function(t) {
                        return null != this._labels[t] ? this._labels[t] : -1
                    }
                    ,
                    g._parseTimeOrLabel = function(e, n, r, i) {
                        var o;
                        if (i instanceof t && i.timeline === this)
                            this.remove(i);
                        else if (i && (i instanceof Array || i.push && u(i)))
                            for (o = i.length; --o > -1; )
                                i[o]instanceof t && i[o].timeline === this && this.remove(i[o]);
                        if ("string" == typeof n)
                            return this._parseTimeOrLabel(n, r && "number" == typeof e && null == this._labels[n] ? e - this.duration() : 0, r);
                        if (n = n || 0,
                        "string" != typeof e || !isNaN(e) && null == this._labels[e])
                            null == e && (e = this.duration());
                        else {
                            if (o = e.indexOf("="),
                            o === -1)
                                return null == this._labels[e] ? r ? this._labels[e] = this.duration() + n : n : this._labels[e] + n;
                            n = parseInt(e.charAt(o - 1) + "1", 10) * Number(e.substr(o + 1)),
                            e = o > 1 ? this._parseTimeOrLabel(e.substr(0, o - 1), 0, r) : this.duration()
                        }
                        return Number(e) + n
                    }
                    ,
                    g.seek = function(t, e) {
                        return this.totalTime("number" == typeof t ? t : this._parseTimeOrLabel(t), e !== !1)
                    }
                    ,
                    g.stop = function() {
                        return this.paused(!0)
                    }
                    ,
                    g.gotoAndPlay = function(t, e) {
                        return this.play(t, e)
                    }
                    ,
                    g.gotoAndStop = function(t, e) {
                        return this.pause(t, e)
                    }
                    ,
                    g.render = function(t, e, n) {
                        this._gc && this._enabled(!0, !1);
                        var r, i, a, s, h, u, p, f = this._dirty ? this.totalDuration() : this._totalDuration, d = this._time, m = this._startTime, v = this._timeScale, g = this._paused;
                        if (t >= f - 1e-7)
                            this._totalTime = this._time = f,
                            this._reversed || this._hasPausedChild() || (i = !0,
                            s = "onComplete",
                            h = !!this._timeline.autoRemoveChildren,
                            0 === this._duration && (t <= 0 && t >= -1e-7 || this._rawPrevTime < 0 || this._rawPrevTime === o) && this._rawPrevTime !== t && this._first && (h = !0,
                            this._rawPrevTime > o && (s = "onReverseComplete"))),
                            this._rawPrevTime = this._duration || !e || t || this._rawPrevTime === t ? t : o,
                            t = f + 1e-4;
                        else if (t < 1e-7)
                            if (this._totalTime = this._time = 0,
                            (0 !== d || 0 === this._duration && this._rawPrevTime !== o && (this._rawPrevTime > 0 || t < 0 && this._rawPrevTime >= 0)) && (s = "onReverseComplete",
                            i = this._reversed),
                            t < 0)
                                this._active = !1,
                                this._timeline.autoRemoveChildren && this._reversed ? (h = i = !0,
                                s = "onReverseComplete") : this._rawPrevTime >= 0 && this._first && (h = !0),
                                this._rawPrevTime = t;
                            else {
                                if (this._rawPrevTime = this._duration || !e || t || this._rawPrevTime === t ? t : o,
                                0 === t && i)
                                    for (r = this._first; r && 0 === r._startTime; )
                                        r._duration || (i = !1),
                                        r = r._next;
                                t = 0,
                                this._initted || (h = !0)
                            }
                        else {
                            if (this._hasPause && !this._forcingPlayhead && !e) {
                                if (t >= d)
                                    for (r = this._first; r && r._startTime <= t && !u; )
                                        r._duration || "isPause" !== r.data || r.ratio || 0 === r._startTime && 0 === this._rawPrevTime || (u = r),
                                        r = r._next;
                                else
                                    for (r = this._last; r && r._startTime >= t && !u; )
                                        r._duration || "isPause" === r.data && r._rawPrevTime > 0 && (u = r),
                                        r = r._prev;
                                u && (this._time = t = u._startTime,
                                this._totalTime = t + this._cycle * (this._totalDuration + this._repeatDelay))
                            }
                            this._totalTime = this._time = this._rawPrevTime = t
                        }
                        if (this._time !== d && this._first || n || h || u) {
                            if (this._initted || (this._initted = !0),
                            this._active || !this._paused && this._time !== d && t > 0 && (this._active = !0),
                            0 === d && this.vars.onStart && (0 === this._time && this._duration || e || this._callback("onStart")),
                            p = this._time,
                            p >= d)
                                for (r = this._first; r && (a = r._next,
                                p === this._time && (!this._paused || g)); )
                                    (r._active || r._startTime <= p && !r._paused && !r._gc) && (u === r && this.pause(),
                                    r._reversed ? r.render((r._dirty ? r.totalDuration() : r._totalDuration) - (t - r._startTime) * r._timeScale, e, n) : r.render((t - r._startTime) * r._timeScale, e, n)),
                                    r = a;
                            else
                                for (r = this._last; r && (a = r._prev,
                                p === this._time && (!this._paused || g)); ) {
                                    if (r._active || r._startTime <= d && !r._paused && !r._gc) {
                                        if (u === r) {
                                            for (u = r._prev; u && u.endTime() > this._time; )
                                                u.render(u._reversed ? u.totalDuration() - (t - u._startTime) * u._timeScale : (t - u._startTime) * u._timeScale, e, n),
                                                u = u._prev;
                                            u = null ,
                                            this.pause()
                                        }
                                        r._reversed ? r.render((r._dirty ? r.totalDuration() : r._totalDuration) - (t - r._startTime) * r._timeScale, e, n) : r.render((t - r._startTime) * r._timeScale, e, n)
                                    }
                                    r = a
                                }
                            this._onUpdate && (e || (l.length && c(),
                            this._callback("onUpdate"))),
                            s && (this._gc || m !== this._startTime && v === this._timeScale || (0 === this._time || f >= this.totalDuration()) && (i && (l.length && c(),
                            this._timeline.autoRemoveChildren && this._enabled(!1, !1),
                            this._active = !1),
                            !e && this.vars[s] && this._callback(s)))
                        }
                    }
                    ,
                    g._hasPausedChild = function() {
                        for (var t = this._first; t; ) {
                            if (t._paused || t instanceof i && t._hasPausedChild())
                                return !0;
                            t = t._next
                        }
                        return !1
                    }
                    ,
                    g.getChildren = function(t, e, n, i) {
                        i = i || -9999999999;
                        for (var o = [], a = this._first, s = 0; a; )
                            a._startTime < i || (a instanceof r ? e !== !1 && (o[s++] = a) : (n !== !1 && (o[s++] = a),
                            t !== !1 && (o = o.concat(a.getChildren(!0, e, n)),
                            s = o.length))),
                            a = a._next;
                        return o
                    }
                    ,
                    g.getTweensOf = function(t, e) {
                        var n, i, o = this._gc, a = [], s = 0;
                        for (o && this._enabled(!0, !0),
                        n = r.getTweensOf(t),
                        i = n.length; --i > -1; )
                            (n[i].timeline === this || e && this._contains(n[i])) && (a[s++] = n[i]);
                        return o && this._enabled(!1, !0),
                        a
                    }
                    ,
                    g.recent = function() {
                        return this._recent
                    }
                    ,
                    g._contains = function(t) {
                        for (var e = t.timeline; e; ) {
                            if (e === this)
                                return !0;
                            e = e.timeline
                        }
                        return !1
                    }
                    ,
                    g.shiftChildren = function(t, e, n) {
                        n = n || 0;
                        for (var r, i = this._first, o = this._labels; i; )
                            i._startTime >= n && (i._startTime += t),
                            i = i._next;
                        if (e)
                            for (r in o)
                                o[r] >= n && (o[r] += t);
                        return this._uncache(!0)
                    }
                    ,
                    g._kill = function(t, e) {
                        if (!t && !e)
                            return this._enabled(!1, !1);
                        for (var n = e ? this.getTweensOf(e) : this.getChildren(!0, !0, !1), r = n.length, i = !1; --r > -1; )
                            n[r]._kill(t, e) && (i = !0);
                        return i
                    }
                    ,
                    g.clear = function(t) {
                        var e = this.getChildren(!1, !0, !0)
                          , n = e.length;
                        for (this._time = this._totalTime = 0; --n > -1; )
                            e[n]._enabled(!1, !1);
                        return t !== !1 && (this._labels = {}),
                        this._uncache(!0)
                    }
                    ,
                    g.invalidate = function() {
                        for (var e = this._first; e; )
                            e.invalidate(),
                            e = e._next;
                        return t.prototype.invalidate.call(this)
                    }
                    ,
                    g._enabled = function(t, n) {
                        if (t === this._gc)
                            for (var r = this._first; r; )
                                r._enabled(t, !0),
                                r = r._next;
                        return e.prototype._enabled.call(this, t, n)
                    }
                    ,
                    g.totalTime = function(e, n, r) {
                        this._forcingPlayhead = !0;
                        var i = t.prototype.totalTime.apply(this, arguments);
                        return this._forcingPlayhead = !1,
                        i
                    }
                    ,
                    g.duration = function(t) {
                        return arguments.length ? (0 !== this.duration() && 0 !== t && this.timeScale(this._duration / t),
                        this) : (this._dirty && this.totalDuration(),
                        this._duration)
                    }
                    ,
                    g.totalDuration = function(t) {
                        if (!arguments.length) {
                            if (this._dirty) {
                                for (var e, n, r = 0, i = this._last, o = 999999999999; i; )
                                    e = i._prev,
                                    i._dirty && i.totalDuration(),
                                    i._startTime > o && this._sortChildren && !i._paused ? this.add(i, i._startTime - i._delay) : o = i._startTime,
                                    i._startTime < 0 && !i._paused && (r -= i._startTime,
                                    this._timeline.smoothChildTiming && (this._startTime += i._startTime / this._timeScale),
                                    this.shiftChildren(-i._startTime, !1, -9999999999),
                                    o = 0),
                                    n = i._startTime + i._totalDuration / i._timeScale,
                                    n > r && (r = n),
                                    i = e;
                                this._duration = this._totalDuration = r,
                                this._dirty = !1
                            }
                            return this._totalDuration
                        }
                        return t && this.totalDuration() ? this.timeScale(this._totalDuration / t) : this
                    }
                    ,
                    g.paused = function(e) {
                        if (!e)
                            for (var n = this._first, r = this._time; n; )
                                n._startTime === r && "isPause" === n.data && (n._rawPrevTime = 0),
                                n = n._next;
                        return t.prototype.paused.apply(this, arguments)
                    }
                    ,
                    g.usesFrames = function() {
                        for (var e = this._timeline; e._timeline; )
                            e = e._timeline;
                        return e === t._rootFramesTimeline
                    }
                    ,
                    g.rawTime = function() {
                        return this._paused ? this._totalTime : (this._timeline.rawTime() - this._startTime) * this._timeScale
                    }
                    ,
                    i
                }, !0),
                n._gsDefine("TimelineMax", ["TimelineLite", "TweenLite", "easing.Ease"], function(t, e, n) {
                    var r = function(e) {
                        t.call(this, e),
                        this._repeat = this.vars.repeat || 0,
                        this._repeatDelay = this.vars.repeatDelay || 0,
                        this._cycle = 0,
                        this._yoyo = this.vars.yoyo === !0,
                        this._dirty = !0
                    }
                      , i = 1e-10
                      , o = e._internals
                      , a = o.lazyTweens
                      , s = o.lazyRender
                      , h = new n(null ,null ,1,0)
                      , u = r.prototype = new t;
                    return u.constructor = r,
                    u.kill()._gc = !1,
                    r.version = "1.18.5",
                    u.invalidate = function() {
                        return this._yoyo = this.vars.yoyo === !0,
                        this._repeat = this.vars.repeat || 0,
                        this._repeatDelay = this.vars.repeatDelay || 0,
                        this._uncache(!0),
                        t.prototype.invalidate.call(this)
                    }
                    ,
                    u.addCallback = function(t, n, r, i) {
                        return this.add(e.delayedCall(0, t, r, i), n)
                    }
                    ,
                    u.removeCallback = function(t, e) {
                        if (t)
                            if (null == e)
                                this._kill(null , t);
                            else
                                for (var n = this.getTweensOf(t, !1), r = n.length, i = this._parseTimeOrLabel(e); --r > -1; )
                                    n[r]._startTime === i && n[r]._enabled(!1, !1);
                        return this
                    }
                    ,
                    u.removePause = function(e) {
                        return this.removeCallback(t._internals.pauseCallback, e)
                    }
                    ,
                    u.tweenTo = function(t, n) {
                        n = n || {};
                        var r, i, o, a = {
                            ease: h,
                            useFrames: this.usesFrames(),
                            immediateRender: !1
                        };
                        for (i in n)
                            a[i] = n[i];
                        return a.time = this._parseTimeOrLabel(t),
                        r = Math.abs(Number(a.time) - this._time) / this._timeScale || .001,
                        o = new e(this,r,a),
                        a.onStart = function() {
                            o.target.paused(!0),
                            o.vars.time !== o.target.time() && r === o.duration() && o.duration(Math.abs(o.vars.time - o.target.time()) / o.target._timeScale),
                            n.onStart && o._callback("onStart")
                        }
                        ,
                        o
                    }
                    ,
                    u.tweenFromTo = function(t, e, n) {
                        n = n || {},
                        t = this._parseTimeOrLabel(t),
                        n.startAt = {
                            onComplete: this.seek,
                            onCompleteParams: [t],
                            callbackScope: this
                        },
                        n.immediateRender = n.immediateRender !== !1;
                        var r = this.tweenTo(e, n);
                        return r.duration(Math.abs(r.vars.time - t) / this._timeScale || .001)
                    }
                    ,
                    u.render = function(t, e, n) {
                        this._gc && this._enabled(!0, !1);
                        var r, o, h, u, l, c, p, f, d = this._dirty ? this.totalDuration() : this._totalDuration, m = this._duration, v = this._time, g = this._totalTime, y = this._startTime, _ = this._timeScale, x = this._rawPrevTime, b = this._paused, w = this._cycle;
                        if (t >= d - 1e-7)
                            this._locked || (this._totalTime = d,
                            this._cycle = this._repeat),
                            this._reversed || this._hasPausedChild() || (o = !0,
                            u = "onComplete",
                            l = !!this._timeline.autoRemoveChildren,
                            0 === this._duration && (t <= 0 && t >= -1e-7 || x < 0 || x === i) && x !== t && this._first && (l = !0,
                            x > i && (u = "onReverseComplete"))),
                            this._rawPrevTime = this._duration || !e || t || this._rawPrevTime === t ? t : i,
                            this._yoyo && 0 !== (1 & this._cycle) ? this._time = t = 0 : (this._time = m,
                            t = m + 1e-4);
                        else if (t < 1e-7)
                            if (this._locked || (this._totalTime = this._cycle = 0),
                            this._time = 0,
                            (0 !== v || 0 === m && x !== i && (x > 0 || t < 0 && x >= 0) && !this._locked) && (u = "onReverseComplete",
                            o = this._reversed),
                            t < 0)
                                this._active = !1,
                                this._timeline.autoRemoveChildren && this._reversed ? (l = o = !0,
                                u = "onReverseComplete") : x >= 0 && this._first && (l = !0),
                                this._rawPrevTime = t;
                            else {
                                if (this._rawPrevTime = m || !e || t || this._rawPrevTime === t ? t : i,
                                0 === t && o)
                                    for (r = this._first; r && 0 === r._startTime; )
                                        r._duration || (o = !1),
                                        r = r._next;
                                t = 0,
                                this._initted || (l = !0)
                            }
                        else if (0 === m && x < 0 && (l = !0),
                        this._time = this._rawPrevTime = t,
                        this._locked || (this._totalTime = t,
                        0 !== this._repeat && (c = m + this._repeatDelay,
                        this._cycle = this._totalTime / c >> 0,
                        0 !== this._cycle && this._cycle === this._totalTime / c && g <= t && this._cycle--,
                        this._time = this._totalTime - this._cycle * c,
                        this._yoyo && 0 !== (1 & this._cycle) && (this._time = m - this._time),
                        this._time > m ? (this._time = m,
                        t = m + 1e-4) : this._time < 0 ? this._time = t = 0 : t = this._time)),
                        this._hasPause && !this._forcingPlayhead && !e) {
                            if (t = this._time,
                            t >= v)
                                for (r = this._first; r && r._startTime <= t && !p; )
                                    r._duration || "isPause" !== r.data || r.ratio || 0 === r._startTime && 0 === this._rawPrevTime || (p = r),
                                    r = r._next;
                            else
                                for (r = this._last; r && r._startTime >= t && !p; )
                                    r._duration || "isPause" === r.data && r._rawPrevTime > 0 && (p = r),
                                    r = r._prev;
                            p && (this._time = t = p._startTime,
                            this._totalTime = t + this._cycle * (this._totalDuration + this._repeatDelay))
                        }
                        if (this._cycle !== w && !this._locked) {
                            var E = this._yoyo && 0 !== (1 & w)
                              , S = E === (this._yoyo && 0 !== (1 & this._cycle))
                              , T = this._totalTime
                              , M = this._cycle
                              , C = this._rawPrevTime
                              , A = this._time;
                            if (this._totalTime = w * m,
                            this._cycle < w ? E = !E : this._totalTime += m,
                            this._time = v,
                            this._rawPrevTime = 0 === m ? x - 1e-4 : x,
                            this._cycle = w,
                            this._locked = !0,
                            v = E ? 0 : m,
                            this.render(v, e, 0 === m),
                            e || this._gc || this.vars.onRepeat && this._callback("onRepeat"),
                            v !== this._time)
                                return;
                            if (S && (v = E ? m + 1e-4 : -1e-4,
                            this.render(v, !0, !1)),
                            this._locked = !1,
                            this._paused && !b)
                                return;
                            this._time = A,
                            this._totalTime = T,
                            this._cycle = M,
                            this._rawPrevTime = C
                        }
                        if (!(this._time !== v && this._first || n || l || p))
                            return void (g !== this._totalTime && this._onUpdate && (e || this._callback("onUpdate")));
                        if (this._initted || (this._initted = !0),
                        this._active || !this._paused && this._totalTime !== g && t > 0 && (this._active = !0),
                        0 === g && this.vars.onStart && (0 === this._totalTime && this._totalDuration || e || this._callback("onStart")),
                        f = this._time,
                        f >= v)
                            for (r = this._first; r && (h = r._next,
                            f === this._time && (!this._paused || b)); )
                                (r._active || r._startTime <= this._time && !r._paused && !r._gc) && (p === r && this.pause(),
                                r._reversed ? r.render((r._dirty ? r.totalDuration() : r._totalDuration) - (t - r._startTime) * r._timeScale, e, n) : r.render((t - r._startTime) * r._timeScale, e, n)),
                                r = h;
                        else
                            for (r = this._last; r && (h = r._prev,
                            f === this._time && (!this._paused || b)); ) {
                                if (r._active || r._startTime <= v && !r._paused && !r._gc) {
                                    if (p === r) {
                                        for (p = r._prev; p && p.endTime() > this._time; )
                                            p.render(p._reversed ? p.totalDuration() - (t - p._startTime) * p._timeScale : (t - p._startTime) * p._timeScale, e, n),
                                            p = p._prev;
                                        p = null ,
                                        this.pause()
                                    }
                                    r._reversed ? r.render((r._dirty ? r.totalDuration() : r._totalDuration) - (t - r._startTime) * r._timeScale, e, n) : r.render((t - r._startTime) * r._timeScale, e, n)
                                }
                                r = h
                            }
                        this._onUpdate && (e || (a.length && s(),
                        this._callback("onUpdate"))),
                        u && (this._locked || this._gc || y !== this._startTime && _ === this._timeScale || (0 === this._time || d >= this.totalDuration()) && (o && (a.length && s(),
                        this._timeline.autoRemoveChildren && this._enabled(!1, !1),
                        this._active = !1),
                        !e && this.vars[u] && this._callback(u)))
                    }
                    ,
                    u.getActive = function(t, e, n) {
                        null == t && (t = !0),
                        null == e && (e = !0),
                        null == n && (n = !1);
                        var r, i, o = [], a = this.getChildren(t, e, n), s = 0, h = a.length;
                        for (r = 0; r < h; r++)
                            i = a[r],
                            i.isActive() && (o[s++] = i);
                        return o
                    }
                    ,
                    u.getLabelAfter = function(t) {
                        t || 0 !== t && (t = this._time);
                        var e, n = this.getLabelsArray(), r = n.length;
                        for (e = 0; e < r; e++)
                            if (n[e].time > t)
                                return n[e].name;
                        return null
                    }
                    ,
                    u.getLabelBefore = function(t) {
                        null == t && (t = this._time);
                        for (var e = this.getLabelsArray(), n = e.length; --n > -1; )
                            if (e[n].time < t)
                                return e[n].name;
                        return null
                    }
                    ,
                    u.getLabelsArray = function() {
                        var t, e = [], n = 0;
                        for (t in this._labels)
                            e[n++] = {
                                time: this._labels[t],
                                name: t
                            };
                        return e.sort(function(t, e) {
                            return t.time - e.time
                        }),
                        e
                    }
                    ,
                    u.progress = function(t, e) {
                        return arguments.length ? this.totalTime(this.duration() * (this._yoyo && 0 !== (1 & this._cycle) ? 1 - t : t) + this._cycle * (this._duration + this._repeatDelay), e) : this._time / this.duration()
                    }
                    ,
                    u.totalProgress = function(t, e) {
                        return arguments.length ? this.totalTime(this.totalDuration() * t, e) : this._totalTime / this.totalDuration()
                    }
                    ,
                    u.totalDuration = function(e) {
                        return arguments.length ? this._repeat !== -1 && e ? this.timeScale(this.totalDuration() / e) : this : (this._dirty && (t.prototype.totalDuration.call(this),
                        this._totalDuration = this._repeat === -1 ? 999999999999 : this._duration * (this._repeat + 1) + this._repeatDelay * this._repeat),
                        this._totalDuration)
                    }
                    ,
                    u.time = function(t, e) {
                        return arguments.length ? (this._dirty && this.totalDuration(),
                        t > this._duration && (t = this._duration),
                        this._yoyo && 0 !== (1 & this._cycle) ? t = this._duration - t + this._cycle * (this._duration + this._repeatDelay) : 0 !== this._repeat && (t += this._cycle * (this._duration + this._repeatDelay)),
                        this.totalTime(t, e)) : this._time
                    }
                    ,
                    u.repeat = function(t) {
                        return arguments.length ? (this._repeat = t,
                        this._uncache(!0)) : this._repeat
                    }
                    ,
                    u.repeatDelay = function(t) {
                        return arguments.length ? (this._repeatDelay = t,
                        this._uncache(!0)) : this._repeatDelay
                    }
                    ,
                    u.yoyo = function(t) {
                        return arguments.length ? (this._yoyo = t,
                        this) : this._yoyo
                    }
                    ,
                    u.currentLabel = function(t) {
                        return arguments.length ? this.seek(t, !0) : this.getLabelBefore(this._time + 1e-8)
                    }
                    ,
                    r
                }, !0),
                function() {
                    var t = 180 / Math.PI
                      , e = []
                      , r = []
                      , i = []
                      , o = {}
                      , a = n._gsDefine.globals
                      , s = function(t, e, n, r) {
                        n === r && (n = r - (r - e) / 1e6),
                        t === e && (e = t + (n - t) / 1e6),
                        this.a = t,
                        this.b = e,
                        this.c = n,
                        this.d = r,
                        this.da = r - t,
                        this.ca = n - t,
                        this.ba = e - t
                    }
                      , h = ",x,y,z,left,top,right,bottom,marginTop,marginLeft,marginRight,marginBottom,paddingLeft,paddingTop,paddingRight,paddingBottom,backgroundPosition,backgroundPosition_y,"
                      , u = function(t, e, n, r) {
                        var i = {
                            a: t
                        }
                          , o = {}
                          , a = {}
                          , s = {
                            c: r
                        }
                          , h = (t + e) / 2
                          , u = (e + n) / 2
                          , l = (n + r) / 2
                          , c = (h + u) / 2
                          , p = (u + l) / 2
                          , f = (p - c) / 8;
                        return i.b = h + (t - h) / 4,
                        o.b = c + f,
                        i.c = o.a = (i.b + o.b) / 2,
                        o.c = a.a = (c + p) / 2,
                        a.b = p - f,
                        s.b = l + (r - l) / 4,
                        a.c = s.a = (a.b + s.b) / 2,
                        [i, o, a, s]
                    }
                      , l = function(t, n, o, a, s) {
                        var h, l, c, p, f, d, m, v, g, y, _, x, b, w = t.length - 1, E = 0, S = t[0].a;
                        for (h = 0; h < w; h++)
                            f = t[E],
                            l = f.a,
                            c = f.d,
                            p = t[E + 1].d,
                            s ? (_ = e[h],
                            x = r[h],
                            b = (x + _) * n * .25 / (a ? .5 : i[h] || .5),
                            d = c - (c - l) * (a ? .5 * n : 0 !== _ ? b / _ : 0),
                            m = c + (p - c) * (a ? .5 * n : 0 !== x ? b / x : 0),
                            v = c - (d + ((m - d) * (3 * _ / (_ + x) + .5) / 4 || 0))) : (d = c - (c - l) * n * .5,
                            m = c + (p - c) * n * .5,
                            v = c - (d + m) / 2),
                            d += v,
                            m += v,
                            f.c = g = d,
                            0 !== h ? f.b = S : f.b = S = f.a + .6 * (f.c - f.a),
                            f.da = c - l,
                            f.ca = g - l,
                            f.ba = S - l,
                            o ? (y = u(l, S, g, c),
                            t.splice(E, 1, y[0], y[1], y[2], y[3]),
                            E += 4) : E++,
                            S = m;
                        f = t[E],
                        f.b = S,
                        f.c = S + .4 * (f.d - S),
                        f.da = f.d - f.a,
                        f.ca = f.c - f.a,
                        f.ba = S - f.a,
                        o && (y = u(f.a, S, f.c, f.d),
                        t.splice(E, 1, y[0], y[1], y[2], y[3]))
                    }
                      , c = function(t, n, i, o) {
                        var a, h, u, l, c, p, f = [];
                        if (o)
                            for (t = [o].concat(t),
                            h = t.length; --h > -1; )
                                "string" == typeof (p = t[h][n]) && "=" === p.charAt(1) && (t[h][n] = o[n] + Number(p.charAt(0) + p.substr(2)));
                        if (a = t.length - 2,
                        a < 0)
                            return f[0] = new s(t[0][n],0,0,t[a < -1 ? 0 : 1][n]),
                            f;
                        for (h = 0; h < a; h++)
                            u = t[h][n],
                            l = t[h + 1][n],
                            f[h] = new s(u,0,0,l),
                            i && (c = t[h + 2][n],
                            e[h] = (e[h] || 0) + (l - u) * (l - u),
                            r[h] = (r[h] || 0) + (c - l) * (c - l));
                        return f[h] = new s(t[h][n],0,0,t[h + 1][n]),
                        f
                    }
                      , p = function(t, n, a, s, u, p) {
                        var f, d, m, v, g, y, _, x, b = {}, w = [], E = p || t[0];
                        u = "string" == typeof u ? "," + u + "," : h,
                        null == n && (n = 1);
                        for (d in t[0])
                            w.push(d);
                        if (t.length > 1) {
                            for (x = t[t.length - 1],
                            _ = !0,
                            f = w.length; --f > -1; )
                                if (d = w[f],
                                Math.abs(E[d] - x[d]) > .05) {
                                    _ = !1;
                                    break
                                }
                            _ && (t = t.concat(),
                            p && t.unshift(p),
                            t.push(t[1]),
                            p = t[t.length - 3])
                        }
                        for (e.length = r.length = i.length = 0,
                        f = w.length; --f > -1; )
                            d = w[f],
                            o[d] = u.indexOf("," + d + ",") !== -1,
                            b[d] = c(t, d, o[d], p);
                        for (f = e.length; --f > -1; )
                            e[f] = Math.sqrt(e[f]),
                            r[f] = Math.sqrt(r[f]);
                        if (!s) {
                            for (f = w.length; --f > -1; )
                                if (o[d])
                                    for (m = b[w[f]],
                                    y = m.length - 1,
                                    v = 0; v < y; v++)
                                        g = m[v + 1].da / r[v] + m[v].da / e[v] || 0,
                                        i[v] = (i[v] || 0) + g * g;
                            for (f = i.length; --f > -1; )
                                i[f] = Math.sqrt(i[f])
                        }
                        for (f = w.length,
                        v = a ? 4 : 1; --f > -1; )
                            d = w[f],
                            m = b[d],
                            l(m, n, a, s, o[d]),
                            _ && (m.splice(0, v),
                            m.splice(m.length - v, v));
                        return b
                    }
                      , f = function(t, e, n) {
                        e = e || "soft";
                        var r, i, o, a, h, u, l, c, p, f, d, m = {}, v = "cubic" === e ? 3 : 2, g = "soft" === e, y = [];
                        if (g && n && (t = [n].concat(t)),
                        null == t || t.length < v + 1)
                            throw "invalid Bezier data";
                        for (p in t[0])
                            y.push(p);
                        for (u = y.length; --u > -1; ) {
                            for (p = y[u],
                            m[p] = h = [],
                            f = 0,
                            c = t.length,
                            l = 0; l < c; l++)
                                r = null == n ? t[l][p] : "string" == typeof (d = t[l][p]) && "=" === d.charAt(1) ? n[p] + Number(d.charAt(0) + d.substr(2)) : Number(d),
                                g && l > 1 && l < c - 1 && (h[f++] = (r + h[f - 2]) / 2),
                                h[f++] = r;
                            for (c = f - v + 1,
                            f = 0,
                            l = 0; l < c; l += v)
                                r = h[l],
                                i = h[l + 1],
                                o = h[l + 2],
                                a = 2 === v ? 0 : h[l + 3],
                                h[f++] = d = 3 === v ? new s(r,i,o,a) : new s(r,(2 * i + r) / 3,(2 * i + o) / 3,o);
                            h.length = f
                        }
                        return m
                    }
                      , d = function(t, e, n) {
                        for (var r, i, o, a, s, h, u, l, c, p, f, d = 1 / n, m = t.length; --m > -1; )
                            for (p = t[m],
                            o = p.a,
                            a = p.d - o,
                            s = p.c - o,
                            h = p.b - o,
                            r = i = 0,
                            l = 1; l <= n; l++)
                                u = d * l,
                                c = 1 - u,
                                r = i - (i = (u * u * a + 3 * c * (u * s + c * h)) * u),
                                f = m * n + l - 1,
                                e[f] = (e[f] || 0) + r * r
                    }
                      , m = function(t, e) {
                        e = e >> 0 || 6;
                        var n, r, i, o, a = [], s = [], h = 0, u = 0, l = e - 1, c = [], p = [];
                        for (n in t)
                            d(t[n], a, e);
                        for (i = a.length,
                        r = 0; r < i; r++)
                            h += Math.sqrt(a[r]),
                            o = r % e,
                            p[o] = h,
                            o === l && (u += h,
                            o = r / e >> 0,
                            c[o] = p,
                            s[o] = u,
                            h = 0,
                            p = []);
                        return {
                            length: u,
                            lengths: s,
                            segments: c
                        }
                    }
                      , v = n._gsDefine.plugin({
                        propName: "bezier",
                        priority: -1,
                        version: "1.3.6",
                        API: 2,
                        global: !0,
                        init: function(t, e, n) {
                            this._target = t,
                            e instanceof Array && (e = {
                                values: e
                            }),
                            this._func = {},
                            this._round = {},
                            this._props = [],
                            this._timeRes = null == e.timeResolution ? 6 : parseInt(e.timeResolution, 10);
                            var r, i, o, a, s, h = e.values || [], u = {}, l = h[0], c = e.autoRotate || n.vars.orientToBezier;
                            this._autoRotate = c ? c instanceof Array ? c : [["x", "y", "rotation", c === !0 ? 0 : Number(c) || 0]] : null ;
                            for (r in l)
                                this._props.push(r);
                            for (o = this._props.length; --o > -1; )
                                r = this._props[o],
                                this._overwriteProps.push(r),
                                i = this._func[r] = "function" == typeof t[r],
                                u[r] = i ? t[r.indexOf("set") || "function" != typeof t["get" + r.substr(3)] ? r : "get" + r.substr(3)]() : parseFloat(t[r]),
                                s || u[r] !== h[0][r] && (s = u);
                            if (this._beziers = "cubic" !== e.type && "quadratic" !== e.type && "soft" !== e.type ? p(h, isNaN(e.curviness) ? 1 : e.curviness, !1, "thruBasic" === e.type, e.correlate, s) : f(h, e.type, u),
                            this._segCount = this._beziers[r].length,
                            this._timeRes) {
                                var d = m(this._beziers, this._timeRes);
                                this._length = d.length,
                                this._lengths = d.lengths,
                                this._segments = d.segments,
                                this._l1 = this._li = this._s1 = this._si = 0,
                                this._l2 = this._lengths[0],
                                this._curSeg = this._segments[0],
                                this._s2 = this._curSeg[0],
                                this._prec = 1 / this._curSeg.length
                            }
                            if (c = this._autoRotate)
                                for (this._initialRotations = [],
                                c[0]instanceof Array || (this._autoRotate = c = [c]),
                                o = c.length; --o > -1; ) {
                                    for (a = 0; a < 3; a++)
                                        r = c[o][a],
                                        this._func[r] = "function" == typeof t[r] && t[r.indexOf("set") || "function" != typeof t["get" + r.substr(3)] ? r : "get" + r.substr(3)];
                                    r = c[o][2],
                                    this._initialRotations[o] = (this._func[r] ? this._func[r].call(this._target) : this._target[r]) || 0
                                }
                            return this._startRatio = n.vars.runBackwards ? 1 : 0,
                            !0
                        },
                        set: function(e) {
                            var n, r, i, o, a, s, h, u, l, c, p = this._segCount, f = this._func, d = this._target, m = e !== this._startRatio;
                            if (this._timeRes) {
                                if (l = this._lengths,
                                c = this._curSeg,
                                e *= this._length,
                                i = this._li,
                                e > this._l2 && i < p - 1) {
                                    for (u = p - 1; i < u && (this._l2 = l[++i]) <= e; )
                                        ;
                                    this._l1 = l[i - 1],
                                    this._li = i,
                                    this._curSeg = c = this._segments[i],
                                    this._s2 = c[this._s1 = this._si = 0]
                                } else if (e < this._l1 && i > 0) {
                                    for (; i > 0 && (this._l1 = l[--i]) >= e; )
                                        ;
                                    0 === i && e < this._l1 ? this._l1 = 0 : i++,
                                    this._l2 = l[i],
                                    this._li = i,
                                    this._curSeg = c = this._segments[i],
                                    this._s1 = c[(this._si = c.length - 1) - 1] || 0,
                                    this._s2 = c[this._si]
                                }
                                if (n = i,
                                e -= this._l1,
                                i = this._si,
                                e > this._s2 && i < c.length - 1) {
                                    for (u = c.length - 1; i < u && (this._s2 = c[++i]) <= e; )
                                        ;
                                    this._s1 = c[i - 1],
                                    this._si = i
                                } else if (e < this._s1 && i > 0) {
                                    for (; i > 0 && (this._s1 = c[--i]) >= e; )
                                        ;
                                    0 === i && e < this._s1 ? this._s1 = 0 : i++,
                                    this._s2 = c[i],
                                    this._si = i
                                }
                                s = (i + (e - this._s1) / (this._s2 - this._s1)) * this._prec || 0
                            } else
                                n = e < 0 ? 0 : e >= 1 ? p - 1 : p * e >> 0,
                                s = (e - n * (1 / p)) * p;
                            for (r = 1 - s,
                            i = this._props.length; --i > -1; )
                                o = this._props[i],
                                a = this._beziers[o][n],
                                h = (s * s * a.da + 3 * r * (s * a.ca + r * a.ba)) * s + a.a,
                                this._round[o] && (h = Math.round(h)),
                                f[o] ? d[o](h) : d[o] = h;
                            if (this._autoRotate) {
                                var v, g, y, _, x, b, w, E = this._autoRotate;
                                for (i = E.length; --i > -1; )
                                    o = E[i][2],
                                    b = E[i][3] || 0,
                                    w = E[i][4] === !0 ? 1 : t,
                                    a = this._beziers[E[i][0]],
                                    v = this._beziers[E[i][1]],
                                    a && v && (a = a[n],
                                    v = v[n],
                                    g = a.a + (a.b - a.a) * s,
                                    _ = a.b + (a.c - a.b) * s,
                                    g += (_ - g) * s,
                                    _ += (a.c + (a.d - a.c) * s - _) * s,
                                    y = v.a + (v.b - v.a) * s,
                                    x = v.b + (v.c - v.b) * s,
                                    y += (x - y) * s,
                                    x += (v.c + (v.d - v.c) * s - x) * s,
                                    h = m ? Math.atan2(x - y, _ - g) * w + b : this._initialRotations[i],
                                    f[o] ? d[o](h) : d[o] = h)
                            }
                        }
                    })
                      , g = v.prototype;
                    v.bezierThrough = p,
                    v.cubicToQuadratic = u,
                    v._autoCSS = !0,
                    v.quadraticToCubic = function(t, e, n) {
                        return new s(t,(2 * e + t) / 3,(2 * e + n) / 3,n)
                    }
                    ,
                    v._cssRegister = function() {
                        var t = a.CSSPlugin;
                        if (t) {
                            var e = t._internals
                              , n = e._parseToProxy
                              , r = e._setPluginRatio
                              , i = e.CSSPropTween;
                            e._registerComplexSpecialProp("bezier", {
                                parser: function(t, e, o, a, s, h) {
                                    e instanceof Array && (e = {
                                        values: e
                                    }),
                                    h = new v;
                                    var u, l, c, p = e.values, f = p.length - 1, d = [], m = {};
                                    if (f < 0)
                                        return s;
                                    for (u = 0; u <= f; u++)
                                        c = n(t, p[u], a, s, h, f !== u),
                                        d[u] = c.end;
                                    for (l in e)
                                        m[l] = e[l];
                                    return m.values = d,
                                    s = new i(t,"bezier",0,0,c.pt,2),
                                    s.data = c,
                                    s.plugin = h,
                                    s.setRatio = r,
                                    0 === m.autoRotate && (m.autoRotate = !0),
                                    !m.autoRotate || m.autoRotate instanceof Array || (u = m.autoRotate === !0 ? 0 : Number(m.autoRotate),
                                    m.autoRotate = null != c.end.left ? [["left", "top", "rotation", u, !1]] : null != c.end.x && [["x", "y", "rotation", u, !1]]),
                                    m.autoRotate && (a._transform || a._enableTransforms(!1),
                                    c.autoRotate = a._target._gsTransform,
                                    c.proxy.rotation = c.autoRotate.rotation || 0),
                                    h._onInitTween(c.proxy, m, a._tween),
                                    s
                                }
                            })
                        }
                    }
                    ,
                    g._roundProps = function(t, e) {
                        for (var n = this._overwriteProps, r = n.length; --r > -1; )
                            (t[n[r]] || t.bezier || t.bezierThrough) && (this._round[n[r]] = e)
                    }
                    ,
                    g._kill = function(t) {
                        var e, n, r = this._props;
                        for (e in this._beziers)
                            if (e in t)
                                for (delete this._beziers[e],
                                delete this._func[e],
                                n = r.length; --n > -1; )
                                    r[n] === e && r.splice(n, 1);
                        return this._super._kill.call(this, t)
                    }
                }(),
                n._gsDefine("plugins.CSSPlugin", ["plugins.TweenPlugin", "TweenLite"], function(t, e) {
                    var r, i, o, a, s = function() {
                        t.call(this, "css"),
                        this._overwriteProps.length = 0,
                        this.setRatio = s.prototype.setRatio
                    }
                    , h = n._gsDefine.globals, u = {}, l = s.prototype = new t("css");
                    l.constructor = s,
                    s.version = "1.18.5",
                    s.API = 2,
                    s.defaultTransformPerspective = 0,
                    s.defaultSkewType = "compensated",
                    s.defaultSmoothOrigin = !0,
                    l = "px",
                    s.suffixMap = {
                        top: l,
                        right: l,
                        bottom: l,
                        left: l,
                        width: l,
                        height: l,
                        fontSize: l,
                        padding: l,
                        margin: l,
                        perspective: l,
                        lineHeight: ""
                    };
                    var c, p, f, d, m, v, g = /(?:\-|\.|\b)(\d|\.|e\-)+/g, y = /(?:\d|\-\d|\.\d|\-\.\d|\+=\d|\-=\d|\+=.\d|\-=\.\d)+/g, _ = /(?:\+=|\-=|\-|\b)[\d\-\.]+[a-zA-Z0-9]*(?:%|\b)/gi, x = /(?![+-]?\d*\.?\d+|[+-]|e[+-]\d+)[^0-9]/g, b = /(?:\d|\-|\+|=|#|\.)*/g, w = /opacity *= *([^)]*)/i, E = /opacity:([^;]*)/i, S = /alpha\(opacity *=.+?\)/i, T = /^(rgb|hsl)/, M = /([A-Z])/g, C = /-([a-z])/gi, A = /(^(?:url\(\"|url\())|(?:(\"\))$|\)$)/gi, P = function(t, e) {
                        return e.toUpperCase()
                    }
                    , L = /(?:Left|Right|Width)/i, R = /(M11|M12|M21|M22)=[\d\-\.e]+/gi, k = /progid\:DXImageTransform\.Microsoft\.Matrix\(.+?\)/i, O = /,(?=[^\)]*(?:\(|$))/gi, I = /[\s,\(]/i, D = Math.PI / 180, U = 180 / Math.PI, B = {}, F = document, N = function(t) {
                        return F.createElementNS ? F.createElementNS("http://www.w3.org/1999/xhtml", t) : F.createElement(t)
                    }
                    , G = N("div"), V = N("img"), z = s._internals = {
                        _specialProps: u
                    }, H = navigator.userAgent, j = function() {
                        var t = H.indexOf("Android")
                          , e = N("a");
                        return f = H.indexOf("Safari") !== -1 && H.indexOf("Chrome") === -1 && (t === -1 || Number(H.substr(t + 8, 1)) > 3),
                        m = f && Number(H.substr(H.indexOf("Version/") + 8, 1)) < 6,
                        d = H.indexOf("Firefox") !== -1,
                        (/MSIE ([0-9]{1,}[\.0-9]{0,})/.exec(H) || /Trident\/.*rv:([0-9]{1,}[\.0-9]{0,})/.exec(H)) && (v = parseFloat(RegExp.$1)),
                        !!e && (e.style.cssText = "top:1px;opacity:.55;",
                        /^0.55/.test(e.style.opacity))
                    }(), W = function(t) {
                        return w.test("string" == typeof t ? t : (t.currentStyle ? t.currentStyle.filter : t.style.filter) || "") ? parseFloat(RegExp.$1) / 100 : 1
                    }
                    , X = function(t) {
                        window.console && console.log(t)
                    }
                    , Y = "", q = "", Z = function(t, e) {
                        e = e || G;
                        var n, r, i = e.style;
                        if (void 0 !== i[t])
                            return t;
                        for (t = t.charAt(0).toUpperCase() + t.substr(1),
                        n = ["O", "Moz", "ms", "Ms", "Webkit"],
                        r = 5; --r > -1 && void 0 === i[n[r] + t]; )
                            ;
                        return r >= 0 ? (q = 3 === r ? "ms" : n[r],
                        Y = "-" + q.toLowerCase() + "-",
                        q + t) : null
                    }
                    , Q = F.defaultView ? F.defaultView.getComputedStyle : function() {}
                    , K = s.getStyle = function(t, e, n, r, i) {
                        var o;
                        return j || "opacity" !== e ? (!r && t.style[e] ? o = t.style[e] : (n = n || Q(t)) ? o = n[e] || n.getPropertyValue(e) || n.getPropertyValue(e.replace(M, "-$1").toLowerCase()) : t.currentStyle && (o = t.currentStyle[e]),
                        null == i || o && "none" !== o && "auto" !== o && "auto auto" !== o ? o : i) : W(t)
                    }
                    , J = z.convertToPixels = function(t, n, r, i, o) {
                        if ("px" === i || !i)
                            return r;
                        if ("auto" === i || !r)
                            return 0;
                        var a, h, u, l = L.test(n), c = t, p = G.style, f = r < 0, d = 1 === r;
                        if (f && (r = -r),
                        d && (r *= 100),
                        "%" === i && n.indexOf("border") !== -1)
                            a = r / 100 * (l ? t.clientWidth : t.clientHeight);
                        else {
                            if (p.cssText = "border:0 solid red;position:" + K(t, "position") + ";line-height:0;",
                            "%" !== i && c.appendChild && "v" !== i.charAt(0) && "rem" !== i)
                                p[l ? "borderLeftWidth" : "borderTopWidth"] = r + i;
                            else {
                                if (c = t.parentNode || F.body,
                                h = c._gsCache,
                                u = e.ticker.frame,
                                h && l && h.time === u)
                                    return h.width * r / 100;
                                p[l ? "width" : "height"] = r + i
                            }
                            c.appendChild(G),
                            a = parseFloat(G[l ? "offsetWidth" : "offsetHeight"]),
                            c.removeChild(G),
                            l && "%" === i && s.cacheWidths !== !1 && (h = c._gsCache = c._gsCache || {},
                            h.time = u,
                            h.width = a / r * 100),
                            0 !== a || o || (a = J(t, n, r, i, !0))
                        }
                        return d && (a /= 100),
                        f ? -a : a
                    }
                    , $ = z.calculateOffset = function(t, e, n) {
                        if ("absolute" !== K(t, "position", n))
                            return 0;
                        var r = "left" === e ? "Left" : "Top"
                          , i = K(t, "margin" + r, n);
                        return t["offset" + r] - (J(t, e, parseFloat(i), i.replace(b, "")) || 0)
                    }
                    , tt = function(t, e) {
                        var n, r, i, o = {};
                        if (e = e || Q(t, null ))
                            if (n = e.length)
                                for (; --n > -1; )
                                    i = e[n],
                                    i.indexOf("-transform") !== -1 && Ct !== i || (o[i.replace(C, P)] = e.getPropertyValue(i));
                            else
                                for (n in e)
                                    n.indexOf("Transform") !== -1 && Mt !== n || (o[n] = e[n]);
                        else if (e = t.currentStyle || t.style)
                            for (n in e)
                                "string" == typeof n && void 0 === o[n] && (o[n.replace(C, P)] = e[n]);
                        return j || (o.opacity = W(t)),
                        r = Gt(t, e, !1),
                        o.rotation = r.rotation,
                        o.skewX = r.skewX,
                        o.scaleX = r.scaleX,
                        o.scaleY = r.scaleY,
                        o.x = r.x,
                        o.y = r.y,
                        Pt && (o.z = r.z,
                        o.rotationX = r.rotationX,
                        o.rotationY = r.rotationY,
                        o.scaleZ = r.scaleZ),
                        o.filters && delete o.filters,
                        o
                    }
                    , et = function(t, e, n, r, i) {
                        var o, a, s, h = {}, u = t.style;
                        for (a in n)
                            "cssText" !== a && "length" !== a && isNaN(a) && (e[a] !== (o = n[a]) || i && i[a]) && a.indexOf("Origin") === -1 && ("number" != typeof o && "string" != typeof o || (h[a] = "auto" !== o || "left" !== a && "top" !== a ? "" !== o && "auto" !== o && "none" !== o || "string" != typeof e[a] || "" === e[a].replace(x, "") ? o : 0 : $(t, a),
                            void 0 !== u[a] && (s = new vt(u,a,u[a],s))));
                        if (r)
                            for (a in r)
                                "className" !== a && (h[a] = r[a]);
                        return {
                            difs: h,
                            firstMPT: s
                        }
                    }
                    , nt = {
                        width: ["Left", "Right"],
                        height: ["Top", "Bottom"]
                    }, rt = ["marginLeft", "marginRight", "marginTop", "marginBottom"], it = function(t, e, n) {
                        if ("svg" === (t.nodeName + "").toLowerCase())
                            return (n || Q(t))[e] || 0;
                        if (t.getBBox && Bt(t))
                            return t.getBBox()[e] || 0;
                        var r = parseFloat("width" === e ? t.offsetWidth : t.offsetHeight)
                          , i = nt[e]
                          , o = i.length;
                        for (n = n || Q(t, null ); --o > -1; )
                            r -= parseFloat(K(t, "padding" + i[o], n, !0)) || 0,
                            r -= parseFloat(K(t, "border" + i[o] + "Width", n, !0)) || 0;
                        return r
                    }
                    , ot = function(t, e) {
                        if ("contain" === t || "auto" === t || "auto auto" === t)
                            return t + " ";
                        null != t && "" !== t || (t = "0 0");
                        var n, r = t.split(" "), i = t.indexOf("left") !== -1 ? "0%" : t.indexOf("right") !== -1 ? "100%" : r[0], o = t.indexOf("top") !== -1 ? "0%" : t.indexOf("bottom") !== -1 ? "100%" : r[1];
                        if (r.length > 3 && !e) {
                            for (r = t.split(", ").join(",").split(","),
                            t = [],
                            n = 0; n < r.length; n++)
                                t.push(ot(r[n]));
                            return t.join(",")
                        }
                        return null == o ? o = "center" === i ? "50%" : "0" : "center" === o && (o = "50%"),
                        ("center" === i || isNaN(parseFloat(i)) && (i + "").indexOf("=") === -1) && (i = "50%"),
                        t = i + " " + o + (r.length > 2 ? " " + r[2] : ""),
                        e && (e.oxp = i.indexOf("%") !== -1,
                        e.oyp = o.indexOf("%") !== -1,
                        e.oxr = "=" === i.charAt(1),
                        e.oyr = "=" === o.charAt(1),
                        e.ox = parseFloat(i.replace(x, "")),
                        e.oy = parseFloat(o.replace(x, "")),
                        e.v = t),
                        e || t
                    }
                    , at = function(t, e) {
                        return "string" == typeof t && "=" === t.charAt(1) ? parseInt(t.charAt(0) + "1", 10) * parseFloat(t.substr(2)) : parseFloat(t) - parseFloat(e) || 0
                    }
                    , st = function(t, e) {
                        return null == t ? e : "string" == typeof t && "=" === t.charAt(1) ? parseInt(t.charAt(0) + "1", 10) * parseFloat(t.substr(2)) + e : parseFloat(t) || 0
                    }
                    , ht = function(t, e, n, r) {
                        var i, o, a, s, h, u = 1e-6;
                        return null == t ? s = e : "number" == typeof t ? s = t : (i = 360,
                        o = t.split("_"),
                        h = "=" === t.charAt(1),
                        a = (h ? parseInt(t.charAt(0) + "1", 10) * parseFloat(o[0].substr(2)) : parseFloat(o[0])) * (t.indexOf("rad") === -1 ? 1 : U) - (h ? 0 : e),
                        o.length && (r && (r[n] = e + a),
                        t.indexOf("short") !== -1 && (a %= i,
                        a !== a % (i / 2) && (a = a < 0 ? a + i : a - i)),
                        t.indexOf("_cw") !== -1 && a < 0 ? a = (a + 9999999999 * i) % i - (a / i | 0) * i : t.indexOf("ccw") !== -1 && a > 0 && (a = (a - 9999999999 * i) % i - (a / i | 0) * i)),
                        s = e + a),
                        s < u && s > -u && (s = 0),
                        s
                    }
                    , ut = {
                        aqua: [0, 255, 255],
                        lime: [0, 255, 0],
                        silver: [192, 192, 192],
                        black: [0, 0, 0],
                        maroon: [128, 0, 0],
                        teal: [0, 128, 128],
                        blue: [0, 0, 255],
                        navy: [0, 0, 128],
                        white: [255, 255, 255],
                        fuchsia: [255, 0, 255],
                        olive: [128, 128, 0],
                        yellow: [255, 255, 0],
                        orange: [255, 165, 0],
                        gray: [128, 128, 128],
                        purple: [128, 0, 128],
                        green: [0, 128, 0],
                        red: [255, 0, 0],
                        pink: [255, 192, 203],
                        cyan: [0, 255, 255],
                        transparent: [255, 255, 255, 0]
                    }, lt = function(t, e, n) {
                        return t = t < 0 ? t + 1 : t > 1 ? t - 1 : t,
                        255 * (6 * t < 1 ? e + (n - e) * t * 6 : t < .5 ? n : 3 * t < 2 ? e + (n - e) * (2 / 3 - t) * 6 : e) + .5 | 0
                    }
                    , ct = s.parseColor = function(t, e) {
                        var n, r, i, o, a, s, h, u, l, c, p;
                        if (t)
                            if ("number" == typeof t)
                                n = [t >> 16, t >> 8 & 255, 255 & t];
                            else {
                                if ("," === t.charAt(t.length - 1) && (t = t.substr(0, t.length - 1)),
                                ut[t])
                                    n = ut[t];
                                else if ("#" === t.charAt(0))
                                    4 === t.length && (r = t.charAt(1),
                                    i = t.charAt(2),
                                    o = t.charAt(3),
                                    t = "#" + r + r + i + i + o + o),
                                    t = parseInt(t.substr(1), 16),
                                    n = [t >> 16, t >> 8 & 255, 255 & t];
                                else if ("hsl" === t.substr(0, 3))
                                    if (n = p = t.match(g),
                                    e) {
                                        if (t.indexOf("=") !== -1)
                                            return t.match(y)
                                    } else
                                        a = Number(n[0]) % 360 / 360,
                                        s = Number(n[1]) / 100,
                                        h = Number(n[2]) / 100,
                                        i = h <= .5 ? h * (s + 1) : h + s - h * s,
                                        r = 2 * h - i,
                                        n.length > 3 && (n[3] = Number(t[3])),
                                        n[0] = lt(a + 1 / 3, r, i),
                                        n[1] = lt(a, r, i),
                                        n[2] = lt(a - 1 / 3, r, i);
                                else
                                    n = t.match(g) || ut.transparent;
                                n[0] = Number(n[0]),
                                n[1] = Number(n[1]),
                                n[2] = Number(n[2]),
                                n.length > 3 && (n[3] = Number(n[3]))
                            }
                        else
                            n = ut.black;
                        return e && !p && (r = n[0] / 255,
                        i = n[1] / 255,
                        o = n[2] / 255,
                        u = Math.max(r, i, o),
                        l = Math.min(r, i, o),
                        h = (u + l) / 2,
                        u === l ? a = s = 0 : (c = u - l,
                        s = h > .5 ? c / (2 - u - l) : c / (u + l),
                        a = u === r ? (i - o) / c + (i < o ? 6 : 0) : u === i ? (o - r) / c + 2 : (r - i) / c + 4,
                        a *= 60),
                        n[0] = a + .5 | 0,
                        n[1] = 100 * s + .5 | 0,
                        n[2] = 100 * h + .5 | 0),
                        n
                    }
                    , pt = function(t, e) {
                        var n, r, i, o = t.match(ft) || [], a = 0, s = o.length ? "" : t;
                        for (n = 0; n < o.length; n++)
                            r = o[n],
                            i = t.substr(a, t.indexOf(r, a) - a),
                            a += i.length + r.length,
                            r = ct(r, e),
                            3 === r.length && r.push(1),
                            s += i + (e ? "hsla(" + r[0] + "," + r[1] + "%," + r[2] + "%," + r[3] : "rgba(" + r.join(",")) + ")";
                        return s + t.substr(a)
                    }
                    , ft = "(?:\\b(?:(?:rgb|rgba|hsl|hsla)\\(.+?\\))|\\B#(?:[0-9a-f]{3}){1,2}\\b";
                    for (l in ut)
                        ft += "|" + l + "\\b";
                    ft = new RegExp(ft + ")","gi"),
                    s.colorStringFilter = function(t) {
                        var e, n = t[0] + t[1];
                        ft.test(n) && (e = n.indexOf("hsl(") !== -1 || n.indexOf("hsla(") !== -1,
                        t[0] = pt(t[0], e),
                        t[1] = pt(t[1], e)),
                        ft.lastIndex = 0
                    }
                    ,
                    e.defaultStringFilter || (e.defaultStringFilter = s.colorStringFilter);
                    var dt = function(t, e, n, r) {
                        if (null == t)
                            return function(t) {
                                return t
                            }
                            ;
                        var i, o = e ? (t.match(ft) || [""])[0] : "", a = t.split(o).join("").match(_) || [], s = t.substr(0, t.indexOf(a[0])), h = ")" === t.charAt(t.length - 1) ? ")" : "", u = t.indexOf(" ") !== -1 ? " " : ",", l = a.length, c = l > 0 ? a[0].replace(g, "") : "";
                        return l ? i = e ? function(t) {
                            var e, p, f, d;
                            if ("number" == typeof t)
                                t += c;
                            else if (r && O.test(t)) {
                                for (d = t.replace(O, "|").split("|"),
                                f = 0; f < d.length; f++)
                                    d[f] = i(d[f]);
                                return d.join(",")
                            }
                            if (e = (t.match(ft) || [o])[0],
                            p = t.split(e).join("").match(_) || [],
                            f = p.length,
                            l > f--)
                                for (; ++f < l; )
                                    p[f] = n ? p[(f - 1) / 2 | 0] : a[f];
                            return s + p.join(u) + u + e + h + (t.indexOf("inset") !== -1 ? " inset" : "")
                        }
                        : function(t) {
                            var e, o, p;
                            if ("number" == typeof t)
                                t += c;
                            else if (r && O.test(t)) {
                                for (o = t.replace(O, "|").split("|"),
                                p = 0; p < o.length; p++)
                                    o[p] = i(o[p]);
                                return o.join(",")
                            }
                            if (e = t.match(_) || [],
                            p = e.length,
                            l > p--)
                                for (; ++p < l; )
                                    e[p] = n ? e[(p - 1) / 2 | 0] : a[p];
                            return s + e.join(u) + h
                        }
                        : function(t) {
                            return t
                        }
                    }
                      , mt = function(t) {
                        return t = t.split(","),
                        function(e, n, r, i, o, a, s) {
                            var h, u = (n + "").split(" ");
                            for (s = {},
                            h = 0; h < 4; h++)
                                s[t[h]] = u[h] = u[h] || u[(h - 1) / 2 >> 0];
                            return i.parse(e, s, o, a)
                        }
                    }
                      , vt = (z._setPluginRatio = function(t) {
                        this.plugin.setRatio(t);
                        for (var e, n, r, i, o, a = this.data, s = a.proxy, h = a.firstMPT, u = 1e-6; h; )
                            e = s[h.v],
                            h.r ? e = Math.round(e) : e < u && e > -u && (e = 0),
                            h.t[h.p] = e,
                            h = h._next;
                        if (a.autoRotate && (a.autoRotate.rotation = s.rotation),
                        1 === t || 0 === t)
                            for (h = a.firstMPT,
                            o = 1 === t ? "e" : "b"; h; ) {
                                if (n = h.t,
                                n.type) {
                                    if (1 === n.type) {
                                        for (i = n.xs0 + n.s + n.xs1,
                                        r = 1; r < n.l; r++)
                                            i += n["xn" + r] + n["xs" + (r + 1)];
                                        n[o] = i
                                    }
                                } else
                                    n[o] = n.s + n.xs0;
                                h = h._next
                            }
                    }
                    ,
                    function(t, e, n, r, i) {
                        this.t = t,
                        this.p = e,
                        this.v = n,
                        this.r = i,
                        r && (r._prev = this,
                        this._next = r)
                    }
                    )
                      , gt = (z._parseToProxy = function(t, e, n, r, i, o) {
                        var a, s, h, u, l, c = r, p = {}, f = {}, d = n._transform, m = B;
                        for (n._transform = null ,
                        B = e,
                        r = l = n.parse(t, e, r, i),
                        B = m,
                        o && (n._transform = d,
                        c && (c._prev = null ,
                        c._prev && (c._prev._next = null ))); r && r !== c; ) {
                            if (r.type <= 1 && (s = r.p,
                            f[s] = r.s + r.c,
                            p[s] = r.s,
                            o || (u = new vt(r,"s",s,u,r.r),
                            r.c = 0),
                            1 === r.type))
                                for (a = r.l; --a > 0; )
                                    h = "xn" + a,
                                    s = r.p + "_" + h,
                                    f[s] = r.data[h],
                                    p[s] = r[h],
                                    o || (u = new vt(r,h,s,u,r.rxp[h]));
                            r = r._next
                        }
                        return {
                            proxy: p,
                            end: f,
                            firstMPT: u,
                            pt: l
                        }
                    }
                    ,
                    z.CSSPropTween = function(t, e, n, i, o, s, h, u, l, c, p) {
                        this.t = t,
                        this.p = e,
                        this.s = n,
                        this.c = i,
                        this.n = h || e,
                        t instanceof gt || a.push(this.n),
                        this.r = u,
                        this.type = s || 0,
                        l && (this.pr = l,
                        r = !0),
                        this.b = void 0 === c ? n : c,
                        this.e = void 0 === p ? n + i : p,
                        o && (this._next = o,
                        o._prev = this)
                    }
                    )
                      , yt = function(t, e, n, r, i, o) {
                        var a = new gt(t,e,n,r - n,i,(-1),o);
                        return a.b = n,
                        a.e = a.xs0 = r,
                        a
                    }
                      , _t = s.parseComplex = function(t, e, n, r, i, o, a, h, u, l) {
                        n = n || o || "",
                        a = new gt(t,e,0,0,a,l ? 2 : 1,null ,(!1),h,n,r),
                        r += "",
                        i && ft.test(r + n) && (r = [n, r],
                        s.colorStringFilter(r),
                        n = r[0],
                        r = r[1]);
                        var p, f, d, m, v, _, x, b, w, E, S, T, M, C = n.split(", ").join(",").split(" "), A = r.split(", ").join(",").split(" "), P = C.length, L = c !== !1;
                        for (r.indexOf(",") === -1 && n.indexOf(",") === -1 || (C = C.join(" ").replace(O, ", ").split(" "),
                        A = A.join(" ").replace(O, ", ").split(" "),
                        P = C.length),
                        P !== A.length && (C = (o || "").split(" "),
                        P = C.length),
                        a.plugin = u,
                        a.setRatio = l,
                        ft.lastIndex = 0,
                        p = 0; p < P; p++)
                            if (m = C[p],
                            v = A[p],
                            b = parseFloat(m),
                            b || 0 === b)
                                a.appendXtra("", b, at(v, b), v.replace(y, ""), L && v.indexOf("px") !== -1, !0);
                            else if (i && ft.test(m))
                                T = v.indexOf(")") + 1,
                                T = ")" + (T ? v.substr(T) : ""),
                                M = v.indexOf("hsl") !== -1 && j,
                                m = ct(m, M),
                                v = ct(v, M),
                                w = m.length + v.length > 6,
                                w && !j && 0 === v[3] ? (a["xs" + a.l] += a.l ? " transparent" : "transparent",
                                a.e = a.e.split(A[p]).join("transparent")) : (j || (w = !1),
                                M ? a.appendXtra(w ? "hsla(" : "hsl(", m[0], at(v[0], m[0]), ",", !1, !0).appendXtra("", m[1], at(v[1], m[1]), "%,", !1).appendXtra("", m[2], at(v[2], m[2]), w ? "%," : "%" + T, !1) : a.appendXtra(w ? "rgba(" : "rgb(", m[0], v[0] - m[0], ",", !0, !0).appendXtra("", m[1], v[1] - m[1], ",", !0).appendXtra("", m[2], v[2] - m[2], w ? "," : T, !0),
                                w && (m = m.length < 4 ? 1 : m[3],
                                a.appendXtra("", m, (v.length < 4 ? 1 : v[3]) - m, T, !1))),
                                ft.lastIndex = 0;
                            else if (_ = m.match(g)) {
                                if (x = v.match(y),
                                !x || x.length !== _.length)
                                    return a;
                                for (d = 0,
                                f = 0; f < _.length; f++)
                                    S = _[f],
                                    E = m.indexOf(S, d),
                                    a.appendXtra(m.substr(d, E - d), Number(S), at(x[f], S), "", L && "px" === m.substr(E + S.length, 2), 0 === f),
                                    d = E + S.length;
                                a["xs" + a.l] += m.substr(d)
                            } else
                                a["xs" + a.l] += a.l || a["xs" + a.l] ? " " + v : v;
                        if (r.indexOf("=") !== -1 && a.data) {
                            for (T = a.xs0 + a.data.s,
                            p = 1; p < a.l; p++)
                                T += a["xs" + p] + a.data["xn" + p];
                            a.e = T + a["xs" + p]
                        }
                        return a.l || (a.type = -1,
                        a.xs0 = a.e),
                        a.xfirst || a
                    }
                      , xt = 9;
                    for (l = gt.prototype,
                    l.l = l.pr = 0; --xt > 0; )
                        l["xn" + xt] = 0,
                        l["xs" + xt] = "";
                    l.xs0 = "",
                    l._next = l._prev = l.xfirst = l.data = l.plugin = l.setRatio = l.rxp = null ,
                    l.appendXtra = function(t, e, n, r, i, o) {
                        var a = this
                          , s = a.l;
                        return a["xs" + s] += o && (s || a["xs" + s]) ? " " + t : t || "",
                        n || 0 === s || a.plugin ? (a.l++,
                        a.type = a.setRatio ? 2 : 1,
                        a["xs" + a.l] = r || "",
                        s > 0 ? (a.data["xn" + s] = e + n,
                        a.rxp["xn" + s] = i,
                        a["xn" + s] = e,
                        a.plugin || (a.xfirst = new gt(a,"xn" + s,e,n,a.xfirst || a,0,a.n,i,a.pr),
                        a.xfirst.xs0 = 0),
                        a) : (a.data = {
                            s: e + n
                        },
                        a.rxp = {},
                        a.s = e,
                        a.c = n,
                        a.r = i,
                        a)) : (a["xs" + s] += e + (r || ""),
                        a)
                    }
                    ;
                    var bt = function(t, e) {
                        e = e || {},
                        this.p = e.prefix ? Z(t) || t : t,
                        u[t] = u[this.p] = this,
                        this.format = e.formatter || dt(e.defaultValue, e.color, e.collapsible, e.multi),
                        e.parser && (this.parse = e.parser),
                        this.clrs = e.color,
                        this.multi = e.multi,
                        this.keyword = e.keyword,
                        this.dflt = e.defaultValue,
                        this.pr = e.priority || 0
                    }
                      , wt = z._registerComplexSpecialProp = function(t, e, n) {
                        "object" != typeof e && (e = {
                            parser: n
                        });
                        var r, i, o = t.split(","), a = e.defaultValue;
                        for (n = n || [a],
                        r = 0; r < o.length; r++)
                            e.prefix = 0 === r && e.prefix,
                            e.defaultValue = n[r] || a,
                            i = new bt(o[r],e)
                    }
                      , Et = function(t) {
                        if (!u[t]) {
                            var e = t.charAt(0).toUpperCase() + t.substr(1) + "Plugin";
                            wt(t, {
                                parser: function(t, n, r, i, o, a, s) {
                                    var l = h.com.greensock.plugins[e];
                                    return l ? (l._cssRegister(),
                                    u[r].parse(t, n, r, i, o, a, s)) : (X("Error: " + e + " js file not loaded."),
                                    o)
                                }
                            })
                        }
                    }
                    ;
                    l = bt.prototype,
                    l.parseComplex = function(t, e, n, r, i, o) {
                        var a, s, h, u, l, c, p = this.keyword;
                        if (this.multi && (O.test(n) || O.test(e) ? (s = e.replace(O, "|").split("|"),
                        h = n.replace(O, "|").split("|")) : p && (s = [e],
                        h = [n])),
                        h) {
                            for (u = h.length > s.length ? h.length : s.length,
                            a = 0; a < u; a++)
                                e = s[a] = s[a] || this.dflt,
                                n = h[a] = h[a] || this.dflt,
                                p && (l = e.indexOf(p),
                                c = n.indexOf(p),
                                l !== c && (c === -1 ? s[a] = s[a].split(p).join("") : l === -1 && (s[a] += " " + p)));
                            e = s.join(", "),
                            n = h.join(", ")
                        }
                        return _t(t, this.p, e, n, this.clrs, this.dflt, r, this.pr, i, o)
                    }
                    ,
                    l.parse = function(t, e, n, r, i, a, s) {
                        return this.parseComplex(t.style, this.format(K(t, this.p, o, !1, this.dflt)), this.format(e), i, a)
                    }
                    ,
                    s.registerSpecialProp = function(t, e, n) {
                        wt(t, {
                            parser: function(t, r, i, o, a, s, h) {
                                var u = new gt(t,i,0,0,a,2,i,(!1),n);
                                return u.plugin = s,
                                u.setRatio = e(t, r, o._tween, i),
                                u
                            },
                            priority: n
                        })
                    }
                    ,
                    s.useSVGTransformAttr = f || d;
                    var St, Tt = "scaleX,scaleY,scaleZ,x,y,z,skewX,skewY,rotation,rotationX,rotationY,perspective,xPercent,yPercent".split(","), Mt = Z("transform"), Ct = Y + "transform", At = Z("transformOrigin"), Pt = null !== Z("perspective"), Lt = z.Transform = function() {
                        this.perspective = parseFloat(s.defaultTransformPerspective) || 0,
                        this.force3D = !(s.defaultForce3D === !1 || !Pt) && (s.defaultForce3D || "auto")
                    }
                    , Rt = window.SVGElement, kt = function(t, e, n) {
                        var r, i = F.createElementNS("http://www.w3.org/2000/svg", t), o = /([a-z])([A-Z])/g;
                        for (r in n)
                            i.setAttributeNS(null , r.replace(o, "$1-$2").toLowerCase(), n[r]);
                        return e.appendChild(i),
                        i
                    }
                    , Ot = F.documentElement, It = function() {
                        var t, e, n, r = v || /Android/i.test(H) && !window.chrome;
                        return F.createElementNS && !r && (t = kt("svg", Ot),
                        e = kt("rect", t, {
                            width: 100,
                            height: 50,
                            x: 100
                        }),
                        n = e.getBoundingClientRect().width,
                        e.style[At] = "50% 50%",
                        e.style[Mt] = "scaleX(0.5)",
                        r = n === e.getBoundingClientRect().width && !(d && Pt),
                        Ot.removeChild(t)),
                        r
                    }(), Dt = function(t, e, n, r, i, o) {
                        var a, h, u, l, c, p, f, d, m, v, g, y, _, x, b = t._gsTransform, w = Nt(t, !0);
                        b && (_ = b.xOrigin,
                        x = b.yOrigin),
                        (!r || (a = r.split(" ")).length < 2) && (f = t.getBBox(),
                        e = ot(e).split(" "),
                        a = [(e[0].indexOf("%") !== -1 ? parseFloat(e[0]) / 100 * f.width : parseFloat(e[0])) + f.x, (e[1].indexOf("%") !== -1 ? parseFloat(e[1]) / 100 * f.height : parseFloat(e[1])) + f.y]),
                        n.xOrigin = l = parseFloat(a[0]),
                        n.yOrigin = c = parseFloat(a[1]),
                        r && w !== Ft && (p = w[0],
                        f = w[1],
                        d = w[2],
                        m = w[3],
                        v = w[4],
                        g = w[5],
                        y = p * m - f * d,
                        h = l * (m / y) + c * (-d / y) + (d * g - m * v) / y,
                        u = l * (-f / y) + c * (p / y) - (p * g - f * v) / y,
                        l = n.xOrigin = a[0] = h,
                        c = n.yOrigin = a[1] = u),
                        b && (o && (n.xOffset = b.xOffset,
                        n.yOffset = b.yOffset,
                        b = n),
                        i || i !== !1 && s.defaultSmoothOrigin !== !1 ? (h = l - _,
                        u = c - x,
                        b.xOffset += h * w[0] + u * w[2] - h,
                        b.yOffset += h * w[1] + u * w[3] - u) : b.xOffset = b.yOffset = 0),
                        o || t.setAttribute("data-svg-origin", a.join(" "))
                    }
                    , Ut = function(t) {
                        try {
                            return t.getBBox()
                        } catch (t) {}
                    }
                    , Bt = function(t) {
                        return !!(Rt && t.getBBox && t.getCTM && Ut(t) && (!t.parentNode || t.parentNode.getBBox && t.parentNode.getCTM))
                    }
                    , Ft = [1, 0, 0, 1, 0, 0], Nt = function(t, e) {
                        var n, r, i, o, a, s, h = t._gsTransform || new Lt, u = 1e5, l = t.style;
                        if (Mt ? r = K(t, Ct, null , !0) : t.currentStyle && (r = t.currentStyle.filter.match(R),
                        r = r && 4 === r.length ? [r[0].substr(4), Number(r[2].substr(4)), Number(r[1].substr(4)), r[3].substr(4), h.x || 0, h.y || 0].join(",") : ""),
                        n = !r || "none" === r || "matrix(1, 0, 0, 1, 0, 0)" === r,
                        n && Mt && ((s = "none" === Q(t).display) || !t.parentNode) && (s && (o = l.display,
                        l.display = "block"),
                        t.parentNode || (a = 1,
                        Ot.appendChild(t)),
                        r = K(t, Ct, null , !0),
                        n = !r || "none" === r || "matrix(1, 0, 0, 1, 0, 0)" === r,
                        o ? l.display = o : s && jt(l, "display"),
                        a && Ot.removeChild(t)),
                        (h.svg || t.getBBox && Bt(t)) && (n && (l[Mt] + "").indexOf("matrix") !== -1 && (r = l[Mt],
                        n = 0),
                        i = t.getAttribute("transform"),
                        n && i && (i.indexOf("matrix") !== -1 ? (r = i,
                        n = 0) : i.indexOf("translate") !== -1 && (r = "matrix(1,0,0,1," + i.match(/(?:\-|\b)[\d\-\.e]+\b/gi).join(",") + ")",
                        n = 0))),
                        n)
                            return Ft;
                        for (i = (r || "").match(g) || [],
                        xt = i.length; --xt > -1; )
                            o = Number(i[xt]),
                            i[xt] = (a = o - (o |= 0)) ? (a * u + (a < 0 ? -.5 : .5) | 0) / u + o : o;
                        return e && i.length > 6 ? [i[0], i[1], i[4], i[5], i[12], i[13]] : i
                    }
                    , Gt = z.getTransform = function(t, n, r, i) {
                        if (t._gsTransform && r && !i)
                            return t._gsTransform;
                        var o, a, h, u, l, c, p = r ? t._gsTransform || new Lt : new Lt, f = p.scaleX < 0, d = 2e-5, m = 1e5, v = Pt ? parseFloat(K(t, At, n, !1, "0 0 0").split(" ")[2]) || p.zOrigin || 0 : 0, g = parseFloat(s.defaultTransformPerspective) || 0;
                        if (p.svg = !(!t.getBBox || !Bt(t)),
                        p.svg && (Dt(t, K(t, At, n, !1, "50% 50%") + "", p, t.getAttribute("data-svg-origin")),
                        St = s.useSVGTransformAttr || It),
                        o = Nt(t),
                        o !== Ft) {
                            if (16 === o.length) {
                                var y, _, x, b, w, E = o[0], S = o[1], T = o[2], M = o[3], C = o[4], A = o[5], P = o[6], L = o[7], R = o[8], k = o[9], O = o[10], I = o[12], D = o[13], B = o[14], F = o[11], N = Math.atan2(P, O);
                                p.zOrigin && (B = -p.zOrigin,
                                I = R * B - o[12],
                                D = k * B - o[13],
                                B = O * B + p.zOrigin - o[14]),
                                p.rotationX = N * U,
                                N && (b = Math.cos(-N),
                                w = Math.sin(-N),
                                y = C * b + R * w,
                                _ = A * b + k * w,
                                x = P * b + O * w,
                                R = C * -w + R * b,
                                k = A * -w + k * b,
                                O = P * -w + O * b,
                                F = L * -w + F * b,
                                C = y,
                                A = _,
                                P = x),
                                N = Math.atan2(-T, O),
                                p.rotationY = N * U,
                                N && (b = Math.cos(-N),
                                w = Math.sin(-N),
                                y = E * b - R * w,
                                _ = S * b - k * w,
                                x = T * b - O * w,
                                k = S * w + k * b,
                                O = T * w + O * b,
                                F = M * w + F * b,
                                E = y,
                                S = _,
                                T = x),
                                N = Math.atan2(S, E),
                                p.rotation = N * U,
                                N && (b = Math.cos(-N),
                                w = Math.sin(-N),
                                E = E * b + C * w,
                                _ = S * b + A * w,
                                A = S * -w + A * b,
                                P = T * -w + P * b,
                                S = _),
                                p.rotationX && Math.abs(p.rotationX) + Math.abs(p.rotation) > 359.9 && (p.rotationX = p.rotation = 0,
                                p.rotationY = 180 - p.rotationY),
                                p.scaleX = (Math.sqrt(E * E + S * S) * m + .5 | 0) / m,
                                p.scaleY = (Math.sqrt(A * A + k * k) * m + .5 | 0) / m,
                                p.scaleZ = (Math.sqrt(P * P + O * O) * m + .5 | 0) / m,
                                p.rotationX || p.rotationY ? p.skewX = 0 : (p.skewX = C || A ? Math.atan2(C, A) * U + p.rotation : p.skewX || 0,
                                Math.abs(p.skewX) > 90 && Math.abs(p.skewX) < 270 && (f ? (p.scaleX *= -1,
                                p.skewX += p.rotation <= 0 ? 180 : -180,
                                p.rotation += p.rotation <= 0 ? 180 : -180) : (p.scaleY *= -1,
                                p.skewX += p.skewX <= 0 ? 180 : -180))),
                                p.perspective = F ? 1 / (F < 0 ? -F : F) : 0,
                                p.x = I,
                                p.y = D,
                                p.z = B,
                                p.svg && (p.x -= p.xOrigin - (p.xOrigin * E - p.yOrigin * C),
                                p.y -= p.yOrigin - (p.yOrigin * S - p.xOrigin * A))
                            } else if (!Pt || i || !o.length || p.x !== o[4] || p.y !== o[5] || !p.rotationX && !p.rotationY) {
                                var G = o.length >= 6
                                  , V = G ? o[0] : 1
                                  , z = o[1] || 0
                                  , H = o[2] || 0
                                  , j = G ? o[3] : 1;
                                p.x = o[4] || 0,
                                p.y = o[5] || 0,
                                h = Math.sqrt(V * V + z * z),
                                u = Math.sqrt(j * j + H * H),
                                l = V || z ? Math.atan2(z, V) * U : p.rotation || 0,
                                c = H || j ? Math.atan2(H, j) * U + l : p.skewX || 0,
                                Math.abs(c) > 90 && Math.abs(c) < 270 && (f ? (h *= -1,
                                c += l <= 0 ? 180 : -180,
                                l += l <= 0 ? 180 : -180) : (u *= -1,
                                c += c <= 0 ? 180 : -180)),
                                p.scaleX = h,
                                p.scaleY = u,
                                p.rotation = l,
                                p.skewX = c,
                                Pt && (p.rotationX = p.rotationY = p.z = 0,
                                p.perspective = g,
                                p.scaleZ = 1),
                                p.svg && (p.x -= p.xOrigin - (p.xOrigin * V + p.yOrigin * H),
                                p.y -= p.yOrigin - (p.xOrigin * z + p.yOrigin * j))
                            }
                            p.zOrigin = v;
                            for (a in p)
                                p[a] < d && p[a] > -d && (p[a] = 0)
                        }
                        return r && (t._gsTransform = p,
                        p.svg && (St && t.style[Mt] ? e.delayedCall(.001, function() {
                            jt(t.style, Mt)
                        }) : !St && t.getAttribute("transform") && e.delayedCall(.001, function() {
                            t.removeAttribute("transform")
                        }))),
                        p
                    }
                    , Vt = function(t) {
                        var e, n, r = this.data, i = -r.rotation * D, o = i + r.skewX * D, a = 1e5, s = (Math.cos(i) * r.scaleX * a | 0) / a, h = (Math.sin(i) * r.scaleX * a | 0) / a, u = (Math.sin(o) * -r.scaleY * a | 0) / a, l = (Math.cos(o) * r.scaleY * a | 0) / a, c = this.t.style, p = this.t.currentStyle;
                        if (p) {
                            n = h,
                            h = -u,
                            u = -n,
                            e = p.filter,
                            c.filter = "";
                            var f, d, m = this.t.offsetWidth, g = this.t.offsetHeight, y = "absolute" !== p.position, _ = "progid:DXImageTransform.Microsoft.Matrix(M11=" + s + ", M12=" + h + ", M21=" + u + ", M22=" + l, x = r.x + m * r.xPercent / 100, E = r.y + g * r.yPercent / 100;
                            if (null != r.ox && (f = (r.oxp ? m * r.ox * .01 : r.ox) - m / 2,
                            d = (r.oyp ? g * r.oy * .01 : r.oy) - g / 2,
                            x += f - (f * s + d * h),
                            E += d - (f * u + d * l)),
                            y ? (f = m / 2,
                            d = g / 2,
                            _ += ", Dx=" + (f - (f * s + d * h) + x) + ", Dy=" + (d - (f * u + d * l) + E) + ")") : _ += ", sizingMethod='auto expand')",
                            e.indexOf("DXImageTransform.Microsoft.Matrix(") !== -1 ? c.filter = e.replace(k, _) : c.filter = _ + " " + e,
                            0 !== t && 1 !== t || 1 === s && 0 === h && 0 === u && 1 === l && (y && _.indexOf("Dx=0, Dy=0") === -1 || w.test(e) && 100 !== parseFloat(RegExp.$1) || e.indexOf(e.indexOf("Alpha")) === -1 && c.removeAttribute("filter")),
                            !y) {
                                var S, T, M, C = v < 8 ? 1 : -1;
                                for (f = r.ieOffsetX || 0,
                                d = r.ieOffsetY || 0,
                                r.ieOffsetX = Math.round((m - ((s < 0 ? -s : s) * m + (h < 0 ? -h : h) * g)) / 2 + x),
                                r.ieOffsetY = Math.round((g - ((l < 0 ? -l : l) * g + (u < 0 ? -u : u) * m)) / 2 + E),
                                xt = 0; xt < 4; xt++)
                                    T = rt[xt],
                                    S = p[T],
                                    n = S.indexOf("px") !== -1 ? parseFloat(S) : J(this.t, T, parseFloat(S), S.replace(b, "")) || 0,
                                    M = n !== r[T] ? xt < 2 ? -r.ieOffsetX : -r.ieOffsetY : xt < 2 ? f - r.ieOffsetX : d - r.ieOffsetY,
                                    c[T] = (r[T] = Math.round(n - M * (0 === xt || 2 === xt ? 1 : C))) + "px"
                            }
                        }
                    }
                    , zt = z.set3DTransformRatio = z.setTransformRatio = function(t) {
                        var e, n, r, i, o, a, s, h, u, l, c, p, f, m, v, g, y, _, x, b, w, E, S, T = this.data, M = this.t.style, C = T.rotation, A = T.rotationX, P = T.rotationY, L = T.scaleX, R = T.scaleY, k = T.scaleZ, O = T.x, I = T.y, U = T.z, B = T.svg, F = T.perspective, N = T.force3D;
                        if (((1 === t || 0 === t) && "auto" === N && (this.tween._totalTime === this.tween._totalDuration || !this.tween._totalTime) || !N) && !U && !F && !P && !A && 1 === k || St && B || !Pt)
                            return void (C || T.skewX || B ? (C *= D,
                            E = T.skewX * D,
                            S = 1e5,
                            e = Math.cos(C) * L,
                            i = Math.sin(C) * L,
                            n = Math.sin(C - E) * -R,
                            o = Math.cos(C - E) * R,
                            E && "simple" === T.skewType && (y = Math.tan(E),
                            y = Math.sqrt(1 + y * y),
                            n *= y,
                            o *= y,
                            T.skewY && (e *= y,
                            i *= y)),
                            B && (O += T.xOrigin - (T.xOrigin * e + T.yOrigin * n) + T.xOffset,
                            I += T.yOrigin - (T.xOrigin * i + T.yOrigin * o) + T.yOffset,
                            St && (T.xPercent || T.yPercent) && (m = this.t.getBBox(),
                            O += .01 * T.xPercent * m.width,
                            I += .01 * T.yPercent * m.height),
                            m = 1e-6,
                            O < m && O > -m && (O = 0),
                            I < m && I > -m && (I = 0)),
                            x = (e * S | 0) / S + "," + (i * S | 0) / S + "," + (n * S | 0) / S + "," + (o * S | 0) / S + "," + O + "," + I + ")",
                            B && St ? this.t.setAttribute("transform", "matrix(" + x) : M[Mt] = (T.xPercent || T.yPercent ? "translate(" + T.xPercent + "%," + T.yPercent + "%) matrix(" : "matrix(") + x) : M[Mt] = (T.xPercent || T.yPercent ? "translate(" + T.xPercent + "%," + T.yPercent + "%) matrix(" : "matrix(") + L + ",0,0," + R + "," + O + "," + I + ")");
                        if (d && (m = 1e-4,
                        L < m && L > -m && (L = k = 2e-5),
                        R < m && R > -m && (R = k = 2e-5),
                        !F || T.z || T.rotationX || T.rotationY || (F = 0)),
                        C || T.skewX)
                            C *= D,
                            v = e = Math.cos(C),
                            g = i = Math.sin(C),
                            T.skewX && (C -= T.skewX * D,
                            v = Math.cos(C),
                            g = Math.sin(C),
                            "simple" === T.skewType && (y = Math.tan(T.skewX * D),
                            y = Math.sqrt(1 + y * y),
                            v *= y,
                            g *= y,
                            T.skewY && (e *= y,
                            i *= y))),
                            n = -g,
                            o = v;
                        else {
                            if (!(P || A || 1 !== k || F || B))
                                return void (M[Mt] = (T.xPercent || T.yPercent ? "translate(" + T.xPercent + "%," + T.yPercent + "%) translate3d(" : "translate3d(") + O + "px," + I + "px," + U + "px)" + (1 !== L || 1 !== R ? " scale(" + L + "," + R + ")" : ""));
                            e = o = 1,
                            n = i = 0
                        }
                        u = 1,
                        r = a = s = h = l = c = 0,
                        p = F ? -1 / F : 0,
                        f = T.zOrigin,
                        m = 1e-6,
                        b = ",",
                        w = "0",
                        C = P * D,
                        C && (v = Math.cos(C),
                        g = Math.sin(C),
                        s = -g,
                        l = p * -g,
                        r = e * g,
                        a = i * g,
                        u = v,
                        p *= v,
                        e *= v,
                        i *= v),
                        C = A * D,
                        C && (v = Math.cos(C),
                        g = Math.sin(C),
                        y = n * v + r * g,
                        _ = o * v + a * g,
                        h = u * g,
                        c = p * g,
                        r = n * -g + r * v,
                        a = o * -g + a * v,
                        u *= v,
                        p *= v,
                        n = y,
                        o = _),
                        1 !== k && (r *= k,
                        a *= k,
                        u *= k,
                        p *= k),
                        1 !== R && (n *= R,
                        o *= R,
                        h *= R,
                        c *= R),
                        1 !== L && (e *= L,
                        i *= L,
                        s *= L,
                        l *= L),
                        (f || B) && (f && (O += r * -f,
                        I += a * -f,
                        U += u * -f + f),
                        B && (O += T.xOrigin - (T.xOrigin * e + T.yOrigin * n) + T.xOffset,
                        I += T.yOrigin - (T.xOrigin * i + T.yOrigin * o) + T.yOffset),
                        O < m && O > -m && (O = w),
                        I < m && I > -m && (I = w),
                        U < m && U > -m && (U = 0)),
                        x = T.xPercent || T.yPercent ? "translate(" + T.xPercent + "%," + T.yPercent + "%) matrix3d(" : "matrix3d(",
                        x += (e < m && e > -m ? w : e) + b + (i < m && i > -m ? w : i) + b + (s < m && s > -m ? w : s),
                        x += b + (l < m && l > -m ? w : l) + b + (n < m && n > -m ? w : n) + b + (o < m && o > -m ? w : o),
                        A || P || 1 !== k ? (x += b + (h < m && h > -m ? w : h) + b + (c < m && c > -m ? w : c) + b + (r < m && r > -m ? w : r),
                        x += b + (a < m && a > -m ? w : a) + b + (u < m && u > -m ? w : u) + b + (p < m && p > -m ? w : p) + b) : x += ",0,0,0,0,1,0,",
                        x += O + b + I + b + U + b + (F ? 1 + -U / F : 1) + ")",
                        M[Mt] = x
                    }
                    ;
                    l = Lt.prototype,
                    l.x = l.y = l.z = l.skewX = l.skewY = l.rotation = l.rotationX = l.rotationY = l.zOrigin = l.xPercent = l.yPercent = l.xOffset = l.yOffset = 0,
                    l.scaleX = l.scaleY = l.scaleZ = 1,
                    wt("transform,scale,scaleX,scaleY,scaleZ,x,y,z,rotation,rotationX,rotationY,rotationZ,skewX,skewY,shortRotation,shortRotationX,shortRotationY,shortRotationZ,transformOrigin,svgOrigin,transformPerspective,directionalRotation,parseTransform,force3D,skewType,xPercent,yPercent,smoothOrigin", {
                        parser: function(t, e, n, r, i, a, h) {
                            if (r._lastParsedTransform === h)
                                return i;
                            r._lastParsedTransform = h;
                            var u, l, c, p, f, d, m, v, g, y = t._gsTransform, _ = t.style, x = 1e-6, b = Tt.length, w = h, E = {}, S = "transformOrigin", T = Gt(t, o, !0, h.parseTransform);
                            if (r._transform = T,
                            "string" == typeof w.transform && Mt)
                                l = G.style,
                                l[Mt] = w.transform,
                                l.display = "block",
                                l.position = "absolute",
                                F.body.appendChild(G),
                                u = Gt(G, null , !1),
                                T.svg && (m = T.xOrigin,
                                v = T.yOrigin,
                                u.x -= T.xOffset,
                                u.y -= T.yOffset,
                                (w.transformOrigin || w.svgOrigin) && (c = {},
                                Dt(t, ot(w.transformOrigin), c, w.svgOrigin, w.smoothOrigin, !0),
                                m = c.xOrigin,
                                v = c.yOrigin,
                                u.x -= c.xOffset - T.xOffset,
                                u.y -= c.yOffset - T.yOffset),
                                (m || v) && (g = Nt(G, !0),
                                u.x -= m - (m * g[0] + v * g[2]),
                                u.y -= v - (m * g[1] + v * g[3]))),
                                F.body.removeChild(G),
                                u.perspective || (u.perspective = T.perspective),
                                null != w.xPercent && (u.xPercent = st(w.xPercent, T.xPercent)),
                                null != w.yPercent && (u.yPercent = st(w.yPercent, T.yPercent));
                            else if ("object" == typeof w) {
                                if (u = {
                                    scaleX: st(null != w.scaleX ? w.scaleX : w.scale, T.scaleX),
                                    scaleY: st(null != w.scaleY ? w.scaleY : w.scale, T.scaleY),
                                    scaleZ: st(w.scaleZ, T.scaleZ),
                                    x: st(w.x, T.x),
                                    y: st(w.y, T.y),
                                    z: st(w.z, T.z),
                                    xPercent: st(w.xPercent, T.xPercent),
                                    yPercent: st(w.yPercent, T.yPercent),
                                    perspective: st(w.transformPerspective, T.perspective)
                                },
                                d = w.directionalRotation,
                                null != d)
                                    if ("object" == typeof d)
                                        for (l in d)
                                            w[l] = d[l];
                                    else
                                        w.rotation = d;
                                "string" == typeof w.x && w.x.indexOf("%") !== -1 && (u.x = 0,
                                u.xPercent = st(w.x, T.xPercent)),
                                "string" == typeof w.y && w.y.indexOf("%") !== -1 && (u.y = 0,
                                u.yPercent = st(w.y, T.yPercent)),
                                u.rotation = ht("rotation"in w ? w.rotation : "shortRotation"in w ? w.shortRotation + "_short" : "rotationZ"in w ? w.rotationZ : T.rotation - T.skewY, T.rotation - T.skewY, "rotation", E),
                                Pt && (u.rotationX = ht("rotationX"in w ? w.rotationX : "shortRotationX"in w ? w.shortRotationX + "_short" : T.rotationX || 0, T.rotationX, "rotationX", E),
                                u.rotationY = ht("rotationY"in w ? w.rotationY : "shortRotationY"in w ? w.shortRotationY + "_short" : T.rotationY || 0, T.rotationY, "rotationY", E)),
                                u.skewX = ht(w.skewX, T.skewX - T.skewY),
                                (u.skewY = ht(w.skewY, T.skewY)) && (u.skewX += u.skewY,
                                u.rotation += u.skewY)
                            }
                            for (Pt && null != w.force3D && (T.force3D = w.force3D,
                            f = !0),
                            T.skewType = w.skewType || T.skewType || s.defaultSkewType,
                            p = T.force3D || T.z || T.rotationX || T.rotationY || u.z || u.rotationX || u.rotationY || u.perspective,
                            p || null == w.scale || (u.scaleZ = 1); --b > -1; )
                                n = Tt[b],
                                c = u[n] - T[n],
                                (c > x || c < -x || null != w[n] || null != B[n]) && (f = !0,
                                i = new gt(T,n,T[n],c,i),
                                n in E && (i.e = E[n]),
                                i.xs0 = 0,
                                i.plugin = a,
                                r._overwriteProps.push(i.n));
                            return c = w.transformOrigin,
                            T.svg && (c || w.svgOrigin) && (m = T.xOffset,
                            v = T.yOffset,
                            Dt(t, ot(c), u, w.svgOrigin, w.smoothOrigin),
                            i = yt(T, "xOrigin", (y ? T : u).xOrigin, u.xOrigin, i, S),
                            i = yt(T, "yOrigin", (y ? T : u).yOrigin, u.yOrigin, i, S),
                            m === T.xOffset && v === T.yOffset || (i = yt(T, "xOffset", y ? m : T.xOffset, T.xOffset, i, S),
                            i = yt(T, "yOffset", y ? v : T.yOffset, T.yOffset, i, S)),
                            c = St ? null : "0px 0px"),
                            (c || Pt && p && T.zOrigin) && (Mt ? (f = !0,
                            n = At,
                            c = (c || K(t, n, o, !1, "50% 50%")) + "",
                            i = new gt(_,n,0,0,i,(-1),S),
                            i.b = _[n],
                            i.plugin = a,
                            Pt ? (l = T.zOrigin,
                            c = c.split(" "),
                            T.zOrigin = (c.length > 2 && (0 === l || "0px" !== c[2]) ? parseFloat(c[2]) : l) || 0,
                            i.xs0 = i.e = c[0] + " " + (c[1] || "50%") + " 0px",
                            i = new gt(T,"zOrigin",0,0,i,(-1),i.n),
                            i.b = l,
                            i.xs0 = i.e = T.zOrigin) : i.xs0 = i.e = c) : ot(c + "", T)),
                            f && (r._transformType = T.svg && St || !p && 3 !== this._transformType ? 2 : 3),
                            i
                        },
                        prefix: !0
                    }),
                    wt("boxShadow", {
                        defaultValue: "0px 0px 0px 0px #999",
                        prefix: !0,
                        color: !0,
                        multi: !0,
                        keyword: "inset"
                    }),
                    wt("borderRadius", {
                        defaultValue: "0px",
                        parser: function(t, e, n, r, a, s) {
                            e = this.format(e);
                            var h, u, l, c, p, f, d, m, v, g, y, _, x, b, w, E, S = ["borderTopLeftRadius", "borderTopRightRadius", "borderBottomRightRadius", "borderBottomLeftRadius"], T = t.style;
                            for (v = parseFloat(t.offsetWidth),
                            g = parseFloat(t.offsetHeight),
                            h = e.split(" "),
                            u = 0; u < S.length; u++)
                                this.p.indexOf("border") && (S[u] = Z(S[u])),
                                p = c = K(t, S[u], o, !1, "0px"),
                                p.indexOf(" ") !== -1 && (c = p.split(" "),
                                p = c[0],
                                c = c[1]),
                                f = l = h[u],
                                d = parseFloat(p),
                                _ = p.substr((d + "").length),
                                x = "=" === f.charAt(1),
                                x ? (m = parseInt(f.charAt(0) + "1", 10),
                                f = f.substr(2),
                                m *= parseFloat(f),
                                y = f.substr((m + "").length - (m < 0 ? 1 : 0)) || "") : (m = parseFloat(f),
                                y = f.substr((m + "").length)),
                                "" === y && (y = i[n] || _),
                                y !== _ && (b = J(t, "borderLeft", d, _),
                                w = J(t, "borderTop", d, _),
                                "%" === y ? (p = b / v * 100 + "%",
                                c = w / g * 100 + "%") : "em" === y ? (E = J(t, "borderLeft", 1, "em"),
                                p = b / E + "em",
                                c = w / E + "em") : (p = b + "px",
                                c = w + "px"),
                                x && (f = parseFloat(p) + m + y,
                                l = parseFloat(c) + m + y)),
                                a = _t(T, S[u], p + " " + c, f + " " + l, !1, "0px", a);
                            return a
                        },
                        prefix: !0,
                        formatter: dt("0px 0px 0px 0px", !1, !0)
                    }),
                    wt("borderBottomLeftRadius,borderBottomRightRadius,borderTopLeftRadius,borderTopRightRadius", {
                        defaultValue: "0px",
                        parser: function(t, e, n, r, i, a) {
                            return _t(t.style, n, this.format(K(t, n, o, !1, "0px 0px")), this.format(e), !1, "0px", i)
                        },
                        prefix: !0,
                        formatter: dt("0px 0px", !1, !0)
                    }),
                    wt("backgroundPosition", {
                        defaultValue: "0 0",
                        parser: function(t, e, n, r, i, a) {
                            var s, h, u, l, c, p, f = "background-position", d = o || Q(t, null ), m = this.format((d ? v ? d.getPropertyValue(f + "-x") + " " + d.getPropertyValue(f + "-y") : d.getPropertyValue(f) : t.currentStyle.backgroundPositionX + " " + t.currentStyle.backgroundPositionY) || "0 0"), g = this.format(e);
                            if (m.indexOf("%") !== -1 != (g.indexOf("%") !== -1) && g.split(",").length < 2 && (p = K(t, "backgroundImage").replace(A, ""),
                            p && "none" !== p)) {
                                for (s = m.split(" "),
                                h = g.split(" "),
                                V.setAttribute("src", p),
                                u = 2; --u > -1; )
                                    m = s[u],
                                    l = m.indexOf("%") !== -1,
                                    l !== (h[u].indexOf("%") !== -1) && (c = 0 === u ? t.offsetWidth - V.width : t.offsetHeight - V.height,
                                    s[u] = l ? parseFloat(m) / 100 * c + "px" : parseFloat(m) / c * 100 + "%");
                                m = s.join(" ")
                            }
                            return this.parseComplex(t.style, m, g, i, a)
                        },
                        formatter: ot
                    }),
                    wt("backgroundSize", {
                        defaultValue: "0 0",
                        formatter: ot
                    }),
                    wt("perspective", {
                        defaultValue: "0px",
                        prefix: !0
                    }),
                    wt("perspectiveOrigin", {
                        defaultValue: "50% 50%",
                        prefix: !0
                    }),
                    wt("transformStyle", {
                        prefix: !0
                    }),
                    wt("backfaceVisibility", {
                        prefix: !0
                    }),
                    wt("userSelect", {
                        prefix: !0
                    }),
                    wt("margin", {
                        parser: mt("marginTop,marginRight,marginBottom,marginLeft")
                    }),
                    wt("padding", {
                        parser: mt("paddingTop,paddingRight,paddingBottom,paddingLeft")
                    }),
                    wt("clip", {
                        defaultValue: "rect(0px,0px,0px,0px)",
                        parser: function(t, e, n, r, i, a) {
                            var s, h, u;
                            return v < 9 ? (h = t.currentStyle,
                            u = v < 8 ? " " : ",",
                            s = "rect(" + h.clipTop + u + h.clipRight + u + h.clipBottom + u + h.clipLeft + ")",
                            e = this.format(e).split(",").join(u)) : (s = this.format(K(t, this.p, o, !1, this.dflt)),
                            e = this.format(e)),
                            this.parseComplex(t.style, s, e, i, a)
                        }
                    }),
                    wt("textShadow", {
                        defaultValue: "0px 0px 0px #999",
                        color: !0,
                        multi: !0
                    }),
                    wt("autoRound,strictUnits", {
                        parser: function(t, e, n, r, i) {
                            return i
                        }
                    }),
                    wt("border", {
                        defaultValue: "0px solid #000",
                        parser: function(t, e, n, r, i, a) {
                            var s = K(t, "borderTopWidth", o, !1, "0px")
                              , h = this.format(e).split(" ")
                              , u = h[0].replace(b, "");
                            return "px" !== u && (s = parseFloat(s) / J(t, "borderTopWidth", 1, u) + u),
                            this.parseComplex(t.style, this.format(s + " " + K(t, "borderTopStyle", o, !1, "solid") + " " + K(t, "borderTopColor", o, !1, "#000")), h.join(" "), i, a)
                        },
                        color: !0,
                        formatter: function(t) {
                            var e = t.split(" ");
                            return e[0] + " " + (e[1] || "solid") + " " + (t.match(ft) || ["#000"])[0]
                        }
                    }),
                    wt("borderWidth", {
                        parser: mt("borderTopWidth,borderRightWidth,borderBottomWidth,borderLeftWidth")
                    }),
                    wt("float,cssFloat,styleFloat", {
                        parser: function(t, e, n, r, i, o) {
                            var a = t.style
                              , s = "cssFloat"in a ? "cssFloat" : "styleFloat";
                            return new gt(a,s,0,0,i,(-1),n,(!1),0,a[s],e)
                        }
                    });
                    var Ht = function(t) {
                        var e, n = this.t, r = n.filter || K(this.data, "filter") || "", i = this.s + this.c * t | 0;
                        100 === i && (r.indexOf("atrix(") === -1 && r.indexOf("radient(") === -1 && r.indexOf("oader(") === -1 ? (n.removeAttribute("filter"),
                        e = !K(this.data, "filter")) : (n.filter = r.replace(S, ""),
                        e = !0)),
                        e || (this.xn1 && (n.filter = r = r || "alpha(opacity=" + i + ")"),
                        r.indexOf("pacity") === -1 ? 0 === i && this.xn1 || (n.filter = r + " alpha(opacity=" + i + ")") : n.filter = r.replace(w, "opacity=" + i))
                    }
                    ;
                    wt("opacity,alpha,autoAlpha", {
                        defaultValue: "1",
                        parser: function(t, e, n, r, i, a) {
                            var s = parseFloat(K(t, "opacity", o, !1, "1"))
                              , h = t.style
                              , u = "autoAlpha" === n;
                            return "string" == typeof e && "=" === e.charAt(1) && (e = ("-" === e.charAt(0) ? -1 : 1) * parseFloat(e.substr(2)) + s),
                            u && 1 === s && "hidden" === K(t, "visibility", o) && 0 !== e && (s = 0),
                            j ? i = new gt(h,"opacity",s,e - s,i) : (i = new gt(h,"opacity",100 * s,100 * (e - s),i),
                            i.xn1 = u ? 1 : 0,
                            h.zoom = 1,
                            i.type = 2,
                            i.b = "alpha(opacity=" + i.s + ")",
                            i.e = "alpha(opacity=" + (i.s + i.c) + ")",
                            i.data = t,
                            i.plugin = a,
                            i.setRatio = Ht),
                            u && (i = new gt(h,"visibility",0,0,i,(-1),null ,(!1),0,0 !== s ? "inherit" : "hidden",0 === e ? "hidden" : "inherit"),
                            i.xs0 = "inherit",
                            r._overwriteProps.push(i.n),
                            r._overwriteProps.push(n)),
                            i
                        }
                    });
                    var jt = function(t, e) {
                        e && (t.removeProperty ? ("ms" !== e.substr(0, 2) && "webkit" !== e.substr(0, 6) || (e = "-" + e),
                        t.removeProperty(e.replace(M, "-$1").toLowerCase())) : t.removeAttribute(e))
                    }
                      , Wt = function(t) {
                        if (this.t._gsClassPT = this,
                        1 === t || 0 === t) {
                            this.t.setAttribute("class", 0 === t ? this.b : this.e);
                            for (var e = this.data, n = this.t.style; e; )
                                e.v ? n[e.p] = e.v : jt(n, e.p),
                                e = e._next;
                            1 === t && this.t._gsClassPT === this && (this.t._gsClassPT = null )
                        } else
                            this.t.getAttribute("class") !== this.e && this.t.setAttribute("class", this.e)
                    }
                    ;
                    wt("className", {
                        parser: function(t, e, n, i, a, s, h) {
                            var u, l, c, p, f, d = t.getAttribute("class") || "", m = t.style.cssText;
                            if (a = i._classNamePT = new gt(t,n,0,0,a,2),
                            a.setRatio = Wt,
                            a.pr = -11,
                            r = !0,
                            a.b = d,
                            l = tt(t, o),
                            c = t._gsClassPT) {
                                for (p = {},
                                f = c.data; f; )
                                    p[f.p] = 1,
                                    f = f._next;
                                c.setRatio(1)
                            }
                            return t._gsClassPT = a,
                            a.e = "=" !== e.charAt(1) ? e : d.replace(new RegExp("(?:\\s|^)" + e.substr(2) + "(?![\\w-])"), "") + ("+" === e.charAt(0) ? " " + e.substr(2) : ""),
                            t.setAttribute("class", a.e),
                            u = et(t, l, tt(t), h, p),
                            t.setAttribute("class", d),
                            a.data = u.firstMPT,
                            t.style.cssText = m,
                            a = a.xfirst = i.parse(t, u.difs, a, s)
                        }
                    });
                    var Xt = function(t) {
                        if ((1 === t || 0 === t) && this.data._totalTime === this.data._totalDuration && "isFromStart" !== this.data.data) {
                            var e, n, r, i, o, a = this.t.style, s = u.transform.parse;
                            if ("all" === this.e)
                                a.cssText = "",
                                i = !0;
                            else
                                for (e = this.e.split(" ").join("").split(","),
                                r = e.length; --r > -1; )
                                    n = e[r],
                                    u[n] && (u[n].parse === s ? i = !0 : n = "transformOrigin" === n ? At : u[n].p),
                                    jt(a, n);
                            i && (jt(a, Mt),
                            o = this.t._gsTransform,
                            o && (o.svg && (this.t.removeAttribute("data-svg-origin"),
                            this.t.removeAttribute("transform")),
                            delete this.t._gsTransform))
                        }
                    }
                    ;
                    for (wt("clearProps", {
                        parser: function(t, e, n, i, o) {
                            return o = new gt(t,n,0,0,o,2),
                            o.setRatio = Xt,
                            o.e = e,
                            o.pr = -10,
                            o.data = i._tween,
                            r = !0,
                            o
                        }
                    }),
                    l = "bezier,throwProps,physicsProps,physics2D".split(","),
                    xt = l.length; xt--; )
                        Et(l[xt]);
                    l = s.prototype,
                    l._firstPT = l._lastParsedTransform = l._transform = null ,
                    l._onInitTween = function(t, e, n) {
                        if (!t.nodeType)
                            return !1;
                        this._target = t,
                        this._tween = n,
                        this._vars = e,
                        c = e.autoRound,
                        r = !1,
                        i = e.suffixMap || s.suffixMap,
                        o = Q(t, ""),
                        a = this._overwriteProps;
                        var h, l, d, v, g, y, _, x, b, w = t.style;
                        if (p && "" === w.zIndex && (h = K(t, "zIndex", o),
                        "auto" !== h && "" !== h || this._addLazySet(w, "zIndex", 0)),
                        "string" == typeof e && (v = w.cssText,
                        h = tt(t, o),
                        w.cssText = v + ";" + e,
                        h = et(t, h, tt(t)).difs,
                        !j && E.test(e) && (h.opacity = parseFloat(RegExp.$1)),
                        e = h,
                        w.cssText = v),
                        e.className ? this._firstPT = l = u.className.parse(t, e.className, "className", this, null , null , e) : this._firstPT = l = this.parse(t, e, null ),
                        this._transformType) {
                            for (b = 3 === this._transformType,
                            Mt ? f && (p = !0,
                            "" === w.zIndex && (_ = K(t, "zIndex", o),
                            "auto" !== _ && "" !== _ || this._addLazySet(w, "zIndex", 0)),
                            m && this._addLazySet(w, "WebkitBackfaceVisibility", this._vars.WebkitBackfaceVisibility || (b ? "visible" : "hidden"))) : w.zoom = 1,
                            d = l; d && d._next; )
                                d = d._next;
                            x = new gt(t,"transform",0,0,null ,2),
                            this._linkCSSP(x, null , d),
                            x.setRatio = Mt ? zt : Vt,
                            x.data = this._transform || Gt(t, o, !0),
                            x.tween = n,
                            x.pr = -1,
                            a.pop()
                        }
                        if (r) {
                            for (; l; ) {
                                for (y = l._next,
                                d = v; d && d.pr > l.pr; )
                                    d = d._next;
                                (l._prev = d ? d._prev : g) ? l._prev._next = l : v = l,
                                (l._next = d) ? d._prev = l : g = l,
                                l = y
                            }
                            this._firstPT = v
                        }
                        return !0
                    }
                    ,
                    l.parse = function(t, e, n, r) {
                        var a, s, h, l, p, f, d, m, v, g, y = t.style;
                        for (a in e)
                            f = e[a],
                            s = u[a],
                            s ? n = s.parse(t, f, a, this, n, r, e) : (p = K(t, a, o) + "",
                            v = "string" == typeof f,
                            "color" === a || "fill" === a || "stroke" === a || a.indexOf("Color") !== -1 || v && T.test(f) ? (v || (f = ct(f),
                            f = (f.length > 3 ? "rgba(" : "rgb(") + f.join(",") + ")"),
                            n = _t(y, a, p, f, !0, "transparent", n, 0, r)) : v && I.test(f) ? n = _t(y, a, p, f, !0, null , n, 0, r) : (h = parseFloat(p),
                            d = h || 0 === h ? p.substr((h + "").length) : "",
                            "" !== p && "auto" !== p || ("width" === a || "height" === a ? (h = it(t, a, o),
                            d = "px") : "left" === a || "top" === a ? (h = $(t, a, o),
                            d = "px") : (h = "opacity" !== a ? 0 : 1,
                            d = "")),
                            g = v && "=" === f.charAt(1),
                            g ? (l = parseInt(f.charAt(0) + "1", 10),
                            f = f.substr(2),
                            l *= parseFloat(f),
                            m = f.replace(b, "")) : (l = parseFloat(f),
                            m = v ? f.replace(b, "") : ""),
                            "" === m && (m = a in i ? i[a] : d),
                            f = l || 0 === l ? (g ? l + h : l) + m : e[a],
                            d !== m && "" !== m && (l || 0 === l) && h && (h = J(t, a, h, d),
                            "%" === m ? (h /= J(t, a, 100, "%") / 100,
                            e.strictUnits !== !0 && (p = h + "%")) : "em" === m || "rem" === m || "vw" === m || "vh" === m ? h /= J(t, a, 1, m) : "px" !== m && (l = J(t, a, l, m),
                            m = "px"),
                            g && (l || 0 === l) && (f = l + h + m)),
                            g && (l += h),
                            !h && 0 !== h || !l && 0 !== l ? void 0 !== y[a] && (f || f + "" != "NaN" && null != f) ? (n = new gt(y,a,l || h || 0,0,n,(-1),a,(!1),0,p,f),
                            n.xs0 = "none" !== f || "display" !== a && a.indexOf("Style") === -1 ? f : p) : X("invalid " + a + " tween value: " + e[a]) : (n = new gt(y,a,h,l - h,n,0,a,c !== !1 && ("px" === m || "zIndex" === a),0,p,f),
                            n.xs0 = m))),
                            r && n && !n.plugin && (n.plugin = r);
                        return n
                    }
                    ,
                    l.setRatio = function(t) {
                        var e, n, r, i = this._firstPT, o = 1e-6;
                        if (1 !== t || this._tween._time !== this._tween._duration && 0 !== this._tween._time)
                            if (t || this._tween._time !== this._tween._duration && 0 !== this._tween._time || this._tween._rawPrevTime === -1e-6)
                                for (; i; ) {
                                    if (e = i.c * t + i.s,
                                    i.r ? e = Math.round(e) : e < o && e > -o && (e = 0),
                                    i.type)
                                        if (1 === i.type)
                                            if (r = i.l,
                                            2 === r)
                                                i.t[i.p] = i.xs0 + e + i.xs1 + i.xn1 + i.xs2;
                                            else if (3 === r)
                                                i.t[i.p] = i.xs0 + e + i.xs1 + i.xn1 + i.xs2 + i.xn2 + i.xs3;
                                            else if (4 === r)
                                                i.t[i.p] = i.xs0 + e + i.xs1 + i.xn1 + i.xs2 + i.xn2 + i.xs3 + i.xn3 + i.xs4;
                                            else if (5 === r)
                                                i.t[i.p] = i.xs0 + e + i.xs1 + i.xn1 + i.xs2 + i.xn2 + i.xs3 + i.xn3 + i.xs4 + i.xn4 + i.xs5;
                                            else {
                                                for (n = i.xs0 + e + i.xs1,
                                                r = 1; r < i.l; r++)
                                                    n += i["xn" + r] + i["xs" + (r + 1)];
                                                i.t[i.p] = n
                                            }
                                        else
                                            i.type === -1 ? i.t[i.p] = i.xs0 : i.setRatio && i.setRatio(t);
                                    else
                                        i.t[i.p] = e + i.xs0;
                                    i = i._next
                                }
                            else
                                for (; i; )
                                    2 !== i.type ? i.t[i.p] = i.b : i.setRatio(t),
                                    i = i._next;
                        else
                            for (; i; ) {
                                if (2 !== i.type)
                                    if (i.r && i.type !== -1)
                                        if (e = Math.round(i.s + i.c),
                                        i.type) {
                                            if (1 === i.type) {
                                                for (r = i.l,
                                                n = i.xs0 + e + i.xs1,
                                                r = 1; r < i.l; r++)
                                                    n += i["xn" + r] + i["xs" + (r + 1)];
                                                i.t[i.p] = n
                                            }
                                        } else
                                            i.t[i.p] = e + i.xs0;
                                    else
                                        i.t[i.p] = i.e;
                                else
                                    i.setRatio(t);
                                i = i._next
                            }
                    }
                    ,
                    l._enableTransforms = function(t) {
                        this._transform = this._transform || Gt(this._target, o, !0),
                        this._transformType = this._transform.svg && St || !t && 3 !== this._transformType ? 2 : 3
                    }
                    ;
                    var Yt = function(t) {
                        this.t[this.p] = this.e,
                        this.data._linkCSSP(this, this._next, null , !0)
                    }
                    ;
                    l._addLazySet = function(t, e, n) {
                        var r = this._firstPT = new gt(t,e,0,0,this._firstPT,2);
                        r.e = n,
                        r.setRatio = Yt,
                        r.data = this
                    }
                    ,
                    l._linkCSSP = function(t, e, n, r) {
                        return t && (e && (e._prev = t),
                        t._next && (t._next._prev = t._prev),
                        t._prev ? t._prev._next = t._next : this._firstPT === t && (this._firstPT = t._next,
                        r = !0),
                        n ? n._next = t : r || null !== this._firstPT || (this._firstPT = t),
                        t._next = e,
                        t._prev = n),
                        t
                    }
                    ,
                    l._kill = function(e) {
                        var n, r, i, o = e;
                        if (e.autoAlpha || e.alpha) {
                            o = {};
                            for (r in e)
                                o[r] = e[r];
                            o.opacity = 1,
                            o.autoAlpha && (o.visibility = 1)
                        }
                        return e.className && (n = this._classNamePT) && (i = n.xfirst,
                        i && i._prev ? this._linkCSSP(i._prev, n._next, i._prev._prev) : i === this._firstPT && (this._firstPT = n._next),
                        n._next && this._linkCSSP(n._next, n._next._next, i._prev),
                        this._classNamePT = null ),
                        t.prototype._kill.call(this, o)
                    }
                    ;
                    var qt = function(t, e, n) {
                        var r, i, o, a;
                        if (t.slice)
                            for (i = t.length; --i > -1; )
                                qt(t[i], e, n);
                        else
                            for (r = t.childNodes,
                            i = r.length; --i > -1; )
                                o = r[i],
                                a = o.type,
                                o.style && (e.push(tt(o)),
                                n && n.push(o)),
                                1 !== a && 9 !== a && 11 !== a || !o.childNodes.length || qt(o, e, n)
                    }
                    ;
                    return s.cascadeTo = function(t, n, r) {
                        var i, o, a, s, h = e.to(t, n, r), u = [h], l = [], c = [], p = [], f = e._internals.reservedProps;
                        for (t = h._targets || h.target,
                        qt(t, l, p),
                        h.render(n, !0, !0),
                        qt(t, c),
                        h.render(0, !0, !0),
                        h._enabled(!0),
                        i = p.length; --i > -1; )
                            if (o = et(p[i], l[i], c[i]),
                            o.firstMPT) {
                                o = o.difs;
                                for (a in r)
                                    f[a] && (o[a] = r[a]);
                                s = {};
                                for (a in o)
                                    s[a] = l[i][a];
                                u.push(e.fromTo(p[i], n, s, o))
                            }
                        return u
                    }
                    ,
                    t.activate([s]),
                    s
                }, !0),
                function() {
                    var t = n._gsDefine.plugin({
                        propName: "roundProps",
                        version: "1.5",
                        priority: -1,
                        API: 2,
                        init: function(t, e, n) {
                            return this._tween = n,
                            !0
                        }
                    })
                      , e = function(t) {
                        for (; t; )
                            t.f || t.blob || (t.r = 1),
                            t = t._next
                    }
                      , r = t.prototype;
                    r._onInitAllProps = function() {
                        for (var t, n, r, i = this._tween, o = i.vars.roundProps.join ? i.vars.roundProps : i.vars.roundProps.split(","), a = o.length, s = {}, h = i._propLookup.roundProps; --a > -1; )
                            s[o[a]] = 1;
                        for (a = o.length; --a > -1; )
                            for (t = o[a],
                            n = i._firstPT; n; )
                                r = n._next,
                                n.pg ? n.t._roundProps(s, !0) : n.n === t && (2 === n.f && n.t ? e(n.t._firstPT) : (this._add(n.t, t, n.s, n.c),
                                r && (r._prev = n._prev),
                                n._prev ? n._prev._next = r : i._firstPT === n && (i._firstPT = r),
                                n._next = n._prev = null ,
                                i._propLookup[t] = h)),
                                n = r;
                        return !1
                    }
                    ,
                    r._add = function(t, e, n, r) {
                        this._addTween(t, e, n, n + r, e, !0),
                        this._overwriteProps.push(e)
                    }
                }(),
                function() {
                    n._gsDefine.plugin({
                        propName: "attr",
                        API: 2,
                        version: "0.5.0",
                        init: function(t, e, n) {
                            var r;
                            if ("function" != typeof t.setAttribute)
                                return !1;
                            for (r in e)
                                this._addTween(t, "setAttribute", t.getAttribute(r) + "", e[r] + "", r, !1, r),
                                this._overwriteProps.push(r);
                            return !0
                        }
                    })
                }(),
                n._gsDefine.plugin({
                    propName: "directionalRotation",
                    version: "0.2.1",
                    API: 2,
                    init: function(t, e, n) {
                        "object" != typeof e && (e = {
                            rotation: e
                        }),
                        this.finals = {};
                        var r, i, o, a, s, h, u = e.useRadians === !0 ? 2 * Math.PI : 360, l = 1e-6;
                        for (r in e)
                            "useRadians" !== r && (h = (e[r] + "").split("_"),
                            i = h[0],
                            o = parseFloat("function" != typeof t[r] ? t[r] : t[r.indexOf("set") || "function" != typeof t["get" + r.substr(3)] ? r : "get" + r.substr(3)]()),
                            a = this.finals[r] = "string" == typeof i && "=" === i.charAt(1) ? o + parseInt(i.charAt(0) + "1", 10) * Number(i.substr(2)) : Number(i) || 0,
                            s = a - o,
                            h.length && (i = h.join("_"),
                            i.indexOf("short") !== -1 && (s %= u,
                            s !== s % (u / 2) && (s = s < 0 ? s + u : s - u)),
                            i.indexOf("_cw") !== -1 && s < 0 ? s = (s + 9999999999 * u) % u - (s / u | 0) * u : i.indexOf("ccw") !== -1 && s > 0 && (s = (s - 9999999999 * u) % u - (s / u | 0) * u)),
                            (s > l || s < -l) && (this._addTween(t, r, o, o + s, r),
                            this._overwriteProps.push(r)));
                        return !0
                    },
                    set: function(t) {
                        var e;
                        if (1 !== t)
                            this._super.setRatio.call(this, t);
                        else
                            for (e = this._firstPT; e; )
                                e.f ? e.t[e.p](this.finals[e.p]) : e.t[e.p] = this.finals[e.p],
                                e = e._next
                    }
                })._autoCSS = !0,
                n._gsDefine("easing.Back", ["easing.Ease"], function(t) {
                    var e, r, i, o = n.GreenSockGlobals || n, a = o.com.greensock, s = 2 * Math.PI, h = Math.PI / 2, u = a._class, l = function(e, n) {
                        var r = u("easing." + e, function() {}, !0)
                          , i = r.prototype = new t;
                        return i.constructor = r,
                        i.getRatio = n,
                        r
                    }
                    , c = t.register || function() {}
                    , p = function(t, e, n, r, i) {
                        var o = u("easing." + t, {
                            easeOut: new e,
                            easeIn: new n,
                            easeInOut: new r
                        }, !0);
                        return c(o, t),
                        o
                    }
                    , f = function(t, e, n) {
                        this.t = t,
                        this.v = e,
                        n && (this.next = n,
                        n.prev = this,
                        this.c = n.v - e,
                        this.gap = n.t - t)
                    }
                    , d = function(e, n) {
                        var r = u("easing." + e, function(t) {
                            this._p1 = t || 0 === t ? t : 1.70158,
                            this._p2 = 1.525 * this._p1
                        }, !0)
                          , i = r.prototype = new t;
                        return i.constructor = r,
                        i.getRatio = n,
                        i.config = function(t) {
                            return new r(t)
                        }
                        ,
                        r
                    }
                    , m = p("Back", d("BackOut", function(t) {
                        return (t -= 1) * t * ((this._p1 + 1) * t + this._p1) + 1
                    }), d("BackIn", function(t) {
                        return t * t * ((this._p1 + 1) * t - this._p1)
                    }), d("BackInOut", function(t) {
                        return (t *= 2) < 1 ? .5 * t * t * ((this._p2 + 1) * t - this._p2) : .5 * ((t -= 2) * t * ((this._p2 + 1) * t + this._p2) + 2)
                    })), v = u("easing.SlowMo", function(t, e, n) {
                        e = e || 0 === e ? e : .7,
                        null == t ? t = .7 : t > 1 && (t = 1),
                        this._p = 1 !== t ? e : 0,
                        this._p1 = (1 - t) / 2,
                        this._p2 = t,
                        this._p3 = this._p1 + this._p2,
                        this._calcEnd = n === !0
                    }, !0), g = v.prototype = new t;
                    return g.constructor = v,
                    g.getRatio = function(t) {
                        var e = t + (.5 - t) * this._p;
                        return t < this._p1 ? this._calcEnd ? 1 - (t = 1 - t / this._p1) * t : e - (t = 1 - t / this._p1) * t * t * t * e : t > this._p3 ? this._calcEnd ? 1 - (t = (t - this._p3) / this._p1) * t : e + (t - e) * (t = (t - this._p3) / this._p1) * t * t * t : this._calcEnd ? 1 : e
                    }
                    ,
                    v.ease = new v(.7,.7),
                    g.config = v.config = function(t, e, n) {
                        return new v(t,e,n)
                    }
                    ,
                    e = u("easing.SteppedEase", function(t) {
                        t = t || 1,
                        this._p1 = 1 / t,
                        this._p2 = t + 1
                    }, !0),
                    g = e.prototype = new t,
                    g.constructor = e,
                    g.getRatio = function(t) {
                        return t < 0 ? t = 0 : t >= 1 && (t = .999999999),
                        (this._p2 * t >> 0) * this._p1
                    }
                    ,
                    g.config = e.config = function(t) {
                        return new e(t)
                    }
                    ,
                    r = u("easing.RoughEase", function(e) {
                        e = e || {};
                        for (var n, r, i, o, a, s, h = e.taper || "none", u = [], l = 0, c = 0 | (e.points || 20), p = c, d = e.randomize !== !1, m = e.clamp === !0, v = e.template instanceof t ? e.template : null , g = "number" == typeof e.strength ? .4 * e.strength : .4; --p > -1; )
                            n = d ? Math.random() : 1 / c * p,
                            r = v ? v.getRatio(n) : n,
                            "none" === h ? i = g : "out" === h ? (o = 1 - n,
                            i = o * o * g) : "in" === h ? i = n * n * g : n < .5 ? (o = 2 * n,
                            i = o * o * .5 * g) : (o = 2 * (1 - n),
                            i = o * o * .5 * g),
                            d ? r += Math.random() * i - .5 * i : p % 2 ? r += .5 * i : r -= .5 * i,
                            m && (r > 1 ? r = 1 : r < 0 && (r = 0)),
                            u[l++] = {
                                x: n,
                                y: r
                            };
                        for (u.sort(function(t, e) {
                            return t.x - e.x
                        }),
                        s = new f(1,1,null ),
                        p = c; --p > -1; )
                            a = u[p],
                            s = new f(a.x,a.y,s);
                        this._prev = new f(0,0,0 !== s.t ? s : s.next)
                    }, !0),
                    g = r.prototype = new t,
                    g.constructor = r,
                    g.getRatio = function(t) {
                        var e = this._prev;
                        if (t > e.t) {
                            for (; e.next && t >= e.t; )
                                e = e.next;
                            e = e.prev
                        } else
                            for (; e.prev && t <= e.t; )
                                e = e.prev;
                        return this._prev = e,
                        e.v + (t - e.t) / e.gap * e.c
                    }
                    ,
                    g.config = function(t) {
                        return new r(t)
                    }
                    ,
                    r.ease = new r,
                    p("Bounce", l("BounceOut", function(t) {
                        return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375
                    }), l("BounceIn", function(t) {
                        return (t = 1 - t) < 1 / 2.75 ? 1 - 7.5625 * t * t : t < 2 / 2.75 ? 1 - (7.5625 * (t -= 1.5 / 2.75) * t + .75) : t < 2.5 / 2.75 ? 1 - (7.5625 * (t -= 2.25 / 2.75) * t + .9375) : 1 - (7.5625 * (t -= 2.625 / 2.75) * t + .984375)
                    }), l("BounceInOut", function(t) {
                        var e = t < .5;
                        return t = e ? 1 - 2 * t : 2 * t - 1,
                        t = t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375,
                        e ? .5 * (1 - t) : .5 * t + .5
                    })),
                    p("Circ", l("CircOut", function(t) {
                        return Math.sqrt(1 - (t -= 1) * t)
                    }), l("CircIn", function(t) {
                        return -(Math.sqrt(1 - t * t) - 1)
                    }), l("CircInOut", function(t) {
                        return (t *= 2) < 1 ? -.5 * (Math.sqrt(1 - t * t) - 1) : .5 * (Math.sqrt(1 - (t -= 2) * t) + 1);
                    })),
                    i = function(e, n, r) {
                        var i = u("easing." + e, function(t, e) {
                            this._p1 = t >= 1 ? t : 1,
                            this._p2 = (e || r) / (t < 1 ? t : 1),
                            this._p3 = this._p2 / s * (Math.asin(1 / this._p1) || 0),
                            this._p2 = s / this._p2
                        }, !0)
                          , o = i.prototype = new t;
                        return o.constructor = i,
                        o.getRatio = n,
                        o.config = function(t, e) {
                            return new i(t,e)
                        }
                        ,
                        i
                    }
                    ,
                    p("Elastic", i("ElasticOut", function(t) {
                        return this._p1 * Math.pow(2, -10 * t) * Math.sin((t - this._p3) * this._p2) + 1
                    }, .3), i("ElasticIn", function(t) {
                        return -(this._p1 * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - this._p3) * this._p2))
                    }, .3), i("ElasticInOut", function(t) {
                        return (t *= 2) < 1 ? -.5 * (this._p1 * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - this._p3) * this._p2)) : this._p1 * Math.pow(2, -10 * (t -= 1)) * Math.sin((t - this._p3) * this._p2) * .5 + 1
                    }, .45)),
                    p("Expo", l("ExpoOut", function(t) {
                        return 1 - Math.pow(2, -10 * t)
                    }), l("ExpoIn", function(t) {
                        return Math.pow(2, 10 * (t - 1)) - .001
                    }), l("ExpoInOut", function(t) {
                        return (t *= 2) < 1 ? .5 * Math.pow(2, 10 * (t - 1)) : .5 * (2 - Math.pow(2, -10 * (t - 1)))
                    })),
                    p("Sine", l("SineOut", function(t) {
                        return Math.sin(t * h)
                    }), l("SineIn", function(t) {
                        return -Math.cos(t * h) + 1
                    }), l("SineInOut", function(t) {
                        return -.5 * (Math.cos(Math.PI * t) - 1)
                    })),
                    u("easing.EaseLookup", {
                        find: function(e) {
                            return t.map[e]
                        }
                    }, !0),
                    c(o.SlowMo, "SlowMo", "ease,"),
                    c(r, "RoughEase", "ease,"),
                    c(e, "SteppedEase", "ease,"),
                    m
                }, !0)
            }),
            n._gsDefine && n._gsQueue.pop()(),
            function(t, n) {
                "use strict";
                var r = {}
                  , i = t.GreenSockGlobals = t.GreenSockGlobals || t;
                if (!i.TweenLite) {
                    var o, a, s, h, u, l = function(t) {
                        var e, n = t.split("."), r = i;
                        for (e = 0; e < n.length; e++)
                            r[n[e]] = r = r[n[e]] || {};
                        return r
                    }
                    , c = l("com.greensock"), p = 1e-10, f = function(t) {
                        var e, n = [], r = t.length;
                        for (e = 0; e !== r; n.push(t[e++]))
                            ;
                        return n
                    }
                    , d = function() {}
                    , m = function() {
                        var t = Object.prototype.toString
                          , e = t.call([]);
                        return function(n) {
                            return null != n && (n instanceof Array || "object" == typeof n && !!n.push && t.call(n) === e)
                        }
                    }(), v = {}, g = function(o, a, s, h) {
                        this.sc = v[o] ? v[o].sc : [],
                        v[o] = this,
                        this.gsClass = null ,
                        this.func = s;
                        var u = [];
                        this.check = function(c) {
                            for (var p, f, d, m, y, _ = a.length, x = _; --_ > -1; )
                                (p = v[a[_]] || new g(a[_],[])).gsClass ? (u[_] = p.gsClass,
                                x--) : c && p.sc.push(this);
                            if (0 === x && s) {
                                if (f = ("com.greensock." + o).split("."),
                                d = f.pop(),
                                m = l(f.join("."))[d] = this.gsClass = s.apply(s, u),
                                h)
                                    if (i[d] = m,
                                    y = "undefined" != typeof e && e.exports,
                                    !y && "function" == typeof define && define.amd)
                                        define((t.GreenSockAMDPath ? t.GreenSockAMDPath + "/" : "") + o.split(".").pop(), [], function() {
                                            return m
                                        });
                                    else if (y)
                                        if (o === n) {
                                            e.exports = r[n] = m;
                                            for (_ in r)
                                                m[_] = r[_]
                                        } else
                                            r[n] && (r[n][d] = m);
                                for (_ = 0; _ < this.sc.length; _++)
                                    this.sc[_].check()
                            }
                        }
                        ,
                        this.check(!0)
                    }
                    , y = t._gsDefine = function(t, e, n, r) {
                        return new g(t,e,n,r)
                    }
                    , _ = c._class = function(t, e, n) {
                        return e = e || function() {}
                        ,
                        y(t, [], function() {
                            return e
                        }, n),
                        e
                    }
                    ;
                    y.globals = i;
                    var x = [0, 0, 1, 1]
                      , b = []
                      , w = _("easing.Ease", function(t, e, n, r) {
                        this._func = t,
                        this._type = n || 0,
                        this._power = r || 0,
                        this._params = e ? x.concat(e) : x
                    }, !0)
                      , E = w.map = {}
                      , S = w.register = function(t, e, n, r) {
                        for (var i, o, a, s, h = e.split(","), u = h.length, l = (n || "easeIn,easeOut,easeInOut").split(","); --u > -1; )
                            for (o = h[u],
                            i = r ? _("easing." + o, null , !0) : c.easing[o] || {},
                            a = l.length; --a > -1; )
                                s = l[a],
                                E[o + "." + s] = E[s + o] = i[s] = t.getRatio ? t : t[s] || new t
                    }
                    ;
                    for (s = w.prototype,
                    s._calcEnd = !1,
                    s.getRatio = function(t) {
                        if (this._func)
                            return this._params[0] = t,
                            this._func.apply(null , this._params);
                        var e = this._type
                          , n = this._power
                          , r = 1 === e ? 1 - t : 2 === e ? t : t < .5 ? 2 * t : 2 * (1 - t);
                        return 1 === n ? r *= r : 2 === n ? r *= r * r : 3 === n ? r *= r * r * r : 4 === n && (r *= r * r * r * r),
                        1 === e ? 1 - r : 2 === e ? r : t < .5 ? r / 2 : 1 - r / 2
                    }
                    ,
                    o = ["Linear", "Quad", "Cubic", "Quart", "Quint,Strong"],
                    a = o.length; --a > -1; )
                        s = o[a] + ",Power" + a,
                        S(new w(null ,null ,1,a), s, "easeOut", !0),
                        S(new w(null ,null ,2,a), s, "easeIn" + (0 === a ? ",easeNone" : "")),
                        S(new w(null ,null ,3,a), s, "easeInOut");
                    E.linear = c.easing.Linear.easeIn,
                    E.swing = c.easing.Quad.easeInOut;
                    var T = _("events.EventDispatcher", function(t) {
                        this._listeners = {},
                        this._eventTarget = t || this
                    });
                    s = T.prototype,
                    s.addEventListener = function(t, e, n, r, i) {
                        i = i || 0;
                        var o, a, s = this._listeners[t], l = 0;
                        for (this !== h || u || h.wake(),
                        null == s && (this._listeners[t] = s = []),
                        a = s.length; --a > -1; )
                            o = s[a],
                            o.c === e && o.s === n ? s.splice(a, 1) : 0 === l && o.pr < i && (l = a + 1);
                        s.splice(l, 0, {
                            c: e,
                            s: n,
                            up: r,
                            pr: i
                        })
                    }
                    ,
                    s.removeEventListener = function(t, e) {
                        var n, r = this._listeners[t];
                        if (r)
                            for (n = r.length; --n > -1; )
                                if (r[n].c === e)
                                    return void r.splice(n, 1)
                    }
                    ,
                    s.dispatchEvent = function(t) {
                        var e, n, r, i = this._listeners[t];
                        if (i)
                            for (e = i.length,
                            n = this._eventTarget; --e > -1; )
                                r = i[e],
                                r && (r.up ? r.c.call(r.s || n, {
                                    type: t,
                                    target: n
                                }) : r.c.call(r.s || n))
                    }
                    ;
                    var M = t.requestAnimationFrame
                      , C = t.cancelAnimationFrame
                      , A = Date.now || function() {
                        return (new Date).getTime()
                    }
                      , P = A();
                    for (o = ["ms", "moz", "webkit", "o"],
                    a = o.length; --a > -1 && !M; )
                        M = t[o[a] + "RequestAnimationFrame"],
                        C = t[o[a] + "CancelAnimationFrame"] || t[o[a] + "CancelRequestAnimationFrame"];
                    _("Ticker", function(t, e) {
                        var n, r, i, o, a, s = this, l = A(), c = !(e === !1 || !M) && "auto", f = 500, m = 33, v = "tick", g = function(t) {
                            var e, h, u = A() - P;
                            u > f && (l += u - m),
                            P += u,
                            s.time = (P - l) / 1e3,
                            e = s.time - a,
                            (!n || e > 0 || t === !0) && (s.frame++,
                            a += e + (e >= o ? .004 : o - e),
                            h = !0),
                            t !== !0 && (i = r(g)),
                            h && s.dispatchEvent(v)
                        }
                        ;
                        T.call(s),
                        s.time = s.frame = 0,
                        s.tick = function() {
                            g(!0)
                        }
                        ,
                        s.lagSmoothing = function(t, e) {
                            f = t || 1 / p,
                            m = Math.min(e, f, 0)
                        }
                        ,
                        s.sleep = function() {
                            null != i && (c && C ? C(i) : clearTimeout(i),
                            r = d,
                            i = null ,
                            s === h && (u = !1))
                        }
                        ,
                        s.wake = function(t) {
                            null !== i ? s.sleep() : t ? l += -P + (P = A()) : s.frame > 10 && (P = A() - f + 5),
                            r = 0 === n ? d : c && M ? M : function(t) {
                                return setTimeout(t, 1e3 * (a - s.time) + 1 | 0)
                            }
                            ,
                            s === h && (u = !0),
                            g(2)
                        }
                        ,
                        s.fps = function(t) {
                            return arguments.length ? (n = t,
                            o = 1 / (n || 60),
                            a = this.time + o,
                            void s.wake()) : n
                        }
                        ,
                        s.useRAF = function(t) {
                            return arguments.length ? (s.sleep(),
                            c = t,
                            void s.fps(n)) : c
                        }
                        ,
                        s.fps(t),
                        setTimeout(function() {
                            "auto" === c && s.frame < 5 && "hidden" !== document.visibilityState && s.useRAF(!1)
                        }, 1500)
                    }),
                    s = c.Ticker.prototype = new c.events.EventDispatcher,
                    s.constructor = c.Ticker;
                    var L = _("core.Animation", function(t, e) {
                        if (this.vars = e = e || {},
                        this._duration = this._totalDuration = t || 0,
                        this._delay = Number(e.delay) || 0,
                        this._timeScale = 1,
                        this._active = e.immediateRender === !0,
                        this.data = e.data,
                        this._reversed = e.reversed === !0,
                        Z) {
                            u || h.wake();
                            var n = this.vars.useFrames ? q : Z;
                            n.add(this, n._time),
                            this.vars.paused && this.paused(!0)
                        }
                    });
                    h = L.ticker = new c.Ticker,
                    s = L.prototype,
                    s._dirty = s._gc = s._initted = s._paused = !1,
                    s._totalTime = s._time = 0,
                    s._rawPrevTime = -1,
                    s._next = s._last = s._onUpdate = s._timeline = s.timeline = null ,
                    s._paused = !1;
                    var R = function() {
                        u && A() - P > 2e3 && h.wake(),
                        setTimeout(R, 2e3)
                    }
                    ;
                    R(),
                    s.play = function(t, e) {
                        return null != t && this.seek(t, e),
                        this.reversed(!1).paused(!1)
                    }
                    ,
                    s.pause = function(t, e) {
                        return null != t && this.seek(t, e),
                        this.paused(!0)
                    }
                    ,
                    s.resume = function(t, e) {
                        return null != t && this.seek(t, e),
                        this.paused(!1)
                    }
                    ,
                    s.seek = function(t, e) {
                        return this.totalTime(Number(t), e !== !1)
                    }
                    ,
                    s.restart = function(t, e) {
                        return this.reversed(!1).paused(!1).totalTime(t ? -this._delay : 0, e !== !1, !0)
                    }
                    ,
                    s.reverse = function(t, e) {
                        return null != t && this.seek(t || this.totalDuration(), e),
                        this.reversed(!0).paused(!1)
                    }
                    ,
                    s.render = function(t, e, n) {}
                    ,
                    s.invalidate = function() {
                        return this._time = this._totalTime = 0,
                        this._initted = this._gc = !1,
                        this._rawPrevTime = -1,
                        !this._gc && this.timeline || this._enabled(!0),
                        this
                    }
                    ,
                    s.isActive = function() {
                        var t, e = this._timeline, n = this._startTime;
                        return !e || !this._gc && !this._paused && e.isActive() && (t = e.rawTime()) >= n && t < n + this.totalDuration() / this._timeScale
                    }
                    ,
                    s._enabled = function(t, e) {
                        return u || h.wake(),
                        this._gc = !t,
                        this._active = this.isActive(),
                        e !== !0 && (t && !this.timeline ? this._timeline.add(this, this._startTime - this._delay) : !t && this.timeline && this._timeline._remove(this, !0)),
                        !1
                    }
                    ,
                    s._kill = function(t, e) {
                        return this._enabled(!1, !1)
                    }
                    ,
                    s.kill = function(t, e) {
                        return this._kill(t, e),
                        this
                    }
                    ,
                    s._uncache = function(t) {
                        for (var e = t ? this : this.timeline; e; )
                            e._dirty = !0,
                            e = e.timeline;
                        return this
                    }
                    ,
                    s._swapSelfInParams = function(t) {
                        for (var e = t.length, n = t.concat(); --e > -1; )
                            "{self}" === t[e] && (n[e] = this);
                        return n
                    }
                    ,
                    s._callback = function(t) {
                        var e = this.vars;
                        e[t].apply(e[t + "Scope"] || e.callbackScope || this, e[t + "Params"] || b)
                    }
                    ,
                    s.eventCallback = function(t, e, n, r) {
                        if ("on" === (t || "").substr(0, 2)) {
                            var i = this.vars;
                            if (1 === arguments.length)
                                return i[t];
                            null == e ? delete i[t] : (i[t] = e,
                            i[t + "Params"] = m(n) && n.join("").indexOf("{self}") !== -1 ? this._swapSelfInParams(n) : n,
                            i[t + "Scope"] = r),
                            "onUpdate" === t && (this._onUpdate = e)
                        }
                        return this
                    }
                    ,
                    s.delay = function(t) {
                        return arguments.length ? (this._timeline.smoothChildTiming && this.startTime(this._startTime + t - this._delay),
                        this._delay = t,
                        this) : this._delay
                    }
                    ,
                    s.duration = function(t) {
                        return arguments.length ? (this._duration = this._totalDuration = t,
                        this._uncache(!0),
                        this._timeline.smoothChildTiming && this._time > 0 && this._time < this._duration && 0 !== t && this.totalTime(this._totalTime * (t / this._duration), !0),
                        this) : (this._dirty = !1,
                        this._duration)
                    }
                    ,
                    s.totalDuration = function(t) {
                        return this._dirty = !1,
                        arguments.length ? this.duration(t) : this._totalDuration
                    }
                    ,
                    s.time = function(t, e) {
                        return arguments.length ? (this._dirty && this.totalDuration(),
                        this.totalTime(t > this._duration ? this._duration : t, e)) : this._time
                    }
                    ,
                    s.totalTime = function(t, e, n) {
                        if (u || h.wake(),
                        !arguments.length)
                            return this._totalTime;
                        if (this._timeline) {
                            if (t < 0 && !n && (t += this.totalDuration()),
                            this._timeline.smoothChildTiming) {
                                this._dirty && this.totalDuration();
                                var r = this._totalDuration
                                  , i = this._timeline;
                                if (t > r && !n && (t = r),
                                this._startTime = (this._paused ? this._pauseTime : i._time) - (this._reversed ? r - t : t) / this._timeScale,
                                i._dirty || this._uncache(!1),
                                i._timeline)
                                    for (; i._timeline; )
                                        i._timeline._time !== (i._startTime + i._totalTime) / i._timeScale && i.totalTime(i._totalTime, !0),
                                        i = i._timeline
                            }
                            this._gc && this._enabled(!0, !1),
                            this._totalTime === t && 0 !== this._duration || (U.length && K(),
                            this.render(t, e, !1),
                            U.length && K())
                        }
                        return this
                    }
                    ,
                    s.progress = s.totalProgress = function(t, e) {
                        var n = this.duration();
                        return arguments.length ? this.totalTime(n * t, e) : n ? this._time / n : this.ratio
                    }
                    ,
                    s.startTime = function(t) {
                        return arguments.length ? (t !== this._startTime && (this._startTime = t,
                        this.timeline && this.timeline._sortChildren && this.timeline.add(this, t - this._delay)),
                        this) : this._startTime
                    }
                    ,
                    s.endTime = function(t) {
                        return this._startTime + (0 != t ? this.totalDuration() : this.duration()) / this._timeScale
                    }
                    ,
                    s.timeScale = function(t) {
                        if (!arguments.length)
                            return this._timeScale;
                        if (t = t || p,
                        this._timeline && this._timeline.smoothChildTiming) {
                            var e = this._pauseTime
                              , n = e || 0 === e ? e : this._timeline.totalTime();
                            this._startTime = n - (n - this._startTime) * this._timeScale / t
                        }
                        return this._timeScale = t,
                        this._uncache(!1)
                    }
                    ,
                    s.reversed = function(t) {
                        return arguments.length ? (t != this._reversed && (this._reversed = t,
                        this.totalTime(this._timeline && !this._timeline.smoothChildTiming ? this.totalDuration() - this._totalTime : this._totalTime, !0)),
                        this) : this._reversed
                    }
                    ,
                    s.paused = function(t) {
                        if (!arguments.length)
                            return this._paused;
                        var e, n, r = this._timeline;
                        return t != this._paused && r && (u || t || h.wake(),
                        e = r.rawTime(),
                        n = e - this._pauseTime,
                        !t && r.smoothChildTiming && (this._startTime += n,
                        this._uncache(!1)),
                        this._pauseTime = t ? e : null ,
                        this._paused = t,
                        this._active = this.isActive(),
                        !t && 0 !== n && this._initted && this.duration() && (e = r.smoothChildTiming ? this._totalTime : (e - this._startTime) / this._timeScale,
                        this.render(e, e === this._totalTime, !0))),
                        this._gc && !t && this._enabled(!0, !1),
                        this
                    }
                    ;
                    var k = _("core.SimpleTimeline", function(t) {
                        L.call(this, 0, t),
                        this.autoRemoveChildren = this.smoothChildTiming = !0
                    });
                    s = k.prototype = new L,
                    s.constructor = k,
                    s.kill()._gc = !1,
                    s._first = s._last = s._recent = null ,
                    s._sortChildren = !1,
                    s.add = s.insert = function(t, e, n, r) {
                        var i, o;
                        if (t._startTime = Number(e || 0) + t._delay,
                        t._paused && this !== t._timeline && (t._pauseTime = t._startTime + (this.rawTime() - t._startTime) / t._timeScale),
                        t.timeline && t.timeline._remove(t, !0),
                        t.timeline = t._timeline = this,
                        t._gc && t._enabled(!0, !0),
                        i = this._last,
                        this._sortChildren)
                            for (o = t._startTime; i && i._startTime > o; )
                                i = i._prev;
                        return i ? (t._next = i._next,
                        i._next = t) : (t._next = this._first,
                        this._first = t),
                        t._next ? t._next._prev = t : this._last = t,
                        t._prev = i,
                        this._recent = t,
                        this._timeline && this._uncache(!0),
                        this
                    }
                    ,
                    s._remove = function(t, e) {
                        return t.timeline === this && (e || t._enabled(!1, !0),
                        t._prev ? t._prev._next = t._next : this._first === t && (this._first = t._next),
                        t._next ? t._next._prev = t._prev : this._last === t && (this._last = t._prev),
                        t._next = t._prev = t.timeline = null ,
                        t === this._recent && (this._recent = this._last),
                        this._timeline && this._uncache(!0)),
                        this
                    }
                    ,
                    s.render = function(t, e, n) {
                        var r, i = this._first;
                        for (this._totalTime = this._time = this._rawPrevTime = t; i; )
                            r = i._next,
                            (i._active || t >= i._startTime && !i._paused) && (i._reversed ? i.render((i._dirty ? i.totalDuration() : i._totalDuration) - (t - i._startTime) * i._timeScale, e, n) : i.render((t - i._startTime) * i._timeScale, e, n)),
                            i = r
                    }
                    ,
                    s.rawTime = function() {
                        return u || h.wake(),
                        this._totalTime
                    }
                    ;
                    var O = _("TweenLite", function(e, n, r) {
                        if (L.call(this, n, r),
                        this.render = O.prototype.render,
                        null == e)
                            throw "Cannot tween a null target.";
                        this.target = e = "string" != typeof e ? e : O.selector(e) || e;
                        var i, o, a, s = e.jquery || e.length && e !== t && e[0] && (e[0] === t || e[0].nodeType && e[0].style && !e.nodeType), h = this.vars.overwrite;
                        if (this._overwrite = h = null == h ? Y[O.defaultOverwrite] : "number" == typeof h ? h >> 0 : Y[h],
                        (s || e instanceof Array || e.push && m(e)) && "number" != typeof e[0])
                            for (this._targets = a = f(e),
                            this._propLookup = [],
                            this._siblings = [],
                            i = 0; i < a.length; i++)
                                o = a[i],
                                o ? "string" != typeof o ? o.length && o !== t && o[0] && (o[0] === t || o[0].nodeType && o[0].style && !o.nodeType) ? (a.splice(i--, 1),
                                this._targets = a = a.concat(f(o))) : (this._siblings[i] = J(o, this, !1),
                                1 === h && this._siblings[i].length > 1 && tt(o, this, null , 1, this._siblings[i])) : (o = a[i--] = O.selector(o),
                                "string" == typeof o && a.splice(i + 1, 1)) : a.splice(i--, 1);
                        else
                            this._propLookup = {},
                            this._siblings = J(e, this, !1),
                            1 === h && this._siblings.length > 1 && tt(e, this, null , 1, this._siblings);
                        (this.vars.immediateRender || 0 === n && 0 === this._delay && this.vars.immediateRender !== !1) && (this._time = -p,
                        this.render(Math.min(0, -this._delay)))
                    }, !0)
                      , I = function(e) {
                        return e && e.length && e !== t && e[0] && (e[0] === t || e[0].nodeType && e[0].style && !e.nodeType)
                    }
                      , D = function(t, e) {
                        var n, r = {};
                        for (n in t)
                            X[n] || n in e && "transform" !== n && "x" !== n && "y" !== n && "width" !== n && "height" !== n && "className" !== n && "border" !== n || !(!H[n] || H[n] && H[n]._autoCSS) || (r[n] = t[n],
                            delete t[n]);
                        t.css = r
                    }
                    ;
                    s = O.prototype = new L,
                    s.constructor = O,
                    s.kill()._gc = !1,
                    s.ratio = 0,
                    s._firstPT = s._targets = s._overwrittenProps = s._startAt = null ,
                    s._notifyPluginsOfEnabled = s._lazy = !1,
                    O.version = "1.18.5",
                    O.defaultEase = s._ease = new w(null ,null ,1,1),
                    O.defaultOverwrite = "auto",
                    O.ticker = h,
                    O.autoSleep = 120,
                    O.lagSmoothing = function(t, e) {
                        h.lagSmoothing(t, e)
                    }
                    ,
                    O.selector = t.$ || t.jQuery || function(e) {
                        var n = t.$ || t.jQuery;
                        return n ? (O.selector = n,
                        n(e)) : "undefined" == typeof document ? e : document.querySelectorAll ? document.querySelectorAll(e) : document.getElementById("#" === e.charAt(0) ? e.substr(1) : e)
                    }
                    ;
                    var U = []
                      , B = {}
                      , F = /(?:(-|-=|\+=)?\d*\.?\d*(?:e[\-+]?\d+)?)[0-9]/gi
                      , N = function(t) {
                        for (var e, n = this._firstPT, r = 1e-6; n; )
                            e = n.blob ? t ? this.join("") : this.start : n.c * t + n.s,
                            n.r ? e = Math.round(e) : e < r && e > -r && (e = 0),
                            n.f ? n.fp ? n.t[n.p](n.fp, e) : n.t[n.p](e) : n.t[n.p] = e,
                            n = n._next
                    }
                      , G = function(t, e, n, r) {
                        var i, o, a, s, h, u, l, c = [t, e], p = 0, f = "", d = 0;
                        for (c.start = t,
                        n && (n(c),
                        t = c[0],
                        e = c[1]),
                        c.length = 0,
                        i = t.match(F) || [],
                        o = e.match(F) || [],
                        r && (r._next = null ,
                        r.blob = 1,
                        c._firstPT = r),
                        h = o.length,
                        s = 0; s < h; s++)
                            l = o[s],
                            u = e.substr(p, e.indexOf(l, p) - p),
                            f += u || !s ? u : ",",
                            p += u.length,
                            d ? d = (d + 1) % 5 : "rgba(" === u.substr(-5) && (d = 1),
                            l === i[s] || i.length <= s ? f += l : (f && (c.push(f),
                            f = ""),
                            a = parseFloat(i[s]),
                            c.push(a),
                            c._firstPT = {
                                _next: c._firstPT,
                                t: c,
                                p: c.length - 1,
                                s: a,
                                c: ("=" === l.charAt(1) ? parseInt(l.charAt(0) + "1", 10) * parseFloat(l.substr(2)) : parseFloat(l) - a) || 0,
                                f: 0,
                                r: d && d < 4
                            }),
                            p += l.length;
                        return f += e.substr(p),
                        f && c.push(f),
                        c.setRatio = N,
                        c
                    }
                      , V = function(t, e, n, r, i, o, a, s) {
                        var h, u, l = "get" === n ? t[e] : n, c = typeof t[e], p = "string" == typeof r && "=" === r.charAt(1), f = {
                            t: t,
                            p: e,
                            s: l,
                            f: "function" === c,
                            pg: 0,
                            n: i || e,
                            r: o,
                            pr: 0,
                            c: p ? parseInt(r.charAt(0) + "1", 10) * parseFloat(r.substr(2)) : parseFloat(r) - l || 0
                        };
                        if ("number" !== c && ("function" === c && "get" === n && (u = e.indexOf("set") || "function" != typeof t["get" + e.substr(3)] ? e : "get" + e.substr(3),
                        f.s = l = a ? t[u](a) : t[u]()),
                        "string" == typeof l && (a || isNaN(l)) ? (f.fp = a,
                        h = G(l, r, s || O.defaultStringFilter, f),
                        f = {
                            t: h,
                            p: "setRatio",
                            s: 0,
                            c: 1,
                            f: 2,
                            pg: 0,
                            n: i || e,
                            pr: 0
                        }) : p || (f.s = parseFloat(l),
                        f.c = parseFloat(r) - f.s || 0)),
                        f.c)
                            return (f._next = this._firstPT) && (f._next._prev = f),
                            this._firstPT = f,
                            f
                    }
                      , z = O._internals = {
                        isArray: m,
                        isSelector: I,
                        lazyTweens: U,
                        blobDif: G
                    }
                      , H = O._plugins = {}
                      , j = z.tweenLookup = {}
                      , W = 0
                      , X = z.reservedProps = {
                        ease: 1,
                        delay: 1,
                        overwrite: 1,
                        onComplete: 1,
                        onCompleteParams: 1,
                        onCompleteScope: 1,
                        useFrames: 1,
                        runBackwards: 1,
                        startAt: 1,
                        onUpdate: 1,
                        onUpdateParams: 1,
                        onUpdateScope: 1,
                        onStart: 1,
                        onStartParams: 1,
                        onStartScope: 1,
                        onReverseComplete: 1,
                        onReverseCompleteParams: 1,
                        onReverseCompleteScope: 1,
                        onRepeat: 1,
                        onRepeatParams: 1,
                        onRepeatScope: 1,
                        easeParams: 1,
                        yoyo: 1,
                        immediateRender: 1,
                        repeat: 1,
                        repeatDelay: 1,
                        data: 1,
                        paused: 1,
                        reversed: 1,
                        autoCSS: 1,
                        lazy: 1,
                        onOverwrite: 1,
                        callbackScope: 1,
                        stringFilter: 1,
                        id: 1
                    }
                      , Y = {
                        none: 0,
                        all: 1,
                        auto: 2,
                        concurrent: 3,
                        allOnStart: 4,
                        preexisting: 5,
                        "true": 1,
                        "false": 0
                    }
                      , q = L._rootFramesTimeline = new k
                      , Z = L._rootTimeline = new k
                      , Q = 30
                      , K = z.lazyRender = function() {
                        var t, e = U.length;
                        for (B = {}; --e > -1; )
                            t = U[e],
                            t && t._lazy !== !1 && (t.render(t._lazy[0], t._lazy[1], !0),
                            t._lazy = !1);
                        U.length = 0
                    }
                    ;
                    Z._startTime = h.time,
                    q._startTime = h.frame,
                    Z._active = q._active = !0,
                    setTimeout(K, 1),
                    L._updateRoot = O.render = function() {
                        var t, e, n;
                        if (U.length && K(),
                        Z.render((h.time - Z._startTime) * Z._timeScale, !1, !1),
                        q.render((h.frame - q._startTime) * q._timeScale, !1, !1),
                        U.length && K(),
                        h.frame >= Q) {
                            Q = h.frame + (parseInt(O.autoSleep, 10) || 120);
                            for (n in j) {
                                for (e = j[n].tweens,
                                t = e.length; --t > -1; )
                                    e[t]._gc && e.splice(t, 1);
                                0 === e.length && delete j[n]
                            }
                            if (n = Z._first,
                            (!n || n._paused) && O.autoSleep && !q._first && 1 === h._listeners.tick.length) {
                                for (; n && n._paused; )
                                    n = n._next;
                                n || h.sleep()
                            }
                        }
                    }
                    ,
                    h.addEventListener("tick", L._updateRoot);
                    var J = function(t, e, n) {
                        var r, i, o = t._gsTweenID;
                        if (j[o || (t._gsTweenID = o = "t" + W++)] || (j[o] = {
                            target: t,
                            tweens: []
                        }),
                        e && (r = j[o].tweens,
                        r[i = r.length] = e,
                        n))
                            for (; --i > -1; )
                                r[i] === e && r.splice(i, 1);
                        return j[o].tweens
                    }
                      , $ = function(t, e, n, r) {
                        var i, o, a = t.vars.onOverwrite;
                        return a && (i = a(t, e, n, r)),
                        a = O.onOverwrite,
                        a && (o = a(t, e, n, r)),
                        i !== !1 && o !== !1
                    }
                      , tt = function(t, e, n, r, i) {
                        var o, a, s, h;
                        if (1 === r || r >= 4) {
                            for (h = i.length,
                            o = 0; o < h; o++)
                                if ((s = i[o]) !== e)
                                    s._gc || s._kill(null , t, e) && (a = !0);
                                else if (5 === r)
                                    break;
                            return a
                        }
                        var u, l = e._startTime + p, c = [], f = 0, d = 0 === e._duration;
                        for (o = i.length; --o > -1; )
                            (s = i[o]) === e || s._gc || s._paused || (s._timeline !== e._timeline ? (u = u || et(e, 0, d),
                            0 === et(s, u, d) && (c[f++] = s)) : s._startTime <= l && s._startTime + s.totalDuration() / s._timeScale > l && ((d || !s._initted) && l - s._startTime <= 2e-10 || (c[f++] = s)));
                        for (o = f; --o > -1; )
                            if (s = c[o],
                            2 === r && s._kill(n, t, e) && (a = !0),
                            2 !== r || !s._firstPT && s._initted) {
                                if (2 !== r && !$(s, e))
                                    continue;s._enabled(!1, !1) && (a = !0)
                            }
                        return a
                    }
                      , et = function(t, e, n) {
                        for (var r = t._timeline, i = r._timeScale, o = t._startTime; r._timeline; ) {
                            if (o += r._startTime,
                            i *= r._timeScale,
                            r._paused)
                                return -100;
                            r = r._timeline
                        }
                        return o /= i,
                        o > e ? o - e : n && o === e || !t._initted && o - e < 2 * p ? p : (o += t.totalDuration() / t._timeScale / i) > e + p ? 0 : o - e - p
                    }
                    ;
                    s._init = function() {
                        var t, e, n, r, i, o = this.vars, a = this._overwrittenProps, s = this._duration, h = !!o.immediateRender, u = o.ease;
                        if (o.startAt) {
                            this._startAt && (this._startAt.render(-1, !0),
                            this._startAt.kill()),
                            i = {};
                            for (r in o.startAt)
                                i[r] = o.startAt[r];
                            if (i.overwrite = !1,
                            i.immediateRender = !0,
                            i.lazy = h && o.lazy !== !1,
                            i.startAt = i.delay = null ,
                            this._startAt = O.to(this.target, 0, i),
                            h)
                                if (this._time > 0)
                                    this._startAt = null ;
                                else if (0 !== s)
                                    return
                        } else if (o.runBackwards && 0 !== s)
                            if (this._startAt)
                                this._startAt.render(-1, !0),
                                this._startAt.kill(),
                                this._startAt = null ;
                            else {
                                0 !== this._time && (h = !1),
                                n = {};
                                for (r in o)
                                    X[r] && "autoCSS" !== r || (n[r] = o[r]);
                                if (n.overwrite = 0,
                                n.data = "isFromStart",
                                n.lazy = h && o.lazy !== !1,
                                n.immediateRender = h,
                                this._startAt = O.to(this.target, 0, n),
                                h) {
                                    if (0 === this._time)
                                        return
                                } else
                                    this._startAt._init(),
                                    this._startAt._enabled(!1),
                                    this.vars.immediateRender && (this._startAt = null )
                            }
                        if (this._ease = u = u ? u instanceof w ? u : "function" == typeof u ? new w(u,o.easeParams) : E[u] || O.defaultEase : O.defaultEase,
                        o.easeParams instanceof Array && u.config && (this._ease = u.config.apply(u, o.easeParams)),
                        this._easeType = this._ease._type,
                        this._easePower = this._ease._power,
                        this._firstPT = null ,
                        this._targets)
                            for (t = this._targets.length; --t > -1; )
                                this._initProps(this._targets[t], this._propLookup[t] = {}, this._siblings[t], a ? a[t] : null ) && (e = !0);
                        else
                            e = this._initProps(this.target, this._propLookup, this._siblings, a);
                        if (e && O._onPluginEvent("_onInitAllProps", this),
                        a && (this._firstPT || "function" != typeof this.target && this._enabled(!1, !1)),
                        o.runBackwards)
                            for (n = this._firstPT; n; )
                                n.s += n.c,
                                n.c = -n.c,
                                n = n._next;
                        this._onUpdate = o.onUpdate,
                        this._initted = !0
                    }
                    ,
                    s._initProps = function(e, n, r, i) {
                        var o, a, s, h, u, l;
                        if (null == e)
                            return !1;
                        B[e._gsTweenID] && K(),
                        this.vars.css || e.style && e !== t && e.nodeType && H.css && this.vars.autoCSS !== !1 && D(this.vars, e);
                        for (o in this.vars)
                            if (l = this.vars[o],
                            X[o])
                                l && (l instanceof Array || l.push && m(l)) && l.join("").indexOf("{self}") !== -1 && (this.vars[o] = l = this._swapSelfInParams(l, this));
                            else if (H[o] && (h = new H[o])._onInitTween(e, this.vars[o], this)) {
                                for (this._firstPT = u = {
                                    _next: this._firstPT,
                                    t: h,
                                    p: "setRatio",
                                    s: 0,
                                    c: 1,
                                    f: 1,
                                    n: o,
                                    pg: 1,
                                    pr: h._priority
                                },
                                a = h._overwriteProps.length; --a > -1; )
                                    n[h._overwriteProps[a]] = this._firstPT;
                                (h._priority || h._onInitAllProps) && (s = !0),
                                (h._onDisable || h._onEnable) && (this._notifyPluginsOfEnabled = !0),
                                u._next && (u._next._prev = u)
                            } else
                                n[o] = V.call(this, e, o, "get", l, o, 0, null , this.vars.stringFilter);
                        return i && this._kill(i, e) ? this._initProps(e, n, r, i) : this._overwrite > 1 && this._firstPT && r.length > 1 && tt(e, this, n, this._overwrite, r) ? (this._kill(n, e),
                        this._initProps(e, n, r, i)) : (this._firstPT && (this.vars.lazy !== !1 && this._duration || this.vars.lazy && !this._duration) && (B[e._gsTweenID] = !0),
                        s)
                    }
                    ,
                    s.render = function(t, e, n) {
                        var r, i, o, a, s = this._time, h = this._duration, u = this._rawPrevTime;
                        if (t >= h - 1e-7)
                            this._totalTime = this._time = h,
                            this.ratio = this._ease._calcEnd ? this._ease.getRatio(1) : 1,
                            this._reversed || (r = !0,
                            i = "onComplete",
                            n = n || this._timeline.autoRemoveChildren),
                            0 === h && (this._initted || !this.vars.lazy || n) && (this._startTime === this._timeline._duration && (t = 0),
                            (u < 0 || t <= 0 && t >= -1e-7 || u === p && "isPause" !== this.data) && u !== t && (n = !0,
                            u > p && (i = "onReverseComplete")),
                            this._rawPrevTime = a = !e || t || u === t ? t : p);
                        else if (t < 1e-7)
                            this._totalTime = this._time = 0,
                            this.ratio = this._ease._calcEnd ? this._ease.getRatio(0) : 0,
                            (0 !== s || 0 === h && u > 0) && (i = "onReverseComplete",
                            r = this._reversed),
                            t < 0 && (this._active = !1,
                            0 === h && (this._initted || !this.vars.lazy || n) && (u >= 0 && (u !== p || "isPause" !== this.data) && (n = !0),
                            this._rawPrevTime = a = !e || t || u === t ? t : p)),
                            this._initted || (n = !0);
                        else if (this._totalTime = this._time = t,
                        this._easeType) {
                            var l = t / h
                              , c = this._easeType
                              , f = this._easePower;
                            (1 === c || 3 === c && l >= .5) && (l = 1 - l),
                            3 === c && (l *= 2),
                            1 === f ? l *= l : 2 === f ? l *= l * l : 3 === f ? l *= l * l * l : 4 === f && (l *= l * l * l * l),
                            1 === c ? this.ratio = 1 - l : 2 === c ? this.ratio = l : t / h < .5 ? this.ratio = l / 2 : this.ratio = 1 - l / 2
                        } else
                            this.ratio = this._ease.getRatio(t / h);
                        if (this._time !== s || n) {
                            if (!this._initted) {
                                if (this._init(),
                                !this._initted || this._gc)
                                    return;
                                if (!n && this._firstPT && (this.vars.lazy !== !1 && this._duration || this.vars.lazy && !this._duration))
                                    return this._time = this._totalTime = s,
                                    this._rawPrevTime = u,
                                    U.push(this),
                                    void (this._lazy = [t, e]);
                                this._time && !r ? this.ratio = this._ease.getRatio(this._time / h) : r && this._ease._calcEnd && (this.ratio = this._ease.getRatio(0 === this._time ? 0 : 1))
                            }
                            for (this._lazy !== !1 && (this._lazy = !1),
                            this._active || !this._paused && this._time !== s && t >= 0 && (this._active = !0),
                            0 === s && (this._startAt && (t >= 0 ? this._startAt.render(t, e, n) : i || (i = "_dummyGS")),
                            this.vars.onStart && (0 === this._time && 0 !== h || e || this._callback("onStart"))),
                            o = this._firstPT; o; )
                                o.f ? o.t[o.p](o.c * this.ratio + o.s) : o.t[o.p] = o.c * this.ratio + o.s,
                                o = o._next;
                            this._onUpdate && (t < 0 && this._startAt && t !== -1e-4 && this._startAt.render(t, e, n),
                            e || (this._time !== s || r || n) && this._callback("onUpdate")),
                            i && (this._gc && !n || (t < 0 && this._startAt && !this._onUpdate && t !== -1e-4 && this._startAt.render(t, e, n),
                            r && (this._timeline.autoRemoveChildren && this._enabled(!1, !1),
                            this._active = !1),
                            !e && this.vars[i] && this._callback(i),
                            0 === h && this._rawPrevTime === p && a !== p && (this._rawPrevTime = 0)))
                        }
                    }
                    ,
                    s._kill = function(t, e, n) {
                        if ("all" === t && (t = null ),
                        null == t && (null == e || e === this.target))
                            return this._lazy = !1,
                            this._enabled(!1, !1);
                        e = "string" != typeof e ? e || this._targets || this.target : O.selector(e) || e;
                        var r, i, o, a, s, h, u, l, c, p = n && this._time && n._startTime === this._startTime && this._timeline === n._timeline;
                        if ((m(e) || I(e)) && "number" != typeof e[0])
                            for (r = e.length; --r > -1; )
                                this._kill(t, e[r], n) && (h = !0);
                        else {
                            if (this._targets) {
                                for (r = this._targets.length; --r > -1; )
                                    if (e === this._targets[r]) {
                                        s = this._propLookup[r] || {},
                                        this._overwrittenProps = this._overwrittenProps || [],
                                        i = this._overwrittenProps[r] = t ? this._overwrittenProps[r] || {} : "all";
                                        break
                                    }
                            } else {
                                if (e !== this.target)
                                    return !1;
                                s = this._propLookup,
                                i = this._overwrittenProps = t ? this._overwrittenProps || {} : "all"
                            }
                            if (s) {
                                if (u = t || s,
                                l = t !== i && "all" !== i && t !== s && ("object" != typeof t || !t._tempKill),
                                n && (O.onOverwrite || this.vars.onOverwrite)) {
                                    for (o in u)
                                        s[o] && (c || (c = []),
                                        c.push(o));
                                    if ((c || !t) && !$(this, n, e, c))
                                        return !1
                                }
                                for (o in u)
                                    (a = s[o]) && (p && (a.f ? a.t[a.p](a.s) : a.t[a.p] = a.s,
                                    h = !0),
                                    a.pg && a.t._kill(u) && (h = !0),
                                    a.pg && 0 !== a.t._overwriteProps.length || (a._prev ? a._prev._next = a._next : a === this._firstPT && (this._firstPT = a._next),
                                    a._next && (a._next._prev = a._prev),
                                    a._next = a._prev = null ),
                                    delete s[o]),
                                    l && (i[o] = 1);
                                !this._firstPT && this._initted && this._enabled(!1, !1)
                            }
                        }
                        return h
                    }
                    ,
                    s.invalidate = function() {
                        return this._notifyPluginsOfEnabled && O._onPluginEvent("_onDisable", this),
                        this._firstPT = this._overwrittenProps = this._startAt = this._onUpdate = null ,
                        this._notifyPluginsOfEnabled = this._active = this._lazy = !1,
                        this._propLookup = this._targets ? {} : [],
                        L.prototype.invalidate.call(this),
                        this.vars.immediateRender && (this._time = -p,
                        this.render(Math.min(0, -this._delay))),
                        this
                    }
                    ,
                    s._enabled = function(t, e) {
                        if (u || h.wake(),
                        t && this._gc) {
                            var n, r = this._targets;
                            if (r)
                                for (n = r.length; --n > -1; )
                                    this._siblings[n] = J(r[n], this, !0);
                            else
                                this._siblings = J(this.target, this, !0)
                        }
                        return L.prototype._enabled.call(this, t, e),
                        !(!this._notifyPluginsOfEnabled || !this._firstPT) && O._onPluginEvent(t ? "_onEnable" : "_onDisable", this)
                    }
                    ,
                    O.to = function(t, e, n) {
                        return new O(t,e,n)
                    }
                    ,
                    O.from = function(t, e, n) {
                        return n.runBackwards = !0,
                        n.immediateRender = 0 != n.immediateRender,
                        new O(t,e,n)
                    }
                    ,
                    O.fromTo = function(t, e, n, r) {
                        return r.startAt = n,
                        r.immediateRender = 0 != r.immediateRender && 0 != n.immediateRender,
                        new O(t,e,r)
                    }
                    ,
                    O.delayedCall = function(t, e, n, r, i) {
                        return new O(e,0,{
                            delay: t,
                            onComplete: e,
                            onCompleteParams: n,
                            callbackScope: r,
                            onReverseComplete: e,
                            onReverseCompleteParams: n,
                            immediateRender: !1,
                            lazy: !1,
                            useFrames: i,
                            overwrite: 0
                        })
                    }
                    ,
                    O.set = function(t, e) {
                        return new O(t,0,e)
                    }
                    ,
                    O.getTweensOf = function(t, e) {
                        if (null == t)
                            return [];
                        t = "string" != typeof t ? t : O.selector(t) || t;
                        var n, r, i, o;
                        if ((m(t) || I(t)) && "number" != typeof t[0]) {
                            for (n = t.length,
                            r = []; --n > -1; )
                                r = r.concat(O.getTweensOf(t[n], e));
                            for (n = r.length; --n > -1; )
                                for (o = r[n],
                                i = n; --i > -1; )
                                    o === r[i] && r.splice(n, 1)
                        } else
                            for (r = J(t).concat(),
                            n = r.length; --n > -1; )
                                (r[n]._gc || e && !r[n].isActive()) && r.splice(n, 1);
                        return r
                    }
                    ,
                    O.killTweensOf = O.killDelayedCallsTo = function(t, e, n) {
                        "object" == typeof e && (n = e,
                        e = !1);
                        for (var r = O.getTweensOf(t, e), i = r.length; --i > -1; )
                            r[i]._kill(n, t)
                    }
                    ;
                    var nt = _("plugins.TweenPlugin", function(t, e) {
                        this._overwriteProps = (t || "").split(","),
                        this._propName = this._overwriteProps[0],
                        this._priority = e || 0,
                        this._super = nt.prototype
                    }, !0);
                    if (s = nt.prototype,
                    nt.version = "1.18.0",
                    nt.API = 2,
                    s._firstPT = null ,
                    s._addTween = V,
                    s.setRatio = N,
                    s._kill = function(t) {
                        var e, n = this._overwriteProps, r = this._firstPT;
                        if (null != t[this._propName])
                            this._overwriteProps = [];
                        else
                            for (e = n.length; --e > -1; )
                                null != t[n[e]] && n.splice(e, 1);
                        for (; r; )
                            null != t[r.n] && (r._next && (r._next._prev = r._prev),
                            r._prev ? (r._prev._next = r._next,
                            r._prev = null ) : this._firstPT === r && (this._firstPT = r._next)),
                            r = r._next;
                        return !1
                    }
                    ,
                    s._roundProps = function(t, e) {
                        for (var n = this._firstPT; n; )
                            (t[this._propName] || null != n.n && t[n.n.split(this._propName + "_").join("")]) && (n.r = e),
                            n = n._next
                    }
                    ,
                    O._onPluginEvent = function(t, e) {
                        var n, r, i, o, a, s = e._firstPT;
                        if ("_onInitAllProps" === t) {
                            for (; s; ) {
                                for (a = s._next,
                                r = i; r && r.pr > s.pr; )
                                    r = r._next;
                                (s._prev = r ? r._prev : o) ? s._prev._next = s : i = s,
                                (s._next = r) ? r._prev = s : o = s,
                                s = a
                            }
                            s = e._firstPT = i
                        }
                        for (; s; )
                            s.pg && "function" == typeof s.t[t] && s.t[t]() && (n = !0),
                            s = s._next;
                        return n
                    }
                    ,
                    nt.activate = function(t) {
                        for (var e = t.length; --e > -1; )
                            t[e].API === nt.API && (H[(new t[e])._propName] = t[e]);
                        return !0
                    }
                    ,
                    y.plugin = function(t) {
                        if (!(t && t.propName && t.init && t.API))
                            throw "illegal plugin definition.";
                        var e, n = t.propName, r = t.priority || 0, i = t.overwriteProps, o = {
                            init: "_onInitTween",
                            set: "setRatio",
                            kill: "_kill",
                            round: "_roundProps",
                            initAll: "_onInitAllProps"
                        }, a = _("plugins." + n.charAt(0).toUpperCase() + n.substr(1) + "Plugin", function() {
                            nt.call(this, n, r),
                            this._overwriteProps = i || []
                        }, t.global === !0), s = a.prototype = new nt(n);
                        s.constructor = a,
                        a.API = t.API;
                        for (e in o)
                            "function" == typeof t[e] && (s[o[e]] = t[e]);
                        return a.version = t.version,
                        nt.activate([a]),
                        a
                    }
                    ,
                    o = t._gsQueue) {
                        for (a = 0; a < o.length; a++)
                            o[a]();
                        for (s in v)
                            v[s].func || t.console.log("GSAP encountered missing dependency: com.greensock." + s)
                    }
                    u = !1
                }
            }("undefined" != typeof e && e.exports && "undefined" != typeof t ? t : this || window, "TweenMax")
        }
        ).call(this, "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {})
    }
    , {}],
    4: [function(t, e, n) {
        "use strict";
        function r(t, e, n) {
            var i, o, a, s, h, u, l;
            if (!(this instanceof r))
                return new r(t,e,n);
            for (this.version = "1.0.2",
            this.minAlphabetLength = 16,
            this.sepDiv = 3.5,
            this.guardDiv = 12,
            this.errorAlphabetLength = "error: alphabet must contain at least X unique characters",
            this.errorAlphabetSpace = "error: alphabet cannot contain spaces",
            this.alphabet = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890",
            this.seps = "cfhistuCFHISTU",
            this.minHashLength = parseInt(e, 10) > 0 ? e : 0,
            this.salt = "string" == typeof t ? t : "",
            "string" == typeof n && (this.alphabet = n),
            i = "",
            o = 0,
            s = this.alphabet.length; o !== s; o++)
                i.indexOf(this.alphabet[o]) === -1 && (i += this.alphabet[o]);
            if (this.alphabet = i,
            this.alphabet.length < this.minAlphabetLength)
                throw this.errorAlphabetLength.replace("X", this.minAlphabetLength);
            if (this.alphabet.search(" ") !== -1)
                throw this.errorAlphabetSpace;
            for (o = 0,
            s = this.seps.length; o !== s; o++)
                a = this.alphabet.indexOf(this.seps[o]),
                a === -1 ? this.seps = this.seps.substr(0, o) + " " + this.seps.substr(o + 1) : this.alphabet = this.alphabet.substr(0, a) + " " + this.alphabet.substr(a + 1);
            this.alphabet = this.alphabet.replace(/ /g, ""),
            this.seps = this.seps.replace(/ /g, ""),
            this.seps = this.consistentShuffle(this.seps, this.salt),
            (!this.seps.length || this.alphabet.length / this.seps.length > this.sepDiv) && (h = Math.ceil(this.alphabet.length / this.sepDiv),
            1 === h && h++,
            h > this.seps.length ? (u = h - this.seps.length,
            this.seps += this.alphabet.substr(0, u),
            this.alphabet = this.alphabet.substr(u)) : this.seps = this.seps.substr(0, h)),
            this.alphabet = this.consistentShuffle(this.alphabet, this.salt),
            l = Math.ceil(this.alphabet.length / this.guardDiv),
            this.alphabet.length < 3 ? (this.guards = this.seps.substr(0, l),
            this.seps = this.seps.substr(l)) : (this.guards = this.alphabet.substr(0, l),
            this.alphabet = this.alphabet.substr(l))
        }
        r.prototype.encode = function() {
            var t, e, n = "", r = Array.prototype.slice.call(arguments);
            if (!r.length)
                return n;
            for (r[0]instanceof Array && (r = r[0]),
            t = 0,
            e = r.length; t !== e; t++)
                if ("number" != typeof r[t] || r[t] % 1 !== 0 || r[t] < 0)
                    return n;
            return this._encode(r)
        }
        ,
        r.prototype.decode = function(t) {
            var e = [];
            return t.length && "string" == typeof t ? this._decode(t, this.alphabet) : e
        }
        ,
        r.prototype.encodeHex = function(t) {
            var e, n, r;
            if (t = t.toString(),
            !/^[0-9a-fA-F]+$/.test(t))
                return "";
            for (r = t.match(/[\w\W]{1,12}/g),
            e = 0,
            n = r.length; e !== n; e++)
                r[e] = parseInt("1" + r[e], 16);
            return this.encode.apply(this, r)
        }
        ,
        r.prototype.decodeHex = function(t) {
            var e, n, r = "", i = this.decode(t);
            for (e = 0,
            n = i.length; e !== n; e++)
                r += i[e].toString(16).substr(1);
            return r
        }
        ,
        r.prototype._encode = function(t) {
            var e, n, r, i, o, a, s, h, u, l, c, p, f = this.alphabet, d = t.length, m = 0;
            for (r = 0,
            i = t.length; r !== i; r++)
                m += t[r] % (r + 100);
            for (n = e = f[m % f.length],
            r = 0,
            i = t.length; r !== i; r++)
                o = t[r],
                a = n + this.salt + f,
                f = this.consistentShuffle(f, a.substr(0, f.length)),
                s = this.hash(o, f),
                e += s,
                r + 1 < d && (o %= s.charCodeAt(0) + r,
                h = o % this.seps.length,
                e += this.seps[h]);
            for (e.length < this.minHashLength && (u = (m + e[0].charCodeAt(0)) % this.guards.length,
            l = this.guards[u],
            e = l + e,
            e.length < this.minHashLength && (u = (m + e[2].charCodeAt(0)) % this.guards.length,
            l = this.guards[u],
            e += l)),
            c = parseInt(f.length / 2, 10); e.length < this.minHashLength; )
                f = this.consistentShuffle(f, f),
                e = f.substr(c) + e + f.substr(0, c),
                p = e.length - this.minHashLength,
                p > 0 && (e = e.substr(p / 2, this.minHashLength));
            return e
        }
        ,
        r.prototype._decode = function(t, e) {
            var n, r, i, o, a = [], s = 0, h = new RegExp("[" + this.guards + "]","g"), u = t.replace(h, " "), l = u.split(" ");
            if (3 !== l.length && 2 !== l.length || (s = 1),
            u = l[s],
            "undefined" != typeof u[0]) {
                for (n = u[0],
                u = u.substr(1),
                h = new RegExp("[" + this.seps + "]","g"),
                u = u.replace(h, " "),
                l = u.split(" "),
                s = 0,
                r = l.length; s !== r; s++)
                    i = l[s],
                    o = n + this.salt + e,
                    e = this.consistentShuffle(e, o.substr(0, e.length)),
                    a.push(this.unhash(i, e));
                this._encode(a) !== t && (a = [])
            }
            return a
        }
        ,
        r.prototype.consistentShuffle = function(t, e) {
            var n, r, i, o, a, s;
            if (!e.length)
                return t;
            for (o = t.length - 1,
            a = 0,
            s = 0; o > 0; o--,
            a++)
                a %= e.length,
                s += n = e[a].charCodeAt(0),
                r = (n + a + s) % o,
                i = t[r],
                t = t.substr(0, r) + t[o] + t.substr(r + 1),
                t = t.substr(0, o) + i + t.substr(o + 1);
            return t
        }
        ,
        r.prototype.hash = function(t, e) {
            var n = ""
              , r = e.length;
            do
                n = e[t % r] + n,
                t = parseInt(t / r, 10);
            while (t);return n
        }
        ,
        r.prototype.unhash = function(t, e) {
            var n, r, i = 0;
            for (r = 0; r < t.length; r++)
                n = e.indexOf(t[r]),
                i += n * Math.pow(e.length, t.length - r - 1);
            return i
        }
        ,
        e.exports = r
    }
    , {}],
    5: [function(t, e, n) {
        (function(t) {
            (function() {
                function r(t, e) {
                    if (t !== e) {
                        var n = null === t
                          , r = t === T
                          , i = t === t
                          , o = null === e
                          , a = e === T
                          , s = e === e;
                        if (t > e && !o || !i || n && !a && s || r && s)
                            return 1;
                        if (t < e && !n || !s || o && !r && i || a && i)
                            return -1
                    }
                    return 0
                }
                function i(t, e, n) {
                    for (var r = t.length, i = n ? r : -1; n ? i-- : ++i < r; )
                        if (e(t[i], i, t))
                            return i;
                    return -1
                }
                function o(t, e, n) {
                    if (e !== e)
                        return v(t, n);
                    for (var r = n - 1, i = t.length; ++r < i; )
                        if (t[r] === e)
                            return r;
                    return -1
                }
                function a(t) {
                    return "function" == typeof t || !1
                }
                function s(t) {
                    return null == t ? "" : t + ""
                }
                function h(t, e) {
                    for (var n = -1, r = t.length; ++n < r && e.indexOf(t.charAt(n)) > -1; )
                        ;
                    return n
                }
                function u(t, e) {
                    for (var n = t.length; n-- && e.indexOf(t.charAt(n)) > -1; )
                        ;
                    return n
                }
                function l(t, e) {
                    return r(t.criteria, e.criteria) || t.index - e.index
                }
                function c(t, e, n) {
                    for (var i = -1, o = t.criteria, a = e.criteria, s = o.length, h = n.length; ++i < s; ) {
                        var u = r(o[i], a[i]);
                        if (u) {
                            if (i >= h)
                                return u;
                            var l = n[i];
                            return u * ("asc" === l || l === !0 ? 1 : -1)
                        }
                    }
                    return t.index - e.index
                }
                function p(t) {
                    return jt[t]
                }
                function f(t) {
                    return Wt[t]
                }
                function d(t, e, n) {
                    return e ? t = qt[t] : n && (t = Zt[t]),
                    "\\" + t
                }
                function m(t) {
                    return "\\" + Zt[t]
                }
                function v(t, e, n) {
                    for (var r = t.length, i = e + (n ? 0 : -1); n ? i-- : ++i < r; ) {
                        var o = t[i];
                        if (o !== o)
                            return i
                    }
                    return -1
                }
                function g(t) {
                    return !!t && "object" == typeof t
                }
                function y(t) {
                    return t <= 160 && t >= 9 && t <= 13 || 32 == t || 160 == t || 5760 == t || 6158 == t || t >= 8192 && (t <= 8202 || 8232 == t || 8233 == t || 8239 == t || 8287 == t || 12288 == t || 65279 == t)
                }
                function _(t, e) {
                    for (var n = -1, r = t.length, i = -1, o = []; ++n < r; )
                        t[n] === e && (t[n] = j,
                        o[++i] = n);
                    return o
                }
                function x(t, e) {
                    for (var n, r = -1, i = t.length, o = -1, a = []; ++r < i; ) {
                        var s = t[r]
                          , h = e ? e(s, r, t) : s;
                        r && n === h || (n = h,
                        a[++o] = s)
                    }
                    return a
                }
                function b(t) {
                    for (var e = -1, n = t.length; ++e < n && y(t.charCodeAt(e)); )
                        ;
                    return e
                }
                function w(t) {
                    for (var e = t.length; e-- && y(t.charCodeAt(e)); )
                        ;
                    return e
                }
                function E(t) {
                    return Xt[t]
                }
                function S(t) {
                    function e(t) {
                        if (g(t) && !Ps(t) && !(t instanceof K)) {
                            if (t instanceof y)
                                return t;
                            if (ea.call(t, "__chain__") && ea.call(t, "__wrapped__"))
                                return fr(t)
                        }
                        return new y(t)
                    }
                    function n() {}
                    function y(t, e, n) {
                        this.__wrapped__ = t,
                        this.__actions__ = n || [],
                        this.__chain__ = !!e
                    }
                    function K(t) {
                        this.__wrapped__ = t,
                        this.__actions__ = [],
                        this.__dir__ = 1,
                        this.__filtered__ = !1,
                        this.__iteratees__ = [],
                        this.__takeCount__ = Aa,
                        this.__views__ = []
                    }
                    function et() {
                        var t = new K(this.__wrapped__);
                        return t.__actions__ = te(this.__actions__),
                        t.__dir__ = this.__dir__,
                        t.__filtered__ = this.__filtered__,
                        t.__iteratees__ = te(this.__iteratees__),
                        t.__takeCount__ = this.__takeCount__,
                        t.__views__ = te(this.__views__),
                        t
                    }
                    function rt() {
                        if (this.__filtered__) {
                            var t = new K(this);
                            t.__dir__ = -1,
                            t.__filtered__ = !0
                        } else
                            t = this.clone(),
                            t.__dir__ *= -1;
                        return t
                    }
                    function jt() {
                        var t = this.__wrapped__.value()
                          , e = this.__dir__
                          , n = Ps(t)
                          , r = e < 0
                          , i = n ? t.length : 0
                          , o = Xn(0, i, this.__views__)
                          , a = o.start
                          , s = o.end
                          , h = s - a
                          , u = r ? s : a - 1
                          , l = this.__iteratees__
                          , c = l.length
                          , p = 0
                          , f = Ea(h, this.__takeCount__);
                        if (!n || i < G || i == h && f == h)
                            return nn(r && n ? t.reverse() : t, this.__actions__);
                        var d = [];
                        t: for (; h-- && p < f; ) {
                            u += e;
                            for (var m = -1, v = t[u]; ++m < c; ) {
                                var g = l[m]
                                  , y = g.iteratee
                                  , _ = g.type
                                  , x = y(v);
                                if (_ == z)
                                    v = x;
                                else if (!x) {
                                    if (_ == V)
                                        continue t;break t
                                }
                            }
                            d[p++] = v
                        }
                        return d
                    }
                    function Wt() {
                        this.__data__ = {}
                    }
                    function Xt(t) {
                        return this.has(t) && delete this.__data__[t]
                    }
                    function Yt(t) {
                        return "__proto__" == t ? T : this.__data__[t]
                    }
                    function qt(t) {
                        return "__proto__" != t && ea.call(this.__data__, t)
                    }
                    function Zt(t, e) {
                        return "__proto__" != t && (this.__data__[t] = e),
                        this
                    }
                    function Qt(t) {
                        var e = t ? t.length : 0;
                        for (this.data = {
                            hash: ga(null ),
                            set: new ca
                        }; e--; )
                            this.push(t[e])
                    }
                    function Kt(t, e) {
                        var n = t.data
                          , r = "string" == typeof e || Ii(e) ? n.set.has(e) : n.hash[e];
                        return r ? 0 : -1
                    }
                    function Jt(t) {
                        var e = this.data;
                        "string" == typeof t || Ii(t) ? e.set.add(t) : e.hash[t] = !0
                    }
                    function $t(t, e) {
                        for (var n = -1, r = t.length, i = -1, o = e.length, a = Vo(r + o); ++n < r; )
                            a[n] = t[n];
                        for (; ++i < o; )
                            a[n++] = e[i];
                        return a
                    }
                    function te(t, e) {
                        var n = -1
                          , r = t.length;
                        for (e || (e = Vo(r)); ++n < r; )
                            e[n] = t[n];
                        return e
                    }
                    function ee(t, e) {
                        for (var n = -1, r = t.length; ++n < r && e(t[n], n, t) !== !1; )
                            ;
                        return t
                    }
                    function ie(t, e) {
                        for (var n = t.length; n-- && e(t[n], n, t) !== !1; )
                            ;
                        return t
                    }
                    function oe(t, e) {
                        for (var n = -1, r = t.length; ++n < r; )
                            if (!e(t[n], n, t))
                                return !1;
                        return !0
                    }
                    function ae(t, e, n, r) {
                        for (var i = -1, o = t.length, a = r, s = a; ++i < o; ) {
                            var h = t[i]
                              , u = +e(h);
                            n(u, a) && (a = u,
                            s = h)
                        }
                        return s
                    }
                    function se(t, e) {
                        for (var n = -1, r = t.length, i = -1, o = []; ++n < r; ) {
                            var a = t[n];
                            e(a, n, t) && (o[++i] = a)
                        }
                        return o
                    }
                    function he(t, e) {
                        for (var n = -1, r = t.length, i = Vo(r); ++n < r; )
                            i[n] = e(t[n], n, t);
                        return i
                    }
                    function ue(t, e) {
                        for (var n = -1, r = e.length, i = t.length; ++n < r; )
                            t[i + n] = e[n];
                        return t
                    }
                    function le(t, e, n, r) {
                        var i = -1
                          , o = t.length;
                        for (r && o && (n = t[++i]); ++i < o; )
                            n = e(n, t[i], i, t);
                        return n
                    }
                    function ce(t, e, n, r) {
                        var i = t.length;
                        for (r && i && (n = t[--i]); i--; )
                            n = e(n, t[i], i, t);
                        return n
                    }
                    function pe(t, e) {
                        for (var n = -1, r = t.length; ++n < r; )
                            if (e(t[n], n, t))
                                return !0;
                        return !1
                    }
                    function fe(t, e) {
                        for (var n = t.length, r = 0; n--; )
                            r += +e(t[n]) || 0;
                        return r
                    }
                    function de(t, e) {
                        return t === T ? e : t
                    }
                    function me(t, e, n, r) {
                        return t !== T && ea.call(r, n) ? t : e
                    }
                    function ve(t, e, n) {
                        for (var r = -1, i = Gs(e), o = i.length; ++r < o; ) {
                            var a = i[r]
                              , s = t[a]
                              , h = n(s, e[a], a, t, e);
                            (h === h ? h === s : s !== s) && (s !== T || a in t) || (t[a] = h)
                        }
                        return t
                    }
                    function ge(t, e) {
                        return null == e ? t : _e(e, Gs(e), t)
                    }
                    function ye(t, e) {
                        for (var n = -1, r = null == t, i = !r && Kn(t), o = i ? t.length : 0, a = e.length, s = Vo(a); ++n < a; ) {
                            var h = e[n];
                            i ? s[n] = Jn(h, o) ? t[h] : T : s[n] = r ? T : t[h]
                        }
                        return s
                    }
                    function _e(t, e, n) {
                        n || (n = {});
                        for (var r = -1, i = e.length; ++r < i; ) {
                            var o = e[r];
                            n[o] = t[o]
                        }
                        return n
                    }
                    function xe(t, e, n) {
                        var r = typeof t;
                        return "function" == r ? e === T ? t : an(t, e, n) : null == t ? Ao : "object" == r ? Ne(t) : e === T ? Io(t) : Ge(t, e)
                    }
                    function be(t, e, n, r, i, o, a) {
                        var s;
                        if (n && (s = i ? n(t, r, i) : n(t)),
                        s !== T)
                            return s;
                        if (!Ii(t))
                            return t;
                        var h = Ps(t);
                        if (h) {
                            if (s = Yn(t),
                            !e)
                                return te(t, s)
                        } else {
                            var u = ra.call(t)
                              , l = u == Q;
                            if (u != $ && u != W && (!l || i))
                                return Ht[u] ? Zn(t, u, e) : i ? t : {};
                            if (s = qn(l ? {} : t),
                            !e)
                                return ge(s, t)
                        }
                        o || (o = []),
                        a || (a = []);
                        for (var c = o.length; c--; )
                            if (o[c] == t)
                                return a[c];
                        return o.push(t),
                        a.push(s),
                        (h ? ee : Re)(t, function(r, i) {
                            s[i] = be(r, e, n, i, t, o, a)
                        }),
                        s
                    }
                    function we(t, e, n) {
                        if ("function" != typeof t)
                            throw new Qo(H);
                        return pa(function() {
                            t.apply(T, n)
                        }, e)
                    }
                    function Ee(t, e) {
                        var n = t ? t.length : 0
                          , r = [];
                        if (!n)
                            return r;
                        var i = -1
                          , a = Hn()
                          , s = a == o
                          , h = s && e.length >= G ? mn(e) : null
                          , u = e.length;
                        h && (a = Kt,
                        s = !1,
                        e = h);
                        t: for (; ++i < n; ) {
                            var l = t[i];
                            if (s && l === l) {
                                for (var c = u; c--; )
                                    if (e[c] === l)
                                        continue t;
                                r.push(l)
                            } else
                                a(e, l, 0) < 0 && r.push(l)
                        }
                        return r
                    }
                    function Se(t, e) {
                        var n = !0;
                        return Ua(t, function(t, r, i) {
                            return n = !!e(t, r, i)
                        }),
                        n
                    }
                    function Te(t, e, n, r) {
                        var i = r
                          , o = i;
                        return Ua(t, function(t, a, s) {
                            var h = +e(t, a, s);
                            (n(h, i) || h === r && h === o) && (i = h,
                            o = t)
                        }),
                        o
                    }
                    function Me(t, e, n, r) {
                        var i = t.length;
                        for (n = null == n ? 0 : +n || 0,
                        n < 0 && (n = -n > i ? 0 : i + n),
                        r = r === T || r > i ? i : +r || 0,
                        r < 0 && (r += i),
                        i = n > r ? 0 : r >>> 0,
                        n >>>= 0; n < i; )
                            t[n++] = e;
                        return t
                    }
                    function Ce(t, e) {
                        var n = [];
                        return Ua(t, function(t, r, i) {
                            e(t, r, i) && n.push(t)
                        }),
                        n
                    }
                    function Ae(t, e, n, r) {
                        var i;
                        return n(t, function(t, n, o) {
                            if (e(t, n, o))
                                return i = r ? n : t,
                                !1
                        }),
                        i
                    }
                    function Pe(t, e, n, r) {
                        r || (r = []);
                        for (var i = -1, o = t.length; ++i < o; ) {
                            var a = t[i];
                            g(a) && Kn(a) && (n || Ps(a) || Ti(a)) ? e ? Pe(a, e, n, r) : ue(r, a) : n || (r[r.length] = a)
                        }
                        return r
                    }
                    function Le(t, e) {
                        return Fa(t, e, to)
                    }
                    function Re(t, e) {
                        return Fa(t, e, Gs)
                    }
                    function ke(t, e) {
                        return Na(t, e, Gs)
                    }
                    function Oe(t, e) {
                        for (var n = -1, r = e.length, i = -1, o = []; ++n < r; ) {
                            var a = e[n];
                            Oi(t[a]) && (o[++i] = a)
                        }
                        return o
                    }
                    function Ie(t, e, n) {
                        if (null != t) {
                            n !== T && n in cr(t) && (e = [n]);
                            for (var r = 0, i = e.length; null != t && r < i; )
                                t = t[e[r++]];
                            return r && r == i ? t : T
                        }
                    }
                    function De(t, e, n, r, i, o) {
                        return t === e || (null == t || null == e || !Ii(t) && !g(e) ? t !== t && e !== e : Ue(t, e, De, n, r, i, o))
                    }
                    function Ue(t, e, n, r, i, o, a) {
                        var s = Ps(t)
                          , h = Ps(e)
                          , u = X
                          , l = X;
                        s || (u = ra.call(t),
                        u == W ? u = $ : u != $ && (s = Hi(t))),
                        h || (l = ra.call(e),
                        l == W ? l = $ : l != $ && (h = Hi(e)));
                        var c = u == $
                          , p = l == $
                          , f = u == l;
                        if (f && !s && !c)
                            return Nn(t, e, u);
                        if (!i) {
                            var d = c && ea.call(t, "__wrapped__")
                              , m = p && ea.call(e, "__wrapped__");
                            if (d || m)
                                return n(d ? t.value() : t, m ? e.value() : e, r, i, o, a)
                        }
                        if (!f)
                            return !1;
                        o || (o = []),
                        a || (a = []);
                        for (var v = o.length; v--; )
                            if (o[v] == t)
                                return a[v] == e;
                        o.push(t),
                        a.push(e);
                        var g = (s ? Fn : Gn)(t, e, n, r, i, o, a);
                        return o.pop(),
                        a.pop(),
                        g
                    }
                    function Be(t, e, n) {
                        var r = e.length
                          , i = r
                          , o = !n;
                        if (null == t)
                            return !i;
                        for (t = cr(t); r--; ) {
                            var a = e[r];
                            if (o && a[2] ? a[1] !== t[a[0]] : !(a[0]in t))
                                return !1
                        }
                        for (; ++r < i; ) {
                            a = e[r];
                            var s = a[0]
                              , h = t[s]
                              , u = a[1];
                            if (o && a[2]) {
                                if (h === T && !(s in t))
                                    return !1
                            } else {
                                var l = n ? n(h, u, s) : T;
                                if (!(l === T ? De(u, h, n, !0) : l))
                                    return !1
                            }
                        }
                        return !0
                    }
                    function Fe(t, e) {
                        var n = -1
                          , r = Kn(t) ? Vo(t.length) : [];
                        return Ua(t, function(t, i, o) {
                            r[++n] = e(t, i, o)
                        }),
                        r
                    }
                    function Ne(t) {
                        var e = jn(t);
                        if (1 == e.length && e[0][2]) {
                            var n = e[0][0]
                              , r = e[0][1];
                            return function(t) {
                                return null != t && (t[n] === r && (r !== T || n in cr(t)))
                            }
                        }
                        return function(t) {
                            return Be(t, e)
                        }
                    }
                    function Ge(t, e) {
                        var n = Ps(t)
                          , r = tr(t) && rr(e)
                          , i = t + "";
                        return t = pr(t),
                        function(o) {
                            if (null == o)
                                return !1;
                            var a = i;
                            if (o = cr(o),
                            (n || !r) && !(a in o)) {
                                if (o = 1 == t.length ? o : Ie(o, qe(t, 0, -1)),
                                null == o)
                                    return !1;
                                a = Mr(t),
                                o = cr(o)
                            }
                            return o[a] === e ? e !== T || a in o : De(e, o[a], T, !0)
                        }
                    }
                    function Ve(t, e, n, r, i) {
                        if (!Ii(t))
                            return t;
                        var o = Kn(e) && (Ps(e) || Hi(e))
                          , a = o ? T : Gs(e);
                        return ee(a || e, function(s, h) {
                            if (a && (h = s,
                            s = e[h]),
                            g(s))
                                r || (r = []),
                                i || (i = []),
                                ze(t, e, h, Ve, n, r, i);
                            else {
                                var u = t[h]
                                  , l = n ? n(u, s, h, t, e) : T
                                  , c = l === T;
                                c && (l = s),
                                l === T && (!o || h in t) || !c && (l === l ? l === u : u !== u) || (t[h] = l)
                            }
                        }),
                        t
                    }
                    function ze(t, e, n, r, i, o, a) {
                        for (var s = o.length, h = e[n]; s--; )
                            if (o[s] == h)
                                return void (t[n] = a[s]);
                        var u = t[n]
                          , l = i ? i(u, h, n, t, e) : T
                          , c = l === T;
                        c && (l = h,
                        Kn(h) && (Ps(h) || Hi(h)) ? l = Ps(u) ? u : Kn(u) ? te(u) : [] : Gi(h) || Ti(h) ? l = Ti(u) ? qi(u) : Gi(u) ? u : {} : c = !1),
                        o.push(h),
                        a.push(l),
                        c ? t[n] = r(l, h, i, o, a) : (l === l ? l !== u : u === u) && (t[n] = l)
                    }
                    function He(t) {
                        return function(e) {
                            return null == e ? T : e[t]
                        }
                    }
                    function je(t) {
                        var e = t + "";
                        return t = pr(t),
                        function(n) {
                            return Ie(n, t, e)
                        }
                    }
                    function We(t, e) {
                        for (var n = t ? e.length : 0; n--; ) {
                            var r = e[n];
                            if (r != i && Jn(r)) {
                                var i = r;
                                fa.call(t, r, 1)
                            }
                        }
                        return t
                    }
                    function Xe(t, e) {
                        return t + ya(Ma() * (e - t + 1))
                    }
                    function Ye(t, e, n, r, i) {
                        return i(t, function(t, i, o) {
                            n = r ? (r = !1,
                            t) : e(n, t, i, o)
                        }),
                        n
                    }
                    function qe(t, e, n) {
                        var r = -1
                          , i = t.length;
                        e = null == e ? 0 : +e || 0,
                        e < 0 && (e = -e > i ? 0 : i + e),
                        n = n === T || n > i ? i : +n || 0,
                        n < 0 && (n += i),
                        i = e > n ? 0 : n - e >>> 0,
                        e >>>= 0;
                        for (var o = Vo(i); ++r < i; )
                            o[r] = t[r + e];
                        return o
                    }
                    function Ze(t, e) {
                        var n;
                        return Ua(t, function(t, r, i) {
                            return n = e(t, r, i),
                            !n
                        }),
                        !!n
                    }
                    function Qe(t, e) {
                        var n = t.length;
                        for (t.sort(e); n--; )
                            t[n] = t[n].value;
                        return t
                    }
                    function Ke(t, e, n) {
                        var r = Vn()
                          , i = -1;
                        e = he(e, function(t) {
                            return r(t)
                        });
                        var o = Fe(t, function(t) {
                            var n = he(e, function(e) {
                                return e(t)
                            });
                            return {
                                criteria: n,
                                index: ++i,
                                value: t
                            }
                        });
                        return Qe(o, function(t, e) {
                            return c(t, e, n)
                        })
                    }
                    function Je(t, e) {
                        var n = 0;
                        return Ua(t, function(t, r, i) {
                            n += +e(t, r, i) || 0
                        }),
                        n
                    }
                    function $e(t, e) {
                        var n = -1
                          , r = Hn()
                          , i = t.length
                          , a = r == o
                          , s = a && i >= G
                          , h = s ? mn() : null
                          , u = [];
                        h ? (r = Kt,
                        a = !1) : (s = !1,
                        h = e ? [] : u);
                        t: for (; ++n < i; ) {
                            var l = t[n]
                              , c = e ? e(l, n, t) : l;
                            if (a && l === l) {
                                for (var p = h.length; p--; )
                                    if (h[p] === c)
                                        continue t;
                                e && h.push(c),
                                u.push(l)
                            } else
                                r(h, c, 0) < 0 && ((e || s) && h.push(c),
                                u.push(l))
                        }
                        return u
                    }
                    function tn(t, e) {
                        for (var n = -1, r = e.length, i = Vo(r); ++n < r; )
                            i[n] = t[e[n]];
                        return i
                    }
                    function en(t, e, n, r) {
                        for (var i = t.length, o = r ? i : -1; (r ? o-- : ++o < i) && e(t[o], o, t); )
                            ;
                        return n ? qe(t, r ? 0 : o, r ? o + 1 : i) : qe(t, r ? o + 1 : 0, r ? i : o)
                    }
                    function nn(t, e) {
                        var n = t;
                        n instanceof K && (n = n.value());
                        for (var r = -1, i = e.length; ++r < i; ) {
                            var o = e[r];
                            n = o.func.apply(o.thisArg, ue([n], o.args))
                        }
                        return n
                    }
                    function rn(t, e, n) {
                        var r = 0
                          , i = t ? t.length : r;
                        if ("number" == typeof e && e === e && i <= Ra) {
                            for (; r < i; ) {
                                var o = r + i >>> 1
                                  , a = t[o];
                                (n ? a <= e : a < e) && null !== a ? r = o + 1 : i = o
                            }
                            return i
                        }
                        return on(t, e, Ao, n)
                    }
                    function on(t, e, n, r) {
                        e = n(e);
                        for (var i = 0, o = t ? t.length : 0, a = e !== e, s = null === e, h = e === T; i < o; ) {
                            var u = ya((i + o) / 2)
                              , l = n(t[u])
                              , c = l !== T
                              , p = l === l;
                            if (a)
                                var f = p || r;
                            else
                                f = s ? p && c && (r || null != l) : h ? p && (r || c) : null != l && (r ? l <= e : l < e);
                            f ? i = u + 1 : o = u
                        }
                        return Ea(o, La)
                    }
                    function an(t, e, n) {
                        if ("function" != typeof t)
                            return Ao;
                        if (e === T)
                            return t;
                        switch (n) {
                        case 1:
                            return function(n) {
                                return t.call(e, n)
                            }
                            ;
                        case 3:
                            return function(n, r, i) {
                                return t.call(e, n, r, i)
                            }
                            ;
                        case 4:
                            return function(n, r, i, o) {
                                return t.call(e, n, r, i, o)
                            }
                            ;
                        case 5:
                            return function(n, r, i, o, a) {
                                return t.call(e, n, r, i, o, a)
                            }
                        }
                        return function() {
                            return t.apply(e, arguments)
                        }
                    }
                    function sn(t) {
                        var e = new aa(t.byteLength)
                          , n = new da(e);
                        return n.set(new da(t)),
                        e
                    }
                    function hn(t, e, n) {
                        for (var r = n.length, i = -1, o = wa(t.length - r, 0), a = -1, s = e.length, h = Vo(s + o); ++a < s; )
                            h[a] = e[a];
                        for (; ++i < r; )
                            h[n[i]] = t[i];
                        for (; o--; )
                            h[a++] = t[i++];
                        return h
                    }
                    function un(t, e, n) {
                        for (var r = -1, i = n.length, o = -1, a = wa(t.length - i, 0), s = -1, h = e.length, u = Vo(a + h); ++o < a; )
                            u[o] = t[o];
                        for (var l = o; ++s < h; )
                            u[l + s] = e[s];
                        for (; ++r < i; )
                            u[l + n[r]] = t[o++];
                        return u
                    }
                    function ln(t, e) {
                        return function(n, r, i) {
                            var o = e ? e() : {};
                            if (r = Vn(r, i, 3),
                            Ps(n))
                                for (var a = -1, s = n.length; ++a < s; ) {
                                    var h = n[a];
                                    t(o, h, r(h, a, n), n)
                                }
                            else
                                Ua(n, function(e, n, i) {
                                    t(o, e, r(e, n, i), i)
                                });
                            return o
                        }
                    }
                    function cn(t) {
                        return gi(function(e, n) {
                            var r = -1
                              , i = null == e ? 0 : n.length
                              , o = i > 2 ? n[i - 2] : T
                              , a = i > 2 ? n[2] : T
                              , s = i > 1 ? n[i - 1] : T;
                            for ("function" == typeof o ? (o = an(o, s, 5),
                            i -= 2) : (o = "function" == typeof s ? s : T,
                            i -= o ? 1 : 0),
                            a && $n(n[0], n[1], a) && (o = i < 3 ? T : o,
                            i = 1); ++r < i; ) {
                                var h = n[r];
                                h && t(e, h, o)
                            }
                            return e
                        })
                    }
                    function pn(t, e) {
                        return function(n, r) {
                            var i = n ? za(n) : 0;
                            if (!nr(i))
                                return t(n, r);
                            for (var o = e ? i : -1, a = cr(n); (e ? o-- : ++o < i) && r(a[o], o, a) !== !1; )
                                ;
                            return n
                        }
                    }
                    function fn(t) {
                        return function(e, n, r) {
                            for (var i = cr(e), o = r(e), a = o.length, s = t ? a : -1; t ? s-- : ++s < a; ) {
                                var h = o[s];
                                if (n(i[h], h, i) === !1)
                                    break
                            }
                            return e
                        }
                    }
                    function dn(t, e) {
                        function n() {
                            var i = this && this !== ne && this instanceof n ? r : t;
                            return i.apply(e, arguments)
                        }
                        var r = gn(t);
                        return n
                    }
                    function mn(t) {
                        return ga && ca ? new Qt(t) : null
                    }
                    function vn(t) {
                        return function(e) {
                            for (var n = -1, r = To(lo(e)), i = r.length, o = ""; ++n < i; )
                                o = t(o, r[n], n);
                            return o
                        }
                    }
                    function gn(t) {
                        return function() {
                            var e = arguments;
                            switch (e.length) {
                            case 0:
                                return new t;
                            case 1:
                                return new t(e[0]);
                            case 2:
                                return new t(e[0],e[1]);
                            case 3:
                                return new t(e[0],e[1],e[2]);
                            case 4:
                                return new t(e[0],e[1],e[2],e[3]);
                            case 5:
                                return new t(e[0],e[1],e[2],e[3],e[4]);
                            case 6:
                                return new t(e[0],e[1],e[2],e[3],e[4],e[5]);
                            case 7:
                                return new t(e[0],e[1],e[2],e[3],e[4],e[5],e[6])
                            }
                            var n = Da(t.prototype)
                              , r = t.apply(n, e);
                            return Ii(r) ? r : n
                        }
                    }
                    function yn(t) {
                        function e(n, r, i) {
                            i && $n(n, r, i) && (r = T);
                            var o = Bn(n, t, T, T, T, T, T, r);
                            return o.placeholder = e.placeholder,
                            o
                        }
                        return e
                    }
                    function _n(t, e) {
                        return gi(function(n) {
                            var r = n[0];
                            return null == r ? r : (n.push(e),
                            t.apply(T, n))
                        })
                    }
                    function xn(t, e) {
                        return function(n, r, i) {
                            if (i && $n(n, r, i) && (r = T),
                            r = Vn(r, i, 3),
                            1 == r.length) {
                                n = Ps(n) ? n : lr(n);
                                var o = ae(n, r, t, e);
                                if (!n.length || o !== e)
                                    return o
                            }
                            return Te(n, r, t, e)
                        }
                    }
                    function bn(t, e) {
                        return function(n, r, o) {
                            if (r = Vn(r, o, 3),
                            Ps(n)) {
                                var a = i(n, r, e);
                                return a > -1 ? n[a] : T
                            }
                            return Ae(n, r, t)
                        }
                    }
                    function wn(t) {
                        return function(e, n, r) {
                            return e && e.length ? (n = Vn(n, r, 3),
                            i(e, n, t)) : -1
                        }
                    }
                    function En(t) {
                        return function(e, n, r) {
                            return n = Vn(n, r, 3),
                            Ae(e, n, t, !0)
                        }
                    }
                    function Sn(t) {
                        return function() {
                            for (var e, n = arguments.length, r = t ? n : -1, i = 0, o = Vo(n); t ? r-- : ++r < n; ) {
                                var a = o[i++] = arguments[r];
                                if ("function" != typeof a)
                                    throw new Qo(H);
                                !e && y.prototype.thru && "wrapper" == zn(a) && (e = new y([],(!0)))
                            }
                            for (r = e ? -1 : n; ++r < n; ) {
                                a = o[r];
                                var s = zn(a)
                                  , h = "wrapper" == s ? Va(a) : T;
                                e = h && er(h[0]) && h[1] == (I | L | k | D) && !h[4].length && 1 == h[9] ? e[zn(h[0])].apply(e, h[3]) : 1 == a.length && er(a) ? e[s]() : e.thru(a)
                            }
                            return function() {
                                var t = arguments
                                  , r = t[0];
                                if (e && 1 == t.length && Ps(r) && r.length >= G)
                                    return e.plant(r).value();
                                for (var i = 0, a = n ? o[i].apply(this, t) : r; ++i < n; )
                                    a = o[i].call(this, a);
                                return a
                            }
                        }
                    }
                    function Tn(t, e) {
                        return function(n, r, i) {
                            return "function" == typeof r && i === T && Ps(n) ? t(n, r) : e(n, an(r, i, 3))
                        }
                    }
                    function Mn(t) {
                        return function(e, n, r) {
                            return "function" == typeof n && r === T || (n = an(n, r, 3)),
                            t(e, n, to)
                        }
                    }
                    function Cn(t) {
                        return function(e, n, r) {
                            return "function" == typeof n && r === T || (n = an(n, r, 3)),
                            t(e, n)
                        }
                    }
                    function An(t) {
                        return function(e, n, r) {
                            var i = {};
                            return n = Vn(n, r, 3),
                            Re(e, function(e, r, o) {
                                var a = n(e, r, o);
                                r = t ? a : r,
                                e = t ? e : a,
                                i[r] = e
                            }),
                            i
                        }
                    }
                    function Pn(t) {
                        return function(e, n, r) {
                            return e = s(e),
                            (t ? e : "") + On(e, n, r) + (t ? "" : e)
                        }
                    }
                    function Ln(t) {
                        var e = gi(function(n, r) {
                            var i = _(r, e.placeholder);
                            return Bn(n, t, T, r, i)
                        });
                        return e
                    }
                    function Rn(t, e) {
                        return function(n, r, i, o) {
                            var a = arguments.length < 3;
                            return "function" == typeof r && o === T && Ps(n) ? t(n, r, i, a) : Ye(n, Vn(r, o, 4), i, a, e)
                        }
                    }
                    function kn(t, e, n, r, i, o, a, s, h, u) {
                        function l() {
                            for (var y = arguments.length, x = y, b = Vo(y); x--; )
                                b[x] = arguments[x];
                            if (r && (b = hn(b, r, i)),
                            o && (b = un(b, o, a)),
                            d || v) {
                                var w = l.placeholder
                                  , E = _(b, w);
                                if (y -= E.length,
                                y < u) {
                                    var S = s ? te(s) : T
                                      , M = wa(u - y, 0)
                                      , P = d ? E : T
                                      , L = d ? T : E
                                      , R = d ? b : T
                                      , I = d ? T : b;
                                    e |= d ? k : O,
                                    e &= ~(d ? O : k),
                                    m || (e &= ~(C | A));
                                    var D = [t, e, n, R, P, I, L, S, h, M]
                                      , U = kn.apply(T, D);
                                    return er(t) && Ha(U, D),
                                    U.placeholder = w,
                                    U
                                }
                            }
                            var B = p ? n : this
                              , F = f ? B[t] : t;
                            return s && (b = hr(b, s)),
                            c && h < b.length && (b.length = h),
                            this && this !== ne && this instanceof l && (F = g || gn(t)),
                            F.apply(B, b)
                        }
                        var c = e & I
                          , p = e & C
                          , f = e & A
                          , d = e & L
                          , m = e & P
                          , v = e & R
                          , g = f ? T : gn(t);
                        return l
                    }
                    function On(t, e, n) {
                        var r = t.length;
                        if (e = +e,
                        r >= e || !xa(e))
                            return "";
                        var i = e - r;
                        return n = null == n ? " " : n + "",
                        go(n, va(i / n.length)).slice(0, i)
                    }
                    function In(t, e, n, r) {
                        function i() {
                            for (var e = -1, s = arguments.length, h = -1, u = r.length, l = Vo(u + s); ++h < u; )
                                l[h] = r[h];
                            for (; s--; )
                                l[h++] = arguments[++e];
                            var c = this && this !== ne && this instanceof i ? a : t;
                            return c.apply(o ? n : this, l)
                        }
                        var o = e & C
                          , a = gn(t);
                        return i
                    }
                    function Dn(t) {
                        var e = Wo[t];
                        return function(t, n) {
                            return n = n === T ? 0 : +n || 0,
                            n ? (n = ua(10, n),
                            e(t * n) / n) : e(t)
                        }
                    }
                    function Un(t) {
                        return function(e, n, r, i) {
                            var o = Vn(r);
                            return null == r && o === xe ? rn(e, n, t) : on(e, n, o(r, i, 1), t)
                        }
                    }
                    function Bn(t, e, n, r, i, o, a, s) {
                        var h = e & A;
                        if (!h && "function" != typeof t)
                            throw new Qo(H);
                        var u = r ? r.length : 0;
                        if (u || (e &= ~(k | O),
                        r = i = T),
                        u -= i ? i.length : 0,
                        e & O) {
                            var l = r
                              , c = i;
                            r = i = T
                        }
                        var p = h ? T : Va(t)
                          , f = [t, e, n, r, i, l, c, o, a, s];
                        if (p && (ir(f, p),
                        e = f[1],
                        s = f[9]),
                        f[9] = null == s ? h ? 0 : t.length : wa(s - u, 0) || 0,
                        e == C)
                            var d = dn(f[0], f[2]);
                        else
                            d = e != k && e != (C | k) || f[4].length ? kn.apply(T, f) : In.apply(T, f);
                        var m = p ? Ga : Ha;
                        return m(d, f)
                    }
                    function Fn(t, e, n, r, i, o, a) {
                        var s = -1
                          , h = t.length
                          , u = e.length;
                        if (h != u && !(i && u > h))
                            return !1;
                        for (; ++s < h; ) {
                            var l = t[s]
                              , c = e[s]
                              , p = r ? r(i ? c : l, i ? l : c, s) : T;
                            if (p !== T) {
                                if (p)
                                    continue;return !1
                            }
                            if (i) {
                                if (!pe(e, function(t) {
                                    return l === t || n(l, t, r, i, o, a)
                                }))
                                    return !1
                            } else if (l !== c && !n(l, c, r, i, o, a))
                                return !1
                        }
                        return !0
                    }
                    function Nn(t, e, n) {
                        switch (n) {
                        case Y:
                        case q:
                            return +t == +e;
                        case Z:
                            return t.name == e.name && t.message == e.message;
                        case J:
                            return t != +t ? e != +e : t == +e;
                        case tt:
                        case nt:
                            return t == e + ""
                        }
                        return !1
                    }
                    function Gn(t, e, n, r, i, o, a) {
                        var s = Gs(t)
                          , h = s.length
                          , u = Gs(e)
                          , l = u.length;
                        if (h != l && !i)
                            return !1;
                        for (var c = h; c--; ) {
                            var p = s[c];
                            if (!(i ? p in e : ea.call(e, p)))
                                return !1
                        }
                        for (var f = i; ++c < h; ) {
                            p = s[c];
                            var d = t[p]
                              , m = e[p]
                              , v = r ? r(i ? m : d, i ? d : m, p) : T;
                            if (!(v === T ? n(d, m, r, i, o, a) : v))
                                return !1;
                            f || (f = "constructor" == p)
                        }
                        if (!f) {
                            var g = t.constructor
                              , y = e.constructor;
                            if (g != y && "constructor"in t && "constructor"in e && !("function" == typeof g && g instanceof g && "function" == typeof y && y instanceof y))
                                return !1
                        }
                        return !0
                    }
                    function Vn(t, n, r) {
                        var i = e.callback || Mo;
                        return i = i === Mo ? xe : i,
                        r ? i(t, n, r) : i
                    }
                    function zn(t) {
                        for (var e = t.name, n = Ia[e], r = n ? n.length : 0; r--; ) {
                            var i = n[r]
                              , o = i.func;
                            if (null == o || o == t)
                                return i.name
                        }
                        return e
                    }
                    function Hn(t, n, r) {
                        var i = e.indexOf || Sr;
                        return i = i === Sr ? o : i,
                        t ? i(t, n, r) : i
                    }
                    function jn(t) {
                        for (var e = eo(t), n = e.length; n--; )
                            e[n][2] = rr(e[n][1]);
                        return e
                    }
                    function Wn(t, e) {
                        var n = null == t ? T : t[e];
                        return Bi(n) ? n : T
                    }
                    function Xn(t, e, n) {
                        for (var r = -1, i = n.length; ++r < i; ) {
                            var o = n[r]
                              , a = o.size;
                            switch (o.type) {
                            case "drop":
                                t += a;
                                break;
                            case "dropRight":
                                e -= a;
                                break;
                            case "take":
                                e = Ea(e, t + a);
                                break;
                            case "takeRight":
                                t = wa(t, e - a)
                            }
                        }
                        return {
                            start: t,
                            end: e
                        }
                    }
                    function Yn(t) {
                        var e = t.length
                          , n = new t.constructor(e);
                        return e && "string" == typeof t[0] && ea.call(t, "index") && (n.index = t.index,
                        n.input = t.input),
                        n
                    }
                    function qn(t) {
                        var e = t.constructor;
                        return "function" == typeof e && e instanceof e || (e = Yo),
                        new e
                    }
                    function Zn(t, e, n) {
                        var r = t.constructor;
                        switch (e) {
                        case it:
                            return sn(t);
                        case Y:
                        case q:
                            return new r((+t));
                        case ot:
                        case at:
                        case st:
                        case ht:
                        case ut:
                        case lt:
                        case ct:
                        case pt:
                        case ft:
                            var i = t.buffer;
                            return new r(n ? sn(i) : i,t.byteOffset,t.length);
                        case J:
                        case nt:
                            return new r(t);
                        case tt:
                            var o = new r(t.source,kt.exec(t));
                            o.lastIndex = t.lastIndex
                        }
                        return o
                    }
                    function Qn(t, e, n) {
                        null == t || tr(e, t) || (e = pr(e),
                        t = 1 == e.length ? t : Ie(t, qe(e, 0, -1)),
                        e = Mr(e));
                        var r = null == t ? t : t[e];
                        return null == r ? T : r.apply(t, n)
                    }
                    function Kn(t) {
                        return null != t && nr(za(t))
                    }
                    function Jn(t, e) {
                        return t = "number" == typeof t || Dt.test(t) ? +t : -1,
                        e = null == e ? ka : e,
                        t > -1 && t % 1 == 0 && t < e
                    }
                    function $n(t, e, n) {
                        if (!Ii(n))
                            return !1;
                        var r = typeof e;
                        if ("number" == r ? Kn(n) && Jn(e, n.length) : "string" == r && e in n) {
                            var i = n[e];
                            return t === t ? t === i : i !== i
                        }
                        return !1
                    }
                    function tr(t, e) {
                        var n = typeof t;
                        if ("string" == n && Tt.test(t) || "number" == n)
                            return !0;
                        if (Ps(t))
                            return !1;
                        var r = !St.test(t);
                        return r || null != e && t in cr(e)
                    }
                    function er(t) {
                        var n = zn(t);
                        if (!(n in K.prototype))
                            return !1;
                        var r = e[n];
                        if (t === r)
                            return !0;
                        var i = Va(r);
                        return !!i && t === i[0]
                    }
                    function nr(t) {
                        return "number" == typeof t && t > -1 && t % 1 == 0 && t <= ka
                    }
                    function rr(t) {
                        return t === t && !Ii(t)
                    }
                    function ir(t, e) {
                        var n = t[1]
                          , r = e[1]
                          , i = n | r
                          , o = i < I
                          , a = r == I && n == L || r == I && n == D && t[7].length <= e[8] || r == (I | D) && n == L;
                        if (!o && !a)
                            return t;
                        r & C && (t[2] = e[2],
                        i |= n & C ? 0 : P);
                        var s = e[3];
                        if (s) {
                            var h = t[3];
                            t[3] = h ? hn(h, s, e[4]) : te(s),
                            t[4] = h ? _(t[3], j) : te(e[4])
                        }
                        return s = e[5],
                        s && (h = t[5],
                        t[5] = h ? un(h, s, e[6]) : te(s),
                        t[6] = h ? _(t[5], j) : te(e[6])),
                        s = e[7],
                        s && (t[7] = te(s)),
                        r & I && (t[8] = null == t[8] ? e[8] : Ea(t[8], e[8])),
                        null == t[9] && (t[9] = e[9]),
                        t[0] = e[0],
                        t[1] = i,
                        t
                    }
                    function or(t, e) {
                        return t === T ? e : Ls(t, e, or)
                    }
                    function ar(t, e) {
                        t = cr(t);
                        for (var n = -1, r = e.length, i = {}; ++n < r; ) {
                            var o = e[n];
                            o in t && (i[o] = t[o])
                        }
                        return i
                    }
                    function sr(t, e) {
                        var n = {};
                        return Le(t, function(t, r, i) {
                            e(t, r, i) && (n[r] = t)
                        }),
                        n
                    }
                    function hr(t, e) {
                        for (var n = t.length, r = Ea(e.length, n), i = te(t); r--; ) {
                            var o = e[r];
                            t[r] = Jn(o, n) ? i[o] : T
                        }
                        return t
                    }
                    function ur(t) {
                        for (var e = to(t), n = e.length, r = n && t.length, i = !!r && nr(r) && (Ps(t) || Ti(t)), o = -1, a = []; ++o < n; ) {
                            var s = e[o];
                            (i && Jn(s, r) || ea.call(t, s)) && a.push(s)
                        }
                        return a
                    }
                    function lr(t) {
                        return null == t ? [] : Kn(t) ? Ii(t) ? t : Yo(t) : oo(t)
                    }
                    function cr(t) {
                        return Ii(t) ? t : Yo(t)
                    }
                    function pr(t) {
                        if (Ps(t))
                            return t;
                        var e = [];
                        return s(t).replace(Mt, function(t, n, r, i) {
                            e.push(r ? i.replace(Lt, "$1") : n || t)
                        }),
                        e
                    }
                    function fr(t) {
                        return t instanceof K ? t.clone() : new y(t.__wrapped__,t.__chain__,te(t.__actions__))
                    }
                    function dr(t, e, n) {
                        e = (n ? $n(t, e, n) : null == e) ? 1 : wa(ya(e) || 1, 1);
                        for (var r = 0, i = t ? t.length : 0, o = -1, a = Vo(va(i / e)); r < i; )
                            a[++o] = qe(t, r, r += e);
                        return a
                    }
                    function mr(t) {
                        for (var e = -1, n = t ? t.length : 0, r = -1, i = []; ++e < n; ) {
                            var o = t[e];
                            o && (i[++r] = o)
                        }
                        return i
                    }
                    function vr(t, e, n) {
                        var r = t ? t.length : 0;
                        return r ? ((n ? $n(t, e, n) : null == e) && (e = 1),
                        qe(t, e < 0 ? 0 : e)) : []
                    }
                    function gr(t, e, n) {
                        var r = t ? t.length : 0;
                        return r ? ((n ? $n(t, e, n) : null == e) && (e = 1),
                        e = r - (+e || 0),
                        qe(t, 0, e < 0 ? 0 : e)) : []
                    }
                    function yr(t, e, n) {
                        return t && t.length ? en(t, Vn(e, n, 3), !0, !0) : []
                    }
                    function _r(t, e, n) {
                        return t && t.length ? en(t, Vn(e, n, 3), !0) : []
                    }
                    function xr(t, e, n, r) {
                        var i = t ? t.length : 0;
                        return i ? (n && "number" != typeof n && $n(t, e, n) && (n = 0,
                        r = i),
                        Me(t, e, n, r)) : []
                    }
                    function br(t) {
                        return t ? t[0] : T
                    }
                    function wr(t, e, n) {
                        var r = t ? t.length : 0;
                        return n && $n(t, e, n) && (e = !1),
                        r ? Pe(t, e) : []
                    }
                    function Er(t) {
                        var e = t ? t.length : 0;
                        return e ? Pe(t, !0) : []
                    }
                    function Sr(t, e, n) {
                        var r = t ? t.length : 0;
                        if (!r)
                            return -1;
                        if ("number" == typeof n)
                            n = n < 0 ? wa(r + n, 0) : n;
                        else if (n) {
                            var i = rn(t, e);
                            return i < r && (e === e ? e === t[i] : t[i] !== t[i]) ? i : -1
                        }
                        return o(t, e, n || 0)
                    }
                    function Tr(t) {
                        return gr(t, 1)
                    }
                    function Mr(t) {
                        var e = t ? t.length : 0;
                        return e ? t[e - 1] : T
                    }
                    function Cr(t, e, n) {
                        var r = t ? t.length : 0;
                        if (!r)
                            return -1;
                        var i = r;
                        if ("number" == typeof n)
                            i = (n < 0 ? wa(r + n, 0) : Ea(n || 0, r - 1)) + 1;
                        else if (n) {
                            i = rn(t, e, !0) - 1;
                            var o = t[i];
                            return (e === e ? e === o : o !== o) ? i : -1
                        }
                        if (e !== e)
                            return v(t, i, !0);
                        for (; i--; )
                            if (t[i] === e)
                                return i;
                        return -1
                    }
                    function Ar() {
                        var t = arguments
                          , e = t[0];
                        if (!e || !e.length)
                            return e;
                        for (var n = 0, r = Hn(), i = t.length; ++n < i; )
                            for (var o = 0, a = t[n]; (o = r(e, a, o)) > -1; )
                                fa.call(e, o, 1);
                        return e
                    }
                    function Pr(t, e, n) {
                        var r = [];
                        if (!t || !t.length)
                            return r;
                        var i = -1
                          , o = []
                          , a = t.length;
                        for (e = Vn(e, n, 3); ++i < a; ) {
                            var s = t[i];
                            e(s, i, t) && (r.push(s),
                            o.push(i))
                        }
                        return We(t, o),
                        r
                    }
                    function Lr(t) {
                        return vr(t, 1)
                    }
                    function Rr(t, e, n) {
                        var r = t ? t.length : 0;
                        return r ? (n && "number" != typeof n && $n(t, e, n) && (e = 0,
                        n = r),
                        qe(t, e, n)) : []
                    }
                    function kr(t, e, n) {
                        var r = t ? t.length : 0;
                        return r ? ((n ? $n(t, e, n) : null == e) && (e = 1),
                        qe(t, 0, e < 0 ? 0 : e)) : []
                    }
                    function Or(t, e, n) {
                        var r = t ? t.length : 0;
                        return r ? ((n ? $n(t, e, n) : null == e) && (e = 1),
                        e = r - (+e || 0),
                        qe(t, e < 0 ? 0 : e)) : []
                    }
                    function Ir(t, e, n) {
                        return t && t.length ? en(t, Vn(e, n, 3), !1, !0) : []
                    }
                    function Dr(t, e, n) {
                        return t && t.length ? en(t, Vn(e, n, 3)) : []
                    }
                    function Ur(t, e, n, r) {
                        var i = t ? t.length : 0;
                        if (!i)
                            return [];
                        null != e && "boolean" != typeof e && (r = n,
                        n = $n(t, e, r) ? T : e,
                        e = !1);
                        var a = Vn();
                        return null == n && a === xe || (n = a(n, r, 3)),
                        e && Hn() == o ? x(t, n) : $e(t, n)
                    }
                    function Br(t) {
                        if (!t || !t.length)
                            return [];
                        var e = -1
                          , n = 0;
                        t = se(t, function(t) {
                            if (Kn(t))
                                return n = wa(t.length, n),
                                !0
                        });
                        for (var r = Vo(n); ++e < n; )
                            r[e] = he(t, He(e));
                        return r
                    }
                    function Fr(t, e, n) {
                        var r = t ? t.length : 0;
                        if (!r)
                            return [];
                        var i = Br(t);
                        return null == e ? i : (e = an(e, n, 4),
                        he(i, function(t) {
                            return le(t, e, T, !0)
                        }))
                    }
                    function Nr() {
                        for (var t = -1, e = arguments.length; ++t < e; ) {
                            var n = arguments[t];
                            if (Kn(n))
                                var r = r ? ue(Ee(r, n), Ee(n, r)) : n
                        }
                        return r ? $e(r) : []
                    }
                    function Gr(t, e) {
                        var n = -1
                          , r = t ? t.length : 0
                          , i = {};
                        for (!r || e || Ps(t[0]) || (e = []); ++n < r; ) {
                            var o = t[n];
                            e ? i[o] = e[n] : o && (i[o[0]] = o[1])
                        }
                        return i
                    }
                    function Vr(t) {
                        var n = e(t);
                        return n.__chain__ = !0,
                        n
                    }
                    function zr(t, e, n) {
                        return e.call(n, t),
                        t
                    }
                    function Hr(t, e, n) {
                        return e.call(n, t)
                    }
                    function jr() {
                        return Vr(this)
                    }
                    function Wr() {
                        return new y(this.value(),this.__chain__)
                    }
                    function Xr(t) {
                        for (var e, r = this; r instanceof n; ) {
                            var i = fr(r);
                            e ? o.__wrapped__ = i : e = i;
                            var o = i;
                            r = r.__wrapped__
                        }
                        return o.__wrapped__ = t,
                        e
                    }
                    function Yr() {
                        var t = this.__wrapped__
                          , e = function(t) {
                            return n && n.__dir__ < 0 ? t : t.reverse()
                        }
                        ;
                        if (t instanceof K) {
                            var n = t;
                            return this.__actions__.length && (n = new K(this)),
                            n = n.reverse(),
                            n.__actions__.push({
                                func: Hr,
                                args: [e],
                                thisArg: T
                            }),
                            new y(n,this.__chain__)
                        }
                        return this.thru(e)
                    }
                    function qr() {
                        return this.value() + ""
                    }
                    function Zr() {
                        return nn(this.__wrapped__, this.__actions__)
                    }
                    function Qr(t, e, n) {
                        var r = Ps(t) ? oe : Se;
                        return n && $n(t, e, n) && (e = T),
                        "function" == typeof e && n === T || (e = Vn(e, n, 3)),
                        r(t, e)
                    }
                    function Kr(t, e, n) {
                        var r = Ps(t) ? se : Ce;
                        return e = Vn(e, n, 3),
                        r(t, e)
                    }
                    function Jr(t, e) {
                        return is(t, Ne(e))
                    }
                    function $r(t, e, n, r) {
                        var i = t ? za(t) : 0;
                        return nr(i) || (t = oo(t),
                        i = t.length),
                        n = "number" != typeof n || r && $n(e, n, r) ? 0 : n < 0 ? wa(i + n, 0) : n || 0,
                        "string" == typeof t || !Ps(t) && zi(t) ? n <= i && t.indexOf(e, n) > -1 : !!i && Hn(t, e, n) > -1
                    }
                    function ti(t, e, n) {
                        var r = Ps(t) ? he : Fe;
                        return e = Vn(e, n, 3),
                        r(t, e)
                    }
                    function ei(t, e) {
                        return ti(t, Io(e))
                    }
                    function ni(t, e, n) {
                        var r = Ps(t) ? se : Ce;
                        return e = Vn(e, n, 3),
                        r(t, function(t, n, r) {
                            return !e(t, n, r)
                        })
                    }
                    function ri(t, e, n) {
                        if (n ? $n(t, e, n) : null == e) {
                            t = lr(t);
                            var r = t.length;
                            return r > 0 ? t[Xe(0, r - 1)] : T
                        }
                        var i = -1
                          , o = Yi(t)
                          , r = o.length
                          , a = r - 1;
                        for (e = Ea(e < 0 ? 0 : +e || 0, r); ++i < e; ) {
                            var s = Xe(i, a)
                              , h = o[s];
                            o[s] = o[i],
                            o[i] = h
                        }
                        return o.length = e,
                        o
                    }
                    function ii(t) {
                        return ri(t, Aa)
                    }
                    function oi(t) {
                        var e = t ? za(t) : 0;
                        return nr(e) ? e : Gs(t).length
                    }
                    function ai(t, e, n) {
                        var r = Ps(t) ? pe : Ze;
                        return n && $n(t, e, n) && (e = T),
                        "function" == typeof e && n === T || (e = Vn(e, n, 3)),
                        r(t, e)
                    }
                    function si(t, e, n) {
                        if (null == t)
                            return [];
                        n && $n(t, e, n) && (e = T);
                        var r = -1;
                        e = Vn(e, n, 3);
                        var i = Fe(t, function(t, n, i) {
                            return {
                                criteria: e(t, n, i),
                                index: ++r,
                                value: t
                            }
                        });
                        return Qe(i, l)
                    }
                    function hi(t, e, n, r) {
                        return null == t ? [] : (r && $n(e, n, r) && (n = T),
                        Ps(e) || (e = null == e ? [] : [e]),
                        Ps(n) || (n = null == n ? [] : [n]),
                        Ke(t, e, n))
                    }
                    function ui(t, e) {
                        return Kr(t, Ne(e))
                    }
                    function li(t, e) {
                        if ("function" != typeof e) {
                            if ("function" != typeof t)
                                throw new Qo(H);
                            var n = t;
                            t = e,
                            e = n
                        }
                        return t = xa(t = +t) ? t : 0,
                        function() {
                            if (--t < 1)
                                return e.apply(this, arguments)
                        }
                    }
                    function ci(t, e, n) {
                        return n && $n(t, e, n) && (e = T),
                        e = t && null == e ? t.length : wa(+e || 0, 0),
                        Bn(t, I, T, T, T, T, e)
                    }
                    function pi(t, e) {
                        var n;
                        if ("function" != typeof e) {
                            if ("function" != typeof t)
                                throw new Qo(H);
                            var r = t;
                            t = e,
                            e = r
                        }
                        return function() {
                            return --t > 0 && (n = e.apply(this, arguments)),
                            t <= 1 && (e = T),
                            n
                        }
                    }
                    function fi(t, e, n) {
                        function r() {
                            f && sa(f),
                            u && sa(u),
                            m = 0,
                            u = f = d = T
                        }
                        function i(e, n) {
                            n && sa(n),
                            u = f = d = T,
                            e && (m = ms(),
                            l = t.apply(p, h),
                            f || u || (h = p = T))
                        }
                        function o() {
                            var t = e - (ms() - c);
                            t <= 0 || t > e ? i(d, u) : f = pa(o, t)
                        }
                        function a() {
                            i(g, f)
                        }
                        function s() {
                            if (h = arguments,
                            c = ms(),
                            p = this,
                            d = g && (f || !y),
                            v === !1)
                                var n = y && !f;
                            else {
                                u || y || (m = c);
                                var r = v - (c - m)
                                  , i = r <= 0 || r > v;
                                i ? (u && (u = sa(u)),
                                m = c,
                                l = t.apply(p, h)) : u || (u = pa(a, r))
                            }
                            return i && f ? f = sa(f) : f || e === v || (f = pa(o, e)),
                            n && (i = !0,
                            l = t.apply(p, h)),
                            !i || f || u || (h = p = T),
                            l
                        }
                        var h, u, l, c, p, f, d, m = 0, v = !1, g = !0;
                        if ("function" != typeof t)
                            throw new Qo(H);
                        if (e = e < 0 ? 0 : +e || 0,
                        n === !0) {
                            var y = !0;
                            g = !1
                        } else
                            Ii(n) && (y = !!n.leading,
                            v = "maxWait"in n && wa(+n.maxWait || 0, e),
                            g = "trailing"in n ? !!n.trailing : g);
                        return s.cancel = r,
                        s
                    }
                    function di(t, e) {
                        if ("function" != typeof t || e && "function" != typeof e)
                            throw new Qo(H);
                        var n = function() {
                            var r = arguments
                              , i = e ? e.apply(this, r) : r[0]
                              , o = n.cache;
                            if (o.has(i))
                                return o.get(i);
                            var a = t.apply(this, r);
                            return n.cache = o.set(i, a),
                            a
                        }
                        ;
                        return n.cache = new di.Cache,
                        n
                    }
                    function mi(t) {
                        if ("function" != typeof t)
                            throw new Qo(H);
                        return function() {
                            return !t.apply(this, arguments)
                        }
                    }
                    function vi(t) {
                        return pi(2, t)
                    }
                    function gi(t, e) {
                        if ("function" != typeof t)
                            throw new Qo(H);
                        return e = wa(e === T ? t.length - 1 : +e || 0, 0),
                        function() {
                            for (var n = arguments, r = -1, i = wa(n.length - e, 0), o = Vo(i); ++r < i; )
                                o[r] = n[e + r];
                            switch (e) {
                            case 0:
                                return t.call(this, o);
                            case 1:
                                return t.call(this, n[0], o);
                            case 2:
                                return t.call(this, n[0], n[1], o)
                            }
                            var a = Vo(e + 1);
                            for (r = -1; ++r < e; )
                                a[r] = n[r];
                            return a[e] = o,
                            t.apply(this, a)
                        }
                    }
                    function yi(t) {
                        if ("function" != typeof t)
                            throw new Qo(H);
                        return function(e) {
                            return t.apply(this, e)
                        }
                    }
                    function _i(t, e, n) {
                        var r = !0
                          , i = !0;
                        if ("function" != typeof t)
                            throw new Qo(H);
                        return n === !1 ? r = !1 : Ii(n) && (r = "leading"in n ? !!n.leading : r,
                        i = "trailing"in n ? !!n.trailing : i),
                        fi(t, e, {
                            leading: r,
                            maxWait: +e,
                            trailing: i
                        })
                    }
                    function xi(t, e) {
                        return e = null == e ? Ao : e,
                        Bn(e, k, T, [t], [])
                    }
                    function bi(t, e, n, r) {
                        return e && "boolean" != typeof e && $n(t, e, n) ? e = !1 : "function" == typeof e && (r = n,
                        n = e,
                        e = !1),
                        "function" == typeof n ? be(t, e, an(n, r, 1)) : be(t, e)
                    }
                    function wi(t, e, n) {
                        return "function" == typeof e ? be(t, !0, an(e, n, 1)) : be(t, !0)
                    }
                    function Ei(t, e) {
                        return t > e
                    }
                    function Si(t, e) {
                        return t >= e
                    }
                    function Ti(t) {
                        return g(t) && Kn(t) && ea.call(t, "callee") && !la.call(t, "callee")
                    }
                    function Mi(t) {
                        return t === !0 || t === !1 || g(t) && ra.call(t) == Y
                    }
                    function Ci(t) {
                        return g(t) && ra.call(t) == q
                    }
                    function Ai(t) {
                        return !!t && 1 === t.nodeType && g(t) && !Gi(t)
                    }
                    function Pi(t) {
                        return null == t || (Kn(t) && (Ps(t) || zi(t) || Ti(t) || g(t) && Oi(t.splice)) ? !t.length : !Gs(t).length)
                    }
                    function Li(t, e, n, r) {
                        n = "function" == typeof n ? an(n, r, 3) : T;
                        var i = n ? n(t, e) : T;
                        return i === T ? De(t, e, n) : !!i
                    }
                    function Ri(t) {
                        return g(t) && "string" == typeof t.message && ra.call(t) == Z
                    }
                    function ki(t) {
                        return "number" == typeof t && xa(t)
                    }
                    function Oi(t) {
                        return Ii(t) && ra.call(t) == Q
                    }
                    function Ii(t) {
                        var e = typeof t;
                        return !!t && ("object" == e || "function" == e)
                    }
                    function Di(t, e, n, r) {
                        return n = "function" == typeof n ? an(n, r, 3) : T,
                        Be(t, jn(e), n)
                    }
                    function Ui(t) {
                        return Ni(t) && t != +t
                    }
                    function Bi(t) {
                        return null != t && (Oi(t) ? oa.test(ta.call(t)) : g(t) && It.test(t))
                    }
                    function Fi(t) {
                        return null === t
                    }
                    function Ni(t) {
                        return "number" == typeof t || g(t) && ra.call(t) == J
                    }
                    function Gi(t) {
                        var e;
                        if (!g(t) || ra.call(t) != $ || Ti(t) || !ea.call(t, "constructor") && (e = t.constructor,
                        "function" == typeof e && !(e instanceof e)))
                            return !1;
                        var n;
                        return Le(t, function(t, e) {
                            n = e
                        }),
                        n === T || ea.call(t, n)
                    }
                    function Vi(t) {
                        return Ii(t) && ra.call(t) == tt
                    }
                    function zi(t) {
                        return "string" == typeof t || g(t) && ra.call(t) == nt
                    }
                    function Hi(t) {
                        return g(t) && nr(t.length) && !!zt[ra.call(t)]
                    }
                    function ji(t) {
                        return t === T
                    }
                    function Wi(t, e) {
                        return t < e
                    }
                    function Xi(t, e) {
                        return t <= e
                    }
                    function Yi(t) {
                        var e = t ? za(t) : 0;
                        return nr(e) ? e ? te(t) : [] : oo(t)
                    }
                    function qi(t) {
                        return _e(t, to(t))
                    }
                    function Zi(t, e, n) {
                        var r = Da(t);
                        return n && $n(t, e, n) && (e = T),
                        e ? ge(r, e) : r
                    }
                    function Qi(t) {
                        return Oe(t, to(t))
                    }
                    function Ki(t, e, n) {
                        var r = null == t ? T : Ie(t, pr(e), e + "");
                        return r === T ? n : r
                    }
                    function Ji(t, e) {
                        if (null == t)
                            return !1;
                        var n = ea.call(t, e);
                        if (!n && !tr(e)) {
                            if (e = pr(e),
                            t = 1 == e.length ? t : Ie(t, qe(e, 0, -1)),
                            null == t)
                                return !1;
                            e = Mr(e),
                            n = ea.call(t, e)
                        }
                        return n || nr(t.length) && Jn(e, t.length) && (Ps(t) || Ti(t))
                    }
                    function $i(t, e, n) {
                        n && $n(t, e, n) && (e = T);
                        for (var r = -1, i = Gs(t), o = i.length, a = {}; ++r < o; ) {
                            var s = i[r]
                              , h = t[s];
                            e ? ea.call(a, h) ? a[h].push(s) : a[h] = [s] : a[h] = s
                        }
                        return a
                    }
                    function to(t) {
                        if (null == t)
                            return [];
                        Ii(t) || (t = Yo(t));
                        var e = t.length;
                        e = e && nr(e) && (Ps(t) || Ti(t)) && e || 0;
                        for (var n = t.constructor, r = -1, i = "function" == typeof n && n.prototype === t, o = Vo(e), a = e > 0; ++r < e; )
                            o[r] = r + "";
                        for (var s in t)
                            a && Jn(s, e) || "constructor" == s && (i || !ea.call(t, s)) || o.push(s);
                        return o
                    }
                    function eo(t) {
                        t = cr(t);
                        for (var e = -1, n = Gs(t), r = n.length, i = Vo(r); ++e < r; ) {
                            var o = n[e];
                            i[e] = [o, t[o]]
                        }
                        return i
                    }
                    function no(t, e, n) {
                        var r = null == t ? T : t[e];
                        return r === T && (null == t || tr(e, t) || (e = pr(e),
                        t = 1 == e.length ? t : Ie(t, qe(e, 0, -1)),
                        r = null == t ? T : t[Mr(e)]),
                        r = r === T ? n : r),
                        Oi(r) ? r.call(t) : r
                    }
                    function ro(t, e, n) {
                        if (null == t)
                            return t;
                        var r = e + "";
                        e = null != t[r] || tr(e, t) ? [r] : pr(e);
                        for (var i = -1, o = e.length, a = o - 1, s = t; null != s && ++i < o; ) {
                            var h = e[i];
                            Ii(s) && (i == a ? s[h] = n : null == s[h] && (s[h] = Jn(e[i + 1]) ? [] : {})),
                            s = s[h]
                        }
                        return t
                    }
                    function io(t, e, n, r) {
                        var i = Ps(t) || Hi(t);
                        if (e = Vn(e, r, 4),
                        null == n)
                            if (i || Ii(t)) {
                                var o = t.constructor;
                                n = i ? Ps(t) ? new o : [] : Da(Oi(o) ? o.prototype : T)
                            } else
                                n = {};
                        return (i ? ee : Re)(t, function(t, r, i) {
                            return e(n, t, r, i)
                        }),
                        n
                    }
                    function oo(t) {
                        return tn(t, Gs(t))
                    }
                    function ao(t) {
                        return tn(t, to(t))
                    }
                    function so(t, e, n) {
                        return e = +e || 0,
                        n === T ? (n = e,
                        e = 0) : n = +n || 0,
                        t >= Ea(e, n) && t < wa(e, n)
                    }
                    function ho(t, e, n) {
                        n && $n(t, e, n) && (e = n = T);
                        var r = null == t
                          , i = null == e;
                        if (null == n && (i && "boolean" == typeof t ? (n = t,
                        t = 1) : "boolean" == typeof e && (n = e,
                        i = !0)),
                        r && i && (e = 1,
                        i = !1),
                        t = +t || 0,
                        i ? (e = t,
                        t = 0) : e = +e || 0,
                        n || t % 1 || e % 1) {
                            var o = Ma();
                            return Ea(t + o * (e - t + ha("1e-" + ((o + "").length - 1))), e)
                        }
                        return Xe(t, e)
                    }
                    function uo(t) {
                        return t = s(t),
                        t && t.charAt(0).toUpperCase() + t.slice(1)
                    }
                    function lo(t) {
                        return t = s(t),
                        t && t.replace(Ut, p).replace(Pt, "")
                    }
                    function co(t, e, n) {
                        t = s(t),
                        e += "";
                        var r = t.length;
                        return n = n === T ? r : Ea(n < 0 ? 0 : +n || 0, r),
                        n -= e.length,
                        n >= 0 && t.indexOf(e, n) == n
                    }
                    function po(t) {
                        return t = s(t),
                        t && xt.test(t) ? t.replace(yt, f) : t
                    }
                    function fo(t) {
                        return t = s(t),
                        t && At.test(t) ? t.replace(Ct, d) : t || "(?:)"
                    }
                    function mo(t, e, n) {
                        t = s(t),
                        e = +e;
                        var r = t.length;
                        if (r >= e || !xa(e))
                            return t;
                        var i = (e - r) / 2
                          , o = ya(i)
                          , a = va(i);
                        return n = On("", a, n),
                        n.slice(0, o) + t + n
                    }
                    function vo(t, e, n) {
                        return (n ? $n(t, e, n) : null == e) ? e = 0 : e && (e = +e),
                        t = xo(t),
                        Ta(t, e || (Ot.test(t) ? 16 : 10))
                    }
                    function go(t, e) {
                        var n = "";
                        if (t = s(t),
                        e = +e,
                        e < 1 || !t || !xa(e))
                            return n;
                        do
                            e % 2 && (n += t),
                            e = ya(e / 2),
                            t += t;
                        while (e);return n
                    }
                    function yo(t, e, n) {
                        return t = s(t),
                        n = null == n ? 0 : Ea(n < 0 ? 0 : +n || 0, t.length),
                        t.lastIndexOf(e, n) == n
                    }
                    function _o(t, n, r) {
                        var i = e.templateSettings;
                        r && $n(t, n, r) && (n = r = T),
                        t = s(t),
                        n = ve(ge({}, r || n), i, me);
                        var o, a, h = ve(ge({}, n.imports), i.imports, me), u = Gs(h), l = tn(h, u), c = 0, p = n.interpolate || Bt, f = "__p += '", d = qo((n.escape || Bt).source + "|" + p.source + "|" + (p === Et ? Rt : Bt).source + "|" + (n.evaluate || Bt).source + "|$", "g"), v = "//# sourceURL=" + ("sourceURL"in n ? n.sourceURL : "lodash.templateSources[" + ++Vt + "]") + "\n";
                        t.replace(d, function(e, n, r, i, s, h) {
                            return r || (r = i),
                            f += t.slice(c, h).replace(Ft, m),
                            n && (o = !0,
                            f += "' +\n__e(" + n + ") +\n'"),
                            s && (a = !0,
                            f += "';\n" + s + ";\n__p += '"),
                            r && (f += "' +\n((__t = (" + r + ")) == null ? '' : __t) +\n'"),
                            c = h + e.length,
                            e
                        }),
                        f += "';\n";
                        var g = n.variable;
                        g || (f = "with (obj) {\n" + f + "\n}\n"),
                        f = (a ? f.replace(dt, "") : f).replace(mt, "$1").replace(vt, "$1;"),
                        f = "function(" + (g || "obj") + ") {\n" + (g ? "" : "obj || (obj = {});\n") + "var __t, __p = ''" + (o ? ", __e = _.escape" : "") + (a ? ", __j = Array.prototype.join;\nfunction print() { __p += __j.call(arguments, '') }\n" : ";\n") + f + "return __p\n}";
                        var y = Ks(function() {
                            return jo(u, v + "return " + f).apply(T, l)
                        });
                        if (y.source = f,
                        Ri(y))
                            throw y;
                        return y
                    }
                    function xo(t, e, n) {
                        var r = t;
                        return (t = s(t)) ? (n ? $n(r, e, n) : null == e) ? t.slice(b(t), w(t) + 1) : (e += "",
                        t.slice(h(t, e), u(t, e) + 1)) : t
                    }
                    function bo(t, e, n) {
                        var r = t;
                        return t = s(t),
                        t ? (n ? $n(r, e, n) : null == e) ? t.slice(b(t)) : t.slice(h(t, e + "")) : t
                    }
                    function wo(t, e, n) {
                        var r = t;
                        return t = s(t),
                        t ? (n ? $n(r, e, n) : null == e) ? t.slice(0, w(t) + 1) : t.slice(0, u(t, e + "") + 1) : t
                    }
                    function Eo(t, e, n) {
                        n && $n(t, e, n) && (e = T);
                        var r = U
                          , i = B;
                        if (null != e)
                            if (Ii(e)) {
                                var o = "separator"in e ? e.separator : o;
                                r = "length"in e ? +e.length || 0 : r,
                                i = "omission"in e ? s(e.omission) : i
                            } else
                                r = +e || 0;
                        if (t = s(t),
                        r >= t.length)
                            return t;
                        var a = r - i.length;
                        if (a < 1)
                            return i;
                        var h = t.slice(0, a);
                        if (null == o)
                            return h + i;
                        if (Vi(o)) {
                            if (t.slice(a).search(o)) {
                                var u, l, c = t.slice(0, a);
                                for (o.global || (o = qo(o.source, (kt.exec(o) || "") + "g")),
                                o.lastIndex = 0; u = o.exec(c); )
                                    l = u.index;
                                h = h.slice(0, null == l ? a : l)
                            }
                        } else if (t.indexOf(o, a) != a) {
                            var p = h.lastIndexOf(o);
                            p > -1 && (h = h.slice(0, p))
                        }
                        return h + i
                    }
                    function So(t) {
                        return t = s(t),
                        t && _t.test(t) ? t.replace(gt, E) : t
                    }
                    function To(t, e, n) {
                        return n && $n(t, e, n) && (e = T),
                        t = s(t),
                        t.match(e || Nt) || []
                    }
                    function Mo(t, e, n) {
                        return n && $n(t, e, n) && (e = T),
                        g(t) ? Po(t) : xe(t, e)
                    }
                    function Co(t) {
                        return function() {
                            return t
                        }
                    }
                    function Ao(t) {
                        return t
                    }
                    function Po(t) {
                        return Ne(be(t, !0))
                    }
                    function Lo(t, e) {
                        return Ge(t, be(e, !0))
                    }
                    function Ro(t, e, n) {
                        if (null == n) {
                            var r = Ii(e)
                              , i = r ? Gs(e) : T
                              , o = i && i.length ? Oe(e, i) : T;
                            (o ? o.length : r) || (o = !1,
                            n = e,
                            e = t,
                            t = this)
                        }
                        o || (o = Oe(e, Gs(e)));
                        var a = !0
                          , s = -1
                          , h = Oi(t)
                          , u = o.length;
                        n === !1 ? a = !1 : Ii(n) && "chain"in n && (a = n.chain);
                        for (; ++s < u; ) {
                            var l = o[s]
                              , c = e[l];
                            t[l] = c,
                            h && (t.prototype[l] = function(e) {
                                return function() {
                                    var n = this.__chain__;
                                    if (a || n) {
                                        var r = t(this.__wrapped__)
                                          , i = r.__actions__ = te(this.__actions__);
                                        return i.push({
                                            func: e,
                                            args: arguments,
                                            thisArg: t
                                        }),
                                        r.__chain__ = n,
                                        r
                                    }
                                    return e.apply(t, ue([this.value()], arguments))
                                }
                            }(c))
                        }
                        return t
                    }
                    function ko() {
                        return ne._ = ia,
                        this
                    }
                    function Oo() {}
                    function Io(t) {
                        return tr(t) ? He(t) : je(t)
                    }
                    function Do(t) {
                        return function(e) {
                            return Ie(t, pr(e), e + "")
                        }
                    }
                    function Uo(t, e, n) {
                        n && $n(t, e, n) && (e = n = T),
                        t = +t || 0,
                        n = null == n ? 1 : +n || 0,
                        null == e ? (e = t,
                        t = 0) : e = +e || 0;
                        for (var r = -1, i = wa(va((e - t) / (n || 1)), 0), o = Vo(i); ++r < i; )
                            o[r] = t,
                            t += n;
                        return o
                    }
                    function Bo(t, e, n) {
                        if (t = ya(t),
                        t < 1 || !xa(t))
                            return [];
                        var r = -1
                          , i = Vo(Ea(t, Pa));
                        for (e = an(e, n, 1); ++r < t; )
                            r < Pa ? i[r] = e(r) : e(r);
                        return i
                    }
                    function Fo(t) {
                        var e = ++na;
                        return s(t) + e
                    }
                    function No(t, e) {
                        return (+t || 0) + (+e || 0)
                    }
                    function Go(t, e, n) {
                        return n && $n(t, e, n) && (e = T),
                        e = Vn(e, n, 3),
                        1 == e.length ? fe(Ps(t) ? t : lr(t), e) : Je(t, e)
                    }
                    t = t ? re.defaults(ne.Object(), t, re.pick(ne, Gt)) : ne;
                    var Vo = t.Array
                      , zo = t.Date
                      , Ho = t.Error
                      , jo = t.Function
                      , Wo = t.Math
                      , Xo = t.Number
                      , Yo = t.Object
                      , qo = t.RegExp
                      , Zo = t.String
                      , Qo = t.TypeError
                      , Ko = Vo.prototype
                      , Jo = Yo.prototype
                      , $o = Zo.prototype
                      , ta = jo.prototype.toString
                      , ea = Jo.hasOwnProperty
                      , na = 0
                      , ra = Jo.toString
                      , ia = ne._
                      , oa = qo("^" + ta.call(ea).replace(/[\\^$.*+?()[\]{}|]/g, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$")
                      , aa = t.ArrayBuffer
                      , sa = t.clearTimeout
                      , ha = t.parseFloat
                      , ua = Wo.pow
                      , la = Jo.propertyIsEnumerable
                      , ca = Wn(t, "Set")
                      , pa = t.setTimeout
                      , fa = Ko.splice
                      , da = t.Uint8Array
                      , ma = Wn(t, "WeakMap")
                      , va = Wo.ceil
                      , ga = Wn(Yo, "create")
                      , ya = Wo.floor
                      , _a = Wn(Vo, "isArray")
                      , xa = t.isFinite
                      , ba = Wn(Yo, "keys")
                      , wa = Wo.max
                      , Ea = Wo.min
                      , Sa = Wn(zo, "now")
                      , Ta = t.parseInt
                      , Ma = Wo.random
                      , Ca = Xo.NEGATIVE_INFINITY
                      , Aa = Xo.POSITIVE_INFINITY
                      , Pa = 4294967295
                      , La = Pa - 1
                      , Ra = Pa >>> 1
                      , ka = 9007199254740991
                      , Oa = ma && new ma
                      , Ia = {};
                    e.support = {};
                    e.templateSettings = {
                        escape: bt,
                        evaluate: wt,
                        interpolate: Et,
                        variable: "",
                        imports: {
                            _: e
                        }
                    };
                    var Da = function() {
                        function t() {}
                        return function(e) {
                            if (Ii(e)) {
                                t.prototype = e;
                                var n = new t;
                                t.prototype = T
                            }
                            return n || {}
                        }
                    }()
                      , Ua = pn(Re)
                      , Ba = pn(ke, !0)
                      , Fa = fn()
                      , Na = fn(!0)
                      , Ga = Oa ? function(t, e) {
                        return Oa.set(t, e),
                        t
                    }
                    : Ao
                      , Va = Oa ? function(t) {
                        return Oa.get(t)
                    }
                    : Oo
                      , za = He("length")
                      , Ha = function() {
                        var t = 0
                          , e = 0;
                        return function(n, r) {
                            var i = ms()
                              , o = N - (i - e);
                            if (e = i,
                            o > 0) {
                                if (++t >= F)
                                    return n
                            } else
                                t = 0;
                            return Ga(n, r)
                        }
                    }()
                      , ja = gi(function(t, e) {
                        return g(t) && Kn(t) ? Ee(t, Pe(e, !1, !0)) : []
                    })
                      , Wa = wn()
                      , Xa = wn(!0)
                      , Ya = gi(function(t) {
                        for (var e = t.length, n = e, r = Vo(c), i = Hn(), a = i == o, s = []; n--; ) {
                            var h = t[n] = Kn(h = t[n]) ? h : [];
                            r[n] = a && h.length >= 120 ? mn(n && h) : null
                        }
                        var u = t[0]
                          , l = -1
                          , c = u ? u.length : 0
                          , p = r[0];
                        t: for (; ++l < c; )
                            if (h = u[l],
                            (p ? Kt(p, h) : i(s, h, 0)) < 0) {
                                for (var n = e; --n; ) {
                                    var f = r[n];
                                    if ((f ? Kt(f, h) : i(t[n], h, 0)) < 0)
                                        continue t
                                }
                                p && p.push(h),
                                s.push(h)
                            }
                        return s
                    })
                      , qa = gi(function(t, e) {
                        e = Pe(e);
                        var n = ye(t, e);
                        return We(t, e.sort(r)),
                        n
                    })
                      , Za = Un()
                      , Qa = Un(!0)
                      , Ka = gi(function(t) {
                        return $e(Pe(t, !1, !0))
                    })
                      , Ja = gi(function(t, e) {
                        return Kn(t) ? Ee(t, e) : []
                    })
                      , $a = gi(Br)
                      , ts = gi(function(t) {
                        var e = t.length
                          , n = e > 2 ? t[e - 2] : T
                          , r = e > 1 ? t[e - 1] : T;
                        return e > 2 && "function" == typeof n ? e -= 2 : (n = e > 1 && "function" == typeof r ? (--e,
                        r) : T,
                        r = T),
                        t.length = e,
                        Fr(t, n, r)
                    })
                      , es = gi(function(t) {
                        return t = Pe(t),
                        this.thru(function(e) {
                            return $t(Ps(e) ? e : [cr(e)], t)
                        })
                    })
                      , ns = gi(function(t, e) {
                        return ye(t, Pe(e))
                    })
                      , rs = ln(function(t, e, n) {
                        ea.call(t, n) ? ++t[n] : t[n] = 1
                    })
                      , is = bn(Ua)
                      , os = bn(Ba, !0)
                      , as = Tn(ee, Ua)
                      , ss = Tn(ie, Ba)
                      , hs = ln(function(t, e, n) {
                        ea.call(t, n) ? t[n].push(e) : t[n] = [e]
                    })
                      , us = ln(function(t, e, n) {
                        t[n] = e
                    })
                      , ls = gi(function(t, e, n) {
                        var r = -1
                          , i = "function" == typeof e
                          , o = tr(e)
                          , a = Kn(t) ? Vo(t.length) : [];
                        return Ua(t, function(t) {
                            var s = i ? e : o && null != t ? t[e] : T;
                            a[++r] = s ? s.apply(t, n) : Qn(t, e, n)
                        }),
                        a
                    })
                      , cs = ln(function(t, e, n) {
                        t[n ? 0 : 1].push(e)
                    }, function() {
                        return [[], []]
                    })
                      , ps = Rn(le, Ua)
                      , fs = Rn(ce, Ba)
                      , ds = gi(function(t, e) {
                        if (null == t)
                            return [];
                        var n = e[2];
                        return n && $n(e[0], e[1], n) && (e.length = 1),
                        Ke(t, Pe(e), [])
                    })
                      , ms = Sa || function() {
                        return (new zo).getTime()
                    }
                      , vs = gi(function(t, e, n) {
                        var r = C;
                        if (n.length) {
                            var i = _(n, vs.placeholder);
                            r |= k
                        }
                        return Bn(t, r, e, n, i)
                    })
                      , gs = gi(function(t, e) {
                        e = e.length ? Pe(e) : Qi(t);
                        for (var n = -1, r = e.length; ++n < r; ) {
                            var i = e[n];
                            t[i] = Bn(t[i], C, t)
                        }
                        return t
                    })
                      , ys = gi(function(t, e, n) {
                        var r = C | A;
                        if (n.length) {
                            var i = _(n, ys.placeholder);
                            r |= k
                        }
                        return Bn(e, r, t, n, i)
                    })
                      , _s = yn(L)
                      , xs = yn(R)
                      , bs = gi(function(t, e) {
                        return we(t, 1, e)
                    })
                      , ws = gi(function(t, e, n) {
                        return we(t, e, n)
                    })
                      , Es = Sn()
                      , Ss = Sn(!0)
                      , Ts = gi(function(t, e) {
                        if (e = Pe(e),
                        "function" != typeof t || !oe(e, a))
                            throw new Qo(H);
                        var n = e.length;
                        return gi(function(r) {
                            for (var i = Ea(r.length, n); i--; )
                                r[i] = e[i](r[i]);
                            return t.apply(this, r)
                        })
                    })
                      , Ms = Ln(k)
                      , Cs = Ln(O)
                      , As = gi(function(t, e) {
                        return Bn(t, D, T, T, T, Pe(e))
                    })
                      , Ps = _a || function(t) {
                        return g(t) && nr(t.length) && ra.call(t) == X
                    }
                      , Ls = cn(Ve)
                      , Rs = cn(function(t, e, n) {
                        return n ? ve(t, e, n) : ge(t, e)
                    })
                      , ks = _n(Rs, de)
                      , Os = _n(Ls, or)
                      , Is = En(Re)
                      , Ds = En(ke)
                      , Us = Mn(Fa)
                      , Bs = Mn(Na)
                      , Fs = Cn(Re)
                      , Ns = Cn(ke)
                      , Gs = ba ? function(t) {
                        var e = null == t ? T : t.constructor;
                        return "function" == typeof e && e.prototype === t || "function" != typeof t && Kn(t) ? ur(t) : Ii(t) ? ba(t) : []
                    }
                    : ur
                      , Vs = An(!0)
                      , zs = An()
                      , Hs = gi(function(t, e) {
                        if (null == t)
                            return {};
                        if ("function" != typeof e[0]) {
                            var e = he(Pe(e), Zo);
                            return ar(t, Ee(to(t), e))
                        }
                        var n = an(e[0], e[1], 3);
                        return sr(t, function(t, e, r) {
                            return !n(t, e, r)
                        })
                    })
                      , js = gi(function(t, e) {
                        return null == t ? {} : "function" == typeof e[0] ? sr(t, an(e[0], e[1], 3)) : ar(t, Pe(e))
                    })
                      , Ws = vn(function(t, e, n) {
                        return e = e.toLowerCase(),
                        t + (n ? e.charAt(0).toUpperCase() + e.slice(1) : e)
                    })
                      , Xs = vn(function(t, e, n) {
                        return t + (n ? "-" : "") + e.toLowerCase()
                    })
                      , Ys = Pn()
                      , qs = Pn(!0)
                      , Zs = vn(function(t, e, n) {
                        return t + (n ? "_" : "") + e.toLowerCase()
                    })
                      , Qs = vn(function(t, e, n) {
                        return t + (n ? " " : "") + (e.charAt(0).toUpperCase() + e.slice(1))
                    })
                      , Ks = gi(function(t, e) {
                        try {
                            return t.apply(T, e)
                        } catch (n) {
                            return Ri(n) ? n : new Ho(n)
                        }
                    })
                      , Js = gi(function(t, e) {
                        return function(n) {
                            return Qn(n, t, e)
                        }
                    })
                      , $s = gi(function(t, e) {
                        return function(n) {
                            return Qn(t, n, e)
                        }
                    })
                      , th = Dn("ceil")
                      , eh = Dn("floor")
                      , nh = xn(Ei, Ca)
                      , rh = xn(Wi, Aa)
                      , ih = Dn("round");
                    return e.prototype = n.prototype,
                    y.prototype = Da(n.prototype),
                    y.prototype.constructor = y,
                    K.prototype = Da(n.prototype),
                    K.prototype.constructor = K,
                    Wt.prototype["delete"] = Xt,
                    Wt.prototype.get = Yt,
                    Wt.prototype.has = qt,
                    Wt.prototype.set = Zt,
                    Qt.prototype.push = Jt,
                    di.Cache = Wt,
                    e.after = li,
                    e.ary = ci,
                    e.assign = Rs,
                    e.at = ns,
                    e.before = pi,
                    e.bind = vs,
                    e.bindAll = gs,
                    e.bindKey = ys,
                    e.callback = Mo,
                    e.chain = Vr,
                    e.chunk = dr,
                    e.compact = mr,
                    e.constant = Co,
                    e.countBy = rs,
                    e.create = Zi,
                    e.curry = _s,
                    e.curryRight = xs,
                    e.debounce = fi,
                    e.defaults = ks,
                    e.defaultsDeep = Os,
                    e.defer = bs,
                    e.delay = ws,
                    e.difference = ja,
                    e.drop = vr,
                    e.dropRight = gr,
                    e.dropRightWhile = yr,
                    e.dropWhile = _r,
                    e.fill = xr,
                    e.filter = Kr,
                    e.flatten = wr,
                    e.flattenDeep = Er,
                    e.flow = Es,
                    e.flowRight = Ss,
                    e.forEach = as,
                    e.forEachRight = ss,
                    e.forIn = Us,
                    e.forInRight = Bs,
                    e.forOwn = Fs,
                    e.forOwnRight = Ns,
                    e.functions = Qi,
                    e.groupBy = hs,
                    e.indexBy = us,
                    e.initial = Tr,
                    e.intersection = Ya,
                    e.invert = $i,
                    e.invoke = ls,
                    e.keys = Gs,
                    e.keysIn = to,
                    e.map = ti,
                    e.mapKeys = Vs,
                    e.mapValues = zs,
                    e.matches = Po,
                    e.matchesProperty = Lo,
                    e.memoize = di,
                    e.merge = Ls,
                    e.method = Js,
                    e.methodOf = $s,
                    e.mixin = Ro,
                    e.modArgs = Ts,
                    e.negate = mi,
                    e.omit = Hs,
                    e.once = vi,
                    e.pairs = eo,
                    e.partial = Ms,
                    e.partialRight = Cs,
                    e.partition = cs,
                    e.pick = js,
                    e.pluck = ei,
                    e.property = Io,
                    e.propertyOf = Do,
                    e.pull = Ar,
                    e.pullAt = qa,
                    e.range = Uo,
                    e.rearg = As,
                    e.reject = ni,
                    e.remove = Pr,
                    e.rest = Lr,
                    e.restParam = gi,
                    e.set = ro,
                    e.shuffle = ii,
                    e.slice = Rr,
                    e.sortBy = si,
                    e.sortByAll = ds,
                    e.sortByOrder = hi,
                    e.spread = yi,
                    e.take = kr,
                    e.takeRight = Or,
                    e.takeRightWhile = Ir,
                    e.takeWhile = Dr,
                    e.tap = zr,
                    e.throttle = _i,
                    e.thru = Hr,
                    e.times = Bo,
                    e.toArray = Yi,
                    e.toPlainObject = qi,
                    e.transform = io,
                    e.union = Ka,
                    e.uniq = Ur,
                    e.unzip = Br,
                    e.unzipWith = Fr,
                    e.values = oo,
                    e.valuesIn = ao,
                    e.where = ui,
                    e.without = Ja,
                    e.wrap = xi,
                    e.xor = Nr,
                    e.zip = $a,
                    e.zipObject = Gr,
                    e.zipWith = ts,
                    e.backflow = Ss,
                    e.collect = ti,
                    e.compose = Ss,
                    e.each = as,
                    e.eachRight = ss,
                    e.extend = Rs,
                    e.iteratee = Mo,
                    e.methods = Qi,
                    e.object = Gr,
                    e.select = Kr,
                    e.tail = Lr,
                    e.unique = Ur,
                    Ro(e, e),
                    e.add = No,
                    e.attempt = Ks,
                    e.camelCase = Ws,
                    e.capitalize = uo,
                    e.ceil = th,
                    e.clone = bi,
                    e.cloneDeep = wi,
                    e.deburr = lo,
                    e.endsWith = co,
                    e.escape = po,
                    e.escapeRegExp = fo,
                    e.every = Qr,
                    e.find = is,
                    e.findIndex = Wa,
                    e.findKey = Is,
                    e.findLast = os,
                    e.findLastIndex = Xa,
                    e.findLastKey = Ds,
                    e.findWhere = Jr,
                    e.first = br,
                    e.floor = eh,
                    e.get = Ki,
                    e.gt = Ei,
                    e.gte = Si,
                    e.has = Ji,
                    e.identity = Ao,
                    e.includes = $r,
                    e.indexOf = Sr,
                    e.inRange = so,
                    e.isArguments = Ti,
                    e.isArray = Ps,
                    e.isBoolean = Mi,
                    e.isDate = Ci,
                    e.isElement = Ai,
                    e.isEmpty = Pi,
                    e.isEqual = Li,
                    e.isError = Ri,
                    e.isFinite = ki,
                    e.isFunction = Oi,
                    e.isMatch = Di,
                    e.isNaN = Ui,
                    e.isNative = Bi,
                    e.isNull = Fi,
                    e.isNumber = Ni,
                    e.isObject = Ii,
                    e.isPlainObject = Gi,
                    e.isRegExp = Vi,
                    e.isString = zi,
                    e.isTypedArray = Hi,
                    e.isUndefined = ji,
                    e.kebabCase = Xs,
                    e.last = Mr,
                    e.lastIndexOf = Cr,
                    e.lt = Wi,
                    e.lte = Xi,
                    e.max = nh,
                    e.min = rh,
                    e.noConflict = ko,
                    e.noop = Oo,
                    e.now = ms,
                    e.pad = mo,
                    e.padLeft = Ys,
                    e.padRight = qs,
                    e.parseInt = vo,
                    e.random = ho,
                    e.reduce = ps,
                    e.reduceRight = fs,
                    e.repeat = go,
                    e.result = no,
                    e.round = ih,
                    e.runInContext = S,
                    e.size = oi,
                    e.snakeCase = Zs,
                    e.some = ai,
                    e.sortedIndex = Za,
                    e.sortedLastIndex = Qa,
                    e.startCase = Qs,
                    e.startsWith = yo,
                    e.sum = Go,
                    e.template = _o,
                    e.trim = xo,
                    e.trimLeft = bo,
                    e.trimRight = wo,
                    e.trunc = Eo,
                    e.unescape = So,
                    e.uniqueId = Fo,
                    e.words = To,
                    e.all = Qr,
                    e.any = ai,
                    e.contains = $r,
                    e.eq = Li,
                    e.detect = is,
                    e.foldl = ps,
                    e.foldr = fs,
                    e.head = br,
                    e.include = $r,
                    e.inject = ps,
                    Ro(e, function() {
                        var t = {};
                        return Re(e, function(n, r) {
                            e.prototype[r] || (t[r] = n)
                        }),
                        t
                    }(), !1),
                    e.sample = ri,
                    e.prototype.sample = function(t) {
                        return this.__chain__ || null != t ? this.thru(function(e) {
                            return ri(e, t)
                        }) : ri(this.value())
                    }
                    ,
                    e.VERSION = M,
                    ee(["bind", "bindKey", "curry", "curryRight", "partial", "partialRight"], function(t) {
                        e[t].placeholder = e
                    }),
                    ee(["drop", "take"], function(t, e) {
                        K.prototype[t] = function(n) {
                            var r = this.__filtered__;
                            if (r && !e)
                                return new K(this);
                            n = null == n ? 1 : wa(ya(n) || 0, 0);
                            var i = this.clone();
                            return r ? i.__takeCount__ = Ea(i.__takeCount__, n) : i.__views__.push({
                                size: n,
                                type: t + (i.__dir__ < 0 ? "Right" : "")
                            }),
                            i
                        }
                        ,
                        K.prototype[t + "Right"] = function(e) {
                            return this.reverse()[t](e).reverse()
                        }
                    }),
                    ee(["filter", "map", "takeWhile"], function(t, e) {
                        var n = e + 1
                          , r = n != z;
                        K.prototype[t] = function(t, e) {
                            var i = this.clone();
                            return i.__iteratees__.push({
                                iteratee: Vn(t, e, 1),
                                type: n
                            }),
                            i.__filtered__ = i.__filtered__ || r,
                            i
                        }
                    }),
                    ee(["first", "last"], function(t, e) {
                        var n = "take" + (e ? "Right" : "");
                        K.prototype[t] = function() {
                            return this[n](1).value()[0]
                        }
                    }),
                    ee(["initial", "rest"], function(t, e) {
                        var n = "drop" + (e ? "" : "Right");
                        K.prototype[t] = function() {
                            return this.__filtered__ ? new K(this) : this[n](1)
                        }
                    }),
                    ee(["pluck", "where"], function(t, e) {
                        var n = e ? "filter" : "map"
                          , r = e ? Ne : Io;
                        K.prototype[t] = function(t) {
                            return this[n](r(t))
                        }
                    }),
                    K.prototype.compact = function() {
                        return this.filter(Ao)
                    }
                    ,
                    K.prototype.reject = function(t, e) {
                        return t = Vn(t, e, 1),
                        this.filter(function(e) {
                            return !t(e)
                        })
                    }
                    ,
                    K.prototype.slice = function(t, e) {
                        t = null == t ? 0 : +t || 0;
                        var n = this;
                        return n.__filtered__ && (t > 0 || e < 0) ? new K(n) : (t < 0 ? n = n.takeRight(-t) : t && (n = n.drop(t)),
                        e !== T && (e = +e || 0,
                        n = e < 0 ? n.dropRight(-e) : n.take(e - t)),
                        n)
                    }
                    ,
                    K.prototype.takeRightWhile = function(t, e) {
                        return this.reverse().takeWhile(t, e).reverse()
                    }
                    ,
                    K.prototype.toArray = function() {
                        return this.take(Aa)
                    }
                    ,
                    Re(K.prototype, function(t, n) {
                        var r = /^(?:filter|map|reject)|While$/.test(n)
                          , i = /^(?:first|last)$/.test(n)
                          , o = e[i ? "take" + ("last" == n ? "Right" : "") : n];
                        o && (e.prototype[n] = function() {
                            var e = i ? [1] : arguments
                              , n = this.__chain__
                              , a = this.__wrapped__
                              , s = !!this.__actions__.length
                              , h = a instanceof K
                              , u = e[0]
                              , l = h || Ps(a);
                            l && r && "function" == typeof u && 1 != u.length && (h = l = !1);
                            var c = function(t) {
                                return i && n ? o(t, 1)[0] : o.apply(T, ue([t], e))
                            }
                              , p = {
                                func: Hr,
                                args: [c],
                                thisArg: T
                            }
                              , f = h && !s;
                            if (i && !n)
                                return f ? (a = a.clone(),
                                a.__actions__.push(p),
                                t.call(a)) : o.call(T, this.value())[0];
                            if (!i && l) {
                                a = f ? a : new K(this);
                                var d = t.apply(a, e);
                                return d.__actions__.push(p),
                                new y(d,n)
                            }
                            return this.thru(c)
                        }
                        )
                    }),
                    ee(["join", "pop", "push", "replace", "shift", "sort", "splice", "split", "unshift"], function(t) {
                        var n = (/^(?:replace|split)$/.test(t) ? $o : Ko)[t]
                          , r = /^(?:push|sort|unshift)$/.test(t) ? "tap" : "thru"
                          , i = /^(?:join|pop|replace|shift)$/.test(t);
                        e.prototype[t] = function() {
                            var t = arguments;
                            return i && !this.__chain__ ? n.apply(this.value(), t) : this[r](function(e) {
                                return n.apply(e, t)
                            })
                        }
                    }),
                    Re(K.prototype, function(t, n) {
                        var r = e[n];
                        if (r) {
                            var i = r.name
                              , o = Ia[i] || (Ia[i] = []);
                            o.push({
                                name: n,
                                func: r
                            })
                        }
                    }),
                    Ia[kn(T, A).name] = [{
                        name: "wrapper",
                        func: T
                    }],
                    K.prototype.clone = et,
                    K.prototype.reverse = rt,
                    K.prototype.value = jt,
                    e.prototype.chain = jr,
                    e.prototype.commit = Wr,
                    e.prototype.concat = es,
                    e.prototype.plant = Xr,
                    e.prototype.reverse = Yr,
                    e.prototype.toString = qr,
                    e.prototype.run = e.prototype.toJSON = e.prototype.valueOf = e.prototype.value = Zr,
                    e.prototype.collect = e.prototype.map,
                    e.prototype.head = e.prototype.first,
                    e.prototype.select = e.prototype.filter,
                    e.prototype.tail = e.prototype.rest,
                    e
                }
                var T, M = "3.10.1", C = 1, A = 2, P = 4, L = 8, R = 16, k = 32, O = 64, I = 128, D = 256, U = 30, B = "...", F = 150, N = 16, G = 200, V = 1, z = 2, H = "Expected a function", j = "__lodash_placeholder__", W = "[object Arguments]", X = "[object Array]", Y = "[object Boolean]", q = "[object Date]", Z = "[object Error]", Q = "[object Function]", K = "[object Map]", J = "[object Number]", $ = "[object Object]", tt = "[object RegExp]", et = "[object Set]", nt = "[object String]", rt = "[object WeakMap]", it = "[object ArrayBuffer]", ot = "[object Float32Array]", at = "[object Float64Array]", st = "[object Int8Array]", ht = "[object Int16Array]", ut = "[object Int32Array]", lt = "[object Uint8Array]", ct = "[object Uint8ClampedArray]", pt = "[object Uint16Array]", ft = "[object Uint32Array]", dt = /\b__p \+= '';/g, mt = /\b(__p \+=) '' \+/g, vt = /(__e\(.*?\)|\b__t\)) \+\n'';/g, gt = /&(?:amp|lt|gt|quot|#39|#96);/g, yt = /[&<>"'`]/g, _t = RegExp(gt.source), xt = RegExp(yt.source), bt = /<%-([\s\S]+?)%>/g, wt = /<%([\s\S]+?)%>/g, Et = /<%=([\s\S]+?)%>/g, St = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\n\\]|\\.)*?\1)\]/, Tt = /^\w*$/, Mt = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\n\\]|\\.)*?)\2)\]/g, Ct = /^[:!,]|[\\^$.*+?()[\]{}|\/]|(^[0-9a-fA-Fnrtuvx])|([\n\r\u2028\u2029])/g, At = RegExp(Ct.source), Pt = /[\u0300-\u036f\ufe20-\ufe23]/g, Lt = /\\(\\)?/g, Rt = /\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g, kt = /\w*$/, Ot = /^0[xX]/, It = /^\[object .+?Constructor\]$/, Dt = /^\d+$/, Ut = /[\xc0-\xd6\xd8-\xde\xdf-\xf6\xf8-\xff]/g, Bt = /($^)/, Ft = /['\n\r\u2028\u2029\\]/g, Nt = function() {
                    var t = "[A-Z\\xc0-\\xd6\\xd8-\\xde]"
                      , e = "[a-z\\xdf-\\xf6\\xf8-\\xff]+";
                    return RegExp(t + "+(?=" + t + e + ")|" + t + "?" + e + "|" + t + "+|[0-9]+", "g")
                }(), Gt = ["Array", "ArrayBuffer", "Date", "Error", "Float32Array", "Float64Array", "Function", "Int8Array", "Int16Array", "Int32Array", "Math", "Number", "Object", "RegExp", "Set", "String", "_", "clearTimeout", "isFinite", "parseFloat", "parseInt", "setTimeout", "TypeError", "Uint8Array", "Uint8ClampedArray", "Uint16Array", "Uint32Array", "WeakMap"], Vt = -1, zt = {};
                zt[ot] = zt[at] = zt[st] = zt[ht] = zt[ut] = zt[lt] = zt[ct] = zt[pt] = zt[ft] = !0,
                zt[W] = zt[X] = zt[it] = zt[Y] = zt[q] = zt[Z] = zt[Q] = zt[K] = zt[J] = zt[$] = zt[tt] = zt[et] = zt[nt] = zt[rt] = !1;
                var Ht = {};
                Ht[W] = Ht[X] = Ht[it] = Ht[Y] = Ht[q] = Ht[ot] = Ht[at] = Ht[st] = Ht[ht] = Ht[ut] = Ht[J] = Ht[$] = Ht[tt] = Ht[nt] = Ht[lt] = Ht[ct] = Ht[pt] = Ht[ft] = !0,
                Ht[Z] = Ht[Q] = Ht[K] = Ht[et] = Ht[rt] = !1;
                var jt = {
                    "À": "A",
                    "Á": "A",
                    "Â": "A",
                    "Ã": "A",
                    "Ä": "A",
                    "Å": "A",
                    "à": "a",
                    "á": "a",
                    "â": "a",
                    "ã": "a",
                    "ä": "a",
                    "å": "a",
                    "Ç": "C",
                    "ç": "c",
                    "Ð": "D",
                    "ð": "d",
                    "È": "E",
                    "É": "E",
                    "Ê": "E",
                    "Ë": "E",
                    "è": "e",
                    "é": "e",
                    "ê": "e",
                    "ë": "e",
                    "Ì": "I",
                    "Í": "I",
                    "Î": "I",
                    "Ï": "I",
                    "ì": "i",
                    "í": "i",
                    "î": "i",
                    "ï": "i",
                    "Ñ": "N",
                    "ñ": "n",
                    "Ò": "O",
                    "Ó": "O",
                    "Ô": "O",
                    "Õ": "O",
                    "Ö": "O",
                    "Ø": "O",
                    "ò": "o",
                    "ó": "o",
                    "ô": "o",
                    "õ": "o",
                    "ö": "o",
                    "ø": "o",
                    "Ù": "U",
                    "Ú": "U",
                    "Û": "U",
                    "Ü": "U",
                    "ù": "u",
                    "ú": "u",
                    "û": "u",
                    "ü": "u",
                    "Ý": "Y",
                    "ý": "y",
                    "ÿ": "y",
                    "Æ": "Ae",
                    "æ": "ae",
                    "Þ": "Th",
                    "þ": "th",
                    "ß": "ss"
                }
                  , Wt = {
                    "&": "&amp;",
                    "<": "&lt;",
                    ">": "&gt;",
                    '"': "&quot;",
                    "'": "&#39;",
                    "`": "&#96;"
                }
                  , Xt = {
                    "&amp;": "&",
                    "&lt;": "<",
                    "&gt;": ">",
                    "&quot;": '"',
                    "&#39;": "'",
                    "&#96;": "`"
                }
                  , Yt = {
                    "function": !0,
                    object: !0
                }
                  , qt = {
                    0: "x30",
                    1: "x31",
                    2: "x32",
                    3: "x33",
                    4: "x34",
                    5: "x35",
                    6: "x36",
                    7: "x37",
                    8: "x38",
                    9: "x39",
                    A: "x41",
                    B: "x42",
                    C: "x43",
                    D: "x44",
                    E: "x45",
                    F: "x46",
                    a: "x61",
                    b: "x62",
                    c: "x63",
                    d: "x64",
                    e: "x65",
                    f: "x66",
                    n: "x6e",
                    r: "x72",
                    t: "x74",
                    u: "x75",
                    v: "x76",
                    x: "x78"
                }
                  , Zt = {
                    "\\": "\\",
                    "'": "'",
                    "\n": "n",
                    "\r": "r",
                    "\u2028": "u2028",
                    "\u2029": "u2029"
                }
                  , Qt = Yt[typeof n] && n && !n.nodeType && n
                  , Kt = Yt[typeof e] && e && !e.nodeType && e
                  , Jt = Qt && Kt && "object" == typeof t && t && t.Object && t
                  , $t = Yt[typeof self] && self && self.Object && self
                  , te = Yt[typeof window] && window && window.Object && window
                  , ee = Kt && Kt.exports === Qt && Qt
                  , ne = Jt || te !== (this && this.window) && te || $t || this
                  , re = S();
                "function" == typeof define && "object" == typeof define.amd && define.amd ? (ne._ = re,
                define(function() {
                    return re
                })) : Qt && Kt ? ee ? (Kt.exports = re)._ = re : Qt._ = re : ne._ = re
            }
            ).call(this)
        }
        ).call(this, "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {})
    }
    , {}],
    6: [function(t, e, n) {
        function r() {
            p && l && (p = !1,
            l.length ? c = l.concat(c) : f = -1,
            c.length && i())
        }
        function i() {
            if (!p) {
                var t = s(r);
                p = !0;
                for (var e = c.length; e; ) {
                    for (l = c,
                    c = []; ++f < e; )
                        l && l[f].run();
                    f = -1,
                    e = c.length
                }
                l = null ,
                p = !1,
                h(t)
            }
        }
        function o(t, e) {
            this.fun = t,
            this.array = e
        }
        function a() {}
        var s, h, u = e.exports = {};
        !function() {
            try {
                s = setTimeout
            } catch (t) {
                s = function() {
                    throw new Error("setTimeout is not defined")
                }
            }
            try {
                h = clearTimeout
            } catch (t) {
                h = function() {
                    throw new Error("clearTimeout is not defined")
                }
            }
        }();
        var l, c = [], p = !1, f = -1;
        u.nextTick = function(t) {
            var e = new Array(arguments.length - 1);
            if (arguments.length > 1)
                for (var n = 1; n < arguments.length; n++)
                    e[n - 1] = arguments[n];
            c.push(new o(t,e)),
            1 !== c.length || p || s(i, 0)
        }
        ,
        o.prototype.run = function() {
            this.fun.apply(null , this.array)
        }
        ,
        u.title = "browser",
        u.browser = !0,
        u.env = {},
        u.argv = [],
        u.version = "",
        u.versions = {},
        u.on = a,
        u.addListener = a,
        u.once = a,
        u.off = a,
        u.removeListener = a,
        u.removeAllListeners = a,
        u.emit = a,
        u.binding = function(t) {
            throw new Error("process.binding is not supported")
        }
        ,
        u.cwd = function() {
            return "/"
        }
        ,
        u.chdir = function(t) {
            throw new Error("process.chdir is not supported")
        }
        ,
        u.umask = function() {
            return 0
        }
    }
    , {}],
    7: [function(t, e, n) {
        !function(t) {
            function n(t, e) {
                return function() {
                    t.apply(e, arguments)
                }
            }
            function r(t) {
                if ("object" != typeof this)
                    throw new TypeError("Promises must be constructed via new");
                if ("function" != typeof t)
                    throw new TypeError("not a function");
                this._state = null ,
                this._value = null ,
                this._deferreds = [],
                u(t, n(o, this), n(a, this))
            }
            function i(t) {
                var e = this;
                return null === this._state ? void this._deferreds.push(t) : void c(function() {
                    var n = e._state ? t.onFulfilled : t.onRejected;
                    if (null === n)
                        return void (e._state ? t.resolve : t.reject)(e._value);
                    var r;
                    try {
                        r = n(e._value)
                    } catch (i) {
                        return void t.reject(i)
                    }
                    t.resolve(r)
                })
            }
            function o(t) {
                try {
                    if (t === this)
                        throw new TypeError("A promise cannot be resolved with itself.");
                    if (t && ("object" == typeof t || "function" == typeof t)) {
                        var e = t.then;
                        if ("function" == typeof e)
                            return void u(n(e, t), n(o, this), n(a, this))
                    }
                    this._state = !0,
                    this._value = t,
                    s.call(this)
                } catch (r) {
                    a.call(this, r)
                }
            }
            function a(t) {
                this._state = !1,
                this._value = t,
                s.call(this)
            }
            function s() {
                for (var t = 0, e = this._deferreds.length; t < e; t++)
                    i.call(this, this._deferreds[t]);
                this._deferreds = null
            }
            function h(t, e, n, r) {
                this.onFulfilled = "function" == typeof t ? t : null ,
                this.onRejected = "function" == typeof e ? e : null ,
                this.resolve = n,
                this.reject = r
            }
            function u(t, e, n) {
                var r = !1;
                try {
                    t(function(t) {
                        r || (r = !0,
                        e(t))
                    }, function(t) {
                        r || (r = !0,
                        n(t))
                    })
                } catch (i) {
                    if (r)
                        return;
                    r = !0,
                    n(i)
                }
            }
            var l = setTimeout
              , c = "function" == typeof setImmediate && setImmediate || function(t) {
                l(t, 1)
            }
              , p = Array.isArray || function(t) {
                return "[object Array]" === Object.prototype.toString.call(t)
            }
            ;
            r.prototype["catch"] = function(t) {
                return this.then(null , t)
            }
            ,
            r.prototype.then = function(t, e) {
                var n = this;
                return new r(function(r, o) {
                    i.call(n, new h(t,e,r,o))
                }
                )
            }
            ,
            r.all = function() {
                var t = Array.prototype.slice.call(1 === arguments.length && p(arguments[0]) ? arguments[0] : arguments);
                return new r(function(e, n) {
                    function r(o, a) {
                        try {
                            if (a && ("object" == typeof a || "function" == typeof a)) {
                                var s = a.then;
                                if ("function" == typeof s)
                                    return void s.call(a, function(t) {
                                        r(o, t)
                                    }, n)
                            }
                            t[o] = a,
                            0 === --i && e(t)
                        } catch (h) {
                            n(h)
                        }
                    }
                    if (0 === t.length)
                        return e([]);
                    for (var i = t.length, o = 0; o < t.length; o++)
                        r(o, t[o])
                }
                )
            }
            ,
            r.resolve = function(t) {
                return t && "object" == typeof t && t.constructor === r ? t : new r(function(e) {
                    e(t)
                }
                )
            }
            ,
            r.reject = function(t) {
                return new r(function(e, n) {
                    n(t)
                }
                )
            }
            ,
            r.race = function(t) {
                return new r(function(e, n) {
                    for (var r = 0, i = t.length; r < i; r++)
                        t[r].then(e, n)
                }
                )
            }
            ,
            r._setImmediateFn = function(t) {
                c = t
            }
            ,
            "undefined" != typeof e && e.exports ? e.exports = r : t.Promise || (t.Promise = r)
        }(this)
    }
    , {}],
    8: [function(t, e, n) {
        (function(t) {
            !function(r) {
                function i(t) {
                    throw new RangeError(O[t])
                }
                function o(t, e) {
                    for (var n = t.length, r = []; n--; )
                        r[n] = e(t[n]);
                    return r
                }
                function a(t, e) {
                    var n = t.split("@")
                      , r = "";
                    n.length > 1 && (r = n[0] + "@",
                    t = n[1]),
                    t = t.replace(k, ".");
                    var i = t.split(".")
                      , a = o(i, e).join(".");
                    return r + a
                }
                function s(t) {
                    for (var e, n, r = [], i = 0, o = t.length; i < o; )
                        e = t.charCodeAt(i++),
                        e >= 55296 && e <= 56319 && i < o ? (n = t.charCodeAt(i++),
                        56320 == (64512 & n) ? r.push(((1023 & e) << 10) + (1023 & n) + 65536) : (r.push(e),
                        i--)) : r.push(e);
                    return r
                }
                function h(t) {
                    return o(t, function(t) {
                        var e = "";
                        return t > 65535 && (t -= 65536,
                        e += U(t >>> 10 & 1023 | 55296),
                        t = 56320 | 1023 & t),
                        e += U(t)
                    }).join("")
                }
                function u(t) {
                    return t - 48 < 10 ? t - 22 : t - 65 < 26 ? t - 65 : t - 97 < 26 ? t - 97 : w
                }
                function l(t, e) {
                    return t + 22 + 75 * (t < 26) - ((0 != e) << 5)
                }
                function c(t, e, n) {
                    var r = 0;
                    for (t = n ? D(t / M) : t >> 1,
                    t += D(t / e); t > I * S >> 1; r += w)
                        t = D(t / I);
                    return D(r + (I + 1) * t / (t + T))
                }
                function p(t) {
                    var e, n, r, o, a, s, l, p, f, d, m = [], v = t.length, g = 0, y = A, _ = C;
                    for (n = t.lastIndexOf(P),
                    n < 0 && (n = 0),
                    r = 0; r < n; ++r)
                        t.charCodeAt(r) >= 128 && i("not-basic"),
                        m.push(t.charCodeAt(r));
                    for (o = n > 0 ? n + 1 : 0; o < v; ) {
                        for (a = g,
                        s = 1,
                        l = w; o >= v && i("invalid-input"),
                        p = u(t.charCodeAt(o++)),
                        (p >= w || p > D((b - g) / s)) && i("overflow"),
                        g += p * s,
                        f = l <= _ ? E : l >= _ + S ? S : l - _,
                        !(p < f); l += w)
                            d = w - f,
                            s > D(b / d) && i("overflow"),
                            s *= d;
                        e = m.length + 1,
                        _ = c(g - a, e, 0 == a),
                        D(g / e) > b - y && i("overflow"),
                        y += D(g / e),
                        g %= e,
                        m.splice(g++, 0, y)
                    }
                    return h(m)
                }
                function f(t) {
                    var e, n, r, o, a, h, u, p, f, d, m, v, g, y, _, x = [];
                    for (t = s(t),
                    v = t.length,
                    e = A,
                    n = 0,
                    a = C,
                    h = 0; h < v; ++h)
                        m = t[h],
                        m < 128 && x.push(U(m));
                    for (r = o = x.length,
                    o && x.push(P); r < v; ) {
                        for (u = b,
                        h = 0; h < v; ++h)
                            m = t[h],
                            m >= e && m < u && (u = m);
                        for (g = r + 1,
                        u - e > D((b - n) / g) && i("overflow"),
                        n += (u - e) * g,
                        e = u,
                        h = 0; h < v; ++h)
                            if (m = t[h],
                            m < e && ++n > b && i("overflow"),
                            m == e) {
                                for (p = n,
                                f = w; d = f <= a ? E : f >= a + S ? S : f - a,
                                !(p < d); f += w)
                                    _ = p - d,
                                    y = w - d,
                                    x.push(U(l(d + _ % y, 0))),
                                    p = D(_ / y);
                                x.push(U(l(p, 0))),
                                a = c(n, g, r == o),
                                n = 0,
                                ++r
                            }
                        ++n,
                        ++e
                    }
                    return x.join("")
                }
                function d(t) {
                    return a(t, function(t) {
                        return L.test(t) ? p(t.slice(4).toLowerCase()) : t
                    })
                }
                function m(t) {
                    return a(t, function(t) {
                        return R.test(t) ? "xn--" + f(t) : t
                    })
                }
                var v = "object" == typeof n && n && !n.nodeType && n
                  , g = "object" == typeof e && e && !e.nodeType && e
                  , y = "object" == typeof t && t;
                y.global !== y && y.window !== y && y.self !== y || (r = y);
                var _, x, b = 2147483647, w = 36, E = 1, S = 26, T = 38, M = 700, C = 72, A = 128, P = "-", L = /^xn--/, R = /[^\x20-\x7E]/, k = /[\x2E\u3002\uFF0E\uFF61]/g, O = {
                    overflow: "Overflow: input needs wider integers to process",
                    "not-basic": "Illegal input >= 0x80 (not a basic code point)",
                    "invalid-input": "Invalid input"
                }, I = w - E, D = Math.floor, U = String.fromCharCode;
                if (_ = {
                    version: "1.4.1",
                    ucs2: {
                        decode: s,
                        encode: h
                    },
                    decode: p,
                    encode: f,
                    toASCII: m,
                    toUnicode: d
                },
                "function" == typeof define && "object" == typeof define.amd && define.amd)
                    define("punycode", function() {
                        return _
                    });
                else if (v && g)
                    if (e.exports == v)
                        g.exports = _;
                    else
                        for (x in _)
                            _.hasOwnProperty(x) && (v[x] = _[x]);
                else
                    r.punycode = _
            }(this)
        }
        ).call(this, "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {})
    }
    , {}],
    9: [function(t, e, n) {
        "use strict";
        function r(t, e) {
            return Object.prototype.hasOwnProperty.call(t, e)
        }
        e.exports = function(t, e, n, o) {
            e = e || "&",
            n = n || "=";
            var a = {};
            if ("string" != typeof t || 0 === t.length)
                return a;
            var s = /\+/g;
            t = t.split(e);
            var h = 1e3;
            o && "number" == typeof o.maxKeys && (h = o.maxKeys);
            var u = t.length;
            h > 0 && u > h && (u = h);
            for (var l = 0; l < u; ++l) {
                var c, p, f, d, m = t[l].replace(s, "%20"), v = m.indexOf(n);
                v >= 0 ? (c = m.substr(0, v),
                p = m.substr(v + 1)) : (c = m,
                p = ""),
                f = decodeURIComponent(c),
                d = decodeURIComponent(p),
                r(a, f) ? i(a[f]) ? a[f].push(d) : a[f] = [a[f], d] : a[f] = d
            }
            return a
        }
        ;
        var i = Array.isArray || function(t) {
            return "[object Array]" === Object.prototype.toString.call(t)
        }
    }
    , {}],
    10: [function(t, e, n) {
        "use strict";
        function r(t, e) {
            if (t.map)
                return t.map(e);
            for (var n = [], r = 0; r < t.length; r++)
                n.push(e(t[r], r));
            return n
        }
        var i = function(t) {
            switch (typeof t) {
            case "string":
                return t;
            case "boolean":
                return t ? "true" : "false";
            case "number":
                return isFinite(t) ? t : "";
            default:
                return ""
            }
        }
        ;
        e.exports = function(t, e, n, s) {
            return e = e || "&",
            n = n || "=",
            null === t && (t = void 0),
            "object" == typeof t ? r(a(t), function(a) {
                var s = encodeURIComponent(i(a)) + n;
                return o(t[a]) ? r(t[a], function(t) {
                    return s + encodeURIComponent(i(t))
                }).join(e) : s + encodeURIComponent(i(t[a]))
            }).join(e) : s ? encodeURIComponent(i(s)) + n + encodeURIComponent(i(t)) : ""
        }
        ;
        var o = Array.isArray || function(t) {
            return "[object Array]" === Object.prototype.toString.call(t)
        }
          , a = Object.keys || function(t) {
            var e = [];
            for (var n in t)
                Object.prototype.hasOwnProperty.call(t, n) && e.push(n);
            return e
        }
    }
    , {}],
    11: [function(t, e, n) {
        "use strict";
        n.decode = n.parse = t("./decode"),
        n.encode = n.stringify = t("./encode")
    }
    , {
        "./decode": 9,
        "./encode": 10
    }],
    12: [function(t, e, n) {
        function r(t, e) {
            s.call(this),
            e = e || 10,
            this.baseUrl = t || "",
            this.progress = 0,
            this.loading = !1,
            this._progressChunk = 0,
            this._beforeMiddleware = [],
            this._afterMiddleware = [],
            this._boundLoadResource = this._loadResource.bind(this),
            this._boundOnLoad = this._onLoad.bind(this),
            this._buffer = [],
            this._numToLoad = 0,
            this._queue = i.queue(this._boundLoadResource, e),
            this.resources = {}
        }
        var i = t("async")
          , o = t("url")
          , a = t("./Resource")
          , s = t("eventemitter3");
        r.prototype = Object.create(s.prototype),
        r.prototype.constructor = r,
        e.exports = r,
        r.prototype.add = r.prototype.enqueue = function(t, e, n, r) {
            if (Array.isArray(t)) {
                for (var i = 0; i < t.length; ++i)
                    this.add(t[i]);
                return this
            }
            if ("object" == typeof t && (r = e || t.callback || t.onComplete,
            n = t,
            e = t.url,
            t = t.name || t.key || t.url),
            "string" != typeof e && (r = n,
            n = e,
            e = t),
            "string" != typeof e)
                throw new Error("No url passed to add resource to loader.");
            if ("function" == typeof n && (r = n,
            n = null ),
            this.resources[t])
                throw new Error('Resource with name "' + t + '" already exists.');
            return e = this._handleBaseUrl(e),
            this.resources[t] = new a(t,e,n),
            "function" == typeof r && this.resources[t].once("afterMiddleware", r),
            this._numToLoad++,
            this._queue.started ? (this._queue.push(this.resources[t]),
            this._progressChunk = (100 - this.progress) / (this._queue.length() + this._queue.running())) : (this._buffer.push(this.resources[t]),
            this._progressChunk = 100 / this._buffer.length),
            this
        }
        ,
        r.prototype._handleBaseUrl = function(t) {
            var e = o.parse(t);
            return e.protocol || !e.pathname || 0 === e.pathname.indexOf("//") ? t : this.baseUrl.length && this.baseUrl.lastIndexOf("/") !== this.baseUrl.length - 1 && "/" !== t.charAt(0) ? this.baseUrl + "/" + t : this.baseUrl + t
        }
        ,
        r.prototype.before = r.prototype.pre = function(t) {
            return this._beforeMiddleware.push(t),
            this
        }
        ,
        r.prototype.after = r.prototype.use = function(t) {
            return this._afterMiddleware.push(t),
            this
        }
        ,
        r.prototype.reset = function() {
            this.progress = 0,
            this.loading = !1,
            this._progressChunk = 0,
            this._buffer.length = 0,
            this._numToLoad = 0,
            this._queue.kill(),
            this._queue.started = !1,
            this.resources = {}
        }
        ,
        r.prototype.load = function(t) {
            if ("function" == typeof t && this.once("complete", t),
            this._queue.started)
                return this;
            this.emit("start", this);
            for (var e = 0; e < this._buffer.length; ++e)
                this._queue.push(this._buffer[e]);
            return this._buffer.length = 0,
            this
        }
        ,
        r.prototype._loadResource = function(t, e) {
            var n = this;
            t._dequeue = e,
            this._runMiddleware(t, this._beforeMiddleware, function() {
                t.load(n._boundOnLoad)
            })
        }
        ,
        r.prototype._onComplete = function() {
            this.emit("complete", this, this.resources)
        }
        ,
        r.prototype._onLoad = function(t) {
            this.progress += this._progressChunk,
            this.emit("progress", this, t),
            this._runMiddleware(t, this._afterMiddleware, function() {
                t.emit("afterMiddleware", t),
                this._numToLoad--,
                t.error ? this.emit("error", t.error, this, t) : this.emit("load", this, t),
                0 === this._numToLoad && (this.progress = 100,
                this._onComplete())
            }),
            t._dequeue()
        }
        ,
        r.prototype._runMiddleware = function(t, e, n) {
            var r = this;
            i.eachSeries(e, function(e, n) {
                e.call(r, t, n)
            }, n.bind(this, t))
        }
        ,
        r.LOAD_TYPE = a.LOAD_TYPE,
        r.XHR_READY_STATE = a.XHR_READY_STATE,
        r.XHR_RESPONSE_TYPE = a.XHR_RESPONSE_TYPE
    }
    , {
        "./Resource": 13,
        async: 1,
        eventemitter3: 2,
        url: 20
    }],
    13: [function(t, e, n) {
        function r(t, e, n) {
            if (a.call(this),
            n = n || {},
            "string" != typeof t || "string" != typeof e)
                throw new Error("Both name and url are required for constructing a resource.");
            this.name = t,
            this.url = e,
            this.isDataUrl = 0 === this.url.indexOf("data:"),
            this.data = null ,
            this.crossOrigin = n.crossOrigin === !0 ? "anonymous" : n.crossOrigin,
            this.loadType = n.loadType || this._determineLoadType(),
            this.xhrType = n.xhrType,
            this.metadata = n.metadata || {},
            this.error = null ,
            this.xhr = null ,
            this.isJson = !1,
            this.isXml = !1,
            this.isImage = !1,
            this.isAudio = !1,
            this.isVideo = !1,
            this._dequeue = null ,
            this._boundComplete = this.complete.bind(this),
            this._boundOnError = this._onError.bind(this),
            this._boundOnProgress = this._onProgress.bind(this),
            this._boundXhrOnError = this._xhrOnError.bind(this),
            this._boundXhrOnAbort = this._xhrOnAbort.bind(this),
            this._boundXhrOnLoad = this._xhrOnLoad.bind(this),
            this._boundXdrOnTimeout = this._xdrOnTimeout.bind(this)
        }
        function i(t) {
            return t.toString().replace("object ", "")
        }
        function o(t, e, n) {
            e && 0 === e.indexOf(".") && (e = e.substring(1)),
            e && (t[e] = n)
        }
        var a = t("eventemitter3")
          , s = t("url")
          , h = !(!window.XDomainRequest || "withCredentials"in new XMLHttpRequest)
          , u = null ;
        r.prototype = Object.create(a.prototype),
        r.prototype.constructor = r,
        e.exports = r,
        r.prototype.complete = function() {
            this.data && this.data.removeEventListener && (this.data.removeEventListener("error", this._boundOnError),
            this.data.removeEventListener("load", this._boundComplete),
            this.data.removeEventListener("progress", this._boundOnProgress),
            this.data.removeEventListener("canplaythrough", this._boundComplete)),
            this.xhr && (this.xhr.removeEventListener ? (this.xhr.removeEventListener("error", this._boundXhrOnError),
            this.xhr.removeEventListener("abort", this._boundXhrOnAbort),
            this.xhr.removeEventListener("progress", this._boundOnProgress),
            this.xhr.removeEventListener("load", this._boundXhrOnLoad)) : (this.xhr.onerror = null ,
            this.xhr.ontimeout = null ,
            this.xhr.onprogress = null ,
            this.xhr.onload = null )),
            this.emit("complete", this)
        }
        ,
        r.prototype.load = function(t) {
            switch (this.emit("start", this),
            t && this.once("complete", t),
            this.crossOrigin !== !1 && "string" == typeof this.crossOrigin || (this.crossOrigin = this._determineCrossOrigin(this.url)),
            this.loadType) {
            case r.LOAD_TYPE.IMAGE:
                this._loadImage();
                break;
            case r.LOAD_TYPE.AUDIO:
                this._loadElement("audio");
                break;
            case r.LOAD_TYPE.VIDEO:
                this._loadElement("video");
                break;
            case r.LOAD_TYPE.XHR:
            default:
                h && this.crossOrigin ? this._loadXdr() : this._loadXhr()
            }
        }
        ,
        r.prototype._loadImage = function() {
            this.data = new Image,
            this.crossOrigin && (this.data.crossOrigin = this.crossOrigin),
            this.data.src = this.url,
            this.isImage = !0,
            this.data.addEventListener("error", this._boundOnError, !1),
            this.data.addEventListener("load", this._boundComplete, !1),
            this.data.addEventListener("progress", this._boundOnProgress, !1)
        }
        ,
        r.prototype._loadElement = function(t) {
            if ("audio" === t && "undefined" != typeof Audio ? this.data = new Audio : this.data = document.createElement(t),
            null === this.data)
                return this.error = new Error("Unsupported element " + t),
                void this.complete();
            if (navigator.isCocoonJS)
                this.data.src = Array.isArray(this.url) ? this.url[0] : this.url;
            else if (Array.isArray(this.url))
                for (var e = 0; e < this.url.length; ++e)
                    this.data.appendChild(this._createSource(t, this.url[e]));
            else
                this.data.appendChild(this._createSource(t, this.url));
            this["is" + t[0].toUpperCase() + t.substring(1)] = !0,
            this.data.addEventListener("error", this._boundOnError, !1),
            this.data.addEventListener("load", this._boundComplete, !1),
            this.data.addEventListener("progress", this._boundOnProgress, !1),
            this.data.addEventListener("canplaythrough", this._boundComplete, !1),
            this.data.load()
        }
        ,
        r.prototype._loadXhr = function() {
            "string" != typeof this.xhrType && (this.xhrType = this._determineXhrType());
            var t = this.xhr = new XMLHttpRequest;
            t.open("GET", this.url, !0),
            this.xhrType === r.XHR_RESPONSE_TYPE.JSON || this.xhrType === r.XHR_RESPONSE_TYPE.DOCUMENT ? t.responseType = r.XHR_RESPONSE_TYPE.TEXT : t.responseType = this.xhrType,
            t.addEventListener("error", this._boundXhrOnError, !1),
            t.addEventListener("abort", this._boundXhrOnAbort, !1),
            t.addEventListener("progress", this._boundOnProgress, !1),
            t.addEventListener("load", this._boundXhrOnLoad, !1),
            t.send()
        }
        ,
        r.prototype._loadXdr = function() {
            "string" != typeof this.xhrType && (this.xhrType = this._determineXhrType());
            var t = this.xhr = new XDomainRequest;
            t.timeout = 5e3,
            t.onerror = this._boundXhrOnError,
            t.ontimeout = this._boundXdrOnTimeout,
            t.onprogress = this._boundOnProgress,
            t.onload = this._boundXhrOnLoad,
            t.open("GET", this.url, !0),
            setTimeout(function() {
                t.send()
            }, 0)
        }
        ,
        r.prototype._createSource = function(t, e, n) {
            n || (n = t + "/" + e.substr(e.lastIndexOf(".") + 1));
            var r = document.createElement("source");
            return r.src = e,
            r.type = n,
            r
        }
        ,
        r.prototype._onError = function(t) {
            this.error = new Error("Failed to load element using " + t.target.nodeName),
            this.complete()
        }
        ,
        r.prototype._onProgress = function(t) {
            t && t.lengthComputable && this.emit("progress", this, t.loaded / t.total)
        }
        ,
        r.prototype._xhrOnError = function() {
            this.error = new Error(i(this.xhr) + " Request failed. Status: " + this.xhr.status + ', text: "' + this.xhr.statusText + '"'),
            this.complete()
        }
        ,
        r.prototype._xhrOnAbort = function() {
            this.error = new Error(i(this.xhr) + " Request was aborted by the user."),
            this.complete()
        }
        ,
        r.prototype._xdrOnTimeout = function() {
            this.error = new Error(i(this.xhr) + " Request timed out."),
            this.complete()
        }
        ,
        r.prototype._xhrOnLoad = function() {
            var t = this.xhr
              , e = void 0 !== t.status ? t.status : 200;
            if (200 === e || 204 === e || 0 === e && t.responseText.length > 0)
                if (this.xhrType === r.XHR_RESPONSE_TYPE.TEXT)
                    this.data = t.responseText;
                else if (this.xhrType === r.XHR_RESPONSE_TYPE.JSON)
                    try {
                        this.data = JSON.parse(t.responseText),
                        this.isJson = !0
                    } catch (n) {
                        this.error = new Error("Error trying to parse loaded json:",n)
                    }
                else if (this.xhrType === r.XHR_RESPONSE_TYPE.DOCUMENT)
                    try {
                        if (window.DOMParser) {
                            var i = new DOMParser;
                            this.data = i.parseFromString(t.responseText, "text/xml")
                        } else {
                            var o = document.createElement("div");
                            o.innerHTML = t.responseText,
                            this.data = o
                        }
                        this.isXml = !0
                    } catch (n) {
                        this.error = new Error("Error trying to parse loaded xml:",n)
                    }
                else
                    this.data = t.response || t.responseText;
            else
                this.error = new Error("[" + t.status + "]" + t.statusText + ":" + t.responseURL);
            this.complete()
        }
        ,
        r.prototype._determineCrossOrigin = function(t, e) {
            if (0 === t.indexOf("data:"))
                return "";
            e = e || window.location,
            u || (u = document.createElement("a")),
            u.href = t,
            t = s.parse(u.href);
            var n = !t.port && "" === e.port || t.port === e.port;
            return t.hostname === e.hostname && n && t.protocol === e.protocol ? "" : "anonymous"
        }
        ,
        r.prototype._determineXhrType = function() {
            return r._xhrTypeMap[this._getExtension()] || r.XHR_RESPONSE_TYPE.TEXT
        }
        ,
        r.prototype._determineLoadType = function() {
            return r._loadTypeMap[this._getExtension()] || r.LOAD_TYPE.XHR
        }
        ,
        r.prototype._getExtension = function() {
            var t, e = this.url;
            if (this.isDataUrl) {
                var n = e.indexOf("/");
                t = e.substring(n + 1, e.indexOf(";", n))
            } else {
                var r = e.indexOf("?");
                r !== -1 && (e = e.substring(0, r)),
                t = e.substring(e.lastIndexOf(".") + 1)
            }
            return t.toLowerCase()
        }
        ,
        r.prototype._getMimeFromXhrType = function(t) {
            switch (t) {
            case r.XHR_RESPONSE_TYPE.BUFFER:
                return "application/octet-binary";
            case r.XHR_RESPONSE_TYPE.BLOB:
                return "application/blob";
            case r.XHR_RESPONSE_TYPE.DOCUMENT:
                return "application/xml";
            case r.XHR_RESPONSE_TYPE.JSON:
                return "application/json";
            case r.XHR_RESPONSE_TYPE.DEFAULT:
            case r.XHR_RESPONSE_TYPE.TEXT:
            default:
                return "text/plain"
            }
        }
        ,
        r.LOAD_TYPE = {
            XHR: 1,
            IMAGE: 2,
            AUDIO: 3,
            VIDEO: 4
        },
        r.XHR_READY_STATE = {
            UNSENT: 0,
            OPENED: 1,
            HEADERS_RECEIVED: 2,
            LOADING: 3,
            DONE: 4
        },
        r.XHR_RESPONSE_TYPE = {
            DEFAULT: "text",
            BUFFER: "arraybuffer",
            BLOB: "blob",
            DOCUMENT: "document",
            JSON: "json",
            TEXT: "text"
        },
        r._loadTypeMap = {
            gif: r.LOAD_TYPE.IMAGE,
            png: r.LOAD_TYPE.IMAGE,
            bmp: r.LOAD_TYPE.IMAGE,
            jpg: r.LOAD_TYPE.IMAGE,
            jpeg: r.LOAD_TYPE.IMAGE,
            tif: r.LOAD_TYPE.IMAGE,
            tiff: r.LOAD_TYPE.IMAGE,
            webp: r.LOAD_TYPE.IMAGE,
            tga: r.LOAD_TYPE.IMAGE,
            "svg+xml": r.LOAD_TYPE.IMAGE
        },
        r._xhrTypeMap = {
            xhtml: r.XHR_RESPONSE_TYPE.DOCUMENT,
            html: r.XHR_RESPONSE_TYPE.DOCUMENT,
            htm: r.XHR_RESPONSE_TYPE.DOCUMENT,
            xml: r.XHR_RESPONSE_TYPE.DOCUMENT,
            tmx: r.XHR_RESPONSE_TYPE.DOCUMENT,
            tsx: r.XHR_RESPONSE_TYPE.DOCUMENT,
            svg: r.XHR_RESPONSE_TYPE.DOCUMENT,
            gif: r.XHR_RESPONSE_TYPE.BLOB,
            png: r.XHR_RESPONSE_TYPE.BLOB,
            bmp: r.XHR_RESPONSE_TYPE.BLOB,
            jpg: r.XHR_RESPONSE_TYPE.BLOB,
            jpeg: r.XHR_RESPONSE_TYPE.BLOB,
            tif: r.XHR_RESPONSE_TYPE.BLOB,
            tiff: r.XHR_RESPONSE_TYPE.BLOB,
            webp: r.XHR_RESPONSE_TYPE.BLOB,
            tga: r.XHR_RESPONSE_TYPE.BLOB,
            json: r.XHR_RESPONSE_TYPE.JSON,
            text: r.XHR_RESPONSE_TYPE.TEXT,
            txt: r.XHR_RESPONSE_TYPE.TEXT
        },
        r.setExtensionLoadType = function(t, e) {
            o(r._loadTypeMap, t, e)
        }
        ,
        r.setExtensionXhrType = function(t, e) {
            o(r._xhrTypeMap, t, e)
        }
    }
    , {
        eventemitter3: 2,
        url: 20
    }],
    14: [function(t, e, n) {
        e.exports = {
            _keyStr: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",
            encodeBinary: function(t) {
                for (var e, n = "", r = new Array(4), i = 0, o = 0, a = 0; i < t.length; ) {
                    for (e = new Array(3),
                    o = 0; o < e.length; o++)
                        i < t.length ? e[o] = 255 & t.charCodeAt(i++) : e[o] = 0;
                    switch (r[0] = e[0] >> 2,
                    r[1] = (3 & e[0]) << 4 | e[1] >> 4,
                    r[2] = (15 & e[1]) << 2 | e[2] >> 6,
                    r[3] = 63 & e[2],
                    a = i - (t.length - 1)) {
                    case 2:
                        r[3] = 64,
                        r[2] = 64;
                        break;
                    case 1:
                        r[3] = 64
                    }
                    for (o = 0; o < r.length; o++)
                        n += this._keyStr.charAt(r[o])
                }
                return n
            }
        }
    }
    , {}],
    15: [function(t, e, n) {
        e.exports = t("./Loader"),
        e.exports.Resource = t("./Resource"),
        e.exports.middleware = {
            caching: {
                memory: t("./middlewares/caching/memory")
            },
            parsing: {
                blob: t("./middlewares/parsing/blob")
            }
        }
    }
    , {
        "./Loader": 12,
        "./Resource": 13,
        "./middlewares/caching/memory": 16,
        "./middlewares/parsing/blob": 17
    }],
    16: [function(t, e, n) {
        var r = {};
        e.exports = function() {
            return function(t, e) {
                r[t.url] ? (t.data = r[t.url],
                t.complete()) : t.once("complete", function() {
                    r[this.url] = this.data
                }),
                e()
            }
        }
    }
    , {}],
    17: [function(t, e, n) {
        var r = t("../../Resource")
          , i = t("../../b64")
          , o = window.URL || window.webkitURL;
        e.exports = function() {
            return function(t, e) {
                if (!t.data)
                    return e();
                if (t.xhr && t.xhrType === r.XHR_RESPONSE_TYPE.BLOB)
                    if (window.Blob && "string" != typeof t.data) {
                        if (0 === t.data.type.indexOf("image")) {
                            var n = o.createObjectURL(t.data);
                            t.blob = t.data,
                            t.data = new Image,
                            t.data.src = n,
                            t.isImage = !0,
                            t.data.onload = function() {
                                o.revokeObjectURL(n),
                                t.data.onload = null ,
                                e()
                            }
                        }
                    } else {
                        var a = t.xhr.getResponseHeader("content-type");
                        a && 0 === a.indexOf("image") && (t.data = new Image,
                        t.data.src = "data:" + a + ";base64," + i.encodeBinary(t.xhr.responseText),
                        t.isImage = !0,
                        t.data.onload = function() {
                            t.data.onload = null ,
                            e()
                        }
                        )
                    }
                else
                    e()
            }
        }
    }
    , {
        "../../Resource": 13,
        "../../b64": 14
    }],
    18: [function(t, e, n) {
        !function() {
            "use strict";
            var t = "undefined" != typeof e && e.exports
              , n = "undefined" != typeof Element && "ALLOW_KEYBOARD_INPUT"in Element
              , r = function() {
                for (var t, e, n = [["requestFullscreen", "exitFullscreen", "fullscreenElement", "fullscreenEnabled", "fullscreenchange", "fullscreenerror"], ["webkitRequestFullscreen", "webkitExitFullscreen", "webkitFullscreenElement", "webkitFullscreenEnabled", "webkitfullscreenchange", "webkitfullscreenerror"], ["webkitRequestFullScreen", "webkitCancelFullScreen", "webkitCurrentFullScreenElement", "webkitCancelFullScreen", "webkitfullscreenchange", "webkitfullscreenerror"], ["mozRequestFullScreen", "mozCancelFullScreen", "mozFullScreenElement", "mozFullScreenEnabled", "mozfullscreenchange", "mozfullscreenerror"], ["msRequestFullscreen", "msExitFullscreen", "msFullscreenElement", "msFullscreenEnabled", "MSFullscreenChange", "MSFullscreenError"]], r = 0, i = n.length, o = {}; r < i; r++)
                    if (t = n[r],
                    t && t[1]in document) {
                        for (r = 0,
                        e = t.length; r < e; r++)
                            o[n[0][r]] = t[r];
                        return o
                    }
                return !1
            }()
              , i = {
                request: function(t) {
                    var e = r.requestFullscreen;
                    t = t || document.documentElement,
                    /5\.1[\.\d]* Safari/.test(navigator.userAgent) ? t[e]() : t[e](n && Element.ALLOW_KEYBOARD_INPUT)
                },
                exit: function() {
                    document[r.exitFullscreen]()
                },
                toggle: function(t) {
                    this.isFullscreen ? this.exit() : this.request(t)
                },
                raw: r
            };
            return r ? (Object.defineProperties(i, {
                isFullscreen: {
                    get: function() {
                        return Boolean(document[r.fullscreenElement])
                    }
                },
                element: {
                    enumerable: !0,
                    get: function() {
                        return document[r.fullscreenElement]
                    }
                },
                enabled: {
                    enumerable: !0,
                    get: function() {
                        return Boolean(document[r.fullscreenEnabled])
                    }
                }
            }),
            void (t ? e.exports = i : window.screenfull = i)) : void (t ? e.exports = !1 : window.screenfull = !1)
        }()
    }
    , {}],
    19: [function(t, e, n) {
        var r = {
            REVISION: "74"
        };
        "function" == typeof define && define.amd ? define("three", r) : "undefined" != typeof n && "undefined" != typeof e && (e.exports = r),
        void 0 === Number.EPSILON && (Number.EPSILON = Math.pow(2, -52)),
        void 0 === Math.sign && (Math.sign = function(t) {
            return t < 0 ? -1 : t > 0 ? 1 : +t
        }
        ),
        void 0 === Function.prototype.name && void 0 !== Object.defineProperty && Object.defineProperty(Function.prototype, "name", {
            get: function() {
                return this.toString().match(/^\s*function\s*(\S*)\s*\(/)[1]
            }
        }),
        void 0 === Object.assign && Object.defineProperty(Object, "assign", {
            writable: !0,
            configurable: !0,
            value: function(t) {
                "use strict";
                if (void 0 === t || null === t)
                    throw new TypeError("Cannot convert first argument to object");
                for (var e = Object(t), n = 1, r = arguments.length; n !== r; ++n) {
                    var i = arguments[n];
                    if (void 0 !== i && null !== i) {
                        i = Object(i);
                        for (var o = Object.keys(i), a = 0, s = o.length; a !== s; ++a) {
                            var h = o[a]
                              , u = Object.getOwnPropertyDescriptor(i, h);
                            void 0 !== u && u.enumerable && (e[h] = i[h])
                        }
                    }
                }
                return e
            }
        }),
        r.MOUSE = {
            LEFT: 0,
            MIDDLE: 1,
            RIGHT: 2
        },
        r.CullFaceNone = 0,
        r.CullFaceBack = 1,
        r.CullFaceFront = 2,
        r.CullFaceFrontBack = 3,
        r.FrontFaceDirectionCW = 0,
        r.FrontFaceDirectionCCW = 1,
        r.BasicShadowMap = 0,
        r.PCFShadowMap = 1,
        r.PCFSoftShadowMap = 2,
        r.FrontSide = 0,
        r.BackSide = 1,
        r.DoubleSide = 2,
        r.FlatShading = 1,
        r.SmoothShading = 2,
        r.NoColors = 0,
        r.FaceColors = 1,
        r.VertexColors = 2,
        r.NoBlending = 0,
        r.NormalBlending = 1,
        r.AdditiveBlending = 2,
        r.SubtractiveBlending = 3,
        r.MultiplyBlending = 4,
        r.CustomBlending = 5,
        r.AddEquation = 100,
        r.SubtractEquation = 101,
        r.ReverseSubtractEquation = 102,
        r.MinEquation = 103,
        r.MaxEquation = 104,
        r.ZeroFactor = 200,
        r.OneFactor = 201,
        r.SrcColorFactor = 202,
        r.OneMinusSrcColorFactor = 203,
        r.SrcAlphaFactor = 204,
        r.OneMinusSrcAlphaFactor = 205,
        r.DstAlphaFactor = 206,
        r.OneMinusDstAlphaFactor = 207,
        r.DstColorFactor = 208,
        r.OneMinusDstColorFactor = 209,
        r.SrcAlphaSaturateFactor = 210,
        r.NeverDepth = 0,
        r.AlwaysDepth = 1,
        r.LessDepth = 2,
        r.LessEqualDepth = 3,
        r.EqualDepth = 4,
        r.GreaterEqualDepth = 5,
        r.GreaterDepth = 6,
        r.NotEqualDepth = 7,
        r.MultiplyOperation = 0,
        r.MixOperation = 1,
        r.AddOperation = 2,
        r.UVMapping = 300,
        r.CubeReflectionMapping = 301,
        r.CubeRefractionMapping = 302,
        r.EquirectangularReflectionMapping = 303,
        r.EquirectangularRefractionMapping = 304,
        r.SphericalReflectionMapping = 305,
        r.RepeatWrapping = 1e3,
        r.ClampToEdgeWrapping = 1001,
        r.MirroredRepeatWrapping = 1002,
        r.NearestFilter = 1003,
        r.NearestMipMapNearestFilter = 1004,
        r.NearestMipMapLinearFilter = 1005,
        r.LinearFilter = 1006,
        r.LinearMipMapNearestFilter = 1007,
        r.LinearMipMapLinearFilter = 1008,
        r.UnsignedByteType = 1009,
        r.ByteType = 1010,
        r.ShortType = 1011,
        r.UnsignedShortType = 1012,
        r.IntType = 1013,
        r.UnsignedIntType = 1014,
        r.FloatType = 1015,
        r.HalfFloatType = 1025,
        r.UnsignedShort4444Type = 1016,
        r.UnsignedShort5551Type = 1017,
        r.UnsignedShort565Type = 1018,
        r.AlphaFormat = 1019,
        r.RGBFormat = 1020,
        r.RGBAFormat = 1021,
        r.LuminanceFormat = 1022,
        r.LuminanceAlphaFormat = 1023,
        r.RGBEFormat = r.RGBAFormat,
        r.RGB_S3TC_DXT1_Format = 2001,
        r.RGBA_S3TC_DXT1_Format = 2002,
        r.RGBA_S3TC_DXT3_Format = 2003,
        r.RGBA_S3TC_DXT5_Format = 2004,
        r.RGB_PVRTC_4BPPV1_Format = 2100,
        r.RGB_PVRTC_2BPPV1_Format = 2101,
        r.RGBA_PVRTC_4BPPV1_Format = 2102,
        r.RGBA_PVRTC_2BPPV1_Format = 2103,
        r.RGB_ETC1_Format = 2151,
        r.LoopOnce = 2200,
        r.LoopRepeat = 2201,
        r.LoopPingPong = 2202,
        r.InterpolateDiscrete = 2300,
        r.InterpolateLinear = 2301,
        r.InterpolateSmooth = 2302,
        r.ZeroCurvatureEnding = 2400,
        r.ZeroSlopeEnding = 2401,
        r.WrapAroundEnding = 2402,
        r.TrianglesDrawMode = 0,
        r.TriangleStripDrawMode = 1,
        r.TriangleFanDrawMode = 2,
        r.Color = function(t) {
            return 3 === arguments.length ? this.fromArray(arguments) : this.set(t)
        }
        ,
        r.Color.prototype = {
            constructor: r.Color,
            r: 1,
            g: 1,
            b: 1,
            set: function(t) {
                return t instanceof r.Color ? this.copy(t) : "number" == typeof t ? this.setHex(t) : "string" == typeof t && this.setStyle(t),
                this
            },
            setScalar: function(t) {
                this.r = t,
                this.g = t,
                this.b = t
            },
            setHex: function(t) {
                return t = Math.floor(t),
                this.r = (t >> 16 & 255) / 255,
                this.g = (t >> 8 & 255) / 255,
                this.b = (255 & t) / 255,
                this
            },
            setRGB: function(t, e, n) {
                return this.r = t,
                this.g = e,
                this.b = n,
                this
            },
            setHSL: function() {
                function t(t, e, n) {
                    return n < 0 && (n += 1),
                    n > 1 && (n -= 1),
                    n < 1 / 6 ? t + 6 * (e - t) * n : n < .5 ? e : n < 2 / 3 ? t + 6 * (e - t) * (2 / 3 - n) : t
                }
                return function(e, n, i) {
                    if (e = r.Math.euclideanModulo(e, 1),
                    n = r.Math.clamp(n, 0, 1),
                    i = r.Math.clamp(i, 0, 1),
                    0 === n)
                        this.r = this.g = this.b = i;
                    else {
                        var o = i <= .5 ? i * (1 + n) : i + n - i * n
                          , a = 2 * i - o;
                        this.r = t(a, o, e + 1 / 3),
                        this.g = t(a, o, e),
                        this.b = t(a, o, e - 1 / 3)
                    }
                    return this
                }
            }(),
            setStyle: function(t) {
                function e(e) {
                    void 0 !== e && parseFloat(e) < 1 && console.warn("THREE.Color: Alpha component of " + t + " will be ignored.")
                }
                var n;
                if (n = /^((?:rgb|hsl)a?)\(\s*([^\)]*)\)/.exec(t)) {
                    var i, o = n[1], a = n[2];
                    switch (o) {
                    case "rgb":
                    case "rgba":
                        if (i = /^(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(a))
                            return this.r = Math.min(255, parseInt(i[1], 10)) / 255,
                            this.g = Math.min(255, parseInt(i[2], 10)) / 255,
                            this.b = Math.min(255, parseInt(i[3], 10)) / 255,
                            e(i[5]),
                            this;
                        if (i = /^(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(a))
                            return this.r = Math.min(100, parseInt(i[1], 10)) / 100,
                            this.g = Math.min(100, parseInt(i[2], 10)) / 100,
                            this.b = Math.min(100, parseInt(i[3], 10)) / 100,
                            e(i[5]),
                            this;
                        break;
                    case "hsl":
                    case "hsla":
                        if (i = /^([0-9]*\.?[0-9]+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(a)) {
                            var s = parseFloat(i[1]) / 360
                              , h = parseInt(i[2], 10) / 100
                              , u = parseInt(i[3], 10) / 100;
                            return e(i[5]),
                            this.setHSL(s, h, u)
                        }
                    }
                } else if (n = /^\#([A-Fa-f0-9]+)$/.exec(t)) {
                    var l = n[1]
                      , c = l.length;
                    if (3 === c)
                        return this.r = parseInt(l.charAt(0) + l.charAt(0), 16) / 255,
                        this.g = parseInt(l.charAt(1) + l.charAt(1), 16) / 255,
                        this.b = parseInt(l.charAt(2) + l.charAt(2), 16) / 255,
                        this;
                    if (6 === c)
                        return this.r = parseInt(l.charAt(0) + l.charAt(1), 16) / 255,
                        this.g = parseInt(l.charAt(2) + l.charAt(3), 16) / 255,
                        this.b = parseInt(l.charAt(4) + l.charAt(5), 16) / 255,
                        this
                }
                if (t && t.length > 0) {
                    var l = r.ColorKeywords[t];
                    void 0 !== l ? this.setHex(l) : console.warn("THREE.Color: Unknown color " + t)
                }
                return this
            },
            clone: function() {
                return new this.constructor(this.r,this.g,this.b)
            },
            copy: function(t) {
                return this.r = t.r,
                this.g = t.g,
                this.b = t.b,
                this
            },
            copyGammaToLinear: function(t, e) {
                return void 0 === e && (e = 2),
                this.r = Math.pow(t.r, e),
                this.g = Math.pow(t.g, e),
                this.b = Math.pow(t.b, e),
                this
            },
            copyLinearToGamma: function(t, e) {
                void 0 === e && (e = 2);
                var n = e > 0 ? 1 / e : 1;
                return this.r = Math.pow(t.r, n),
                this.g = Math.pow(t.g, n),
                this.b = Math.pow(t.b, n),
                this
            },
            convertGammaToLinear: function() {
                var t = this.r
                  , e = this.g
                  , n = this.b;
                return this.r = t * t,
                this.g = e * e,
                this.b = n * n,
                this
            },
            convertLinearToGamma: function() {
                return this.r = Math.sqrt(this.r),
                this.g = Math.sqrt(this.g),
                this.b = Math.sqrt(this.b),
                this
            },
            getHex: function() {
                return 255 * this.r << 16 ^ 255 * this.g << 8 ^ 255 * this.b << 0
            },
            getHexString: function() {
                return ("000000" + this.getHex().toString(16)).slice(-6)
            },
            getHSL: function(t) {
                var e, n, r = t || {
                    h: 0,
                    s: 0,
                    l: 0
                }, i = this.r, o = this.g, a = this.b, s = Math.max(i, o, a), h = Math.min(i, o, a), u = (h + s) / 2;
                if (h === s)
                    e = 0,
                    n = 0;
                else {
                    var l = s - h;
                    switch (n = u <= .5 ? l / (s + h) : l / (2 - s - h),
                    s) {
                    case i:
                        e = (o - a) / l + (o < a ? 6 : 0);
                        break;
                    case o:
                        e = (a - i) / l + 2;
                        break;
                    case a:
                        e = (i - o) / l + 4
                    }
                    e /= 6
                }
                return r.h = e,
                r.s = n,
                r.l = u,
                r
            },
            getStyle: function() {
                return "rgb(" + (255 * this.r | 0) + "," + (255 * this.g | 0) + "," + (255 * this.b | 0) + ")"
            },
            offsetHSL: function(t, e, n) {
                var r = this.getHSL();
                return r.h += t,
                r.s += e,
                r.l += n,
                this.setHSL(r.h, r.s, r.l),
                this
            },
            add: function(t) {
                return this.r += t.r,
                this.g += t.g,
                this.b += t.b,
                this
            },
            addColors: function(t, e) {
                return this.r = t.r + e.r,
                this.g = t.g + e.g,
                this.b = t.b + e.b,
                this
            },
            addScalar: function(t) {
                return this.r += t,
                this.g += t,
                this.b += t,
                this
            },
            multiply: function(t) {
                return this.r *= t.r,
                this.g *= t.g,
                this.b *= t.b,
                this
            },
            multiplyScalar: function(t) {
                return this.r *= t,
                this.g *= t,
                this.b *= t,
                this
            },
            lerp: function(t, e) {
                return this.r += (t.r - this.r) * e,
                this.g += (t.g - this.g) * e,
                this.b += (t.b - this.b) * e,
                this
            },
            equals: function(t) {
                return t.r === this.r && t.g === this.g && t.b === this.b
            },
            fromArray: function(t, e) {
                return void 0 === e && (e = 0),
                this.r = t[e],
                this.g = t[e + 1],
                this.b = t[e + 2],
                this
            },
            toArray: function(t, e) {
                return void 0 === t && (t = []),
                void 0 === e && (e = 0),
                t[e] = this.r,
                t[e + 1] = this.g,
                t[e + 2] = this.b,
                t
            }
        },
        r.ColorKeywords = {
            aliceblue: 15792383,
            antiquewhite: 16444375,
            aqua: 65535,
            aquamarine: 8388564,
            azure: 15794175,
            beige: 16119260,
            bisque: 16770244,
            black: 0,
            blanchedalmond: 16772045,
            blue: 255,
            blueviolet: 9055202,
            brown: 10824234,
            burlywood: 14596231,
            cadetblue: 6266528,
            chartreuse: 8388352,
            chocolate: 13789470,
            coral: 16744272,
            cornflowerblue: 6591981,
            cornsilk: 16775388,
            crimson: 14423100,
            cyan: 65535,
            darkblue: 139,
            darkcyan: 35723,
            darkgoldenrod: 12092939,
            darkgray: 11119017,
            darkgreen: 25600,
            darkgrey: 11119017,
            darkkhaki: 12433259,
            darkmagenta: 9109643,
            darkolivegreen: 5597999,
            darkorange: 16747520,
            darkorchid: 10040012,
            darkred: 9109504,
            darksalmon: 15308410,
            darkseagreen: 9419919,
            darkslateblue: 4734347,
            darkslategray: 3100495,
            darkslategrey: 3100495,
            darkturquoise: 52945,
            darkviolet: 9699539,
            deeppink: 16716947,
            deepskyblue: 49151,
            dimgray: 6908265,
            dimgrey: 6908265,
            dodgerblue: 2003199,
            firebrick: 11674146,
            floralwhite: 16775920,
            forestgreen: 2263842,
            fuchsia: 16711935,
            gainsboro: 14474460,
            ghostwhite: 16316671,
            gold: 16766720,
            goldenrod: 14329120,
            gray: 8421504,
            green: 32768,
            greenyellow: 11403055,
            grey: 8421504,
            honeydew: 15794160,
            hotpink: 16738740,
            indianred: 13458524,
            indigo: 4915330,
            ivory: 16777200,
            khaki: 15787660,
            lavender: 15132410,
            lavenderblush: 16773365,
            lawngreen: 8190976,
            lemonchiffon: 16775885,
            lightblue: 11393254,
            lightcoral: 15761536,
            lightcyan: 14745599,
            lightgoldenrodyellow: 16448210,
            lightgray: 13882323,
            lightgreen: 9498256,
            lightgrey: 13882323,
            lightpink: 16758465,
            lightsalmon: 16752762,
            lightseagreen: 2142890,
            lightskyblue: 8900346,
            lightslategray: 7833753,
            lightslategrey: 7833753,
            lightsteelblue: 11584734,
            lightyellow: 16777184,
            lime: 65280,
            limegreen: 3329330,
            linen: 16445670,
            magenta: 16711935,
            maroon: 8388608,
            mediumaquamarine: 6737322,
            mediumblue: 205,
            mediumorchid: 12211667,
            mediumpurple: 9662683,
            mediumseagreen: 3978097,
            mediumslateblue: 8087790,
            mediumspringgreen: 64154,
            mediumturquoise: 4772300,
            mediumvioletred: 13047173,
            midnightblue: 1644912,
            mintcream: 16121850,
            mistyrose: 16770273,
            moccasin: 16770229,
            navajowhite: 16768685,
            navy: 128,
            oldlace: 16643558,
            olive: 8421376,
            olivedrab: 7048739,
            orange: 16753920,
            orangered: 16729344,
            orchid: 14315734,
            palegoldenrod: 15657130,
            palegreen: 10025880,
            paleturquoise: 11529966,
            palevioletred: 14381203,
            papayawhip: 16773077,
            peachpuff: 16767673,
            peru: 13468991,
            pink: 16761035,
            plum: 14524637,
            powderblue: 11591910,
            purple: 8388736,
            red: 16711680,
            rosybrown: 12357519,
            royalblue: 4286945,
            saddlebrown: 9127187,
            salmon: 16416882,
            sandybrown: 16032864,
            seagreen: 3050327,
            seashell: 16774638,
            sienna: 10506797,
            silver: 12632256,
            skyblue: 8900331,
            slateblue: 6970061,
            slategray: 7372944,
            slategrey: 7372944,
            snow: 16775930,
            springgreen: 65407,
            steelblue: 4620980,
            tan: 13808780,
            teal: 32896,
            thistle: 14204888,
            tomato: 16737095,
            turquoise: 4251856,
            violet: 15631086,
            wheat: 16113331,
            white: 16777215,
            whitesmoke: 16119285,
            yellow: 16776960,
            yellowgreen: 10145074
        },
        r.Quaternion = function(t, e, n, r) {
            this._x = t || 0,
            this._y = e || 0,
            this._z = n || 0,
            this._w = void 0 !== r ? r : 1
        }
        ,
        r.Quaternion.prototype = {
            constructor: r.Quaternion,
            get x() {
                return this._x
            },
            set x(t) {
                this._x = t,
                this.onChangeCallback()
            },
            get y() {
                return this._y
            },
            set y(t) {
                this._y = t,
                this.onChangeCallback()
            },
            get z() {
                return this._z
            },
            set z(t) {
                this._z = t,
                this.onChangeCallback()
            },
            get w() {
                return this._w
            },
            set w(t) {
                this._w = t,
                this.onChangeCallback()
            },
            set: function(t, e, n, r) {
                return this._x = t,
                this._y = e,
                this._z = n,
                this._w = r,
                this.onChangeCallback(),
                this
            },
            clone: function() {
                return new this.constructor(this._x,this._y,this._z,this._w)
            },
            copy: function(t) {
                return this._x = t.x,
                this._y = t.y,
                this._z = t.z,
                this._w = t.w,
                this.onChangeCallback(),
                this
            },
            setFromEuler: function(t, e) {
                if (t instanceof r.Euler == !1)
                    throw new Error("THREE.Quaternion: .setFromEuler() now expects a Euler rotation rather than a Vector3 and order.");
                var n = Math.cos(t._x / 2)
                  , i = Math.cos(t._y / 2)
                  , o = Math.cos(t._z / 2)
                  , a = Math.sin(t._x / 2)
                  , s = Math.sin(t._y / 2)
                  , h = Math.sin(t._z / 2)
                  , u = t.order;
                return "XYZ" === u ? (this._x = a * i * o + n * s * h,
                this._y = n * s * o - a * i * h,
                this._z = n * i * h + a * s * o,
                this._w = n * i * o - a * s * h) : "YXZ" === u ? (this._x = a * i * o + n * s * h,
                this._y = n * s * o - a * i * h,
                this._z = n * i * h - a * s * o,
                this._w = n * i * o + a * s * h) : "ZXY" === u ? (this._x = a * i * o - n * s * h,
                this._y = n * s * o + a * i * h,
                this._z = n * i * h + a * s * o,
                this._w = n * i * o - a * s * h) : "ZYX" === u ? (this._x = a * i * o - n * s * h,
                this._y = n * s * o + a * i * h,
                this._z = n * i * h - a * s * o,
                this._w = n * i * o + a * s * h) : "YZX" === u ? (this._x = a * i * o + n * s * h,
                this._y = n * s * o + a * i * h,
                this._z = n * i * h - a * s * o,
                this._w = n * i * o - a * s * h) : "XZY" === u && (this._x = a * i * o - n * s * h,
                this._y = n * s * o - a * i * h,
                this._z = n * i * h + a * s * o,
                this._w = n * i * o + a * s * h),
                e !== !1 && this.onChangeCallback(),
                this
            },
            setFromAxisAngle: function(t, e) {
                var n = e / 2
                  , r = Math.sin(n);
                return this._x = t.x * r,
                this._y = t.y * r,
                this._z = t.z * r,
                this._w = Math.cos(n),
                this.onChangeCallback(),
                this
            },
            setFromRotationMatrix: function(t) {
                var e, n = t.elements, r = n[0], i = n[4], o = n[8], a = n[1], s = n[5], h = n[9], u = n[2], l = n[6], c = n[10], p = r + s + c;
                return p > 0 ? (e = .5 / Math.sqrt(p + 1),
                this._w = .25 / e,
                this._x = (l - h) * e,
                this._y = (o - u) * e,
                this._z = (a - i) * e) : r > s && r > c ? (e = 2 * Math.sqrt(1 + r - s - c),
                this._w = (l - h) / e,
                this._x = .25 * e,
                this._y = (i + a) / e,
                this._z = (o + u) / e) : s > c ? (e = 2 * Math.sqrt(1 + s - r - c),
                this._w = (o - u) / e,
                this._x = (i + a) / e,
                this._y = .25 * e,
                this._z = (h + l) / e) : (e = 2 * Math.sqrt(1 + c - r - s),
                this._w = (a - i) / e,
                this._x = (o + u) / e,
                this._y = (h + l) / e,
                this._z = .25 * e),
                this.onChangeCallback(),
                this
            },
            setFromUnitVectors: function() {
                var t, e, n = 1e-6;
                return function(i, o) {
                    return void 0 === t && (t = new r.Vector3),
                    e = i.dot(o) + 1,
                    e < n ? (e = 0,
                    Math.abs(i.x) > Math.abs(i.z) ? t.set(-i.y, i.x, 0) : t.set(0, -i.z, i.y)) : t.crossVectors(i, o),
                    this._x = t.x,
                    this._y = t.y,
                    this._z = t.z,
                    this._w = e,
                    this.normalize(),
                    this
                }
            }(),
            inverse: function() {
                return this.conjugate().normalize(),
                this
            },
            conjugate: function() {
                return this._x *= -1,
                this._y *= -1,
                this._z *= -1,
                this.onChangeCallback(),
                this
            },
            dot: function(t) {
                return this._x * t._x + this._y * t._y + this._z * t._z + this._w * t._w
            },
            lengthSq: function() {
                return this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w
            },
            length: function() {
                return Math.sqrt(this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w)
            },
            normalize: function() {
                var t = this.length();
                return 0 === t ? (this._x = 0,
                this._y = 0,
                this._z = 0,
                this._w = 1) : (t = 1 / t,
                this._x = this._x * t,
                this._y = this._y * t,
                this._z = this._z * t,
                this._w = this._w * t),
                this.onChangeCallback(),
                this
            },
            multiply: function(t, e) {
                return void 0 !== e ? (console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),
                this.multiplyQuaternions(t, e)) : this.multiplyQuaternions(this, t)
            },
            multiplyQuaternions: function(t, e) {
                var n = t._x
                  , r = t._y
                  , i = t._z
                  , o = t._w
                  , a = e._x
                  , s = e._y
                  , h = e._z
                  , u = e._w;
                return this._x = n * u + o * a + r * h - i * s,
                this._y = r * u + o * s + i * a - n * h,
                this._z = i * u + o * h + n * s - r * a,
                this._w = o * u - n * a - r * s - i * h,
                this.onChangeCallback(),
                this
            },
            slerp: function(t, e) {
                if (0 === e)
                    return this;
                if (1 === e)
                    return this.copy(t);
                var n = this._x
                  , r = this._y
                  , i = this._z
                  , o = this._w
                  , a = o * t._w + n * t._x + r * t._y + i * t._z;
                if (a < 0 ? (this._w = -t._w,
                this._x = -t._x,
                this._y = -t._y,
                this._z = -t._z,
                a = -a) : this.copy(t),
                a >= 1)
                    return this._w = o,
                    this._x = n,
                    this._y = r,
                    this._z = i,
                    this;
                var s = Math.sqrt(1 - a * a);
                if (Math.abs(s) < .001)
                    return this._w = .5 * (o + this._w),
                    this._x = .5 * (n + this._x),
                    this._y = .5 * (r + this._y),
                    this._z = .5 * (i + this._z),
                    this;
                var h = Math.atan2(s, a)
                  , u = Math.sin((1 - e) * h) / s
                  , l = Math.sin(e * h) / s;
                return this._w = o * u + this._w * l,
                this._x = n * u + this._x * l,
                this._y = r * u + this._y * l,
                this._z = i * u + this._z * l,
                this.onChangeCallback(),
                this
            },
            equals: function(t) {
                return t._x === this._x && t._y === this._y && t._z === this._z && t._w === this._w
            },
            fromArray: function(t, e) {
                return void 0 === e && (e = 0),
                this._x = t[e],
                this._y = t[e + 1],
                this._z = t[e + 2],
                this._w = t[e + 3],
                this.onChangeCallback(),
                this
            },
            toArray: function(t, e) {
                return void 0 === t && (t = []),
                void 0 === e && (e = 0),
                t[e] = this._x,
                t[e + 1] = this._y,
                t[e + 2] = this._z,
                t[e + 3] = this._w,
                t
            },
            onChange: function(t) {
                return this.onChangeCallback = t,
                this
            },
            onChangeCallback: function() {}
        },
        Object.assign(r.Quaternion, {
            slerp: function(t, e, n, r) {
                return n.copy(t).slerp(e, r)
            },
            slerpFlat: function(t, e, n, r, i, o, a) {
                var s = n[r + 0]
                  , h = n[r + 1]
                  , u = n[r + 2]
                  , l = n[r + 3]
                  , c = i[o + 0]
                  , p = i[o + 1]
                  , f = i[o + 2]
                  , d = i[o + 3];
                if (l !== d || s !== c || h !== p || u !== f) {
                    var m = 1 - a
                      , v = s * c + h * p + u * f + l * d
                      , g = v >= 0 ? 1 : -1
                      , y = 1 - v * v;
                    if (y > Number.EPSILON) {
                        var _ = Math.sqrt(y)
                          , x = Math.atan2(_, v * g);
                        m = Math.sin(m * x) / _,
                        a = Math.sin(a * x) / _
                    }
                    var b = a * g;
                    if (s = s * m + c * b,
                    h = h * m + p * b,
                    u = u * m + f * b,
                    l = l * m + d * b,
                    m === 1 - a) {
                        var w = 1 / Math.sqrt(s * s + h * h + u * u + l * l);
                        s *= w,
                        h *= w,
                        u *= w,
                        l *= w
                    }
                }
                t[e] = s,
                t[e + 1] = h,
                t[e + 2] = u,
                t[e + 3] = l
            }
        }),
        r.Vector2 = function(t, e) {
            this.x = t || 0,
            this.y = e || 0
        }
        ,
        r.Vector2.prototype = {
            constructor: r.Vector2,
            get width() {
                return this.x
            },
            set width(t) {
                this.x = t
            },
            get height() {
                return this.y
            },
            set height(t) {
                this.y = t
            },
            set: function(t, e) {
                return this.x = t,
                this.y = e,
                this
            },
            setScalar: function(t) {
                return this.x = t,
                this.y = t,
                this
            },
            setX: function(t) {
                return this.x = t,
                this
            },
            setY: function(t) {
                return this.y = t,
                this
            },
            setComponent: function(t, e) {
                switch (t) {
                case 0:
                    this.x = e;
                    break;
                case 1:
                    this.y = e;
                    break;
                default:
                    throw new Error("index is out of range: " + t)
                }
            },
            getComponent: function(t) {
                switch (t) {
                case 0:
                    return this.x;
                case 1:
                    return this.y;
                default:
                    throw new Error("index is out of range: " + t)
                }
            },
            clone: function() {
                return new this.constructor(this.x,this.y)
            },
            copy: function(t) {
                return this.x = t.x,
                this.y = t.y,
                this
            },
            add: function(t, e) {
                return void 0 !== e ? (console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),
                this.addVectors(t, e)) : (this.x += t.x,
                this.y += t.y,
                this)
            },
            addScalar: function(t) {
                return this.x += t,
                this.y += t,
                this
            },
            addVectors: function(t, e) {
                return this.x = t.x + e.x,
                this.y = t.y + e.y,
                this
            },
            addScaledVector: function(t, e) {
                return this.x += t.x * e,
                this.y += t.y * e,
                this
            },
            sub: function(t, e) {
                return void 0 !== e ? (console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),
                this.subVectors(t, e)) : (this.x -= t.x,
                this.y -= t.y,
                this)
            },
            subScalar: function(t) {
                return this.x -= t,
                this.y -= t,
                this
            },
            subVectors: function(t, e) {
                return this.x = t.x - e.x,
                this.y = t.y - e.y,
                this
            },
            multiply: function(t) {
                return this.x *= t.x,
                this.y *= t.y,
                this
            },
            multiplyScalar: function(t) {
                return isFinite(t) ? (this.x *= t,
                this.y *= t) : (this.x = 0,
                this.y = 0),
                this
            },
            divide: function(t) {
                return this.x /= t.x,
                this.y /= t.y,
                this
            },
            divideScalar: function(t) {
                return this.multiplyScalar(1 / t)
            },
            min: function(t) {
                return this.x = Math.min(this.x, t.x),
                this.y = Math.min(this.y, t.y),
                this
            },
            max: function(t) {
                return this.x = Math.max(this.x, t.x),
                this.y = Math.max(this.y, t.y),
                this
            },
            clamp: function(t, e) {
                return this.x = Math.max(t.x, Math.min(e.x, this.x)),
                this.y = Math.max(t.y, Math.min(e.y, this.y)),
                this
            },
            clampScalar: function() {
                var t, e;
                return function(n, i) {
                    return void 0 === t && (t = new r.Vector2,
                    e = new r.Vector2),
                    t.set(n, n),
                    e.set(i, i),
                    this.clamp(t, e)
                }
            }(),
            clampLength: function(t, e) {
                var n = this.length();
                return this.multiplyScalar(Math.max(t, Math.min(e, n)) / n),
                this
            },
            floor: function() {
                return this.x = Math.floor(this.x),
                this.y = Math.floor(this.y),
                this
            },
            ceil: function() {
                return this.x = Math.ceil(this.x),
                this.y = Math.ceil(this.y),
                this
            },
            round: function() {
                return this.x = Math.round(this.x),
                this.y = Math.round(this.y),
                this
            },
            roundToZero: function() {
                return this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x),
                this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y),
                this
            },
            negate: function() {
                return this.x = -this.x,
                this.y = -this.y,
                this
            },
            dot: function(t) {
                return this.x * t.x + this.y * t.y
            },
            lengthSq: function() {
                return this.x * this.x + this.y * this.y
            },
            length: function() {
                return Math.sqrt(this.x * this.x + this.y * this.y)
            },
            lengthManhattan: function() {
                return Math.abs(this.x) + Math.abs(this.y)
            },
            normalize: function() {
                return this.divideScalar(this.length())
            },
            angle: function() {
                var t = Math.atan2(this.y, this.x);
                return t < 0 && (t += 2 * Math.PI),
                t
            },
            distanceTo: function(t) {
                return Math.sqrt(this.distanceToSquared(t))
            },
            distanceToSquared: function(t) {
                var e = this.x - t.x
                  , n = this.y - t.y;
                return e * e + n * n
            },
            setLength: function(t) {
                return this.multiplyScalar(t / this.length())
            },
            lerp: function(t, e) {
                return this.x += (t.x - this.x) * e,
                this.y += (t.y - this.y) * e,
                this
            },
            lerpVectors: function(t, e, n) {
                return this.subVectors(e, t).multiplyScalar(n).add(t),
                this
            },
            equals: function(t) {
                return t.x === this.x && t.y === this.y
            },
            fromArray: function(t, e) {
                return void 0 === e && (e = 0),
                this.x = t[e],
                this.y = t[e + 1],
                this
            },
            toArray: function(t, e) {
                return void 0 === t && (t = []),
                void 0 === e && (e = 0),
                t[e] = this.x,
                t[e + 1] = this.y,
                t
            },
            fromAttribute: function(t, e, n) {
                return void 0 === n && (n = 0),
                e = e * t.itemSize + n,
                this.x = t.array[e],
                this.y = t.array[e + 1],
                this
            },
            rotateAround: function(t, e) {
                var n = Math.cos(e)
                  , r = Math.sin(e)
                  , i = this.x - t.x
                  , o = this.y - t.y;
                return this.x = i * n - o * r + t.x,
                this.y = i * r + o * n + t.y,
                this
            }
        },
        r.Vector3 = function(t, e, n) {
            this.x = t || 0,
            this.y = e || 0,
            this.z = n || 0
        }
        ,
        r.Vector3.prototype = {
            constructor: r.Vector3,
            set: function(t, e, n) {
                return this.x = t,
                this.y = e,
                this.z = n,
                this
            },
            setScalar: function(t) {
                return this.x = t,
                this.y = t,
                this.z = t,
                this
            },
            setX: function(t) {
                return this.x = t,
                this
            },
            setY: function(t) {
                return this.y = t,
                this
            },
            setZ: function(t) {
                return this.z = t,
                this
            },
            setComponent: function(t, e) {
                switch (t) {
                case 0:
                    this.x = e;
                    break;
                case 1:
                    this.y = e;
                    break;
                case 2:
                    this.z = e;
                    break;
                default:
                    throw new Error("index is out of range: " + t)
                }
            },
            getComponent: function(t) {
                switch (t) {
                case 0:
                    return this.x;
                case 1:
                    return this.y;
                case 2:
                    return this.z;
                default:
                    throw new Error("index is out of range: " + t)
                }
            },
            clone: function() {
                return new this.constructor(this.x,this.y,this.z)
            },
            copy: function(t) {
                return this.x = t.x,
                this.y = t.y,
                this.z = t.z,
                this
            },
            add: function(t, e) {
                return void 0 !== e ? (console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),
                this.addVectors(t, e)) : (this.x += t.x,
                this.y += t.y,
                this.z += t.z,
                this)
            },
            addScalar: function(t) {
                return this.x += t,
                this.y += t,
                this.z += t,
                this
            },
            addVectors: function(t, e) {
                return this.x = t.x + e.x,
                this.y = t.y + e.y,
                this.z = t.z + e.z,
                this
            },
            addScaledVector: function(t, e) {
                return this.x += t.x * e,
                this.y += t.y * e,
                this.z += t.z * e,
                this
            },
            sub: function(t, e) {
                return void 0 !== e ? (console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),
                this.subVectors(t, e)) : (this.x -= t.x,
                this.y -= t.y,
                this.z -= t.z,
                this)
            },
            subScalar: function(t) {
                return this.x -= t,
                this.y -= t,
                this.z -= t,
                this
            },
            subVectors: function(t, e) {
                return this.x = t.x - e.x,
                this.y = t.y - e.y,
                this.z = t.z - e.z,
                this
            },
            multiply: function(t, e) {
                return void 0 !== e ? (console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),
                this.multiplyVectors(t, e)) : (this.x *= t.x,
                this.y *= t.y,
                this.z *= t.z,
                this)
            },
            multiplyScalar: function(t) {
                return isFinite(t) ? (this.x *= t,
                this.y *= t,
                this.z *= t) : (this.x = 0,
                this.y = 0,
                this.z = 0),
                this
            },
            multiplyVectors: function(t, e) {
                return this.x = t.x * e.x,
                this.y = t.y * e.y,
                this.z = t.z * e.z,
                this
            },
            applyEuler: function() {
                var t;
                return function(e) {
                    return e instanceof r.Euler == !1 && console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."),
                    void 0 === t && (t = new r.Quaternion),
                    this.applyQuaternion(t.setFromEuler(e)),
                    this
                }
            }(),
            applyAxisAngle: function() {
                var t;
                return function(e, n) {
                    return void 0 === t && (t = new r.Quaternion),
                    this.applyQuaternion(t.setFromAxisAngle(e, n)),
                    this
                }
            }(),
            applyMatrix3: function(t) {
                var e = this.x
                  , n = this.y
                  , r = this.z
                  , i = t.elements;
                return this.x = i[0] * e + i[3] * n + i[6] * r,
                this.y = i[1] * e + i[4] * n + i[7] * r,
                this.z = i[2] * e + i[5] * n + i[8] * r,
                this
            },
            applyMatrix4: function(t) {
                var e = this.x
                  , n = this.y
                  , r = this.z
                  , i = t.elements;
                return this.x = i[0] * e + i[4] * n + i[8] * r + i[12],
                this.y = i[1] * e + i[5] * n + i[9] * r + i[13],
                this.z = i[2] * e + i[6] * n + i[10] * r + i[14],
                this
            },
            applyProjection: function(t) {
                var e = this.x
                  , n = this.y
                  , r = this.z
                  , i = t.elements
                  , o = 1 / (i[3] * e + i[7] * n + i[11] * r + i[15]);
                return this.x = (i[0] * e + i[4] * n + i[8] * r + i[12]) * o,
                this.y = (i[1] * e + i[5] * n + i[9] * r + i[13]) * o,
                this.z = (i[2] * e + i[6] * n + i[10] * r + i[14]) * o,
                this
            },
            applyQuaternion: function(t) {
                var e = this.x
                  , n = this.y
                  , r = this.z
                  , i = t.x
                  , o = t.y
                  , a = t.z
                  , s = t.w
                  , h = s * e + o * r - a * n
                  , u = s * n + a * e - i * r
                  , l = s * r + i * n - o * e
                  , c = -i * e - o * n - a * r;
                return this.x = h * s + c * -i + u * -a - l * -o,
                this.y = u * s + c * -o + l * -i - h * -a,
                this.z = l * s + c * -a + h * -o - u * -i,
                this
            },
            project: function() {
                var t;
                return function(e) {
                    return void 0 === t && (t = new r.Matrix4),
                    t.multiplyMatrices(e.projectionMatrix, t.getInverse(e.matrixWorld)),
                    this.applyProjection(t)
                }
            }(),
            unproject: function() {
                var t;
                return function(e) {
                    return void 0 === t && (t = new r.Matrix4),
                    t.multiplyMatrices(e.matrixWorld, t.getInverse(e.projectionMatrix)),
                    this.applyProjection(t)
                }
            }(),
            transformDirection: function(t) {
                var e = this.x
                  , n = this.y
                  , r = this.z
                  , i = t.elements;
                return this.x = i[0] * e + i[4] * n + i[8] * r,
                this.y = i[1] * e + i[5] * n + i[9] * r,
                this.z = i[2] * e + i[6] * n + i[10] * r,
                this.normalize(),
                this
            },
            divide: function(t) {
                return this.x /= t.x,
                this.y /= t.y,
                this.z /= t.z,
                this
            },
            divideScalar: function(t) {
                return this.multiplyScalar(1 / t)
            },
            min: function(t) {
                return this.x = Math.min(this.x, t.x),
                this.y = Math.min(this.y, t.y),
                this.z = Math.min(this.z, t.z),
                this
            },
            max: function(t) {
                return this.x = Math.max(this.x, t.x),
                this.y = Math.max(this.y, t.y),
                this.z = Math.max(this.z, t.z),
                this
            },
            clamp: function(t, e) {
                return this.x = Math.max(t.x, Math.min(e.x, this.x)),
                this.y = Math.max(t.y, Math.min(e.y, this.y)),
                this.z = Math.max(t.z, Math.min(e.z, this.z)),
                this
            },
            clampScalar: function() {
                var t, e;
                return function(n, i) {
                    return void 0 === t && (t = new r.Vector3,
                    e = new r.Vector3),
                    t.set(n, n, n),
                    e.set(i, i, i),
                    this.clamp(t, e)
                }
            }(),
            clampLength: function(t, e) {
                var n = this.length();
                return this.multiplyScalar(Math.max(t, Math.min(e, n)) / n),
                this
            },
            floor: function() {
                return this.x = Math.floor(this.x),
                this.y = Math.floor(this.y),
                this.z = Math.floor(this.z),
                this
            },
            ceil: function() {
                return this.x = Math.ceil(this.x),
                this.y = Math.ceil(this.y),
                this.z = Math.ceil(this.z),
                this
            },
            round: function() {
                return this.x = Math.round(this.x),
                this.y = Math.round(this.y),
                this.z = Math.round(this.z),
                this
            },
            roundToZero: function() {
                return this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x),
                this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y),
                this.z = this.z < 0 ? Math.ceil(this.z) : Math.floor(this.z),
                this
            },
            negate: function() {
                return this.x = -this.x,
                this.y = -this.y,
                this.z = -this.z,
                this
            },
            dot: function(t) {
                return this.x * t.x + this.y * t.y + this.z * t.z
            },
            lengthSq: function() {
                return this.x * this.x + this.y * this.y + this.z * this.z
            },
            length: function() {
                return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z)
            },
            lengthManhattan: function() {
                return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z)
            },
            normalize: function() {
                return this.divideScalar(this.length())
            },
            setLength: function(t) {
                return this.multiplyScalar(t / this.length())
            },
            lerp: function(t, e) {
                return this.x += (t.x - this.x) * e,
                this.y += (t.y - this.y) * e,
                this.z += (t.z - this.z) * e,
                this
            },
            lerpVectors: function(t, e, n) {
                return this.subVectors(e, t).multiplyScalar(n).add(t),
                this
            },
            cross: function(t, e) {
                if (void 0 !== e)
                    return console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),
                    this.crossVectors(t, e);
                var n = this.x
                  , r = this.y
                  , i = this.z;
                return this.x = r * t.z - i * t.y,
                this.y = i * t.x - n * t.z,
                this.z = n * t.y - r * t.x,
                this
            },
            crossVectors: function(t, e) {
                var n = t.x
                  , r = t.y
                  , i = t.z
                  , o = e.x
                  , a = e.y
                  , s = e.z;
                return this.x = r * s - i * a,
                this.y = i * o - n * s,
                this.z = n * a - r * o,
                this
            },
            projectOnVector: function() {
                var t, e;
                return function(n) {
                    return void 0 === t && (t = new r.Vector3),
                    t.copy(n).normalize(),
                    e = this.dot(t),
                    this.copy(t).multiplyScalar(e)
                }
            }(),
            projectOnPlane: function() {
                var t;
                return function(e) {
                    return void 0 === t && (t = new r.Vector3),
                    t.copy(this).projectOnVector(e),
                    this.sub(t)
                }
            }(),
            reflect: function() {
                var t;
                return function(e) {
                    return void 0 === t && (t = new r.Vector3),
                    this.sub(t.copy(e).multiplyScalar(2 * this.dot(e)))
                }
            }(),
            angleTo: function(t) {
                var e = this.dot(t) / Math.sqrt(this.lengthSq() * t.lengthSq());
                return Math.acos(r.Math.clamp(e, -1, 1))
            },
            distanceTo: function(t) {
                return Math.sqrt(this.distanceToSquared(t))
            },
            distanceToSquared: function(t) {
                var e = this.x - t.x
                  , n = this.y - t.y
                  , r = this.z - t.z;
                return e * e + n * n + r * r
            },
            setFromMatrixPosition: function(t) {
                return this.x = t.elements[12],
                this.y = t.elements[13],
                this.z = t.elements[14],
                this
            },
            setFromMatrixScale: function(t) {
                var e = this.set(t.elements[0], t.elements[1], t.elements[2]).length()
                  , n = this.set(t.elements[4], t.elements[5], t.elements[6]).length()
                  , r = this.set(t.elements[8], t.elements[9], t.elements[10]).length();
                return this.x = e,
                this.y = n,
                this.z = r,
                this
            },
            setFromMatrixColumn: function(t, e) {
                var n = 4 * t
                  , r = e.elements;
                return this.x = r[n],
                this.y = r[n + 1],
                this.z = r[n + 2],
                this
            },
            equals: function(t) {
                return t.x === this.x && t.y === this.y && t.z === this.z
            },
            fromArray: function(t, e) {
                return void 0 === e && (e = 0),
                this.x = t[e],
                this.y = t[e + 1],
                this.z = t[e + 2],
                this
            },
            toArray: function(t, e) {
                return void 0 === t && (t = []),
                void 0 === e && (e = 0),
                t[e] = this.x,
                t[e + 1] = this.y,
                t[e + 2] = this.z,
                t
            },
            fromAttribute: function(t, e, n) {
                return void 0 === n && (n = 0),
                e = e * t.itemSize + n,
                this.x = t.array[e],
                this.y = t.array[e + 1],
                this.z = t.array[e + 2],
                this
            }
        },
        r.Vector4 = function(t, e, n, r) {
            this.x = t || 0,
            this.y = e || 0,
            this.z = n || 0,
            this.w = void 0 !== r ? r : 1
        }
        ,
        r.Vector4.prototype = {
            constructor: r.Vector4,
            set: function(t, e, n, r) {
                return this.x = t,
                this.y = e,
                this.z = n,
                this.w = r,
                this
            },
            setScalar: function(t) {
                return this.x = t,
                this.y = t,
                this.z = t,
                this.w = t,
                this
            },
            setX: function(t) {
                return this.x = t,
                this
            },
            setY: function(t) {
                return this.y = t,
                this
            },
            setZ: function(t) {
                return this.z = t,
                this
            },
            setW: function(t) {
                return this.w = t,
                this
            },
            setComponent: function(t, e) {
                switch (t) {
                case 0:
                    this.x = e;
                    break;
                case 1:
                    this.y = e;
                    break;
                case 2:
                    this.z = e;
                    break;
                case 3:
                    this.w = e;
                    break;
                default:
                    throw new Error("index is out of range: " + t)
                }
            },
            getComponent: function(t) {
                switch (t) {
                case 0:
                    return this.x;
                case 1:
                    return this.y;
                case 2:
                    return this.z;
                case 3:
                    return this.w;
                default:
                    throw new Error("index is out of range: " + t)
                }
            },
            clone: function() {
                return new this.constructor(this.x,this.y,this.z,this.w)
            },
            copy: function(t) {
                return this.x = t.x,
                this.y = t.y,
                this.z = t.z,
                this.w = void 0 !== t.w ? t.w : 1,
                this
            },
            add: function(t, e) {
                return void 0 !== e ? (console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),
                this.addVectors(t, e)) : (this.x += t.x,
                this.y += t.y,
                this.z += t.z,
                this.w += t.w,
                this)
            },
            addScalar: function(t) {
                return this.x += t,
                this.y += t,
                this.z += t,
                this.w += t,
                this
            },
            addVectors: function(t, e) {
                return this.x = t.x + e.x,
                this.y = t.y + e.y,
                this.z = t.z + e.z,
                this.w = t.w + e.w,
                this
            },
            addScaledVector: function(t, e) {
                return this.x += t.x * e,
                this.y += t.y * e,
                this.z += t.z * e,
                this.w += t.w * e,
                this
            },
            sub: function(t, e) {
                return void 0 !== e ? (console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),
                this.subVectors(t, e)) : (this.x -= t.x,
                this.y -= t.y,
                this.z -= t.z,
                this.w -= t.w,
                this)
            },
            subScalar: function(t) {
                return this.x -= t,
                this.y -= t,
                this.z -= t,
                this.w -= t,
                this
            },
            subVectors: function(t, e) {
                return this.x = t.x - e.x,
                this.y = t.y - e.y,
                this.z = t.z - e.z,
                this.w = t.w - e.w,
                this
            },
            multiplyScalar: function(t) {
                return isFinite(t) ? (this.x *= t,
                this.y *= t,
                this.z *= t,
                this.w *= t) : (this.x = 0,
                this.y = 0,
                this.z = 0,
                this.w = 0),
                this
            },
            applyMatrix4: function(t) {
                var e = this.x
                  , n = this.y
                  , r = this.z
                  , i = this.w
                  , o = t.elements;
                return this.x = o[0] * e + o[4] * n + o[8] * r + o[12] * i,
                this.y = o[1] * e + o[5] * n + o[9] * r + o[13] * i,
                this.z = o[2] * e + o[6] * n + o[10] * r + o[14] * i,
                this.w = o[3] * e + o[7] * n + o[11] * r + o[15] * i,
                this
            },
            divideScalar: function(t) {
                return this.multiplyScalar(1 / t)
            },
            setAxisAngleFromQuaternion: function(t) {
                this.w = 2 * Math.acos(t.w);
                var e = Math.sqrt(1 - t.w * t.w);
                return e < 1e-4 ? (this.x = 1,
                this.y = 0,
                this.z = 0) : (this.x = t.x / e,
                this.y = t.y / e,
                this.z = t.z / e),
                this
            },
            setAxisAngleFromRotationMatrix: function(t) {
                var e, n, r, i, o = .01, a = .1, s = t.elements, h = s[0], u = s[4], l = s[8], c = s[1], p = s[5], f = s[9], d = s[2], m = s[6], v = s[10];
                if (Math.abs(u - c) < o && Math.abs(l - d) < o && Math.abs(f - m) < o) {
                    if (Math.abs(u + c) < a && Math.abs(l + d) < a && Math.abs(f + m) < a && Math.abs(h + p + v - 3) < a)
                        return this.set(1, 0, 0, 0),
                        this;
                    e = Math.PI;
                    var g = (h + 1) / 2
                      , y = (p + 1) / 2
                      , _ = (v + 1) / 2
                      , x = (u + c) / 4
                      , b = (l + d) / 4
                      , w = (f + m) / 4;
                    return g > y && g > _ ? g < o ? (n = 0,
                    r = .707106781,
                    i = .707106781) : (n = Math.sqrt(g),
                    r = x / n,
                    i = b / n) : y > _ ? y < o ? (n = .707106781,
                    r = 0,
                    i = .707106781) : (r = Math.sqrt(y),
                    n = x / r,
                    i = w / r) : _ < o ? (n = .707106781,
                    r = .707106781,
                    i = 0) : (i = Math.sqrt(_),
                    n = b / i,
                    r = w / i),
                    this.set(n, r, i, e),
                    this
                }
                var E = Math.sqrt((m - f) * (m - f) + (l - d) * (l - d) + (c - u) * (c - u));
                return Math.abs(E) < .001 && (E = 1),
                this.x = (m - f) / E,
                this.y = (l - d) / E,
                this.z = (c - u) / E,
                this.w = Math.acos((h + p + v - 1) / 2),
                this
            },
            min: function(t) {
                return this.x = Math.min(this.x, t.x),
                this.y = Math.min(this.y, t.y),
                this.z = Math.min(this.z, t.z),
                this.w = Math.min(this.w, t.w),
                this
            },
            max: function(t) {
                return this.x = Math.max(this.x, t.x),
                this.y = Math.max(this.y, t.y),
                this.z = Math.max(this.z, t.z),
                this.w = Math.max(this.w, t.w),
                this
            },
            clamp: function(t, e) {
                return this.x = Math.max(t.x, Math.min(e.x, this.x)),
                this.y = Math.max(t.y, Math.min(e.y, this.y)),
                this.z = Math.max(t.z, Math.min(e.z, this.z)),
                this.w = Math.max(t.w, Math.min(e.w, this.w)),
                this
            },
            clampScalar: function() {
                var t, e;
                return function(n, i) {
                    return void 0 === t && (t = new r.Vector4,
                    e = new r.Vector4),
                    t.set(n, n, n, n),
                    e.set(i, i, i, i),
                    this.clamp(t, e)
                }
            }(),
            floor: function() {
                return this.x = Math.floor(this.x),
                this.y = Math.floor(this.y),
                this.z = Math.floor(this.z),
                this.w = Math.floor(this.w),
                this
            },
            ceil: function() {
                return this.x = Math.ceil(this.x),
                this.y = Math.ceil(this.y),
                this.z = Math.ceil(this.z),
                this.w = Math.ceil(this.w),
                this
            },
            round: function() {
                return this.x = Math.round(this.x),
                this.y = Math.round(this.y),
                this.z = Math.round(this.z),
                this.w = Math.round(this.w),
                this
            },
            roundToZero: function() {
                return this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x),
                this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y),
                this.z = this.z < 0 ? Math.ceil(this.z) : Math.floor(this.z),
                this.w = this.w < 0 ? Math.ceil(this.w) : Math.floor(this.w),
                this
            },
            negate: function() {
                return this.x = -this.x,
                this.y = -this.y,
                this.z = -this.z,
                this.w = -this.w,
                this
            },
            dot: function(t) {
                return this.x * t.x + this.y * t.y + this.z * t.z + this.w * t.w
            },
            lengthSq: function() {
                return this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w
            },
            length: function() {
                return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w)
            },
            lengthManhattan: function() {
                return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z) + Math.abs(this.w)
            },
            normalize: function() {
                return this.divideScalar(this.length())
            },
            setLength: function(t) {
                return this.multiplyScalar(t / this.length())
            },
            lerp: function(t, e) {
                return this.x += (t.x - this.x) * e,
                this.y += (t.y - this.y) * e,
                this.z += (t.z - this.z) * e,
                this.w += (t.w - this.w) * e,
                this
            },
            lerpVectors: function(t, e, n) {
                return this.subVectors(e, t).multiplyScalar(n).add(t),
                this
            },
            equals: function(t) {
                return t.x === this.x && t.y === this.y && t.z === this.z && t.w === this.w
            },
            fromArray: function(t, e) {
                return void 0 === e && (e = 0),
                this.x = t[e],
                this.y = t[e + 1],
                this.z = t[e + 2],
                this.w = t[e + 3],
                this
            },
            toArray: function(t, e) {
                return void 0 === t && (t = []),
                void 0 === e && (e = 0),
                t[e] = this.x,
                t[e + 1] = this.y,
                t[e + 2] = this.z,
                t[e + 3] = this.w,
                t
            },
            fromAttribute: function(t, e, n) {
                return void 0 === n && (n = 0),
                e = e * t.itemSize + n,
                this.x = t.array[e],
                this.y = t.array[e + 1],
                this.z = t.array[e + 2],
                this.w = t.array[e + 3],
                this
            }
        },
        r.Euler = function(t, e, n, i) {
            this._x = t || 0,
            this._y = e || 0,
            this._z = n || 0,
            this._order = i || r.Euler.DefaultOrder
        }
        ,
        r.Euler.RotationOrders = ["XYZ", "YZX", "ZXY", "XZY", "YXZ", "ZYX"],
        r.Euler.DefaultOrder = "XYZ",
        r.Euler.prototype = {
            constructor: r.Euler,
            get x() {
                return this._x
            },
            set x(t) {
                this._x = t,
                this.onChangeCallback()
            },
            get y() {
                return this._y
            },
            set y(t) {
                this._y = t,
                this.onChangeCallback()
            },
            get z() {
                return this._z
            },
            set z(t) {
                this._z = t,
                this.onChangeCallback()
            },
            get order() {
                return this._order
            },
            set order(t) {
                this._order = t,
                this.onChangeCallback()
            },
            set: function(t, e, n, r) {
                return this._x = t,
                this._y = e,
                this._z = n,
                this._order = r || this._order,
                this.onChangeCallback(),
                this
            },
            clone: function() {
                return new this.constructor(this._x,this._y,this._z,this._order)
            },
            copy: function(t) {
                return this._x = t._x,
                this._y = t._y,
                this._z = t._z,
                this._order = t._order,
                this.onChangeCallback(),
                this
            },
            setFromRotationMatrix: function(t, e, n) {
                var i = r.Math.clamp
                  , o = t.elements
                  , a = o[0]
                  , s = o[4]
                  , h = o[8]
                  , u = o[1]
                  , l = o[5]
                  , c = o[9]
                  , p = o[2]
                  , f = o[6]
                  , d = o[10];
                return e = e || this._order,
                "XYZ" === e ? (this._y = Math.asin(i(h, -1, 1)),
                Math.abs(h) < .99999 ? (this._x = Math.atan2(-c, d),
                this._z = Math.atan2(-s, a)) : (this._x = Math.atan2(f, l),
                this._z = 0)) : "YXZ" === e ? (this._x = Math.asin(-i(c, -1, 1)),
                Math.abs(c) < .99999 ? (this._y = Math.atan2(h, d),
                this._z = Math.atan2(u, l)) : (this._y = Math.atan2(-p, a),
                this._z = 0)) : "ZXY" === e ? (this._x = Math.asin(i(f, -1, 1)),
                Math.abs(f) < .99999 ? (this._y = Math.atan2(-p, d),
                this._z = Math.atan2(-s, l)) : (this._y = 0,
                this._z = Math.atan2(u, a))) : "ZYX" === e ? (this._y = Math.asin(-i(p, -1, 1)),
                Math.abs(p) < .99999 ? (this._x = Math.atan2(f, d),
                this._z = Math.atan2(u, a)) : (this._x = 0,
                this._z = Math.atan2(-s, l))) : "YZX" === e ? (this._z = Math.asin(i(u, -1, 1)),
                Math.abs(u) < .99999 ? (this._x = Math.atan2(-c, l),
                this._y = Math.atan2(-p, a)) : (this._x = 0,
                this._y = Math.atan2(h, d))) : "XZY" === e ? (this._z = Math.asin(-i(s, -1, 1)),
                Math.abs(s) < .99999 ? (this._x = Math.atan2(f, l),
                this._y = Math.atan2(h, a)) : (this._x = Math.atan2(-c, d),
                this._y = 0)) : console.warn("THREE.Euler: .setFromRotationMatrix() given unsupported order: " + e),
                this._order = e,
                n !== !1 && this.onChangeCallback(),
                this
            },
            setFromQuaternion: function() {
                var t;
                return function(e, n, i) {
                    return void 0 === t && (t = new r.Matrix4),
                    t.makeRotationFromQuaternion(e),
                    this.setFromRotationMatrix(t, n, i),
                    this
                }
            }(),
            setFromVector3: function(t, e) {
                return this.set(t.x, t.y, t.z, e || this._order)
            },
            reorder: function() {
                var t = new r.Quaternion;
                return function(e) {
                    t.setFromEuler(this),
                    this.setFromQuaternion(t, e)
                }
            }(),
            equals: function(t) {
                return t._x === this._x && t._y === this._y && t._z === this._z && t._order === this._order
            },
            fromArray: function(t) {
                return this._x = t[0],
                this._y = t[1],
                this._z = t[2],
                void 0 !== t[3] && (this._order = t[3]),
                this.onChangeCallback(),
                this
            },
            toArray: function(t, e) {
                return void 0 === t && (t = []),
                void 0 === e && (e = 0),
                t[e] = this._x,
                t[e + 1] = this._y,
                t[e + 2] = this._z,
                t[e + 3] = this._order,
                t
            },
            toVector3: function(t) {
                return t ? t.set(this._x, this._y, this._z) : new r.Vector3(this._x,this._y,this._z)
            },
            onChange: function(t) {
                return this.onChangeCallback = t,
                this
            },
            onChangeCallback: function() {}
        },
        r.Line3 = function(t, e) {
            this.start = void 0 !== t ? t : new r.Vector3,
            this.end = void 0 !== e ? e : new r.Vector3
        }
        ,
        r.Line3.prototype = {
            constructor: r.Line3,
            set: function(t, e) {
                return this.start.copy(t),
                this.end.copy(e),
                this
            },
            clone: function() {
                return (new this.constructor).copy(this)
            },
            copy: function(t) {
                return this.start.copy(t.start),
                this.end.copy(t.end),
                this
            },
            center: function(t) {
                var e = t || new r.Vector3;
                return e.addVectors(this.start, this.end).multiplyScalar(.5)
            },
            delta: function(t) {
                var e = t || new r.Vector3;
                return e.subVectors(this.end, this.start)
            },
            distanceSq: function() {
                return this.start.distanceToSquared(this.end)
            },
            distance: function() {
                return this.start.distanceTo(this.end)
            },
            at: function(t, e) {
                var n = e || new r.Vector3;
                return this.delta(n).multiplyScalar(t).add(this.start)
            },
            closestPointToPointParameter: function() {
                var t = new r.Vector3
                  , e = new r.Vector3;
                return function(n, i) {
                    t.subVectors(n, this.start),
                    e.subVectors(this.end, this.start);
                    var o = e.dot(e)
                      , a = e.dot(t)
                      , s = a / o;
                    return i && (s = r.Math.clamp(s, 0, 1)),
                    s
                }
            }(),
            closestPointToPoint: function(t, e, n) {
                var i = this.closestPointToPointParameter(t, e)
                  , o = n || new r.Vector3;
                return this.delta(o).multiplyScalar(i).add(this.start)
            },
            applyMatrix4: function(t) {
                return this.start.applyMatrix4(t),
                this.end.applyMatrix4(t),
                this
            },
            equals: function(t) {
                return t.start.equals(this.start) && t.end.equals(this.end)
            }
        },
        r.Box2 = function(t, e) {
            this.min = void 0 !== t ? t : new r.Vector2((+(1 / 0)),(+(1 / 0))),
            this.max = void 0 !== e ? e : new r.Vector2((-(1 / 0)),(-(1 / 0)))
        }
        ,
        r.Box2.prototype = {
            constructor: r.Box2,
            set: function(t, e) {
                return this.min.copy(t),
                this.max.copy(e),
                this
            },
            setFromPoints: function(t) {
                this.makeEmpty();
                for (var e = 0, n = t.length; e < n; e++)
                    this.expandByPoint(t[e]);
                return this
            },
            setFromCenterAndSize: function() {
                var t = new r.Vector2;
                return function(e, n) {
                    var r = t.copy(n).multiplyScalar(.5);
                    return this.min.copy(e).sub(r),
                    this.max.copy(e).add(r),
                    this
                }
            }(),
            clone: function() {
                return (new this.constructor).copy(this)
            },
            copy: function(t) {
                return this.min.copy(t.min),
                this.max.copy(t.max),
                this
            },
            makeEmpty: function() {
                return this.min.x = this.min.y = +(1 / 0),
                this.max.x = this.max.y = -(1 / 0),
                this
            },
            isEmpty: function() {
                return this.max.x < this.min.x || this.max.y < this.min.y
            },
            center: function(t) {
                var e = t || new r.Vector2;
                return e.addVectors(this.min, this.max).multiplyScalar(.5)
            },
            size: function(t) {
                var e = t || new r.Vector2;
                return e.subVectors(this.max, this.min)
            },
            expandByPoint: function(t) {
                return this.min.min(t),
                this.max.max(t),
                this
            },
            expandByVector: function(t) {
                return this.min.sub(t),
                this.max.add(t),
                this
            },
            expandByScalar: function(t) {
                return this.min.addScalar(-t),
                this.max.addScalar(t),
                this
            },
            containsPoint: function(t) {
                return !(t.x < this.min.x || t.x > this.max.x || t.y < this.min.y || t.y > this.max.y)
            },
            containsBox: function(t) {
                return this.min.x <= t.min.x && t.max.x <= this.max.x && this.min.y <= t.min.y && t.max.y <= this.max.y
            },
            getParameter: function(t, e) {
                var n = e || new r.Vector2;
                return n.set((t.x - this.min.x) / (this.max.x - this.min.x), (t.y - this.min.y) / (this.max.y - this.min.y))
            },
            intersectsBox: function(t) {
                return !(t.max.x < this.min.x || t.min.x > this.max.x || t.max.y < this.min.y || t.min.y > this.max.y)
            },
            clampPoint: function(t, e) {
                var n = e || new r.Vector2;
                return n.copy(t).clamp(this.min, this.max)
            },
            distanceToPoint: function() {
                var t = new r.Vector2;
                return function(e) {
                    var n = t.copy(e).clamp(this.min, this.max);
                    return n.sub(e).length()
                }
            }(),
            intersect: function(t) {
                return this.min.max(t.min),
                this.max.min(t.max),
                this
            },
            union: function(t) {
                return this.min.min(t.min),
                this.max.max(t.max),
                this
            },
            translate: function(t) {
                return this.min.add(t),
                this.max.add(t),
                this
            },
            equals: function(t) {
                return t.min.equals(this.min) && t.max.equals(this.max)
            }
        },
        r.Box3 = function(t, e) {
            this.min = void 0 !== t ? t : new r.Vector3((+(1 / 0)),(+(1 / 0)),(+(1 / 0))),
            this.max = void 0 !== e ? e : new r.Vector3((-(1 / 0)),(-(1 / 0)),(-(1 / 0)))
        }
        ,
        r.Box3.prototype = {
            constructor: r.Box3,
            set: function(t, e) {
                return this.min.copy(t),
                this.max.copy(e),
                this
            },
            setFromArray: function(t) {
                this.makeEmpty();
                for (var e = +(1 / 0), n = +(1 / 0), r = +(1 / 0), i = -(1 / 0), o = -(1 / 0), a = -(1 / 0), s = 0, h = t.length; s < h; s += 3) {
                    var u = t[s]
                      , l = t[s + 1]
                      , c = t[s + 2];
                    u < e && (e = u),
                    l < n && (n = l),
                    c < r && (r = c),
                    u > i && (i = u),
                    l > o && (o = l),
                    c > a && (a = c)
                }
                this.min.set(e, n, r),
                this.max.set(i, o, a)
            },
            setFromPoints: function(t) {
                this.makeEmpty();
                for (var e = 0, n = t.length; e < n; e++)
                    this.expandByPoint(t[e]);
                return this
            },
            setFromCenterAndSize: function() {
                var t = new r.Vector3;
                return function(e, n) {
                    var r = t.copy(n).multiplyScalar(.5);
                    return this.min.copy(e).sub(r),
                    this.max.copy(e).add(r),
                    this
                }
            }(),
            setFromObject: function() {
                var t;
                return function(e) {
                    void 0 === t && (t = new r.Box3);
                    var n = this;
                    return this.makeEmpty(),
                    e.updateMatrixWorld(!0),
                    e.traverse(function(e) {
                        var r = e.geometry;
                        void 0 !== r && (null === r.boundingBox && r.computeBoundingBox(),
                        t.copy(r.boundingBox),
                        t.applyMatrix4(e.matrixWorld),
                        n.union(t))
                    }),
                    this
                }
            }(),
            clone: function() {
                return (new this.constructor).copy(this)
            },
            copy: function(t) {
                return this.min.copy(t.min),
                this.max.copy(t.max),
                this
            },
            makeEmpty: function() {
                return this.min.x = this.min.y = this.min.z = +(1 / 0),
                this.max.x = this.max.y = this.max.z = -(1 / 0),
                this
            },
            isEmpty: function() {
                return this.max.x < this.min.x || this.max.y < this.min.y || this.max.z < this.min.z
            },
            center: function(t) {
                var e = t || new r.Vector3;
                return e.addVectors(this.min, this.max).multiplyScalar(.5)
            },
            size: function(t) {
                var e = t || new r.Vector3;
                return e.subVectors(this.max, this.min)
            },
            expandByPoint: function(t) {
                return this.min.min(t),
                this.max.max(t),
                this
            },
            expandByVector: function(t) {
                return this.min.sub(t),
                this.max.add(t),
                this
            },
            expandByScalar: function(t) {
                return this.min.addScalar(-t),
                this.max.addScalar(t),
                this
            },
            containsPoint: function(t) {
                return !(t.x < this.min.x || t.x > this.max.x || t.y < this.min.y || t.y > this.max.y || t.z < this.min.z || t.z > this.max.z)
            },
            containsBox: function(t) {
                return this.min.x <= t.min.x && t.max.x <= this.max.x && this.min.y <= t.min.y && t.max.y <= this.max.y && this.min.z <= t.min.z && t.max.z <= this.max.z
            },
            getParameter: function(t, e) {
                var n = e || new r.Vector3;
                return n.set((t.x - this.min.x) / (this.max.x - this.min.x), (t.y - this.min.y) / (this.max.y - this.min.y), (t.z - this.min.z) / (this.max.z - this.min.z))
            },
            intersectsBox: function(t) {
                return !(t.max.x < this.min.x || t.min.x > this.max.x || t.max.y < this.min.y || t.min.y > this.max.y || t.max.z < this.min.z || t.min.z > this.max.z)
            },
            intersectsSphere: function() {
                var t;
                return function(e) {
                    return void 0 === t && (t = new r.Vector3),
                    this.clampPoint(e.center, t),
                    t.distanceToSquared(e.center) <= e.radius * e.radius
                }
            }(),
            intersectsPlane: function(t) {
                var e, n;
                return t.normal.x > 0 ? (e = t.normal.x * this.min.x,
                n = t.normal.x * this.max.x) : (e = t.normal.x * this.max.x,
                n = t.normal.x * this.min.x),
                t.normal.y > 0 ? (e += t.normal.y * this.min.y,
                n += t.normal.y * this.max.y) : (e += t.normal.y * this.max.y,
                n += t.normal.y * this.min.y),
                t.normal.z > 0 ? (e += t.normal.z * this.min.z,
                n += t.normal.z * this.max.z) : (e += t.normal.z * this.max.z,
                n += t.normal.z * this.min.z),
                e <= t.constant && n >= t.constant
            },
            clampPoint: function(t, e) {
                var n = e || new r.Vector3;
                return n.copy(t).clamp(this.min, this.max)
            },
            distanceToPoint: function() {
                var t = new r.Vector3;
                return function(e) {
                    var n = t.copy(e).clamp(this.min, this.max);
                    return n.sub(e).length()
                }
            }(),
            getBoundingSphere: function() {
                var t = new r.Vector3;
                return function(e) {
                    var n = e || new r.Sphere;
                    return n.center = this.center(),
                    n.radius = .5 * this.size(t).length(),
                    n
                }
            }(),
            intersect: function(t) {
                return this.min.max(t.min),
                this.max.min(t.max),
                this
            },
            union: function(t) {
                return this.min.min(t.min),
                this.max.max(t.max),
                this
            },
            applyMatrix4: function() {
                var t = [new r.Vector3, new r.Vector3, new r.Vector3, new r.Vector3, new r.Vector3, new r.Vector3, new r.Vector3, new r.Vector3];
                return function(e) {
                    return t[0].set(this.min.x, this.min.y, this.min.z).applyMatrix4(e),
                    t[1].set(this.min.x, this.min.y, this.max.z).applyMatrix4(e),
                    t[2].set(this.min.x, this.max.y, this.min.z).applyMatrix4(e),
                    t[3].set(this.min.x, this.max.y, this.max.z).applyMatrix4(e),
                    t[4].set(this.max.x, this.min.y, this.min.z).applyMatrix4(e),
                    t[5].set(this.max.x, this.min.y, this.max.z).applyMatrix4(e),
                    t[6].set(this.max.x, this.max.y, this.min.z).applyMatrix4(e),
                    t[7].set(this.max.x, this.max.y, this.max.z).applyMatrix4(e),
                    this.makeEmpty(),
                    this.setFromPoints(t),
                    this
                }
            }(),
            translate: function(t) {
                return this.min.add(t),
                this.max.add(t),
                this
            },
            equals: function(t) {
                return t.min.equals(this.min) && t.max.equals(this.max)
            }
        },
        r.Matrix3 = function() {
            this.elements = new Float32Array([1, 0, 0, 0, 1, 0, 0, 0, 1]),
            arguments.length > 0 && console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")
        }
        ,
        r.Matrix3.prototype = {
            constructor: r.Matrix3,
            set: function(t, e, n, r, i, o, a, s, h) {
                var u = this.elements;
                return u[0] = t,
                u[3] = e,
                u[6] = n,
                u[1] = r,
                u[4] = i,
                u[7] = o,
                u[2] = a,
                u[5] = s,
                u[8] = h,
                this
            },
            identity: function() {
                return this.set(1, 0, 0, 0, 1, 0, 0, 0, 1),
                this
            },
            clone: function() {
                return (new this.constructor).fromArray(this.elements)
            },
            copy: function(t) {
                var e = t.elements;
                return this.set(e[0], e[3], e[6], e[1], e[4], e[7], e[2], e[5], e[8]),
                this
            },
            applyToVector3Array: function() {
                var t;
                return function(e, n, i) {
                    void 0 === t && (t = new r.Vector3),
                    void 0 === n && (n = 0),
                    void 0 === i && (i = e.length);
                    for (var o = 0, a = n; o < i; o += 3,
                    a += 3)
                        t.fromArray(e, a),
                        t.applyMatrix3(this),
                        t.toArray(e, a);
                    return e
                }
            }(),
            applyToBuffer: function() {
                var t;
                return function(e, n, i) {
                    void 0 === t && (t = new r.Vector3),
                    void 0 === n && (n = 0),
                    void 0 === i && (i = e.length / e.itemSize);
                    for (var o = 0, a = n; o < i; o++,
                    a++)
                        t.x = e.getX(a),
                        t.y = e.getY(a),
                        t.z = e.getZ(a),
                        t.applyMatrix3(this),
                        e.setXYZ(t.x, t.y, t.z);
                    return e
                }
            }(),
            multiplyScalar: function(t) {
                var e = this.elements;
                return e[0] *= t,
                e[3] *= t,
                e[6] *= t,
                e[1] *= t,
                e[4] *= t,
                e[7] *= t,
                e[2] *= t,
                e[5] *= t,
                e[8] *= t,
                this
            },
            determinant: function() {
                var t = this.elements
                  , e = t[0]
                  , n = t[1]
                  , r = t[2]
                  , i = t[3]
                  , o = t[4]
                  , a = t[5]
                  , s = t[6]
                  , h = t[7]
                  , u = t[8];
                return e * o * u - e * a * h - n * i * u + n * a * s + r * i * h - r * o * s
            },
            getInverse: function(t, e) {
                var n = t.elements
                  , r = this.elements;
                r[0] = n[10] * n[5] - n[6] * n[9],
                r[1] = -n[10] * n[1] + n[2] * n[9],
                r[2] = n[6] * n[1] - n[2] * n[5],
                r[3] = -n[10] * n[4] + n[6] * n[8],
                r[4] = n[10] * n[0] - n[2] * n[8],
                r[5] = -n[6] * n[0] + n[2] * n[4],
                r[6] = n[9] * n[4] - n[5] * n[8],
                r[7] = -n[9] * n[0] + n[1] * n[8],
                r[8] = n[5] * n[0] - n[1] * n[4];
                var i = n[0] * r[0] + n[1] * r[3] + n[2] * r[6];
                if (0 === i) {
                    var o = "THREE.Matrix3.getInverse(): can't invert matrix, determinant is 0";
                    if (e)
                        throw new Error(o);
                    return console.warn(o),
                    this.identity(),
                    this
                }
                return this.multiplyScalar(1 / i),
                this
            },
            transpose: function() {
                var t, e = this.elements;
                return t = e[1],
                e[1] = e[3],
                e[3] = t,
                t = e[2],
                e[2] = e[6],
                e[6] = t,
                t = e[5],
                e[5] = e[7],
                e[7] = t,
                this
            },
            flattenToArrayOffset: function(t, e) {
                var n = this.elements;
                return t[e] = n[0],
                t[e + 1] = n[1],
                t[e + 2] = n[2],
                t[e + 3] = n[3],
                t[e + 4] = n[4],
                t[e + 5] = n[5],
                t[e + 6] = n[6],
                t[e + 7] = n[7],
                t[e + 8] = n[8],
                t
            },
            getNormalMatrix: function(t) {
                return this.getInverse(t).transpose(),
                this
            },
            transposeIntoArray: function(t) {
                var e = this.elements;
                return t[0] = e[0],
                t[1] = e[3],
                t[2] = e[6],
                t[3] = e[1],
                t[4] = e[4],
                t[5] = e[7],
                t[6] = e[2],
                t[7] = e[5],
                t[8] = e[8],
                this
            },
            fromArray: function(t) {
                return this.elements.set(t),
                this
            },
            toArray: function() {
                var t = this.elements;
                return [t[0], t[1], t[2], t[3], t[4], t[5], t[6], t[7], t[8]]
            }
        },
        r.Matrix4 = function() {
            this.elements = new Float32Array([1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]),
            arguments.length > 0 && console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")
        }
        ,
        r.Matrix4.prototype = {
            constructor: r.Matrix4,
            set: function(t, e, n, r, i, o, a, s, h, u, l, c, p, f, d, m) {
                var v = this.elements;
                return v[0] = t,
                v[4] = e,
                v[8] = n,
                v[12] = r,
                v[1] = i,
                v[5] = o,
                v[9] = a,
                v[13] = s,
                v[2] = h,
                v[6] = u,
                v[10] = l,
                v[14] = c,
                v[3] = p,
                v[7] = f,
                v[11] = d,
                v[15] = m,
                this
            },
            identity: function() {
                return this.set(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1),
                this
            },
            clone: function() {
                return (new r.Matrix4).fromArray(this.elements)
            },
            copy: function(t) {
                return this.elements.set(t.elements),
                this
            },
            copyPosition: function(t) {
                var e = this.elements
                  , n = t.elements;
                return e[12] = n[12],
                e[13] = n[13],
                e[14] = n[14],
                this
            },
            extractBasis: function(t, e, n) {
                var r = this.elements;
                return t.set(r[0], r[1], r[2]),
                e.set(r[4], r[5], r[6]),
                n.set(r[8], r[9], r[10]),
                this
            },
            makeBasis: function(t, e, n) {
                return this.set(t.x, e.x, n.x, 0, t.y, e.y, n.y, 0, t.z, e.z, n.z, 0, 0, 0, 0, 1),
                this
            },
            extractRotation: function() {
                var t;
                return function(e) {
                    void 0 === t && (t = new r.Vector3);
                    var n = this.elements
                      , i = e.elements
                      , o = 1 / t.set(i[0], i[1], i[2]).length()
                      , a = 1 / t.set(i[4], i[5], i[6]).length()
                      , s = 1 / t.set(i[8], i[9], i[10]).length();
                    return n[0] = i[0] * o,
                    n[1] = i[1] * o,
                    n[2] = i[2] * o,
                    n[4] = i[4] * a,
                    n[5] = i[5] * a,
                    n[6] = i[6] * a,
                    n[8] = i[8] * s,
                    n[9] = i[9] * s,
                    n[10] = i[10] * s,
                    this
                }
            }(),
            makeRotationFromEuler: function(t) {
                t instanceof r.Euler == !1 && console.error("THREE.Matrix: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");
                var e = this.elements
                  , n = t.x
                  , i = t.y
                  , o = t.z
                  , a = Math.cos(n)
                  , s = Math.sin(n)
                  , h = Math.cos(i)
                  , u = Math.sin(i)
                  , l = Math.cos(o)
                  , c = Math.sin(o);
                if ("XYZ" === t.order) {
                    var p = a * l
                      , f = a * c
                      , d = s * l
                      , m = s * c;
                    e[0] = h * l,
                    e[4] = -h * c,
                    e[8] = u,
                    e[1] = f + d * u,
                    e[5] = p - m * u,
                    e[9] = -s * h,
                    e[2] = m - p * u,
                    e[6] = d + f * u,
                    e[10] = a * h
                } else if ("YXZ" === t.order) {
                    var v = h * l
                      , g = h * c
                      , y = u * l
                      , _ = u * c;
                    e[0] = v + _ * s,
                    e[4] = y * s - g,
                    e[8] = a * u,
                    e[1] = a * c,
                    e[5] = a * l,
                    e[9] = -s,
                    e[2] = g * s - y,
                    e[6] = _ + v * s,
                    e[10] = a * h
                } else if ("ZXY" === t.order) {
                    var v = h * l
                      , g = h * c
                      , y = u * l
                      , _ = u * c;
                    e[0] = v - _ * s,
                    e[4] = -a * c,
                    e[8] = y + g * s,
                    e[1] = g + y * s,
                    e[5] = a * l,
                    e[9] = _ - v * s,
                    e[2] = -a * u,
                    e[6] = s,
                    e[10] = a * h
                } else if ("ZYX" === t.order) {
                    var p = a * l
                      , f = a * c
                      , d = s * l
                      , m = s * c;
                    e[0] = h * l,
                    e[4] = d * u - f,
                    e[8] = p * u + m,
                    e[1] = h * c,
                    e[5] = m * u + p,
                    e[9] = f * u - d,
                    e[2] = -u,
                    e[6] = s * h,
                    e[10] = a * h
                } else if ("YZX" === t.order) {
                    var x = a * h
                      , b = a * u
                      , w = s * h
                      , E = s * u;
                    e[0] = h * l,
                    e[4] = E - x * c,
                    e[8] = w * c + b,
                    e[1] = c,
                    e[5] = a * l,
                    e[9] = -s * l,
                    e[2] = -u * l,
                    e[6] = b * c + w,
                    e[10] = x - E * c
                } else if ("XZY" === t.order) {
                    var x = a * h
                      , b = a * u
                      , w = s * h
                      , E = s * u;
                    e[0] = h * l,
                    e[4] = -c,
                    e[8] = u * l,
                    e[1] = x * c + E,
                    e[5] = a * l,
                    e[9] = b * c - w,
                    e[2] = w * c - b,
                    e[6] = s * l,
                    e[10] = E * c + x
                }
                return e[3] = 0,
                e[7] = 0,
                e[11] = 0,
                e[12] = 0,
                e[13] = 0,
                e[14] = 0,
                e[15] = 1,
                this
            },
            makeRotationFromQuaternion: function(t) {
                var e = this.elements
                  , n = t.x
                  , r = t.y
                  , i = t.z
                  , o = t.w
                  , a = n + n
                  , s = r + r
                  , h = i + i
                  , u = n * a
                  , l = n * s
                  , c = n * h
                  , p = r * s
                  , f = r * h
                  , d = i * h
                  , m = o * a
                  , v = o * s
                  , g = o * h;
                return e[0] = 1 - (p + d),
                e[4] = l - g,
                e[8] = c + v,
                e[1] = l + g,
                e[5] = 1 - (u + d),
                e[9] = f - m,
                e[2] = c - v,
                e[6] = f + m,
                e[10] = 1 - (u + p),
                e[3] = 0,
                e[7] = 0,
                e[11] = 0,
                e[12] = 0,
                e[13] = 0,
                e[14] = 0,
                e[15] = 1,
                this
            },
            lookAt: function() {
                var t, e, n;
                return function(i, o, a) {
                    void 0 === t && (t = new r.Vector3),
                    void 0 === e && (e = new r.Vector3),
                    void 0 === n && (n = new r.Vector3);
                    var s = this.elements;
                    return n.subVectors(i, o).normalize(),
                    0 === n.lengthSq() && (n.z = 1),
                    t.crossVectors(a, n).normalize(),
                    0 === t.lengthSq() && (n.x += 1e-4,
                    t.crossVectors(a, n).normalize()),
                    e.crossVectors(n, t),
                    s[0] = t.x,
                    s[4] = e.x,
                    s[8] = n.x,
                    s[1] = t.y,
                    s[5] = e.y,
                    s[9] = n.y,
                    s[2] = t.z,
                    s[6] = e.z,
                    s[10] = n.z,
                    this
                }
            }(),
            multiply: function(t, e) {
                return void 0 !== e ? (console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),
                this.multiplyMatrices(t, e)) : this.multiplyMatrices(this, t)
            },
            multiplyMatrices: function(t, e) {
                var n = t.elements
                  , r = e.elements
                  , i = this.elements
                  , o = n[0]
                  , a = n[4]
                  , s = n[8]
                  , h = n[12]
                  , u = n[1]
                  , l = n[5]
                  , c = n[9]
                  , p = n[13]
                  , f = n[2]
                  , d = n[6]
                  , m = n[10]
                  , v = n[14]
                  , g = n[3]
                  , y = n[7]
                  , _ = n[11]
                  , x = n[15]
                  , b = r[0]
                  , w = r[4]
                  , E = r[8]
                  , S = r[12]
                  , T = r[1]
                  , M = r[5]
                  , C = r[9]
                  , A = r[13]
                  , P = r[2]
                  , L = r[6]
                  , R = r[10]
                  , k = r[14]
                  , O = r[3]
                  , I = r[7]
                  , D = r[11]
                  , U = r[15];
                return i[0] = o * b + a * T + s * P + h * O,
                i[4] = o * w + a * M + s * L + h * I,
                i[8] = o * E + a * C + s * R + h * D,
                i[12] = o * S + a * A + s * k + h * U,
                i[1] = u * b + l * T + c * P + p * O,
                i[5] = u * w + l * M + c * L + p * I,
                i[9] = u * E + l * C + c * R + p * D,
                i[13] = u * S + l * A + c * k + p * U,
                i[2] = f * b + d * T + m * P + v * O,
                i[6] = f * w + d * M + m * L + v * I,
                i[10] = f * E + d * C + m * R + v * D,
                i[14] = f * S + d * A + m * k + v * U,
                i[3] = g * b + y * T + _ * P + x * O,
                i[7] = g * w + y * M + _ * L + x * I,
                i[11] = g * E + y * C + _ * R + x * D,
                i[15] = g * S + y * A + _ * k + x * U,
                this
            },
            multiplyToArray: function(t, e, n) {
                var r = this.elements;
                return this.multiplyMatrices(t, e),
                n[0] = r[0],
                n[1] = r[1],
                n[2] = r[2],
                n[3] = r[3],
                n[4] = r[4],
                n[5] = r[5],
                n[6] = r[6],
                n[7] = r[7],
                n[8] = r[8],
                n[9] = r[9],
                n[10] = r[10],
                n[11] = r[11],
                n[12] = r[12],
                n[13] = r[13],
                n[14] = r[14],
                n[15] = r[15],
                this
            },
            multiplyScalar: function(t) {
                var e = this.elements;
                return e[0] *= t,
                e[4] *= t,
                e[8] *= t,
                e[12] *= t,
                e[1] *= t,
                e[5] *= t,
                e[9] *= t,
                e[13] *= t,
                e[2] *= t,
                e[6] *= t,
                e[10] *= t,
                e[14] *= t,
                e[3] *= t,
                e[7] *= t,
                e[11] *= t,
                e[15] *= t,
                this
            },
            applyToVector3Array: function() {
                var t;
                return function(e, n, i) {
                    void 0 === t && (t = new r.Vector3),
                    void 0 === n && (n = 0),
                    void 0 === i && (i = e.length);
                    for (var o = 0, a = n; o < i; o += 3,
                    a += 3)
                        t.fromArray(e, a),
                        t.applyMatrix4(this),
                        t.toArray(e, a);
                    return e
                }
            }(),
            applyToBuffer: function() {
                var t;
                return function(e, n, i) {
                    void 0 === t && (t = new r.Vector3),
                    void 0 === n && (n = 0),
                    void 0 === i && (i = e.length / e.itemSize);
                    for (var o = 0, a = n; o < i; o++,
                    a++)
                        t.x = e.getX(a),
                        t.y = e.getY(a),
                        t.z = e.getZ(a),
                        t.applyMatrix4(this),
                        e.setXYZ(t.x, t.y, t.z);
                    return e
                }
            }(),
            determinant: function() {
                var t = this.elements
                  , e = t[0]
                  , n = t[4]
                  , r = t[8]
                  , i = t[12]
                  , o = t[1]
                  , a = t[5]
                  , s = t[9]
                  , h = t[13]
                  , u = t[2]
                  , l = t[6]
                  , c = t[10]
                  , p = t[14]
                  , f = t[3]
                  , d = t[7]
                  , m = t[11]
                  , v = t[15];
                return f * (+i * s * l - r * h * l - i * a * c + n * h * c + r * a * p - n * s * p) + d * (+e * s * p - e * h * c + i * o * c - r * o * p + r * h * u - i * s * u) + m * (+e * h * l - e * a * p - i * o * l + n * o * p + i * a * u - n * h * u) + v * (-r * a * u - e * s * l + e * a * c + r * o * l - n * o * c + n * s * u)
            },
            transpose: function() {
                var t, e = this.elements;
                return t = e[1],
                e[1] = e[4],
                e[4] = t,
                t = e[2],
                e[2] = e[8],
                e[8] = t,
                t = e[6],
                e[6] = e[9],
                e[9] = t,
                t = e[3],
                e[3] = e[12],
                e[12] = t,
                t = e[7],
                e[7] = e[13],
                e[13] = t,
                t = e[11],
                e[11] = e[14],
                e[14] = t,
                this
            },
            flattenToArrayOffset: function(t, e) {
                var n = this.elements;
                return t[e] = n[0],
                t[e + 1] = n[1],
                t[e + 2] = n[2],
                t[e + 3] = n[3],
                t[e + 4] = n[4],
                t[e + 5] = n[5],
                t[e + 6] = n[6],
                t[e + 7] = n[7],
                t[e + 8] = n[8],
                t[e + 9] = n[9],
                t[e + 10] = n[10],
                t[e + 11] = n[11],
                t[e + 12] = n[12],
                t[e + 13] = n[13],
                t[e + 14] = n[14],
                t[e + 15] = n[15],
                t
            },
            getPosition: function() {
                var t;
                return function() {
                    void 0 === t && (t = new r.Vector3),
                    console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.");
                    var e = this.elements;
                    return t.set(e[12], e[13], e[14])
                }
            }(),
            setPosition: function(t) {
                var e = this.elements;
                return e[12] = t.x,
                e[13] = t.y,
                e[14] = t.z,
                this
            },
            getInverse: function(t, e) {
                var n = this.elements
                  , r = t.elements
                  , i = r[0]
                  , o = r[4]
                  , a = r[8]
                  , s = r[12]
                  , h = r[1]
                  , u = r[5]
                  , l = r[9]
                  , c = r[13]
                  , p = r[2]
                  , f = r[6]
                  , d = r[10]
                  , m = r[14]
                  , v = r[3]
                  , g = r[7]
                  , y = r[11]
                  , _ = r[15];
                n[0] = l * m * g - c * d * g + c * f * y - u * m * y - l * f * _ + u * d * _,
                n[4] = s * d * g - a * m * g - s * f * y + o * m * y + a * f * _ - o * d * _,
                n[8] = a * c * g - s * l * g + s * u * y - o * c * y - a * u * _ + o * l * _,
                n[12] = s * l * f - a * c * f - s * u * d + o * c * d + a * u * m - o * l * m,
                n[1] = c * d * v - l * m * v - c * p * y + h * m * y + l * p * _ - h * d * _,
                n[5] = a * m * v - s * d * v + s * p * y - i * m * y - a * p * _ + i * d * _,
                n[9] = s * l * v - a * c * v - s * h * y + i * c * y + a * h * _ - i * l * _,
                n[13] = a * c * p - s * l * p + s * h * d - i * c * d - a * h * m + i * l * m,
                n[2] = u * m * v - c * f * v + c * p * g - h * m * g - u * p * _ + h * f * _,
                n[6] = s * f * v - o * m * v - s * p * g + i * m * g + o * p * _ - i * f * _,
                n[10] = o * c * v - s * u * v + s * h * g - i * c * g - o * h * _ + i * u * _,
                n[14] = s * u * p - o * c * p - s * h * f + i * c * f + o * h * m - i * u * m,
                n[3] = l * f * v - u * d * v - l * p * g + h * d * g + u * p * y - h * f * y,
                n[7] = o * d * v - a * f * v + a * p * g - i * d * g - o * p * y + i * f * y,
                n[11] = a * u * v - o * l * v - a * h * g + i * l * g + o * h * y - i * u * y,
                n[15] = o * l * p - a * u * p + a * h * f - i * l * f - o * h * d + i * u * d;
                var x = i * n[0] + h * n[4] + p * n[8] + v * n[12];
                if (0 === x) {
                    var b = "THREE.Matrix4.getInverse(): can't invert matrix, determinant is 0";
                    if (e)
                        throw new Error(b);
                    return console.warn(b),
                    this.identity(),
                    this
                }
                return this.multiplyScalar(1 / x),
                this
            },
            scale: function(t) {
                var e = this.elements
                  , n = t.x
                  , r = t.y
                  , i = t.z;
                return e[0] *= n,
                e[4] *= r,
                e[8] *= i,
                e[1] *= n,
                e[5] *= r,
                e[9] *= i,
                e[2] *= n,
                e[6] *= r,
                e[10] *= i,
                e[3] *= n,
                e[7] *= r,
                e[11] *= i,
                this
            },
            getMaxScaleOnAxis: function() {
                var t = this.elements
                  , e = t[0] * t[0] + t[1] * t[1] + t[2] * t[2]
                  , n = t[4] * t[4] + t[5] * t[5] + t[6] * t[6]
                  , r = t[8] * t[8] + t[9] * t[9] + t[10] * t[10];
                return Math.sqrt(Math.max(e, n, r))
            },
            makeTranslation: function(t, e, n) {
                return this.set(1, 0, 0, t, 0, 1, 0, e, 0, 0, 1, n, 0, 0, 0, 1),
                this
            },
            makeRotationX: function(t) {
                var e = Math.cos(t)
                  , n = Math.sin(t);
                return this.set(1, 0, 0, 0, 0, e, -n, 0, 0, n, e, 0, 0, 0, 0, 1),
                this
            },
            makeRotationY: function(t) {
                var e = Math.cos(t)
                  , n = Math.sin(t);
                return this.set(e, 0, n, 0, 0, 1, 0, 0, -n, 0, e, 0, 0, 0, 0, 1),
                this
            },
            makeRotationZ: function(t) {
                var e = Math.cos(t)
                  , n = Math.sin(t);
                return this.set(e, -n, 0, 0, n, e, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1),
                this
            },
            makeRotationAxis: function(t, e) {
                var n = Math.cos(e)
                  , r = Math.sin(e)
                  , i = 1 - n
                  , o = t.x
                  , a = t.y
                  , s = t.z
                  , h = i * o
                  , u = i * a;
                return this.set(h * o + n, h * a - r * s, h * s + r * a, 0, h * a + r * s, u * a + n, u * s - r * o, 0, h * s - r * a, u * s + r * o, i * s * s + n, 0, 0, 0, 0, 1),
                this
            },
            makeScale: function(t, e, n) {
                return this.set(t, 0, 0, 0, 0, e, 0, 0, 0, 0, n, 0, 0, 0, 0, 1),
                this
            },
            compose: function(t, e, n) {
                return this.makeRotationFromQuaternion(e),
                this.scale(n),
                this.setPosition(t),
                this
            },
            decompose: function() {
                var t, e;
                return function(n, i, o) {
                    void 0 === t && (t = new r.Vector3),
                    void 0 === e && (e = new r.Matrix4);
                    var a = this.elements
                      , s = t.set(a[0], a[1], a[2]).length()
                      , h = t.set(a[4], a[5], a[6]).length()
                      , u = t.set(a[8], a[9], a[10]).length()
                      , l = this.determinant();
                    l < 0 && (s = -s),
                    n.x = a[12],
                    n.y = a[13],
                    n.z = a[14],
                    e.elements.set(this.elements);
                    var c = 1 / s
                      , p = 1 / h
                      , f = 1 / u;
                    return e.elements[0] *= c,
                    e.elements[1] *= c,
                    e.elements[2] *= c,
                    e.elements[4] *= p,
                    e.elements[5] *= p,
                    e.elements[6] *= p,
                    e.elements[8] *= f,
                    e.elements[9] *= f,
                    e.elements[10] *= f,
                    i.setFromRotationMatrix(e),
                    o.x = s,
                    o.y = h,
                    o.z = u,
                    this
                }
            }(),
            makeFrustum: function(t, e, n, r, i, o) {
                var a = this.elements
                  , s = 2 * i / (e - t)
                  , h = 2 * i / (r - n)
                  , u = (e + t) / (e - t)
                  , l = (r + n) / (r - n)
                  , c = -(o + i) / (o - i)
                  , p = -2 * o * i / (o - i);
                return a[0] = s,
                a[4] = 0,
                a[8] = u,
                a[12] = 0,
                a[1] = 0,
                a[5] = h,
                a[9] = l,
                a[13] = 0,
                a[2] = 0,
                a[6] = 0,
                a[10] = c,
                a[14] = p,
                a[3] = 0,
                a[7] = 0,
                a[11] = -1,
                a[15] = 0,
                this
            },
            makePerspective: function(t, e, n, i) {
                var o = n * Math.tan(r.Math.degToRad(.5 * t))
                  , a = -o
                  , s = a * e
                  , h = o * e;
                return this.makeFrustum(s, h, a, o, n, i)
            },
            makeOrthographic: function(t, e, n, r, i, o) {
                var a = this.elements
                  , s = e - t
                  , h = n - r
                  , u = o - i
                  , l = (e + t) / s
                  , c = (n + r) / h
                  , p = (o + i) / u;
                return a[0] = 2 / s,
                a[4] = 0,
                a[8] = 0,
                a[12] = -l,
                a[1] = 0,
                a[5] = 2 / h,
                a[9] = 0,
                a[13] = -c,
                a[2] = 0,
                a[6] = 0,
                a[10] = -2 / u,
                a[14] = -p,
                a[3] = 0,
                a[7] = 0,
                a[11] = 0,
                a[15] = 1,
                this
            },
            equals: function(t) {
                for (var e = this.elements, n = t.elements, r = 0; r < 16; r++)
                    if (e[r] !== n[r])
                        return !1;
                return !0
            },
            fromArray: function(t) {
                return this.elements.set(t),
                this
            },
            toArray: function() {
                var t = this.elements;
                return [t[0], t[1], t[2], t[3], t[4], t[5], t[6], t[7], t[8], t[9], t[10], t[11], t[12], t[13], t[14], t[15]]
            }
        },
        r.Ray = function(t, e) {
            this.origin = void 0 !== t ? t : new r.Vector3,
            this.direction = void 0 !== e ? e : new r.Vector3
        }
        ,
        r.Ray.prototype = {
            constructor: r.Ray,
            set: function(t, e) {
                return this.origin.copy(t),
                this.direction.copy(e),
                this
            },
            clone: function() {
                return (new this.constructor).copy(this)
            },
            copy: function(t) {
                return this.origin.copy(t.origin),
                this.direction.copy(t.direction),
                this
            },
            at: function(t, e) {
                var n = e || new r.Vector3;
                return n.copy(this.direction).multiplyScalar(t).add(this.origin)
            },
            lookAt: function(t) {
                this.direction.copy(t).sub(this.origin).normalize()
            },
            recast: function() {
                var t = new r.Vector3;
                return function(e) {
                    return this.origin.copy(this.at(e, t)),
                    this
                }
            }(),
            closestPointToPoint: function(t, e) {
                var n = e || new r.Vector3;
                n.subVectors(t, this.origin);
                var i = n.dot(this.direction);
                return i < 0 ? n.copy(this.origin) : n.copy(this.direction).multiplyScalar(i).add(this.origin)
            },
            distanceToPoint: function(t) {
                return Math.sqrt(this.distanceSqToPoint(t))
            },
            distanceSqToPoint: function() {
                var t = new r.Vector3;
                return function(e) {
                    var n = t.subVectors(e, this.origin).dot(this.direction);
                    return n < 0 ? this.origin.distanceToSquared(e) : (t.copy(this.direction).multiplyScalar(n).add(this.origin),
                    t.distanceToSquared(e))
                }
            }(),
            distanceSqToSegment: function() {
                var t = new r.Vector3
                  , e = new r.Vector3
                  , n = new r.Vector3;
                return function(r, i, o, a) {
                    t.copy(r).add(i).multiplyScalar(.5),
                    e.copy(i).sub(r).normalize(),
                    n.copy(this.origin).sub(t);
                    var s, h, u, l, c = .5 * r.distanceTo(i), p = -this.direction.dot(e), f = n.dot(this.direction), d = -n.dot(e), m = n.lengthSq(), v = Math.abs(1 - p * p);
                    if (v > 0)
                        if (s = p * d - f,
                        h = p * f - d,
                        l = c * v,
                        s >= 0)
                            if (h >= -l)
                                if (h <= l) {
                                    var g = 1 / v;
                                    s *= g,
                                    h *= g,
                                    u = s * (s + p * h + 2 * f) + h * (p * s + h + 2 * d) + m
                                } else
                                    h = c,
                                    s = Math.max(0, -(p * h + f)),
                                    u = -s * s + h * (h + 2 * d) + m;
                            else
                                h = -c,
                                s = Math.max(0, -(p * h + f)),
                                u = -s * s + h * (h + 2 * d) + m;
                        else
                            h <= -l ? (s = Math.max(0, -(-p * c + f)),
                            h = s > 0 ? -c : Math.min(Math.max(-c, -d), c),
                            u = -s * s + h * (h + 2 * d) + m) : h <= l ? (s = 0,
                            h = Math.min(Math.max(-c, -d), c),
                            u = h * (h + 2 * d) + m) : (s = Math.max(0, -(p * c + f)),
                            h = s > 0 ? c : Math.min(Math.max(-c, -d), c),
                            u = -s * s + h * (h + 2 * d) + m);
                    else
                        h = p > 0 ? -c : c,
                        s = Math.max(0, -(p * h + f)),
                        u = -s * s + h * (h + 2 * d) + m;
                    return o && o.copy(this.direction).multiplyScalar(s).add(this.origin),
                    a && a.copy(e).multiplyScalar(h).add(t),
                    u
                }
            }(),
            intersectSphere: function() {
                var t = new r.Vector3;
                return function(e, n) {
                    t.subVectors(e.center, this.origin);
                    var r = t.dot(this.direction)
                      , i = t.dot(t) - r * r
                      , o = e.radius * e.radius;
                    if (i > o)
                        return null ;
                    var a = Math.sqrt(o - i)
                      , s = r - a
                      , h = r + a;
                    return s < 0 && h < 0 ? null : s < 0 ? this.at(h, n) : this.at(s, n)
                }
            }(),
            intersectsSphere: function(t) {
                return this.distanceToPoint(t.center) <= t.radius
            },
            distanceToPlane: function(t) {
                var e = t.normal.dot(this.direction);
                if (0 === e)
                    return 0 === t.distanceToPoint(this.origin) ? 0 : null ;
                var n = -(this.origin.dot(t.normal) + t.constant) / e;
                return n >= 0 ? n : null
            },
            intersectPlane: function(t, e) {
                var n = this.distanceToPlane(t);
                return null === n ? null : this.at(n, e)
            },
            intersectsPlane: function(t) {
                var e = t.distanceToPoint(this.origin);
                if (0 === e)
                    return !0;
                var n = t.normal.dot(this.direction);
                return n * e < 0
            },
            intersectBox: function(t, e) {
                var n, r, i, o, a, s, h = 1 / this.direction.x, u = 1 / this.direction.y, l = 1 / this.direction.z, c = this.origin;
                return h >= 0 ? (n = (t.min.x - c.x) * h,
                r = (t.max.x - c.x) * h) : (n = (t.max.x - c.x) * h,
                r = (t.min.x - c.x) * h),
                u >= 0 ? (i = (t.min.y - c.y) * u,
                o = (t.max.y - c.y) * u) : (i = (t.max.y - c.y) * u,
                o = (t.min.y - c.y) * u),
                n > o || i > r ? null : ((i > n || n !== n) && (n = i),
                (o < r || r !== r) && (r = o),
                l >= 0 ? (a = (t.min.z - c.z) * l,
                s = (t.max.z - c.z) * l) : (a = (t.max.z - c.z) * l,
                s = (t.min.z - c.z) * l),
                n > s || a > r ? null : ((a > n || n !== n) && (n = a),
                (s < r || r !== r) && (r = s),
                r < 0 ? null : this.at(n >= 0 ? n : r, e)))
            },
            intersectsBox: function() {
                var t = new r.Vector3;
                return function(e) {
                    return null !== this.intersectBox(e, t)
                }
            }(),
            intersectTriangle: function() {
                var t = new r.Vector3
                  , e = new r.Vector3
                  , n = new r.Vector3
                  , i = new r.Vector3;
                return function(r, o, a, s, h) {
                    e.subVectors(o, r),
                    n.subVectors(a, r),
                    i.crossVectors(e, n);
                    var u, l = this.direction.dot(i);
                    if (l > 0) {
                        if (s)
                            return null ;
                        u = 1
                    } else {
                        if (!(l < 0))
                            return null ;
                        u = -1,
                        l = -l
                    }
                    t.subVectors(this.origin, r);
                    var c = u * this.direction.dot(n.crossVectors(t, n));
                    if (c < 0)
                        return null ;
                    var p = u * this.direction.dot(e.cross(t));
                    if (p < 0)
                        return null ;
                    if (c + p > l)
                        return null ;
                    var f = -u * t.dot(i);
                    return f < 0 ? null : this.at(f / l, h)
                }
            }(),
            applyMatrix4: function(t) {
                return this.direction.add(this.origin).applyMatrix4(t),
                this.origin.applyMatrix4(t),
                this.direction.sub(this.origin),
                this.direction.normalize(),
                this
            },
            equals: function(t) {
                return t.origin.equals(this.origin) && t.direction.equals(this.direction)
            }
        },
        r.Sphere = function(t, e) {
            this.center = void 0 !== t ? t : new r.Vector3,
            this.radius = void 0 !== e ? e : 0
        }
        ,
        r.Sphere.prototype = {
            constructor: r.Sphere,
            set: function(t, e) {
                return this.center.copy(t),
                this.radius = e,
                this
            },
            setFromPoints: function() {
                var t = new r.Box3;
                return function(e, n) {
                    var r = this.center;
                    void 0 !== n ? r.copy(n) : t.setFromPoints(e).center(r);
                    for (var i = 0, o = 0, a = e.length; o < a; o++)
                        i = Math.max(i, r.distanceToSquared(e[o]));
                    return this.radius = Math.sqrt(i),
                    this
                }
            }(),
            clone: function() {
                return (new this.constructor).copy(this)
            },
            copy: function(t) {
                return this.center.copy(t.center),
                this.radius = t.radius,
                this
            },
            empty: function() {
                return this.radius <= 0
            },
            containsPoint: function(t) {
                return t.distanceToSquared(this.center) <= this.radius * this.radius
            },
            distanceToPoint: function(t) {
                return t.distanceTo(this.center) - this.radius
            },
            intersectsSphere: function(t) {
                var e = this.radius + t.radius;
                return t.center.distanceToSquared(this.center) <= e * e
            },
            intersectsBox: function(t) {
                return t.intersectsSphere(this)
            },
            intersectsPlane: function(t) {
                return Math.abs(this.center.dot(t.normal) - t.constant) <= this.radius
            },
            clampPoint: function(t, e) {
                var n = this.center.distanceToSquared(t)
                  , i = e || new r.Vector3;
                return i.copy(t),
                n > this.radius * this.radius && (i.sub(this.center).normalize(),
                i.multiplyScalar(this.radius).add(this.center)),
                i
            },
            getBoundingBox: function(t) {
                var e = t || new r.Box3;
                return e.set(this.center, this.center),
                e.expandByScalar(this.radius),
                e
            },
            applyMatrix4: function(t) {
                return this.center.applyMatrix4(t),
                this.radius = this.radius * t.getMaxScaleOnAxis(),
                this
            },
            translate: function(t) {
                return this.center.add(t),
                this
            },
            equals: function(t) {
                return t.center.equals(this.center) && t.radius === this.radius
            }
        },
        r.Frustum = function(t, e, n, i, o, a) {
            this.planes = [void 0 !== t ? t : new r.Plane, void 0 !== e ? e : new r.Plane, void 0 !== n ? n : new r.Plane, void 0 !== i ? i : new r.Plane, void 0 !== o ? o : new r.Plane, void 0 !== a ? a : new r.Plane]
        }
        ,
        r.Frustum.prototype = {
            constructor: r.Frustum,
            set: function(t, e, n, r, i, o) {
                var a = this.planes;
                return a[0].copy(t),
                a[1].copy(e),
                a[2].copy(n),
                a[3].copy(r),
                a[4].copy(i),
                a[5].copy(o),
                this
            },
            clone: function() {
                return (new this.constructor).copy(this)
            },
            copy: function(t) {
                for (var e = this.planes, n = 0; n < 6; n++)
                    e[n].copy(t.planes[n]);
                return this
            },
            setFromMatrix: function(t) {
                var e = this.planes
                  , n = t.elements
                  , r = n[0]
                  , i = n[1]
                  , o = n[2]
                  , a = n[3]
                  , s = n[4]
                  , h = n[5]
                  , u = n[6]
                  , l = n[7]
                  , c = n[8]
                  , p = n[9]
                  , f = n[10]
                  , d = n[11]
                  , m = n[12]
                  , v = n[13]
                  , g = n[14]
                  , y = n[15];
                return e[0].setComponents(a - r, l - s, d - c, y - m).normalize(),
                e[1].setComponents(a + r, l + s, d + c, y + m).normalize(),
                e[2].setComponents(a + i, l + h, d + p, y + v).normalize(),
                e[3].setComponents(a - i, l - h, d - p, y - v).normalize(),
                e[4].setComponents(a - o, l - u, d - f, y - g).normalize(),
                e[5].setComponents(a + o, l + u, d + f, y + g).normalize(),
                this
            },
            intersectsObject: function() {
                var t = new r.Sphere;
                return function(e) {
                    var n = e.geometry;
                    return null === n.boundingSphere && n.computeBoundingSphere(),
                    t.copy(n.boundingSphere),
                    t.applyMatrix4(e.matrixWorld),
                    this.intersectsSphere(t)
                }
            }(),
            intersectsSphere: function(t) {
                for (var e = this.planes, n = t.center, r = -t.radius, i = 0; i < 6; i++) {
                    var o = e[i].distanceToPoint(n);
                    if (o < r)
                        return !1
                }
                return !0
            },
            intersectsBox: function() {
                var t = new r.Vector3
                  , e = new r.Vector3;
                return function(n) {
                    for (var r = this.planes, i = 0; i < 6; i++) {
                        var o = r[i];
                        t.x = o.normal.x > 0 ? n.min.x : n.max.x,
                        e.x = o.normal.x > 0 ? n.max.x : n.min.x,
                        t.y = o.normal.y > 0 ? n.min.y : n.max.y,
                        e.y = o.normal.y > 0 ? n.max.y : n.min.y,
                        t.z = o.normal.z > 0 ? n.min.z : n.max.z,
                        e.z = o.normal.z > 0 ? n.max.z : n.min.z;
                        var a = o.distanceToPoint(t)
                          , s = o.distanceToPoint(e);
                        if (a < 0 && s < 0)
                            return !1
                    }
                    return !0
                }
            }(),
            containsPoint: function(t) {
                for (var e = this.planes, n = 0; n < 6; n++)
                    if (e[n].distanceToPoint(t) < 0)
                        return !1;
                return !0
            }
        },
        r.Plane = function(t, e) {
            this.normal = void 0 !== t ? t : new r.Vector3(1,0,0),
            this.constant = void 0 !== e ? e : 0
        }
        ,
        r.Plane.prototype = {
            constructor: r.Plane,
            set: function(t, e) {
                return this.normal.copy(t),
                this.constant = e,
                this
            },
            setComponents: function(t, e, n, r) {
                return this.normal.set(t, e, n),
                this.constant = r,
                this
            },
            setFromNormalAndCoplanarPoint: function(t, e) {
                return this.normal.copy(t),
                this.constant = -e.dot(this.normal),
                this
            },
            setFromCoplanarPoints: function() {
                var t = new r.Vector3
                  , e = new r.Vector3;
                return function(n, r, i) {
                    var o = t.subVectors(i, r).cross(e.subVectors(n, r)).normalize();
                    return this.setFromNormalAndCoplanarPoint(o, n),
                    this
                }
            }(),
            clone: function() {
                return (new this.constructor).copy(this)
            },
            copy: function(t) {
                return this.normal.copy(t.normal),
                this.constant = t.constant,
                this
            },
            normalize: function() {
                var t = 1 / this.normal.length();
                return this.normal.multiplyScalar(t),
                this.constant *= t,
                this
            },
            negate: function() {
                return this.constant *= -1,
                this.normal.negate(),
                this
            },
            distanceToPoint: function(t) {
                return this.normal.dot(t) + this.constant
            },
            distanceToSphere: function(t) {
                return this.distanceToPoint(t.center) - t.radius
            },
            projectPoint: function(t, e) {
                return this.orthoPoint(t, e).sub(t).negate()
            },
            orthoPoint: function(t, e) {
                var n = this.distanceToPoint(t)
                  , i = e || new r.Vector3;
                return i.copy(this.normal).multiplyScalar(n)
            },
            intersectLine: function() {
                var t = new r.Vector3;
                return function(e, n) {
                    var i = n || new r.Vector3
                      , o = e.delta(t)
                      , a = this.normal.dot(o);
                    if (0 !== a) {
                        var s = -(e.start.dot(this.normal) + this.constant) / a;
                        if (!(s < 0 || s > 1))
                            return i.copy(o).multiplyScalar(s).add(e.start)
                    } else if (0 === this.distanceToPoint(e.start))
                        return i.copy(e.start)
                }
            }(),
            intersectsLine: function(t) {
                var e = this.distanceToPoint(t.start)
                  , n = this.distanceToPoint(t.end);
                return e < 0 && n > 0 || n < 0 && e > 0
            },
            intersectsBox: function(t) {
                return t.intersectsPlane(this)
            },
            intersectsSphere: function(t) {
                return t.intersectsPlane(this)
            },
            coplanarPoint: function(t) {
                var e = t || new r.Vector3;
                return e.copy(this.normal).multiplyScalar(-this.constant)
            },
            applyMatrix4: function() {
                var t = new r.Vector3
                  , e = new r.Vector3
                  , n = new r.Matrix3;
                return function(r, i) {
                    var o = i || n.getNormalMatrix(r)
                      , a = t.copy(this.normal).applyMatrix3(o)
                      , s = this.coplanarPoint(e);
                    return s.applyMatrix4(r),
                    this.setFromNormalAndCoplanarPoint(a, s),
                    this
                }
            }(),
            translate: function(t) {
                return this.constant = this.constant - t.dot(this.normal),
                this
            },
            equals: function(t) {
                return t.normal.equals(this.normal) && t.constant === this.constant
            }
        },
        r.Math = {
            generateUUID: function() {
                var t, e = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz".split(""), n = new Array(36), r = 0;
                return function() {
                    for (var i = 0; i < 36; i++)
                        8 === i || 13 === i || 18 === i || 23 === i ? n[i] = "-" : 14 === i ? n[i] = "4" : (r <= 2 && (r = 33554432 + 16777216 * Math.random() | 0),
                        t = 15 & r,
                        r >>= 4,
                        n[i] = e[19 === i ? 3 & t | 8 : t]);
                    return n.join("")
                }
            }(),
            clamp: function(t, e, n) {
                return Math.max(e, Math.min(n, t))
            },
            euclideanModulo: function(t, e) {
                return (t % e + e) % e
            },
            mapLinear: function(t, e, n, r, i) {
                return r + (t - e) * (i - r) / (n - e)
            },
            smoothstep: function(t, e, n) {
                return t <= e ? 0 : t >= n ? 1 : (t = (t - e) / (n - e),
                t * t * (3 - 2 * t))
            },
            smootherstep: function(t, e, n) {
                return t <= e ? 0 : t >= n ? 1 : (t = (t - e) / (n - e),
                t * t * t * (t * (6 * t - 15) + 10))
            },
            random16: function() {
                return console.warn("THREE.Math.random16() has been deprecated. Use Math.random() instead."),
                Math.random()
            },
            randInt: function(t, e) {
                return t + Math.floor(Math.random() * (e - t + 1))
            },
            randFloat: function(t, e) {
                return t + Math.random() * (e - t)
            },
            randFloatSpread: function(t) {
                return t * (.5 - Math.random())
            },
            degToRad: function() {
                var t = Math.PI / 180;
                return function(e) {
                    return e * t
                }
            }(),
            radToDeg: function() {
                var t = 180 / Math.PI;
                return function(e) {
                    return e * t
                }
            }(),
            isPowerOfTwo: function(t) {
                return 0 === (t & t - 1) && 0 !== t
            },
            nearestPowerOfTwo: function(t) {
                return Math.pow(2, Math.round(Math.log(t) / Math.LN2))
            },
            nextPowerOfTwo: function(t) {
                return t--,
                t |= t >> 1,
                t |= t >> 2,
                t |= t >> 4,
                t |= t >> 8,
                t |= t >> 16,
                t++,
                t
            }
        },
        r.Spline = function(t) {
            function e(t, e, n, r, i, o, a) {
                var s = .5 * (n - t)
                  , h = .5 * (r - e);
                return (2 * (e - n) + s + h) * a + (-3 * (e - n) - 2 * s - h) * o + s * i + e
            }
            this.points = t;
            var n, i, o, a, s, h, u, l, c, p = [], f = {
                x: 0,
                y: 0,
                z: 0
            };
            this.initFromArray = function(t) {
                this.points = [];
                for (var e = 0; e < t.length; e++)
                    this.points[e] = {
                        x: t[e][0],
                        y: t[e][1],
                        z: t[e][2]
                    }
            }
            ,
            this.getPoint = function(t) {
                return n = (this.points.length - 1) * t,
                i = Math.floor(n),
                o = n - i,
                p[0] = 0 === i ? i : i - 1,
                p[1] = i,
                p[2] = i > this.points.length - 2 ? this.points.length - 1 : i + 1,
                p[3] = i > this.points.length - 3 ? this.points.length - 1 : i + 2,
                h = this.points[p[0]],
                u = this.points[p[1]],
                l = this.points[p[2]],
                c = this.points[p[3]],
                a = o * o,
                s = o * a,
                f.x = e(h.x, u.x, l.x, c.x, o, a, s),
                f.y = e(h.y, u.y, l.y, c.y, o, a, s),
                f.z = e(h.z, u.z, l.z, c.z, o, a, s),
                f
            }
            ,
            this.getControlPointsArray = function() {
                var t, e, n = this.points.length, r = [];
                for (t = 0; t < n; t++)
                    e = this.points[t],
                    r[t] = [e.x, e.y, e.z];
                return r
            }
            ,
            this.getLength = function(t) {
                var e, n, i, o, a = 0, s = 0, h = 0, u = new r.Vector3, l = new r.Vector3, c = [], p = 0;
                for (c[0] = 0,
                t || (t = 100),
                i = this.points.length * t,
                u.copy(this.points[0]),
                e = 1; e < i; e++)
                    n = e / i,
                    o = this.getPoint(n),
                    l.copy(o),
                    p += l.distanceTo(u),
                    u.copy(o),
                    a = (this.points.length - 1) * n,
                    s = Math.floor(a),
                    s !== h && (c[s] = p,
                    h = s);
                return c[c.length] = p,
                {
                    chunks: c,
                    total: p
                }
            }
            ,
            this.reparametrizeByArcLength = function(t) {
                var e, n, i, o, a, s, h, u, l = [], c = new r.Vector3, p = this.getLength();
                for (l.push(c.copy(this.points[0]).clone()),
                e = 1; e < this.points.length; e++) {
                    for (s = p.chunks[e] - p.chunks[e - 1],
                    h = Math.ceil(t * s / p.total),
                    o = (e - 1) / (this.points.length - 1),
                    a = e / (this.points.length - 1),
                    n = 1; n < h - 1; n++)
                        i = o + n * (1 / h) * (a - o),
                        u = this.getPoint(i),
                        l.push(c.copy(u).clone());
                    l.push(c.copy(this.points[e]).clone())
                }
                this.points = l
            }
        }
        ,
        r.Triangle = function(t, e, n) {
            this.a = void 0 !== t ? t : new r.Vector3,
            this.b = void 0 !== e ? e : new r.Vector3,
            this.c = void 0 !== n ? n : new r.Vector3
        }
        ,
        r.Triangle.normal = function() {
            var t = new r.Vector3;
            return function(e, n, i, o) {
                var a = o || new r.Vector3;
                a.subVectors(i, n),
                t.subVectors(e, n),
                a.cross(t);
                var s = a.lengthSq();
                return s > 0 ? a.multiplyScalar(1 / Math.sqrt(s)) : a.set(0, 0, 0)
            }
        }(),
        r.Triangle.barycoordFromPoint = function() {
            var t = new r.Vector3
              , e = new r.Vector3
              , n = new r.Vector3;
            return function(i, o, a, s, h) {
                t.subVectors(s, o),
                e.subVectors(a, o),
                n.subVectors(i, o);
                var u = t.dot(t)
                  , l = t.dot(e)
                  , c = t.dot(n)
                  , p = e.dot(e)
                  , f = e.dot(n)
                  , d = u * p - l * l
                  , m = h || new r.Vector3;
                if (0 === d)
                    return m.set(-2, -1, -1);
                var v = 1 / d
                  , g = (p * c - l * f) * v
                  , y = (u * f - l * c) * v;
                return m.set(1 - g - y, y, g)
            }
        }(),
        r.Triangle.containsPoint = function() {
            var t = new r.Vector3;
            return function(e, n, i, o) {
                var a = r.Triangle.barycoordFromPoint(e, n, i, o, t);
                return a.x >= 0 && a.y >= 0 && a.x + a.y <= 1
            }
        }(),
        r.Triangle.prototype = {
            constructor: r.Triangle,
            set: function(t, e, n) {
                return this.a.copy(t),
                this.b.copy(e),
                this.c.copy(n),
                this
            },
            setFromPointsAndIndices: function(t, e, n, r) {
                return this.a.copy(t[e]),
                this.b.copy(t[n]),
                this.c.copy(t[r]),
                this
            },
            clone: function() {
                return (new this.constructor).copy(this)
            },
            copy: function(t) {
                return this.a.copy(t.a),
                this.b.copy(t.b),
                this.c.copy(t.c),
                this
            },
            area: function() {
                var t = new r.Vector3
                  , e = new r.Vector3;
                return function() {
                    return t.subVectors(this.c, this.b),
                    e.subVectors(this.a, this.b),
                    .5 * t.cross(e).length()
                }
            }(),
            midpoint: function(t) {
                var e = t || new r.Vector3;
                return e.addVectors(this.a, this.b).add(this.c).multiplyScalar(1 / 3)
            },
            normal: function(t) {
                return r.Triangle.normal(this.a, this.b, this.c, t)
            },
            plane: function(t) {
                var e = t || new r.Plane;
                return e.setFromCoplanarPoints(this.a, this.b, this.c)
            },
            barycoordFromPoint: function(t, e) {
                return r.Triangle.barycoordFromPoint(t, this.a, this.b, this.c, e)
            },
            containsPoint: function(t) {
                return r.Triangle.containsPoint(t, this.a, this.b, this.c)
            },
            equals: function(t) {
                return t.a.equals(this.a) && t.b.equals(this.b) && t.c.equals(this.c)
            }
        },
        r.Interpolant = function(t, e, n, r) {
            this.parameterPositions = t,
            this._cachedIndex = 0,
            this.resultBuffer = void 0 !== r ? r : new e.constructor(n),
            this.sampleValues = e,
            this.valueSize = n
        }
        ,
        r.Interpolant.prototype = {
            constructor: r.Interpolant,
            evaluate: function(t) {
                var e = this.parameterPositions
                  , n = this._cachedIndex
                  , r = e[n]
                  , i = e[n - 1];
                t: {
                    e: {
                        var o;
                        n: {
                            r: if (!(t < r)) {
                                for (var a = n + 2; ; ) {
                                    if (void 0 === r) {
                                        if (t < i)
                                            break r;
                                        return n = e.length,
                                        this._cachedIndex = n,
                                        this.afterEnd_(n - 1, t, i)
                                    }
                                    if (n === a)
                                        break;
                                    if (i = r,
                                    r = e[++n],
                                    t < r)
                                        break e
                                }
                                o = e.length;
                                break n
                            }
                            {
                                if (t >= i)
                                    break t;
                                var s = e[1];
                                t < s && (n = 2,
                                i = s);
                                for (var a = n - 2; ; ) {
                                    if (void 0 === i)
                                        return this._cachedIndex = 0,
                                        this.beforeStart_(0, t, r);
                                    if (n === a)
                                        break;
                                    if (r = i,
                                    i = e[--n - 1],
                                    t >= i)
                                        break e
                                }
                                o = n,
                                n = 0
                            }
                        }
                        for (; n < o; ) {
                            var h = n + o >>> 1;
                            t < e[h] ? o = h : n = h + 1
                        }
                        if (r = e[n],
                        i = e[n - 1],
                        void 0 === i)
                            return this._cachedIndex = 0,
                            this.beforeStart_(0, t, r);
                        if (void 0 === r)
                            return n = e.length,
                            this._cachedIndex = n,
                            this.afterEnd_(n - 1, i, t)
                    }
                    this._cachedIndex = n,
                    this.intervalChanged_(n, i, r)
                }
                return this.interpolate_(n, i, t, r)
            },
            settings: null ,
            DefaultSettings_: {},
            getSettings_: function() {
                return this.settings || this.DefaultSettings_
            },
            copySampleValue_: function(t) {
                for (var e = this.resultBuffer, n = this.sampleValues, r = this.valueSize, i = t * r, o = 0; o !== r; ++o)
                    e[o] = n[i + o];
                return e
            },
            interpolate_: function(t, e, n, r) {
                throw new Error("call to abstract method")
            },
            intervalChanged_: function(t, e, n) {}
        },
        Object.assign(r.Interpolant.prototype, {
            beforeStart_: r.Interpolant.prototype.copySampleValue_,
            afterEnd_: r.Interpolant.prototype.copySampleValue_
        }),
        r.CubicInterpolant = function(t, e, n, i) {
            r.Interpolant.call(this, t, e, n, i),
            this._weightPrev = -0,
            this._offsetPrev = -0,
            this._weightNext = -0,
            this._offsetNext = -0
        }
        ,
        r.CubicInterpolant.prototype = Object.assign(Object.create(r.Interpolant.prototype), {
            constructor: r.CubicInterpolant,
            DefaultSettings_: {
                endingStart: r.ZeroCurvatureEnding,
                endingEnd: r.ZeroCurvatureEnding
            },
            intervalChanged_: function(t, e, n) {
                var i = this.parameterPositions
                  , o = t - 2
                  , a = t + 1
                  , s = i[o]
                  , h = i[a];
                if (void 0 === s)
                    switch (this.getSettings_().endingStart) {
                    case r.ZeroSlopeEnding:
                        o = t,
                        s = 2 * e - n;
                        break;
                    case r.WrapAroundEnding:
                        o = i.length - 2,
                        s = e + i[o] - i[o + 1];
                        break;
                    default:
                        o = t,
                        s = n
                    }
                if (void 0 === h)
                    switch (this.getSettings_().endingEnd) {
                    case r.ZeroSlopeEnding:
                        a = t,
                        h = 2 * n - e;
                        break;
                    case r.WrapAroundEnding:
                        a = 1,
                        h = n + i[1] - i[0];
                        break;
                    default:
                        a = t - 1,
                        h = e
                    }
                var u = .5 * (n - e)
                  , l = this.valueSize;
                this._weightPrev = u / (e - s),
                this._weightNext = u / (h - n),
                this._offsetPrev = o * l,
                this._offsetNext = a * l
            },
            interpolate_: function(t, e, n, r) {
                for (var i = this.resultBuffer, o = this.sampleValues, a = this.valueSize, s = t * a, h = s - a, u = this._offsetPrev, l = this._offsetNext, c = this._weightPrev, p = this._weightNext, f = (n - e) / (r - e), d = f * f, m = d * f, v = -c * m + 2 * c * d - c * f, g = (1 + c) * m + (-1.5 - 2 * c) * d + (-.5 + c) * f + 1, y = (-1 - p) * m + (1.5 + p) * d + .5 * f, _ = p * m - p * d, x = 0; x !== a; ++x)
                    i[x] = v * o[u + x] + g * o[h + x] + y * o[s + x] + _ * o[l + x];
                return i
            }
        }),
        r.DiscreteInterpolant = function(t, e, n, i) {
            r.Interpolant.call(this, t, e, n, i)
        }
        ,
        r.DiscreteInterpolant.prototype = Object.assign(Object.create(r.Interpolant.prototype), {
            constructor: r.DiscreteInterpolant,
            interpolate_: function(t, e, n, r) {
                return this.copySampleValue_(t - 1)
            }
        }),
        r.LinearInterpolant = function(t, e, n, i) {
            r.Interpolant.call(this, t, e, n, i)
        }
        ,
        r.LinearInterpolant.prototype = Object.assign(Object.create(r.Interpolant.prototype), {
            constructor: r.LinearInterpolant,
            interpolate_: function(t, e, n, r) {
                for (var i = this.resultBuffer, o = this.sampleValues, a = this.valueSize, s = t * a, h = s - a, u = (n - e) / (r - e), l = 1 - u, c = 0; c !== a; ++c)
                    i[c] = o[h + c] * l + o[s + c] * u;
                return i
            }
        }),
        r.QuaternionLinearInterpolant = function(t, e, n, i) {
            r.Interpolant.call(this, t, e, n, i)
        }
        ,
        r.QuaternionLinearInterpolant.prototype = Object.assign(Object.create(r.Interpolant.prototype), {
            constructor: r.QuaternionLinearInterpolant,
            interpolate_: function(t, e, n, i) {
                for (var o = this.resultBuffer, a = this.sampleValues, s = this.valueSize, h = t * s, u = (n - e) / (i - e), l = h + s; h !== l; h += 4)
                    r.Quaternion.slerpFlat(o, 0, a, h - s, a, h, u);
                return o
            }
        }),
        r.Clock = function(t) {
            this.autoStart = void 0 === t || t,
            this.startTime = 0,
            this.oldTime = 0,
            this.elapsedTime = 0,
            this.running = !1
        }
        ,
        r.Clock.prototype = {
            constructor: r.Clock,
            start: function() {
                this.startTime = performance.now(),
                this.oldTime = this.startTime,
                this.running = !0
            },
            stop: function() {
                this.getElapsedTime(),
                this.running = !1
            },
            getElapsedTime: function() {
                return this.getDelta(),
                this.elapsedTime
            },
            getDelta: function() {
                var t = 0;
                if (this.autoStart && !this.running && this.start(),
                this.running) {
                    var e = performance.now();
                    t = .001 * (e - this.oldTime),
                    this.oldTime = e,
                    this.elapsedTime += t
                }
                return t
            }
        },
        r.EventDispatcher = function() {}
        ,
        r.EventDispatcher.prototype = {
            constructor: r.EventDispatcher,
            apply: function(t) {
                t.addEventListener = r.EventDispatcher.prototype.addEventListener,
                t.hasEventListener = r.EventDispatcher.prototype.hasEventListener,
                t.removeEventListener = r.EventDispatcher.prototype.removeEventListener,
                t.dispatchEvent = r.EventDispatcher.prototype.dispatchEvent
            },
            addEventListener: function(t, e) {
                void 0 === this._listeners && (this._listeners = {});
                var n = this._listeners;
                void 0 === n[t] && (n[t] = []),
                n[t].indexOf(e) === -1 && n[t].push(e)
            },
            hasEventListener: function(t, e) {
                if (void 0 === this._listeners)
                    return !1;
                var n = this._listeners;
                return void 0 !== n[t] && n[t].indexOf(e) !== -1
            },
            removeEventListener: function(t, e) {
                if (void 0 !== this._listeners) {
                    var n = this._listeners
                      , r = n[t];
                    if (void 0 !== r) {
                        var i = r.indexOf(e);
                        i !== -1 && r.splice(i, 1)
                    }
                }
            },
            dispatchEvent: function(t) {
                if (void 0 !== this._listeners) {
                    var e = this._listeners
                      , n = e[t.type];
                    if (void 0 !== n) {
                        t.target = this;
                        for (var r = [], i = n.length, o = 0; o < i; o++)
                            r[o] = n[o];
                        for (var o = 0; o < i; o++)
                            r[o].call(this, t)
                    }
                }
            }
        },
        r.Layers = function() {
            this.mask = 1
        }
        ,
        r.Layers.prototype = {
            constructor: r.Layers,
            set: function(t) {
                this.mask = 1 << t
            },
            enable: function(t) {
                this.mask |= 1 << t
            },
            toggle: function(t) {
                this.mask ^= 1 << t
            },
            disable: function(t) {
                this.mask &= ~(1 << t)
            },
            test: function(t) {
                return 0 !== (this.mask & t.mask)
            }
        },
        function(t) {
            function e(t, e) {
                return t.distance - e.distance
            }
            function n(t, e, r, i) {
                if (t.visible !== !1 && (t.raycast(e, r),
                i === !0))
                    for (var o = t.children, a = 0, s = o.length; a < s; a++)
                        n(o[a], e, r, !0)
            }
            t.Raycaster = function(e, n, r, i) {
                this.ray = new t.Ray(e,n),
                this.near = r || 0,
                this.far = i || 1 / 0,
                this.params = {
                    Mesh: {},
                    Line: {},
                    LOD: {},
                    Points: {
                        threshold: 1
                    },
                    Sprite: {}
                },
                Object.defineProperties(this.params, {
                    PointCloud: {
                        get: function() {
                            return console.warn("THREE.Raycaster: params.PointCloud has been renamed to params.Points."),
                            this.Points
                        }
                    }
                })
            }
            ,
            t.Raycaster.prototype = {
                constructor: t.Raycaster,
                linePrecision: 1,
                set: function(t, e) {
                    this.ray.set(t, e)
                },
                setFromCamera: function(e, n) {
                    n instanceof t.PerspectiveCamera ? (this.ray.origin.setFromMatrixPosition(n.matrixWorld),
                    this.ray.direction.set(e.x, e.y, .5).unproject(n).sub(this.ray.origin).normalize()) : n instanceof t.OrthographicCamera ? (this.ray.origin.set(e.x, e.y, -1).unproject(n),
                    this.ray.direction.set(0, 0, -1).transformDirection(n.matrixWorld)) : console.error("THREE.Raycaster: Unsupported camera type.")
                },
                intersectObject: function(t, r) {
                    var i = [];
                    return n(t, this, i, r),
                    i.sort(e),
                    i
                },
                intersectObjects: function(t, r) {
                    var i = [];
                    if (Array.isArray(t) === !1)
                        return console.warn("THREE.Raycaster.intersectObjects: objects is not an Array."),
                        i;
                    for (var o = 0, a = t.length; o < a; o++)
                        n(t[o], this, i, r);
                    return i.sort(e),
                    i
                }
            }
        }(r),
        r.Object3D = function() {
            function t() {
                o.setFromEuler(i, !1)
            }
            function e() {
                i.setFromQuaternion(o, void 0, !1)
            }
            Object.defineProperty(this, "id", {
                value: r.Object3DIdCount++
            }),
            this.uuid = r.Math.generateUUID(),
            this.name = "",
            this.type = "Object3D",
            this.parent = null ,
            this.children = [],
            this.up = r.Object3D.DefaultUp.clone();
            var n = new r.Vector3
              , i = new r.Euler
              , o = new r.Quaternion
              , a = new r.Vector3(1,1,1);
            i.onChange(t),
            o.onChange(e),
            Object.defineProperties(this, {
                position: {
                    enumerable: !0,
                    value: n
                },
                rotation: {
                    enumerable: !0,
                    value: i
                },
                quaternion: {
                    enumerable: !0,
                    value: o
                },
                scale: {
                    enumerable: !0,
                    value: a
                },
                modelViewMatrix: {
                    value: new r.Matrix4
                },
                normalMatrix: {
                    value: new r.Matrix3
                }
            }),
            this.rotationAutoUpdate = !0,
            this.matrix = new r.Matrix4,
            this.matrixWorld = new r.Matrix4,
            this.matrixAutoUpdate = r.Object3D.DefaultMatrixAutoUpdate,
            this.matrixWorldNeedsUpdate = !1,
            this.layers = new r.Layers,
            this.visible = !0,
            this.castShadow = !1,
            this.receiveShadow = !1,
            this.frustumCulled = !0,
            this.renderOrder = 0,
            this.userData = {}
        }
        ,
        r.Object3D.DefaultUp = new r.Vector3(0,1,0),
        r.Object3D.DefaultMatrixAutoUpdate = !0,
        r.Object3D.prototype = {
            constructor: r.Object3D,
            applyMatrix: function(t) {
                this.matrix.multiplyMatrices(t, this.matrix),
                this.matrix.decompose(this.position, this.quaternion, this.scale)
            },
            setRotationFromAxisAngle: function(t, e) {
                this.quaternion.setFromAxisAngle(t, e)
            },
            setRotationFromEuler: function(t) {
                this.quaternion.setFromEuler(t, !0)
            },
            setRotationFromMatrix: function(t) {
                this.quaternion.setFromRotationMatrix(t)
            },
            setRotationFromQuaternion: function(t) {
                this.quaternion.copy(t)
            },
            rotateOnAxis: function() {
                var t = new r.Quaternion;
                return function(e, n) {
                    return t.setFromAxisAngle(e, n),
                    this.quaternion.multiply(t),
                    this
                }
            }(),
            rotateX: function() {
                var t = new r.Vector3(1,0,0);
                return function(e) {
                    return this.rotateOnAxis(t, e)
                }
            }(),
            rotateY: function() {
                var t = new r.Vector3(0,1,0);
                return function(e) {
                    return this.rotateOnAxis(t, e)
                }
            }(),
            rotateZ: function() {
                var t = new r.Vector3(0,0,1);
                return function(e) {
                    return this.rotateOnAxis(t, e)
                }
            }(),
            translateOnAxis: function() {
                var t = new r.Vector3;
                return function(e, n) {
                    return t.copy(e).applyQuaternion(this.quaternion),
                    this.position.add(t.multiplyScalar(n)),
                    this
                }
            }(),
            translateX: function() {
                var t = new r.Vector3(1,0,0);
                return function(e) {
                    return this.translateOnAxis(t, e)
                }
            }(),
            translateY: function() {
                var t = new r.Vector3(0,1,0);
                return function(e) {
                    return this.translateOnAxis(t, e)
                }
            }(),
            translateZ: function() {
                var t = new r.Vector3(0,0,1);
                return function(e) {
                    return this.translateOnAxis(t, e)
                }
            }(),
            localToWorld: function(t) {
                return t.applyMatrix4(this.matrixWorld)
            },
            worldToLocal: function() {
                var t = new r.Matrix4;
                return function(e) {
                    return e.applyMatrix4(t.getInverse(this.matrixWorld))
                }
            }(),
            lookAt: function() {
                var t = new r.Matrix4;
                return function(e) {
                    t.lookAt(e, this.position, this.up),
                    this.quaternion.setFromRotationMatrix(t)
                }
            }(),
            add: function(t) {
                if (arguments.length > 1) {
                    for (var e = 0; e < arguments.length; e++)
                        this.add(arguments[e]);
                    return this
                }
                return t === this ? (console.error("THREE.Object3D.add: object can't be added as a child of itself.", t),
                this) : (t instanceof r.Object3D ? (null !== t.parent && t.parent.remove(t),
                t.parent = this,
                t.dispatchEvent({
                    type: "added"
                }),
                this.children.push(t)) : console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.", t),
                this)
            },
            remove: function(t) {
                if (arguments.length > 1)
                    for (var e = 0; e < arguments.length; e++)
                        this.remove(arguments[e]);
                var n = this.children.indexOf(t);
                n !== -1 && (t.parent = null ,
                t.dispatchEvent({
                    type: "removed"
                }),
                this.children.splice(n, 1))
            },
            getObjectById: function(t) {
                return this.getObjectByProperty("id", t)
            },
            getObjectByName: function(t) {
                return this.getObjectByProperty("name", t)
            },
            getObjectByProperty: function(t, e) {
                if (this[t] === e)
                    return this;
                for (var n = 0, r = this.children.length; n < r; n++) {
                    var i = this.children[n]
                      , o = i.getObjectByProperty(t, e);
                    if (void 0 !== o)
                        return o
                }
            },
            getWorldPosition: function(t) {
                var e = t || new r.Vector3;
                return this.updateMatrixWorld(!0),
                e.setFromMatrixPosition(this.matrixWorld)
            },
            getWorldQuaternion: function() {
                var t = new r.Vector3
                  , e = new r.Vector3;
                return function(n) {
                    var i = n || new r.Quaternion;
                    return this.updateMatrixWorld(!0),
                    this.matrixWorld.decompose(t, i, e),
                    i
                }
            }(),
            getWorldRotation: function() {
                var t = new r.Quaternion;
                return function(e) {
                    var n = e || new r.Euler;
                    return this.getWorldQuaternion(t),
                    n.setFromQuaternion(t, this.rotation.order, !1)
                }
            }(),
            getWorldScale: function() {
                var t = new r.Vector3
                  , e = new r.Quaternion;
                return function(n) {
                    var i = n || new r.Vector3;
                    return this.updateMatrixWorld(!0),
                    this.matrixWorld.decompose(t, e, i),
                    i
                }
            }(),
            getWorldDirection: function() {
                var t = new r.Quaternion;
                return function(e) {
                    var n = e || new r.Vector3;
                    return this.getWorldQuaternion(t),
                    n.set(0, 0, 1).applyQuaternion(t)
                }
            }(),
            raycast: function() {},
            traverse: function(t) {
                t(this);
                for (var e = this.children, n = 0, r = e.length; n < r; n++)
                    e[n].traverse(t)
            },
            traverseVisible: function(t) {
                if (this.visible !== !1) {
                    t(this);
                    for (var e = this.children, n = 0, r = e.length; n < r; n++)
                        e[n].traverseVisible(t)
                }
            },
            traverseAncestors: function(t) {
                var e = this.parent;
                null !== e && (t(e),
                e.traverseAncestors(t))
            },
            updateMatrix: function() {
                this.matrix.compose(this.position, this.quaternion, this.scale),
                this.matrixWorldNeedsUpdate = !0
            },
            updateMatrixWorld: function(t) {
                this.matrixAutoUpdate === !0 && this.updateMatrix(),
                this.matrixWorldNeedsUpdate !== !0 && t !== !0 || (null === this.parent ? this.matrixWorld.copy(this.matrix) : this.matrixWorld.multiplyMatrices(this.parent.matrixWorld, this.matrix),
                this.matrixWorldNeedsUpdate = !1,
                t = !0);
                for (var e = 0, n = this.children.length; e < n; e++)
                    this.children[e].updateMatrixWorld(t)
            },
            toJSON: function(t) {
                function e(t) {
                    var e = [];
                    for (var n in t) {
                        var r = t[n];
                        delete r.metadata,
                        e.push(r)
                    }
                    return e
                }
                var n = void 0 === t
                  , r = {};
                n && (t = {
                    geometries: {},
                    materials: {},
                    textures: {},
                    images: {}
                },
                r.metadata = {
                    version: 4.4,
                    type: "Object",
                    generator: "Object3D.toJSON"
                });
                var i = {};
                if (i.uuid = this.uuid,
                i.type = this.type,
                "" !== this.name && (i.name = this.name),
                "{}" !== JSON.stringify(this.userData) && (i.userData = this.userData),
                this.castShadow === !0 && (i.castShadow = !0),
                this.receiveShadow === !0 && (i.receiveShadow = !0),
                this.visible === !1 && (i.visible = !1),
                i.matrix = this.matrix.toArray(),
                void 0 !== this.geometry && (void 0 === t.geometries[this.geometry.uuid] && (t.geometries[this.geometry.uuid] = this.geometry.toJSON(t)),
                i.geometry = this.geometry.uuid),
                void 0 !== this.material && (void 0 === t.materials[this.material.uuid] && (t.materials[this.material.uuid] = this.material.toJSON(t)),
                i.material = this.material.uuid),
                this.children.length > 0) {
                    i.children = [];
                    for (var o = 0; o < this.children.length; o++)
                        i.children.push(this.children[o].toJSON(t).object)
                }
                if (n) {
                    var a = e(t.geometries)
                      , s = e(t.materials)
                      , h = e(t.textures)
                      , u = e(t.images);
                    a.length > 0 && (r.geometries = a),
                    s.length > 0 && (r.materials = s),
                    h.length > 0 && (r.textures = h),
                    u.length > 0 && (r.images = u)
                }
                return r.object = i,
                r
            },
            clone: function(t) {
                return (new this.constructor).copy(this, t)
            },
            copy: function(t, e) {
                if (void 0 === e && (e = !0),
                this.name = t.name,
                this.up.copy(t.up),
                this.position.copy(t.position),
                this.quaternion.copy(t.quaternion),
                this.scale.copy(t.scale),
                this.rotationAutoUpdate = t.rotationAutoUpdate,
                this.matrix.copy(t.matrix),
                this.matrixWorld.copy(t.matrixWorld),
                this.matrixAutoUpdate = t.matrixAutoUpdate,
                this.matrixWorldNeedsUpdate = t.matrixWorldNeedsUpdate,
                this.visible = t.visible,
                this.castShadow = t.castShadow,
                this.receiveShadow = t.receiveShadow,
                this.frustumCulled = t.frustumCulled,
                this.renderOrder = t.renderOrder,
                this.userData = JSON.parse(JSON.stringify(t.userData)),
                e === !0)
                    for (var n = 0; n < t.children.length; n++) {
                        var r = t.children[n];
                        this.add(r.clone())
                    }
                return this
            }
        },
        r.EventDispatcher.prototype.apply(r.Object3D.prototype),
        r.Object3DIdCount = 0,
        r.Face3 = function(t, e, n, i, o, a) {
            this.a = t,
            this.b = e,
            this.c = n,
            this.normal = i instanceof r.Vector3 ? i : new r.Vector3,
            this.vertexNormals = Array.isArray(i) ? i : [],
            this.color = o instanceof r.Color ? o : new r.Color,
            this.vertexColors = Array.isArray(o) ? o : [],
            this.materialIndex = void 0 !== a ? a : 0
        }
        ,
        r.Face3.prototype = {
            constructor: r.Face3,
            clone: function() {
                return (new this.constructor).copy(this)
            },
            copy: function(t) {
                this.a = t.a,
                this.b = t.b,
                this.c = t.c,
                this.normal.copy(t.normal),
                this.color.copy(t.color),
                this.materialIndex = t.materialIndex;
                for (var e = 0, n = t.vertexNormals.length; e < n; e++)
                    this.vertexNormals[e] = t.vertexNormals[e].clone();
                for (var e = 0, n = t.vertexColors.length; e < n; e++)
                    this.vertexColors[e] = t.vertexColors[e].clone();
                return this
            }
        },
        r.BufferAttribute = function(t, e) {
            this.uuid = r.Math.generateUUID(),
            this.array = t,
            this.itemSize = e,
            this.dynamic = !1,
            this.updateRange = {
                offset: 0,
                count: -1
            },
            this.version = 0
        }
        ,
        r.BufferAttribute.prototype = {
            constructor: r.BufferAttribute,
            get count() {
                return this.array.length / this.itemSize
            },
            set needsUpdate(t) {
                t === !0 && this.version++
            },
            setDynamic: function(t) {
                return this.dynamic = t,
                this
            },
            copy: function(t) {
                return this.array = new t.array.constructor(t.array),
                this.itemSize = t.itemSize,
                this.dynamic = t.dynamic,
                this
            },
            copyAt: function(t, e, n) {
                t *= this.itemSize,
                n *= e.itemSize;
                for (var r = 0, i = this.itemSize; r < i; r++)
                    this.array[t + r] = e.array[n + r];
                return this
            },
            copyArray: function(t) {
                return this.array.set(t),
                this
            },
            copyColorsArray: function(t) {
                for (var e = this.array, n = 0, i = 0, o = t.length; i < o; i++) {
                    var a = t[i];
                    void 0 === a && (console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined", i),
                    a = new r.Color),
                    e[n++] = a.r,
                    e[n++] = a.g,
                    e[n++] = a.b
                }
                return this
            },
            copyIndicesArray: function(t) {
                for (var e = this.array, n = 0, r = 0, i = t.length; r < i; r++) {
                    var o = t[r];
                    e[n++] = o.a,
                    e[n++] = o.b,
                    e[n++] = o.c
                }
                return this
            },
            copyVector2sArray: function(t) {
                for (var e = this.array, n = 0, i = 0, o = t.length; i < o; i++) {
                    var a = t[i];
                    void 0 === a && (console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined", i),
                    a = new r.Vector2),
                    e[n++] = a.x,
                    e[n++] = a.y
                }
                return this
            },
            copyVector3sArray: function(t) {
                for (var e = this.array, n = 0, i = 0, o = t.length; i < o; i++) {
                    var a = t[i];
                    void 0 === a && (console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined", i),
                    a = new r.Vector3),
                    e[n++] = a.x,
                    e[n++] = a.y,
                    e[n++] = a.z
                }
                return this
            },
            copyVector4sArray: function(t) {
                for (var e = this.array, n = 0, i = 0, o = t.length; i < o; i++) {
                    var a = t[i];
                    void 0 === a && (console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined", i),
                    a = new r.Vector4),
                    e[n++] = a.x,
                    e[n++] = a.y,
                    e[n++] = a.z,
                    e[n++] = a.w
                }
                return this
            },
            set: function(t, e) {
                return void 0 === e && (e = 0),
                this.array.set(t, e),
                this
            },
            getX: function(t) {
                return this.array[t * this.itemSize]
            },
            setX: function(t, e) {
                return this.array[t * this.itemSize] = e,
                this
            },
            getY: function(t) {
                return this.array[t * this.itemSize + 1]
            },
            setY: function(t, e) {
                return this.array[t * this.itemSize + 1] = e,
                this
            },
            getZ: function(t) {
                return this.array[t * this.itemSize + 2]
            },
            setZ: function(t, e) {
                return this.array[t * this.itemSize + 2] = e,
                this
            },
            getW: function(t) {
                return this.array[t * this.itemSize + 3]
            },
            setW: function(t, e) {
                return this.array[t * this.itemSize + 3] = e,
                this
            },
            setXY: function(t, e, n) {
                return t *= this.itemSize,
                this.array[t + 0] = e,
                this.array[t + 1] = n,
                this
            },
            setXYZ: function(t, e, n, r) {
                return t *= this.itemSize,
                this.array[t + 0] = e,
                this.array[t + 1] = n,
                this.array[t + 2] = r,
                this
            },
            setXYZW: function(t, e, n, r, i) {
                return t *= this.itemSize,
                this.array[t + 0] = e,
                this.array[t + 1] = n,
                this.array[t + 2] = r,
                this.array[t + 3] = i,
                this
            },
            clone: function() {
                return (new this.constructor).copy(this)
            }
        },
        r.Int8Attribute = function(t, e) {
            return new r.BufferAttribute(new Int8Array(t),e)
        }
        ,
        r.Uint8Attribute = function(t, e) {
            return new r.BufferAttribute(new Uint8Array(t),e)
        }
        ,
        r.Uint8ClampedAttribute = function(t, e) {
            return new r.BufferAttribute(new Uint8ClampedArray(t),e)
        }
        ,
        r.Int16Attribute = function(t, e) {
            return new r.BufferAttribute(new Int16Array(t),e)
        }
        ,
        r.Uint16Attribute = function(t, e) {
            return new r.BufferAttribute(new Uint16Array(t),e)
        }
        ,
        r.Int32Attribute = function(t, e) {
            return new r.BufferAttribute(new Int32Array(t),e)
        }
        ,
        r.Uint32Attribute = function(t, e) {
            return new r.BufferAttribute(new Uint32Array(t),e)
        }
        ,
        r.Float32Attribute = function(t, e) {
            return new r.BufferAttribute(new Float32Array(t),e)
        }
        ,
        r.Float64Attribute = function(t, e) {
            return new r.BufferAttribute(new Float64Array(t),e)
        }
        ,
        r.DynamicBufferAttribute = function(t, e) {
            return console.warn("THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setDynamic( true ) instead."),
            new r.BufferAttribute(t,e).setDynamic(!0)
        }
        ,
        r.InstancedBufferAttribute = function(t, e, n) {
            r.BufferAttribute.call(this, t, e),
            this.meshPerAttribute = n || 1
        }
        ,
        r.InstancedBufferAttribute.prototype = Object.create(r.BufferAttribute.prototype),
        r.InstancedBufferAttribute.prototype.constructor = r.InstancedBufferAttribute,
        r.InstancedBufferAttribute.prototype.copy = function(t) {
            return r.BufferAttribute.prototype.copy.call(this, t),
            this.meshPerAttribute = t.meshPerAttribute,
            this
        }
        ,
        r.InterleavedBuffer = function(t, e) {
            this.uuid = r.Math.generateUUID(),
            this.array = t,
            this.stride = e,
            this.dynamic = !1,
            this.updateRange = {
                offset: 0,
                count: -1
            },
            this.version = 0
        }
        ,
        r.InterleavedBuffer.prototype = {
            constructor: r.InterleavedBuffer,
            get length() {
                return this.array.length
            },
            get count() {
                return this.array.length / this.stride
            },
            set needsUpdate(t) {
                t === !0 && this.version++
            },
            setDynamic: function(t) {
                return this.dynamic = t,
                this
            },
            copy: function(t) {
                return this.array = new t.array.constructor(t.array),
                this.stride = t.stride,
                this.dynamic = t.dynamic,
                this
            },
            copyAt: function(t, e, n) {
                t *= this.stride,
                n *= e.stride;
                for (var r = 0, i = this.stride; r < i; r++)
                    this.array[t + r] = e.array[n + r];
                return this
            },
            set: function(t, e) {
                return void 0 === e && (e = 0),
                this.array.set(t, e),
                this
            },
            clone: function() {
                return (new this.constructor).copy(this)
            }
        },
        r.InstancedInterleavedBuffer = function(t, e, n) {
            r.InterleavedBuffer.call(this, t, e),
            this.meshPerAttribute = n || 1
        }
        ,
        r.InstancedInterleavedBuffer.prototype = Object.create(r.InterleavedBuffer.prototype),
        r.InstancedInterleavedBuffer.prototype.constructor = r.InstancedInterleavedBuffer,
        r.InstancedInterleavedBuffer.prototype.copy = function(t) {
            return r.InterleavedBuffer.prototype.copy.call(this, t),
            this.meshPerAttribute = t.meshPerAttribute,
            this
        }
        ,
        r.InterleavedBufferAttribute = function(t, e, n) {
            this.uuid = r.Math.generateUUID(),
            this.data = t,
            this.itemSize = e,
            this.offset = n
        }
        ,
        r.InterleavedBufferAttribute.prototype = {
            constructor: r.InterleavedBufferAttribute,
            get length() {
                return console.warn("THREE.BufferAttribute: .length has been deprecated. Please use .count."),
                this.array.length
            },
            get count() {
                return this.data.count
            },
            setX: function(t, e) {
                return this.data.array[t * this.data.stride + this.offset] = e,
                this
            },
            setY: function(t, e) {
                return this.data.array[t * this.data.stride + this.offset + 1] = e,
                this
            },
            setZ: function(t, e) {
                return this.data.array[t * this.data.stride + this.offset + 2] = e,
                this
            },
            setW: function(t, e) {
                return this.data.array[t * this.data.stride + this.offset + 3] = e,
                this
            },
            getX: function(t) {
                return this.data.array[t * this.data.stride + this.offset]
            },
            getY: function(t) {
                return this.data.array[t * this.data.stride + this.offset + 1]
            },
            getZ: function(t) {
                return this.data.array[t * this.data.stride + this.offset + 2]
            },
            getW: function(t) {
                return this.data.array[t * this.data.stride + this.offset + 3]
            },
            setXY: function(t, e, n) {
                return t = t * this.data.stride + this.offset,
                this.data.array[t + 0] = e,
                this.data.array[t + 1] = n,
                this
            },
            setXYZ: function(t, e, n, r) {
                return t = t * this.data.stride + this.offset,
                this.data.array[t + 0] = e,
                this.data.array[t + 1] = n,
                this.data.array[t + 2] = r,
                this
            },
            setXYZW: function(t, e, n, r, i) {
                return t = t * this.data.stride + this.offset,
                this.data.array[t + 0] = e,
                this.data.array[t + 1] = n,
                this.data.array[t + 2] = r,
                this.data.array[t + 3] = i,
                this
            }
        },
        r.Geometry = function() {
            Object.defineProperty(this, "id", {
                value: r.GeometryIdCount++
            }),
            this.uuid = r.Math.generateUUID(),
            this.name = "",
            this.type = "Geometry",
            this.vertices = [],
            this.colors = [],
            this.faces = [],
            this.faceVertexUvs = [[]],
            this.morphTargets = [],
            this.morphNormals = [],
            this.skinWeights = [],
            this.skinIndices = [],
            this.lineDistances = [],
            this.boundingBox = null ,
            this.boundingSphere = null ,
            this.verticesNeedUpdate = !1,
            this.elementsNeedUpdate = !1,
            this.uvsNeedUpdate = !1,
            this.normalsNeedUpdate = !1,
            this.colorsNeedUpdate = !1,
            this.lineDistancesNeedUpdate = !1,
            this.groupsNeedUpdate = !1
        }
        ,
        r.Geometry.prototype = {
            constructor: r.Geometry,
            applyMatrix: function(t) {
                for (var e = (new r.Matrix3).getNormalMatrix(t), n = 0, i = this.vertices.length; n < i; n++) {
                    var o = this.vertices[n];
                    o.applyMatrix4(t)
                }
                for (var n = 0, i = this.faces.length; n < i; n++) {
                    var a = this.faces[n];
                    a.normal.applyMatrix3(e).normalize();
                    for (var s = 0, h = a.vertexNormals.length; s < h; s++)
                        a.vertexNormals[s].applyMatrix3(e).normalize()
                }
                null !== this.boundingBox && this.computeBoundingBox(),
                null !== this.boundingSphere && this.computeBoundingSphere(),
                this.verticesNeedUpdate = !0,
                this.normalsNeedUpdate = !0
            },
            rotateX: function() {
                var t;
                return function(e) {
                    return void 0 === t && (t = new r.Matrix4),
                    t.makeRotationX(e),
                    this.applyMatrix(t),
                    this
                }
            }(),
            rotateY: function() {
                var t;
                return function(e) {
                    return void 0 === t && (t = new r.Matrix4),
                    t.makeRotationY(e),
                    this.applyMatrix(t),
                    this
                }
            }(),
            rotateZ: function() {
                var t;
                return function(e) {
                    return void 0 === t && (t = new r.Matrix4),
                    t.makeRotationZ(e),
                    this.applyMatrix(t),
                    this
                }
            }(),
            translate: function() {
                var t;
                return function(e, n, i) {
                    return void 0 === t && (t = new r.Matrix4),
                    t.makeTranslation(e, n, i),
                    this.applyMatrix(t),
                    this
                }
            }(),
            scale: function() {
                var t;
                return function(e, n, i) {
                    return void 0 === t && (t = new r.Matrix4),
                    t.makeScale(e, n, i),
                    this.applyMatrix(t),
                    this
                }
            }(),
            lookAt: function() {
                var t;
                return function(e) {
                    void 0 === t && (t = new r.Object3D),
                    t.lookAt(e),
                    t.updateMatrix(),
                    this.applyMatrix(t.matrix)
                }
            }(),
            fromBufferGeometry: function(t) {
                function e(t, e, i) {
                    var o = void 0 !== s ? [c[t].clone(), c[e].clone(), c[i].clone()] : []
                      , a = void 0 !== h ? [n.colors[t].clone(), n.colors[e].clone(), n.colors[i].clone()] : []
                      , d = new r.Face3(t,e,i,o,a);
                    n.faces.push(d),
                    void 0 !== u && n.faceVertexUvs[0].push([p[t].clone(), p[e].clone(), p[i].clone()]),
                    void 0 !== l && n.faceVertexUvs[1].push([f[t].clone(), f[e].clone(), f[i].clone()])
                }
                var n = this
                  , i = null !== t.index ? t.index.array : void 0
                  , o = t.attributes
                  , a = o.position.array
                  , s = void 0 !== o.normal ? o.normal.array : void 0
                  , h = void 0 !== o.color ? o.color.array : void 0
                  , u = void 0 !== o.uv ? o.uv.array : void 0
                  , l = void 0 !== o.uv2 ? o.uv2.array : void 0;
                void 0 !== l && (this.faceVertexUvs[1] = []);
                for (var c = [], p = [], f = [], d = 0, m = 0; d < a.length; d += 3,
                m += 2)
                    n.vertices.push(new r.Vector3(a[d],a[d + 1],a[d + 2])),
                    void 0 !== s && c.push(new r.Vector3(s[d],s[d + 1],s[d + 2])),
                    void 0 !== h && n.colors.push(new r.Color(h[d],h[d + 1],h[d + 2])),
                    void 0 !== u && p.push(new r.Vector2(u[m],u[m + 1])),
                    void 0 !== l && f.push(new r.Vector2(l[m],l[m + 1]));
                if (void 0 !== i) {
                    var v = t.groups;
                    if (v.length > 0)
                        for (var d = 0; d < v.length; d++)
                            for (var g = v[d], y = g.start, _ = g.count, m = y, x = y + _; m < x; m += 3)
                                e(i[m], i[m + 1], i[m + 2]);
                    else
                        for (var d = 0; d < i.length; d += 3)
                            e(i[d], i[d + 1], i[d + 2])
                } else
                    for (var d = 0; d < a.length / 3; d += 3)
                        e(d, d + 1, d + 2);
                return this.computeFaceNormals(),
                null !== t.boundingBox && (this.boundingBox = t.boundingBox.clone()),
                null !== t.boundingSphere && (this.boundingSphere = t.boundingSphere.clone()),
                this
            },
            center: function() {
                this.computeBoundingBox();
                var t = this.boundingBox.center().negate();
                return this.translate(t.x, t.y, t.z),
                t
            },
            normalize: function() {
                this.computeBoundingSphere();
                var t = this.boundingSphere.center
                  , e = this.boundingSphere.radius
                  , n = 0 === e ? 1 : 1 / e
                  , i = new r.Matrix4;
                return i.set(n, 0, 0, -n * t.x, 0, n, 0, -n * t.y, 0, 0, n, -n * t.z, 0, 0, 0, 1),
                this.applyMatrix(i),
                this
            },
            computeFaceNormals: function() {
                for (var t = new r.Vector3, e = new r.Vector3, n = 0, i = this.faces.length; n < i; n++) {
                    var o = this.faces[n]
                      , a = this.vertices[o.a]
                      , s = this.vertices[o.b]
                      , h = this.vertices[o.c];
                    t.subVectors(h, s),
                    e.subVectors(a, s),
                    t.cross(e),
                    t.normalize(),
                    o.normal.copy(t)
                }
            },
            computeVertexNormals: function(t) {
                void 0 === t && (t = !0);
                var e, n, i, o, a, s;
                for (s = new Array(this.vertices.length),
                e = 0,
                n = this.vertices.length; e < n; e++)
                    s[e] = new r.Vector3;
                if (t) {
                    var h, u, l, c = new r.Vector3, p = new r.Vector3;
                    for (i = 0,
                    o = this.faces.length; i < o; i++)
                        a = this.faces[i],
                        h = this.vertices[a.a],
                        u = this.vertices[a.b],
                        l = this.vertices[a.c],
                        c.subVectors(l, u),
                        p.subVectors(h, u),
                        c.cross(p),
                        s[a.a].add(c),
                        s[a.b].add(c),
                        s[a.c].add(c)
                } else
                    for (i = 0,
                    o = this.faces.length; i < o; i++)
                        a = this.faces[i],
                        s[a.a].add(a.normal),
                        s[a.b].add(a.normal),
                        s[a.c].add(a.normal);
                for (e = 0,
                n = this.vertices.length; e < n; e++)
                    s[e].normalize();
                for (i = 0,
                o = this.faces.length; i < o; i++) {
                    a = this.faces[i];
                    var f = a.vertexNormals;
                    3 === f.length ? (f[0].copy(s[a.a]),
                    f[1].copy(s[a.b]),
                    f[2].copy(s[a.c])) : (f[0] = s[a.a].clone(),
                    f[1] = s[a.b].clone(),
                    f[2] = s[a.c].clone())
                }
                this.faces.length > 0 && (this.normalsNeedUpdate = !0)
            },
            computeMorphNormals: function() {
                var t, e, n, i, o;
                for (n = 0,
                i = this.faces.length; n < i; n++)
                    for (o = this.faces[n],
                    o.__originalFaceNormal ? o.__originalFaceNormal.copy(o.normal) : o.__originalFaceNormal = o.normal.clone(),
                    o.__originalVertexNormals || (o.__originalVertexNormals = []),
                    t = 0,
                    e = o.vertexNormals.length; t < e; t++)
                        o.__originalVertexNormals[t] ? o.__originalVertexNormals[t].copy(o.vertexNormals[t]) : o.__originalVertexNormals[t] = o.vertexNormals[t].clone();
                var a = new r.Geometry;
                for (a.faces = this.faces,
                t = 0,
                e = this.morphTargets.length; t < e; t++) {
                    if (!this.morphNormals[t]) {
                        this.morphNormals[t] = {},
                        this.morphNormals[t].faceNormals = [],
                        this.morphNormals[t].vertexNormals = [];
                        var s, h, u = this.morphNormals[t].faceNormals, l = this.morphNormals[t].vertexNormals;
                        for (n = 0,
                        i = this.faces.length; n < i; n++)
                            s = new r.Vector3,
                            h = {
                                a: new r.Vector3,
                                b: new r.Vector3,
                                c: new r.Vector3
                            },
                            u.push(s),
                            l.push(h)
                    }
                    var c = this.morphNormals[t];
                    a.vertices = this.morphTargets[t].vertices,
                    a.computeFaceNormals(),
                    a.computeVertexNormals();
                    var s, h;
                    for (n = 0,
                    i = this.faces.length; n < i; n++)
                        o = this.faces[n],
                        s = c.faceNormals[n],
                        h = c.vertexNormals[n],
                        s.copy(o.normal),
                        h.a.copy(o.vertexNormals[0]),
                        h.b.copy(o.vertexNormals[1]),
                        h.c.copy(o.vertexNormals[2])
                }
                for (n = 0,
                i = this.faces.length; n < i; n++)
                    o = this.faces[n],
                    o.normal = o.__originalFaceNormal,
                    o.vertexNormals = o.__originalVertexNormals
            },
            computeTangents: function() {
                console.warn("THREE.Geometry: .computeTangents() has been removed.")
            },
            computeLineDistances: function() {
                for (var t = 0, e = this.vertices, n = 0, r = e.length; n < r; n++)
                    n > 0 && (t += e[n].distanceTo(e[n - 1])),
                    this.lineDistances[n] = t
            },
            computeBoundingBox: function() {
                null === this.boundingBox && (this.boundingBox = new r.Box3),
                this.boundingBox.setFromPoints(this.vertices)
            },
            computeBoundingSphere: function() {
                null === this.boundingSphere && (this.boundingSphere = new r.Sphere),
                this.boundingSphere.setFromPoints(this.vertices)
            },
            merge: function(t, e, n) {
                if (t instanceof r.Geometry == !1)
                    return void console.error("THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.", t);
                var i, o = this.vertices.length, a = this.vertices, s = t.vertices, h = this.faces, u = t.faces, l = this.faceVertexUvs[0], c = t.faceVertexUvs[0];
                void 0 === n && (n = 0),
                void 0 !== e && (i = (new r.Matrix3).getNormalMatrix(e));
                for (var p = 0, f = s.length; p < f; p++) {
                    var d = s[p]
                      , m = d.clone();
                    void 0 !== e && m.applyMatrix4(e),
                    a.push(m)
                }
                for (p = 0,
                f = u.length; p < f; p++) {
                    var v, g, y, _ = u[p], x = _.vertexNormals, b = _.vertexColors;
                    v = new r.Face3(_.a + o,_.b + o,_.c + o),
                    v.normal.copy(_.normal),
                    void 0 !== i && v.normal.applyMatrix3(i).normalize();
                    for (var w = 0, E = x.length; w < E; w++)
                        g = x[w].clone(),
                        void 0 !== i && g.applyMatrix3(i).normalize(),
                        v.vertexNormals.push(g);
                    v.color.copy(_.color);
                    for (var w = 0, E = b.length; w < E; w++)
                        y = b[w],
                        v.vertexColors.push(y.clone());
                    v.materialIndex = _.materialIndex + n,
                    h.push(v)
                }
                for (p = 0,
                f = c.length; p < f; p++) {
                    var S = c[p]
                      , T = [];
                    if (void 0 !== S) {
                        for (var w = 0, E = S.length; w < E; w++)
                            T.push(S[w].clone());
                        l.push(T)
                    }
                }
            },
            mergeMesh: function(t) {
                return t instanceof r.Mesh == !1 ? void console.error("THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.", t) : (t.matrixAutoUpdate && t.updateMatrix(),
                void this.merge(t.geometry, t.matrix))
            },
            mergeVertices: function() {
                var t, e, n, r, i, o, a, s, h = {}, u = [], l = [], c = 4, p = Math.pow(10, c);
                for (n = 0,
                r = this.vertices.length; n < r; n++)
                    t = this.vertices[n],
                    e = Math.round(t.x * p) + "_" + Math.round(t.y * p) + "_" + Math.round(t.z * p),
                    void 0 === h[e] ? (h[e] = n,
                    u.push(this.vertices[n]),
                    l[n] = u.length - 1) : l[n] = l[h[e]];
                var f = [];
                for (n = 0,
                r = this.faces.length; n < r; n++) {
                    i = this.faces[n],
                    i.a = l[i.a],
                    i.b = l[i.b],
                    i.c = l[i.c],
                    o = [i.a, i.b, i.c];
                    for (var d = -1, m = 0; m < 3; m++)
                        if (o[m] === o[(m + 1) % 3]) {
                            d = m,
                            f.push(n);
                            break
                        }
                }
                for (n = f.length - 1; n >= 0; n--) {
                    var v = f[n];
                    for (this.faces.splice(v, 1),
                    a = 0,
                    s = this.faceVertexUvs.length; a < s; a++)
                        this.faceVertexUvs[a].splice(v, 1)
                }
                var g = this.vertices.length - u.length;
                return this.vertices = u,
                g
            },
            sortFacesByMaterialIndex: function() {
                function t(t, e) {
                    return t.materialIndex - e.materialIndex
                }
                for (var e = this.faces, n = e.length, r = 0; r < n; r++)
                    e[r]._id = r;
                e.sort(t);
                var i, o, a = this.faceVertexUvs[0], s = this.faceVertexUvs[1];
                a && a.length === n && (i = []),
                s && s.length === n && (o = []);
                for (var r = 0; r < n; r++) {
                    var h = e[r]._id;
                    i && i.push(a[h]),
                    o && o.push(s[h])
                }
                i && (this.faceVertexUvs[0] = i),
                o && (this.faceVertexUvs[1] = o)
            },
            toJSON: function() {
                function t(t, e, n) {
                    return n ? t | 1 << e : t & ~(1 << e)
                }
                function e(t) {
                    var e = t.x.toString() + t.y.toString() + t.z.toString();
                    return void 0 !== p[e] ? p[e] : (p[e] = c.length / 3,
                    c.push(t.x, t.y, t.z),
                    p[e])
                }
                function n(t) {
                    var e = t.r.toString() + t.g.toString() + t.b.toString();
                    return void 0 !== d[e] ? d[e] : (d[e] = f.length,
                    f.push(t.getHex()),
                    d[e])
                }
                function r(t) {
                    var e = t.x.toString() + t.y.toString();
                    return void 0 !== v[e] ? v[e] : (v[e] = m.length / 2,
                    m.push(t.x, t.y),
                    v[e])
                }
                var i = {
                    metadata: {
                        version: 4.4,
                        type: "Geometry",
                        generator: "Geometry.toJSON"
                    }
                };
                if (i.uuid = this.uuid,
                i.type = this.type,
                "" !== this.name && (i.name = this.name),
                void 0 !== this.parameters) {
                    var o = this.parameters;
                    for (var a in o)
                        void 0 !== o[a] && (i[a] = o[a]);
                    return i
                }
                for (var s = [], h = 0; h < this.vertices.length; h++) {
                    var u = this.vertices[h];
                    s.push(u.x, u.y, u.z)
                }
                for (var l = [], c = [], p = {}, f = [], d = {}, m = [], v = {}, h = 0; h < this.faces.length; h++) {
                    var g = this.faces[h]
                      , y = !0
                      , _ = !1
                      , x = void 0 !== this.faceVertexUvs[0][h]
                      , b = g.normal.length() > 0
                      , w = g.vertexNormals.length > 0
                      , E = 1 !== g.color.r || 1 !== g.color.g || 1 !== g.color.b
                      , S = g.vertexColors.length > 0
                      , T = 0;
                    if (T = t(T, 0, 0),
                    T = t(T, 1, y),
                    T = t(T, 2, _),
                    T = t(T, 3, x),
                    T = t(T, 4, b),
                    T = t(T, 5, w),
                    T = t(T, 6, E),
                    T = t(T, 7, S),
                    l.push(T),
                    l.push(g.a, g.b, g.c),
                    l.push(g.materialIndex),
                    x) {
                        var M = this.faceVertexUvs[0][h];
                        l.push(r(M[0]), r(M[1]), r(M[2]))
                    }
                    if (b && l.push(e(g.normal)),
                    w) {
                        var C = g.vertexNormals;
                        l.push(e(C[0]), e(C[1]), e(C[2]))
                    }
                    if (E && l.push(n(g.color)),
                    S) {
                        var A = g.vertexColors;
                        l.push(n(A[0]), n(A[1]), n(A[2]))
                    }
                }
                return i.data = {},
                i.data.vertices = s,
                i.data.normals = c,
                f.length > 0 && (i.data.colors = f),
                m.length > 0 && (i.data.uvs = [m]),
                i.data.faces = l,
                i
            },
            clone: function() {
                return (new r.Geometry).copy(this)
            },
            copy: function(t) {
                this.vertices = [],
                this.faces = [],
                this.faceVertexUvs = [[]];
                for (var e = t.vertices, n = 0, r = e.length; n < r; n++)
                    this.vertices.push(e[n].clone());
                for (var i = t.faces, n = 0, r = i.length; n < r; n++)
                    this.faces.push(i[n].clone());
                for (var n = 0, r = t.faceVertexUvs.length; n < r; n++) {
                    var o = t.faceVertexUvs[n];
                    void 0 === this.faceVertexUvs[n] && (this.faceVertexUvs[n] = []);
                    for (var a = 0, s = o.length; a < s; a++) {
                        for (var h = o[a], u = [], l = 0, c = h.length; l < c; l++) {
                            var p = h[l];
                            u.push(p.clone())
                        }
                        this.faceVertexUvs[n].push(u)
                    }
                }
                return this
            },
            dispose: function() {
                this.dispatchEvent({
                    type: "dispose"
                })
            }
        },
        r.EventDispatcher.prototype.apply(r.Geometry.prototype),
        r.GeometryIdCount = 0,
        r.DirectGeometry = function() {
            Object.defineProperty(this, "id", {
                value: r.GeometryIdCount++
            }),
            this.uuid = r.Math.generateUUID(),
            this.name = "",
            this.type = "DirectGeometry",
            this.indices = [],
            this.vertices = [],
            this.normals = [],
            this.colors = [],
            this.uvs = [],
            this.uvs2 = [],
            this.groups = [],
            this.morphTargets = {},
            this.skinWeights = [],
            this.skinIndices = [],
            this.boundingBox = null ,
            this.boundingSphere = null ,
            this.verticesNeedUpdate = !1,
            this.normalsNeedUpdate = !1,
            this.colorsNeedUpdate = !1,
            this.uvsNeedUpdate = !1,
            this.groupsNeedUpdate = !1
        }
        ,
        r.DirectGeometry.prototype = {
            constructor: r.DirectGeometry,
            computeBoundingBox: r.Geometry.prototype.computeBoundingBox,
            computeBoundingSphere: r.Geometry.prototype.computeBoundingSphere,
            computeFaceNormals: function() {
                console.warn("THREE.DirectGeometry: computeFaceNormals() is not a method of this type of geometry.")
            },
            computeVertexNormals: function() {
                console.warn("THREE.DirectGeometry: computeVertexNormals() is not a method of this type of geometry.")
            },
            computeGroups: function(t) {
                for (var e, n, r = [], i = t.faces, o = 0; o < i.length; o++) {
                    var a = i[o];
                    a.materialIndex !== n && (n = a.materialIndex,
                    void 0 !== e && (e.count = 3 * o - e.start,
                    r.push(e)),
                    e = {
                        start: 3 * o,
                        materialIndex: n
                    })
                }
                void 0 !== e && (e.count = 3 * o - e.start,
                r.push(e)),
                this.groups = r
            },
            fromGeometry: function(t) {
                var e, n = t.faces, i = t.vertices, o = t.faceVertexUvs, a = o[0] && o[0].length > 0, s = o[1] && o[1].length > 0, h = t.morphTargets, u = h.length;
                if (u > 0) {
                    e = [];
                    for (var l = 0; l < u; l++)
                        e[l] = [];
                    this.morphTargets.position = e
                }
                var c, p = t.morphNormals, f = p.length;
                if (f > 0) {
                    c = [];
                    for (var l = 0; l < f; l++)
                        c[l] = [];
                    this.morphTargets.normal = c
                }
                for (var d = t.skinIndices, m = t.skinWeights, v = d.length === i.length, g = m.length === i.length, l = 0; l < n.length; l++) {
                    var y = n[l];
                    this.vertices.push(i[y.a], i[y.b], i[y.c]);
                    var _ = y.vertexNormals;
                    if (3 === _.length)
                        this.normals.push(_[0], _[1], _[2]);
                    else {
                        var x = y.normal;
                        this.normals.push(x, x, x)
                    }
                    var b = y.vertexColors;
                    if (3 === b.length)
                        this.colors.push(b[0], b[1], b[2]);
                    else {
                        var w = y.color;
                        this.colors.push(w, w, w)
                    }
                    if (a === !0) {
                        var E = o[0][l];
                        void 0 !== E ? this.uvs.push(E[0], E[1], E[2]) : (console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ", l),
                        this.uvs.push(new r.Vector2, new r.Vector2, new r.Vector2))
                    }
                    if (s === !0) {
                        var E = o[1][l];
                        void 0 !== E ? this.uvs2.push(E[0], E[1], E[2]) : (console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ", l),
                        this.uvs2.push(new r.Vector2, new r.Vector2, new r.Vector2))
                    }
                    for (var S = 0; S < u; S++) {
                        var T = h[S].vertices;
                        e[S].push(T[y.a], T[y.b], T[y.c])
                    }
                    for (var S = 0; S < f; S++) {
                        var M = p[S].vertexNormals[l];
                        c[S].push(M.a, M.b, M.c)
                    }
                    v && this.skinIndices.push(d[y.a], d[y.b], d[y.c]),
                    g && this.skinWeights.push(m[y.a], m[y.b], m[y.c])
                }
                return this.computeGroups(t),
                this.verticesNeedUpdate = t.verticesNeedUpdate,
                this.normalsNeedUpdate = t.normalsNeedUpdate,
                this.colorsNeedUpdate = t.colorsNeedUpdate,
                this.uvsNeedUpdate = t.uvsNeedUpdate,
                this.groupsNeedUpdate = t.groupsNeedUpdate,
                this
            },
            dispose: function() {
                this.dispatchEvent({
                    type: "dispose"
                })
            }
        },
        r.EventDispatcher.prototype.apply(r.DirectGeometry.prototype),
        r.BufferGeometry = function() {
            Object.defineProperty(this, "id", {
                value: r.GeometryIdCount++
            }),
            this.uuid = r.Math.generateUUID(),
            this.name = "",
            this.type = "BufferGeometry",
            this.index = null ,
            this.attributes = {},
            this.morphAttributes = {},
            this.groups = [],
            this.boundingBox = null ,
            this.boundingSphere = null ,
            this.drawRange = {
                start: 0,
                count: 1 / 0
            }
        }
        ,
        r.BufferGeometry.prototype = {
            constructor: r.BufferGeometry,
            getIndex: function() {
                return this.index
            },
            setIndex: function(t) {
                this.index = t
            },
            addAttribute: function(t, e) {
                return e instanceof r.BufferAttribute == !1 && e instanceof r.InterleavedBufferAttribute == !1 ? (console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."),
                void this.addAttribute(t, new r.BufferAttribute(arguments[1],arguments[2]))) : "index" === t ? (console.warn("THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute."),
                void this.setIndex(e)) : (this.attributes[t] = e,
                this)
            },
            getAttribute: function(t) {
                return this.attributes[t]
            },
            removeAttribute: function(t) {
                return delete this.attributes[t],
                this
            },
            addGroup: function(t, e, n) {
                this.groups.push({
                    start: t,
                    count: e,
                    materialIndex: void 0 !== n ? n : 0
                })
            },
            clearGroups: function() {
                this.groups = []
            },
            setDrawRange: function(t, e) {
                this.drawRange.start = t,
                this.drawRange.count = e
            },
            applyMatrix: function(t) {
                var e = this.attributes.position;
                void 0 !== e && (t.applyToVector3Array(e.array),
                e.needsUpdate = !0);
                var n = this.attributes.normal;
                if (void 0 !== n) {
                    var i = (new r.Matrix3).getNormalMatrix(t);
                    i.applyToVector3Array(n.array),
                    n.needsUpdate = !0
                }
                null !== this.boundingBox && this.computeBoundingBox(),
                null !== this.boundingSphere && this.computeBoundingSphere()
            },
            rotateX: function() {
                var t;
                return function(e) {
                    return void 0 === t && (t = new r.Matrix4),
                    t.makeRotationX(e),
                    this.applyMatrix(t),
                    this
                }
            }(),
            rotateY: function() {
                var t;
                return function(e) {
                    return void 0 === t && (t = new r.Matrix4),
                    t.makeRotationY(e),
                    this.applyMatrix(t),
                    this
                }
            }(),
            rotateZ: function() {
                var t;
                return function(e) {
                    return void 0 === t && (t = new r.Matrix4),
                    t.makeRotationZ(e),
                    this.applyMatrix(t),
                    this
                }
            }(),
            translate: function() {
                var t;
                return function(e, n, i) {
                    return void 0 === t && (t = new r.Matrix4),
                    t.makeTranslation(e, n, i),
                    this.applyMatrix(t),
                    this
                }
            }(),
            scale: function() {
                var t;
                return function(e, n, i) {
                    return void 0 === t && (t = new r.Matrix4),
                    t.makeScale(e, n, i),
                    this.applyMatrix(t),
                    this
                }
            }(),
            lookAt: function() {
                var t;
                return function(e) {
                    void 0 === t && (t = new r.Object3D),
                    t.lookAt(e),
                    t.updateMatrix(),
                    this.applyMatrix(t.matrix)
                }
            }(),
            center: function() {
                this.computeBoundingBox();
                var t = this.boundingBox.center().negate();
                return this.translate(t.x, t.y, t.z),
                t
            },
            setFromObject: function(t) {
                var e = t.geometry;
                if (t instanceof r.Points || t instanceof r.Line) {
                    var n = new r.Float32Attribute(3 * e.vertices.length,3)
                      , i = new r.Float32Attribute(3 * e.colors.length,3);
                    if (this.addAttribute("position", n.copyVector3sArray(e.vertices)),
                    this.addAttribute("color", i.copyColorsArray(e.colors)),
                    e.lineDistances && e.lineDistances.length === e.vertices.length) {
                        var o = new r.Float32Attribute(e.lineDistances.length,1);
                        this.addAttribute("lineDistance", o.copyArray(e.lineDistances))
                    }
                    null !== e.boundingSphere && (this.boundingSphere = e.boundingSphere.clone()),
                    null !== e.boundingBox && (this.boundingBox = e.boundingBox.clone())
                } else
                    t instanceof r.Mesh && e instanceof r.Geometry && this.fromGeometry(e);
                return this
            },
            updateFromObject: function(t) {
                var e = t.geometry;
                if (t instanceof r.Mesh) {
                    var n = e.__directGeometry;
                    if (void 0 === n)
                        return this.fromGeometry(e);
                    n.verticesNeedUpdate = e.verticesNeedUpdate,
                    n.normalsNeedUpdate = e.normalsNeedUpdate,
                    n.colorsNeedUpdate = e.colorsNeedUpdate,
                    n.uvsNeedUpdate = e.uvsNeedUpdate,
                    n.groupsNeedUpdate = e.groupsNeedUpdate,
                    e.verticesNeedUpdate = !1,
                    e.normalsNeedUpdate = !1,
                    e.colorsNeedUpdate = !1,
                    e.uvsNeedUpdate = !1,
                    e.groupsNeedUpdate = !1,
                    e = n
                }
                if (e.verticesNeedUpdate === !0) {
                    var i = this.attributes.position;
                    void 0 !== i && (i.copyVector3sArray(e.vertices),
                    i.needsUpdate = !0),
                    e.verticesNeedUpdate = !1
                }
                if (e.normalsNeedUpdate === !0) {
                    var i = this.attributes.normal;
                    void 0 !== i && (i.copyVector3sArray(e.normals),
                    i.needsUpdate = !0),
                    e.normalsNeedUpdate = !1
                }
                if (e.colorsNeedUpdate === !0) {
                    var i = this.attributes.color;
                    void 0 !== i && (i.copyColorsArray(e.colors),
                    i.needsUpdate = !0),
                    e.colorsNeedUpdate = !1
                }
                if (e.uvsNeedUpdate) {
                    var i = this.attributes.uv;
                    void 0 !== i && (i.copyVector2sArray(e.uvs),
                    i.needsUpdate = !0),
                    e.uvsNeedUpdate = !1
                }
                if (e.lineDistancesNeedUpdate) {
                    var i = this.attributes.lineDistance;
                    void 0 !== i && (i.copyArray(e.lineDistances),
                    i.needsUpdate = !0),
                    e.lineDistancesNeedUpdate = !1
                }
                return e.groupsNeedUpdate && (e.computeGroups(t.geometry),
                this.groups = e.groups,
                e.groupsNeedUpdate = !1),
                this
            },
            fromGeometry: function(t) {
                return t.__directGeometry = (new r.DirectGeometry).fromGeometry(t),
                this.fromDirectGeometry(t.__directGeometry)
            },
            fromDirectGeometry: function(t) {
                var e = new Float32Array(3 * t.vertices.length);
                if (this.addAttribute("position", new r.BufferAttribute(e,3).copyVector3sArray(t.vertices)),
                t.normals.length > 0) {
                    var n = new Float32Array(3 * t.normals.length);
                    this.addAttribute("normal", new r.BufferAttribute(n,3).copyVector3sArray(t.normals))
                }
                if (t.colors.length > 0) {
                    var i = new Float32Array(3 * t.colors.length);
                    this.addAttribute("color", new r.BufferAttribute(i,3).copyColorsArray(t.colors))
                }
                if (t.uvs.length > 0) {
                    var o = new Float32Array(2 * t.uvs.length);
                    this.addAttribute("uv", new r.BufferAttribute(o,2).copyVector2sArray(t.uvs))
                }
                if (t.uvs2.length > 0) {
                    var a = new Float32Array(2 * t.uvs2.length);
                    this.addAttribute("uv2", new r.BufferAttribute(a,2).copyVector2sArray(t.uvs2))
                }
                if (t.indices.length > 0) {
                    var s = t.vertices.length > 65535 ? Uint32Array : Uint16Array
                      , h = new s(3 * t.indices.length);
                    this.setIndex(new r.BufferAttribute(h,1).copyIndicesArray(t.indices))
                }
                this.groups = t.groups;
                for (var u in t.morphTargets) {
                    for (var l = [], c = t.morphTargets[u], p = 0, f = c.length; p < f; p++) {
                        var d = c[p]
                          , m = new r.Float32Attribute(3 * d.length,3);
                        l.push(m.copyVector3sArray(d))
                    }
                    this.morphAttributes[u] = l
                }
                if (t.skinIndices.length > 0) {
                    var v = new r.Float32Attribute(4 * t.skinIndices.length,4);
                    this.addAttribute("skinIndex", v.copyVector4sArray(t.skinIndices))
                }
                if (t.skinWeights.length > 0) {
                    var g = new r.Float32Attribute(4 * t.skinWeights.length,4);
                    this.addAttribute("skinWeight", g.copyVector4sArray(t.skinWeights))
                }
                return null !== t.boundingSphere && (this.boundingSphere = t.boundingSphere.clone()),
                null !== t.boundingBox && (this.boundingBox = t.boundingBox.clone()),
                this
            },
            computeBoundingBox: function() {
                new r.Vector3;
                return function() {
                    null === this.boundingBox && (this.boundingBox = new r.Box3);
                    var t = this.attributes.position.array;
                    t && this.boundingBox.setFromArray(t),
                    void 0 !== t && 0 !== t.length || (this.boundingBox.min.set(0, 0, 0),
                    this.boundingBox.max.set(0, 0, 0)),
                    (isNaN(this.boundingBox.min.x) || isNaN(this.boundingBox.min.y) || isNaN(this.boundingBox.min.z)) && console.error('THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The "position" attribute is likely to have NaN values.', this)
                }
            }(),
            computeBoundingSphere: function() {
                var t = new r.Box3
                  , e = new r.Vector3;
                return function() {
                    null === this.boundingSphere && (this.boundingSphere = new r.Sphere);
                    var n = this.attributes.position.array;
                    if (n) {
                        var i = this.boundingSphere.center;
                        t.setFromArray(n),
                        t.center(i);
                        for (var o = 0, a = 0, s = n.length; a < s; a += 3)
                            e.fromArray(n, a),
                            o = Math.max(o, i.distanceToSquared(e));
                        this.boundingSphere.radius = Math.sqrt(o),
                        isNaN(this.boundingSphere.radius) && console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.', this)
                    }
                }
            }(),
            computeFaceNormals: function() {},
            computeVertexNormals: function() {
                var t = this.index
                  , e = this.attributes
                  , n = this.groups;
                if (e.position) {
                    var i = e.position.array;
                    if (void 0 === e.normal)
                        this.addAttribute("normal", new r.BufferAttribute(new Float32Array(i.length),3));
                    else
                        for (var o = e.normal.array, a = 0, s = o.length; a < s; a++)
                            o[a] = 0;
                    var h, u, l, c = e.normal.array, p = new r.Vector3, f = new r.Vector3, d = new r.Vector3, m = new r.Vector3, v = new r.Vector3;
                    if (t) {
                        var g = t.array;
                        0 === n.length && this.addGroup(0, g.length);
                        for (var y = 0, _ = n.length; y < _; ++y)
                            for (var x = n[y], b = x.start, w = x.count, a = b, s = b + w; a < s; a += 3)
                                h = 3 * g[a + 0],
                                u = 3 * g[a + 1],
                                l = 3 * g[a + 2],
                                p.fromArray(i, h),
                                f.fromArray(i, u),
                                d.fromArray(i, l),
                                m.subVectors(d, f),
                                v.subVectors(p, f),
                                m.cross(v),
                                c[h] += m.x,
                                c[h + 1] += m.y,
                                c[h + 2] += m.z,
                                c[u] += m.x,
                                c[u + 1] += m.y,
                                c[u + 2] += m.z,
                                c[l] += m.x,
                                c[l + 1] += m.y,
                                c[l + 2] += m.z
                    } else
                        for (var a = 0, s = i.length; a < s; a += 9)
                            p.fromArray(i, a),
                            f.fromArray(i, a + 3),
                            d.fromArray(i, a + 6),
                            m.subVectors(d, f),
                            v.subVectors(p, f),
                            m.cross(v),
                            c[a] = m.x,
                            c[a + 1] = m.y,
                            c[a + 2] = m.z,
                            c[a + 3] = m.x,
                            c[a + 4] = m.y,
                            c[a + 5] = m.z,
                            c[a + 6] = m.x,
                            c[a + 7] = m.y,
                            c[a + 8] = m.z;
                    this.normalizeNormals(),
                    e.normal.needsUpdate = !0
                }
            },
            merge: function(t, e) {
                if (t instanceof r.BufferGeometry == !1)
                    return void console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.", t);
                void 0 === e && (e = 0);
                var n = this.attributes;
                for (var i in n)
                    if (void 0 !== t.attributes[i])
                        for (var o = n[i], a = o.array, s = t.attributes[i], h = s.array, u = s.itemSize, l = 0, c = u * e; l < h.length; l++,
                        c++)
                            a[c] = h[l];
                return this
            },
            normalizeNormals: function() {
                for (var t, e, n, r, i = this.attributes.normal.array, o = 0, a = i.length; o < a; o += 3)
                    t = i[o],
                    e = i[o + 1],
                    n = i[o + 2],
                    r = 1 / Math.sqrt(t * t + e * e + n * n),
                    i[o] *= r,
                    i[o + 1] *= r,
                    i[o + 2] *= r
            },
            toNonIndexed: function() {
                if (null === this.index)
                    return console.warn("THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed."),
                    this;
                var t = new r.BufferGeometry
                  , e = this.index.array
                  , n = this.attributes;
                for (var i in n) {
                    for (var o = n[i], a = o.array, s = o.itemSize, h = new a.constructor(e.length * s), u = 0, l = 0, c = 0, p = e.length; c < p; c++) {
                        u = e[c] * s;
                        for (var f = 0; f < s; f++)
                            h[l++] = a[u++]
                    }
                    t.addAttribute(i, new r.BufferAttribute(h,s))
                }
                return t
            },
            toJSON: function() {
                var t = {
                    metadata: {
                        version: 4.4,
                        type: "BufferGeometry",
                        generator: "BufferGeometry.toJSON"
                    }
                };
                if (t.uuid = this.uuid,
                t.type = this.type,
                "" !== this.name && (t.name = this.name),
                void 0 !== this.parameters) {
                    var e = this.parameters;
                    for (var n in e)
                        void 0 !== e[n] && (t[n] = e[n]);
                    return t
                }
                t.data = {
                    attributes: {}
                };
                var r = this.index;
                if (null !== r) {
                    var i = Array.prototype.slice.call(r.array);
                    t.data.index = {
                        type: r.array.constructor.name,
                        array: i
                    }
                }
                var o = this.attributes;
                for (var n in o) {
                    var a = o[n]
                      , i = Array.prototype.slice.call(a.array);
                    t.data.attributes[n] = {
                        itemSize: a.itemSize,
                        type: a.array.constructor.name,
                        array: i
                    }
                }
                var s = this.groups;
                s.length > 0 && (t.data.groups = JSON.parse(JSON.stringify(s)));
                var h = this.boundingSphere;
                return null !== h && (t.data.boundingSphere = {
                    center: h.center.toArray(),
                    radius: h.radius
                }),
                t
            },
            clone: function() {
                return (new r.BufferGeometry).copy(this)
            },
            copy: function(t) {
                var e = t.index;
                null !== e && this.setIndex(e.clone());
                var n = t.attributes;
                for (var r in n) {
                    var i = n[r];
                    this.addAttribute(r, i.clone())
                }
                for (var o = t.groups, a = 0, s = o.length; a < s; a++) {
                    var h = o[a];
                    this.addGroup(h.start, h.count)
                }
                return this
            },
            dispose: function() {
                this.dispatchEvent({
                    type: "dispose"
                })
            }
        },
        r.EventDispatcher.prototype.apply(r.BufferGeometry.prototype),
        r.BufferGeometry.MaxIndex = 65535,
        r.InstancedBufferGeometry = function() {
            r.BufferGeometry.call(this),
            this.type = "InstancedBufferGeometry",
            this.maxInstancedCount = void 0
        }
        ,
        r.InstancedBufferGeometry.prototype = Object.create(r.BufferGeometry.prototype),
        r.InstancedBufferGeometry.prototype.constructor = r.InstancedBufferGeometry,
        r.InstancedBufferGeometry.prototype.addGroup = function(t, e, n) {
            this.groups.push({
                start: t,
                count: e,
                instances: n
            })
        }
        ,
        r.InstancedBufferGeometry.prototype.copy = function(t) {
            var e = t.index;
            null !== e && this.setIndex(e.clone());
            var n = t.attributes;
            for (var r in n) {
                var i = n[r];
                this.addAttribute(r, i.clone())
            }
            for (var o = t.groups, a = 0, s = o.length; a < s; a++) {
                var h = o[a];
                this.addGroup(h.start, h.count, h.instances)
            }
            return this
        }
        ,
        r.EventDispatcher.prototype.apply(r.InstancedBufferGeometry.prototype),
        r.Uniform = function(t, e) {
            this.type = t,
            this.value = e,
            this.dynamic = !1
        }
        ,
        r.Uniform.prototype = {
            constructor: r.Uniform,
            onUpdate: function(t) {
                return this.dynamic = !0,
                this.onUpdateCallback = t,
                this
            }
        },
        r.AnimationClip = function(t, e, n) {
            this.name = t || r.Math.generateUUID(),
            this.tracks = n,
            this.duration = void 0 !== e ? e : -1,
            this.duration < 0 && this.resetDuration(),
            this.trim(),
            this.optimize()
        }
        ,
        r.AnimationClip.prototype = {
            constructor: r.AnimationClip,
            resetDuration: function() {
                for (var t = this.tracks, e = 0, n = 0, r = t.length; n !== r; ++n) {
                    var i = this.tracks[n];
                    e = Math.max(e, i.times[i.times.length - 1])
                }
                this.duration = e
            },
            trim: function() {
                for (var t = 0; t < this.tracks.length; t++)
                    this.tracks[t].trim(0, this.duration);
                return this
            },
            optimize: function() {
                for (var t = 0; t < this.tracks.length; t++)
                    this.tracks[t].optimize();
                return this
            }
        },
        Object.assign(r.AnimationClip, {
            parse: function(t) {
                for (var e = [], n = t.tracks, i = 1 / (t.fps || 1), o = 0, a = n.length; o !== a; ++o)
                    e.push(r.KeyframeTrack.parse(n[o]).scale(i));
                return new r.AnimationClip(t.name,t.duration,e)
            },
            toJSON: function(t) {
                for (var e = [], n = t.tracks, i = {
                    name: t.name,
                    duration: t.duration,
                    tracks: e
                }, o = 0, a = n.length; o !== a; ++o)
                    e.push(r.KeyframeTrack.toJSON(n[o]));
                return i
            },
            CreateFromMorphTargetSequence: function(t, e, n) {
                for (var i = e.length, o = [], a = 0; a < i; a++) {
                    var s = []
                      , h = [];
                    s.push((a + i - 1) % i, a, (a + 1) % i),
                    h.push(0, 1, 0);
                    var u = r.AnimationUtils.getKeyframeOrder(s);
                    s = r.AnimationUtils.sortedArray(s, 1, u),
                    h = r.AnimationUtils.sortedArray(h, 1, u),
                    0 === s[0] && (s.push(i),
                    h.push(h[0])),
                    o.push(new r.NumberKeyframeTrack(".morphTargetInfluences[" + e[a].name + "]",s,h).scale(1 / n))
                }
                return new r.AnimationClip(t,(-1),o)
            },
            findByName: function(t, e) {
                for (var n = 0; n < t.length; n++)
                    if (t[n].name === e)
                        return t[n];
                return null
            },
            CreateClipsFromMorphTargetSequences: function(t, e) {
                for (var n = {}, i = /^([\w-]*?)([\d]+)$/, o = 0, a = t.length; o < a; o++) {
                    var s = t[o]
                      , h = s.name.match(i);
                    if (h && h.length > 1) {
                        var u = h[1]
                          , l = n[u];
                        l || (n[u] = l = []),
                        l.push(s)
                    }
                }
                var c = [];
                for (var u in n)
                    c.push(r.AnimationClip.CreateFromMorphTargetSequence(u, n[u], e));
                return c
            },
            parseAnimation: function(t, e, n) {
                if (!t)
                    return console.error("  no animation in JSONLoader data"),
                    null ;
                for (var i = function(t, e, n, i, o) {
                    if (0 !== n.length) {
                        var a = []
                          , s = [];
                        r.AnimationUtils.flattenJSON(n, a, s, i),
                        0 !== a.length && o.push(new t(e,a,s))
                    }
                }
                , o = [], a = t.name || "default", s = t.length || -1, h = t.fps || 30, u = t.hierarchy || [], l = 0; l < u.length; l++) {
                    var c = u[l].keys;
                    if (c && 0 != c.length)
                        if (c[0].morphTargets) {
                            for (var p = {}, f = 0; f < c.length; f++)
                                if (c[f].morphTargets)
                                    for (var d = 0; d < c[f].morphTargets.length; d++)
                                        p[c[f].morphTargets[d]] = -1;
                            for (var m in p) {
                                for (var v = [], g = [], d = 0; d !== c[f].morphTargets.length; ++d) {
                                    var y = c[f];
                                    v.push(y.time),
                                    g.push(y.morphTarget === m ? 1 : 0)
                                }
                                o.push(new r.NumberKeyframeTrack(".morphTargetInfluence[" + m + "]",v,g))
                            }
                            s = p.length * (h || 1)
                        } else {
                            var _ = ".bones[" + e[l].name + "]";
                            i(r.VectorKeyframeTrack, _ + ".position", c, "pos", o),
                            i(r.QuaternionKeyframeTrack, _ + ".quaternion", c, "rot", o),
                            i(r.VectorKeyframeTrack, _ + ".scale", c, "scl", o)
                        }
                }
                if (0 === o.length)
                    return null ;
                var x = new r.AnimationClip(a,s,o);
                return x
            }
        }),
        r.AnimationMixer = function(t) {
            this._root = t,
            this._initMemoryManager(),
            this._accuIndex = 0,
            this.time = 0,
            this.timeScale = 1
        }
        ,
        r.AnimationMixer.prototype = {
            constructor: r.AnimationMixer,
            clipAction: function(t, e) {
                var n, i = e || this._root, o = i.uuid, a = "string" == typeof t ? t : t.name, s = t !== a ? t : null , h = this._actionsByClip[a];
                if (void 0 !== h) {
                    var u = h.actionByRoot[o];
                    if (void 0 !== u)
                        return u;
                    if (n = h.knownActions[0],
                    s = n._clip,
                    t !== a && t !== s)
                        throw new Error("Different clips with the same name detected!")
                }
                if (null === s)
                    return null ;
                var l = new r.AnimationMixer._Action(this,s,e);
                return this._bindAction(l, n),
                this._addInactiveAction(l, a, o),
                l
            },
            existingAction: function(t, e) {
                var n = e || this._root
                  , r = n.uuid
                  , i = "string" == typeof t ? t : t.name
                  , o = this._actionsByClip[i];
                return void 0 !== o ? o.actionByRoot[r] || null : null
            },
            stopAllAction: function() {
                var t = this._actions
                  , e = this._nActiveActions
                  , n = this._bindings
                  , r = this._nActiveBindings;
                this._nActiveActions = 0,
                this._nActiveBindings = 0;
                for (var i = 0; i !== e; ++i)
                    t[i].reset();
                for (var i = 0; i !== r; ++i)
                    n[i].useCount = 0;
                return this
            },
            update: function(t) {
                t *= this.timeScale;
                for (var e = this._actions, n = this._nActiveActions, r = this.time += t, i = Math.sign(t), o = this._accuIndex ^= 1, a = 0; a !== n; ++a) {
                    var s = e[a];
                    s.enabled && s._update(r, t, i, o)
                }
                for (var h = this._bindings, u = this._nActiveBindings, a = 0; a !== u; ++a)
                    h[a].apply(o);
                return this
            },
            getRoot: function() {
                return this._root
            },
            uncacheClip: function(t) {
                var e = this._actions
                  , n = t.name
                  , r = this._actionsByClip
                  , i = r[n];
                if (void 0 !== i) {
                    for (var o = i.knownActions, a = 0, s = o.length; a !== s; ++a) {
                        var h = o[a];
                        this._deactivateAction(h);
                        var u = h._cacheIndex
                          , l = e[e.length - 1];
                        h._cacheIndex = null ,
                        h._byClipCacheIndex = null ,
                        l._cacheIndex = u,
                        e[u] = l,
                        e.pop(),
                        this._removeInactiveBindingsForAction(h)
                    }
                    delete r[n]
                }
            },
            uncacheRoot: function(t) {
                var e = t.uuid
                  , n = this._actionsByClip;
                for (var r in n) {
                    var i = n[r].actionByRoot
                      , o = i[e];
                    void 0 !== o && (this._deactivateAction(o),
                    this._removeInactiveAction(o))
                }
                var a = this._bindingsByRootAndName
                  , s = a[e];
                if (void 0 !== s)
                    for (var h in s) {
                        var u = s[h];
                        u.restoreOriginalState(),
                        this._removeInactiveBinding(u)
                    }
            },
            uncacheAction: function(t, e) {
                var n = this.existingAction(t, e);
                null !== n && (this._deactivateAction(n),
                this._removeInactiveAction(n))
            }
        },
        r.EventDispatcher.prototype.apply(r.AnimationMixer.prototype),
        r.AnimationMixer._Action = function(t, e, n) {
            this._mixer = t,
            this._clip = e,
            this._localRoot = n || null ;
            for (var i = e.tracks, o = i.length, a = new Array(o), s = {
                endingStart: r.ZeroCurvatureEnding,
                endingEnd: r.ZeroCurvatureEnding
            }, h = 0; h !== o; ++h) {
                var u = i[h].createInterpolant(null );
                a[h] = u,
                u.settings = s
            }
            this._interpolantSettings = s,
            this._interpolants = a,
            this._propertyBindings = new Array(o),
            this._cacheIndex = null ,
            this._byClipCacheIndex = null ,
            this._timeScaleInterpolant = null ,
            this._weightInterpolant = null ,
            this.loop = r.LoopRepeat,
            this._loopCount = -1,
            this._startTime = null ,
            this.time = 0,
            this.timeScale = 1,
            this._effectiveTimeScale = 1,
            this.weight = 1,
            this._effectiveWeight = 1,
            this.repetitions = 1 / 0,
            this.paused = !1,
            this.enabled = !0,
            this.clampWhenFinished = !1,
            this.zeroSlopeAtStart = !0,
            this.zeroSlopeAtEnd = !0
        }
        ,
        r.AnimationMixer._Action.prototype = {
            constructor: r.AnimationMixer._Action,
            play: function() {
                return this._mixer._activateAction(this),
                this
            },
            stop: function() {
                return this._mixer._deactivateAction(this),
                this.reset()
            },
            reset: function() {
                return this.paused = !1,
                this.enabled = !0,
                this.time = 0,
                this._loopCount = -1,
                this._startTime = null ,
                this.stopFading().stopWarping()
            },
            isRunning: function() {
                this._startTime;
                return this.enabled && !this.paused && 0 !== this.timeScale && null === this._startTime && this._mixer._isActiveAction(this)
            },
            isScheduled: function() {
                return this._mixer._isActiveAction(this)
            },
            startAt: function(t) {
                return this._startTime = t,
                this
            },
            setLoop: function(t, e) {
                return this.loop = t,
                this.repetitions = e,
                this
            },
            setEffectiveWeight: function(t) {
                return this.weight = t,
                this._effectiveWeight = this.enabled ? t : 0,
                this.stopFading()
            },
            getEffectiveWeight: function() {
                return this._effectiveWeight
            },
            fadeIn: function(t) {
                return this._scheduleFading(t, 0, 1)
            },
            fadeOut: function(t) {
                return this._scheduleFading(t, 1, 0)
            },
            crossFadeFrom: function(t, e, n) {
                this._mixer;
                if (t.fadeOut(e),
                this.fadeIn(e),
                n) {
                    var r = this._clip.duration
                      , i = t._clip.duration
                      , o = i / r
                      , a = r / i;
                    t.warp(1, o, e),
                    this.warp(a, 1, e)
                }
                return this
            },
            crossFadeTo: function(t, e, n) {
                return t.crossFadeFrom(this, e, n)
            },
            stopFading: function() {
                var t = this._weightInterpolant;
                return null !== t && (this._weightInterpolant = null ,
                this._mixer._takeBackControlInterpolant(t)),
                this
            },
            setEffectiveTimeScale: function(t) {
                return this.timeScale = t,
                this._effectiveTimeScale = this.paused ? 0 : t,
                this.stopWarping()
            },
            getEffectiveTimeScale: function() {
                return this._effectiveTimeScale
            },
            setDuration: function(t) {
                return this.timeScale = this._clip.duration / t,
                this.stopWarping()
            },
            syncWith: function(t) {
                return this.time = t.time,
                this.timeScale = t.timeScale,
                this.stopWarping()
            },
            halt: function(t) {
                return this.warp(this._currentTimeScale, 0, t)
            },
            warp: function(t, e, n) {
                var r = this._mixer
                  , i = r.time
                  , o = this._timeScaleInterpolant
                  , a = this.timeScale;
                null === o && (o = r._lendControlInterpolant(),
                this._timeScaleInterpolant = o);
                var s = o.parameterPositions
                  , h = o.sampleValues;
                return s[0] = i,
                s[1] = i + n,
                h[0] = t / a,
                h[1] = e / a,
                this
            },
            stopWarping: function() {
                var t = this._timeScaleInterpolant;
                return null !== t && (this._timeScaleInterpolant = null ,
                this._mixer._takeBackControlInterpolant(t)),
                this
            },
            getMixer: function() {
                return this._mixer
            },
            getClip: function() {
                return this._clip
            },
            getRoot: function() {
                return this._localRoot || this._mixer._root
            },
            _update: function(t, e, n, r) {
                var i = this._startTime;
                if (null !== i) {
                    var o = (t - i) * n;
                    if (o < 0 || 0 === n)
                        return;
                    this._startTime = null ,
                    e = n * o
                }
                e *= this._updateTimeScale(t);
                var a = this._updateTime(e)
                  , s = this._updateWeight(t);
                if (s > 0)
                    for (var h = this._interpolants, u = this._propertyBindings, l = 0, c = h.length; l !== c; ++l)
                        h[l].evaluate(a),
                        u[l].accumulate(r, s)
            },
            _updateWeight: function(t) {
                var e = 0;
                if (this.enabled) {
                    e = this.weight;
                    var n = this._weightInterpolant;
                    if (null !== n) {
                        var r = n.evaluate(t)[0];
                        e *= r,
                        t > n.parameterPositions[1] && (this.stopFading(),
                        0 === r && (this.enabled = !1))
                    }
                }
                return this._effectiveWeight = e,
                e
            },
            _updateTimeScale: function(t) {
                var e = 0;
                if (!this.paused) {
                    e = this.timeScale;
                    var n = this._timeScaleInterpolant;
                    if (null !== n) {
                        var r = n.evaluate(t)[0];
                        e *= r,
                        t > n.parameterPositions[1] && (this.stopWarping(),
                        0 === e ? this.pause = !0 : this.timeScale = e)
                    }
                }
                return this._effectiveTimeScale = e,
                e
            },
            _updateTime: function(t) {
                var e = this.time + t;
                if (0 === t)
                    return e;
                var n = this._clip.duration
                  , i = this.loop
                  , o = this._loopCount
                  , a = !1;
                switch (i) {
                case r.LoopOnce:
                    if (o === -1 && (this.loopCount = 0,
                    this._setEndings(!0, !0, !1)),
                    e >= n)
                        e = n;
                    else {
                        if (!(e < 0))
                            break;
                        e = 0
                    }
                    this.clampWhenFinished ? this.pause = !0 : this.enabled = !1,
                    this._mixer.dispatchEvent({
                        type: "finished",
                        action: this,
                        direction: t < 0 ? -1 : 1
                    });
                    break;
                case r.LoopPingPong:
                    a = !0;
                case r.LoopRepeat:
                    if (o === -1 && (t > 0 ? (o = 0,
                    this._setEndings(!0, 0 === this.repetitions, a)) : this._setEndings(0 === this.repetitions, !0, a)),
                    e >= n || e < 0) {
                        var s = Math.floor(e / n);
                        e -= n * s,
                        o += Math.abs(s);
                        var h = this.repetitions - o;
                        if (h < 0) {
                            this.clampWhenFinished ? this.paused = !0 : this.enabled = !1,
                            e = t > 0 ? n : 0,
                            this._mixer.dispatchEvent({
                                type: "finished",
                                action: this,
                                direction: t > 0 ? 1 : -1
                            });
                            break
                        }
                        if (0 === h) {
                            var u = t < 0;
                            this._setEndings(u, !u, a)
                        } else
                            this._setEndings(!1, !1, a);
                        this._loopCount = o,
                        this._mixer.dispatchEvent({
                            type: "loop",
                            action: this,
                            loopDelta: s
                        })
                    }
                    if (i === r.LoopPingPong && 1 === (1 & o))
                        return this.time = e,
                        n - e
                }
                return this.time = e,
                e
            },
            _setEndings: function(t, e, n) {
                var i = this._interpolantSettings;
                n ? (i.endingStart = r.ZeroSlopeEnding,
                i.endingEnd = r.ZeroSlopeEnding) : (t ? i.endingStart = this.zeroSlopeAtStart ? r.ZeroSlopeEnding : r.ZeroCurvatureEnding : i.endingStart = r.WrapAroundEnding,
                e ? i.endingEnd = this.zeroSlopeAtEnd ? r.ZeroSlopeEnding : r.ZeroCurvatureEnding : i.endingEnd = r.WrapAroundEnding)
            },
            _scheduleFading: function(t, e, n) {
                var r = this._mixer
                  , i = r.time
                  , o = this._weightInterpolant;
                null === o && (o = r._lendControlInterpolant(),
                this._weightInterpolant = o);
                var a = o.parameterPositions
                  , s = o.sampleValues;
                return a[0] = i,
                s[0] = e,
                a[1] = i + t,
                s[1] = n,
                this
            }
        },
        Object.assign(r.AnimationMixer.prototype, {
            _bindAction: function(t, e) {
                var n = t._localRoot || this._root
                  , i = t._clip.tracks
                  , o = i.length
                  , a = t._propertyBindings
                  , s = t._interpolants
                  , h = n.uuid
                  , u = this._bindingsByRootAndName
                  , l = u[h];
                void 0 === l && (l = {},
                u[h] = l);
                for (var c = 0; c !== o; ++c) {
                    var p = i[c]
                      , f = p.name
                      , d = l[f];
                    if (void 0 !== d)
                        a[c] = d;
                    else {
                        if (d = a[c],
                        void 0 !== d) {
                            null === d._cacheIndex && (++d.referenceCount,
                            this._addInactiveBinding(d, h, f));
                            continue
                        }
                        var m = e && e._propertyBindings[c].binding.parsedPath;
                        d = new r.PropertyMixer(r.PropertyBinding.create(n, f, m),p.ValueTypeName,p.getValueSize()),
                        ++d.referenceCount,
                        this._addInactiveBinding(d, h, f),
                        a[c] = d
                    }
                    s[c].resultBuffer = d.buffer
                }
            },
            _activateAction: function(t) {
                if (!this._isActiveAction(t)) {
                    if (null === t._cacheIndex) {
                        var e = (t._localRoot || this._root).uuid
                          , n = t._clip.name
                          , r = this._actionsByClip[n];
                        this._bindAction(t, r && r.knownActions[0]),
                        this._addInactiveAction(t, n, e)
                    }
                    for (var i = t._propertyBindings, o = 0, a = i.length; o !== a; ++o) {
                        var s = i[o];
                        0 === s.useCount++ && (this._lendBinding(s),
                        s.saveOriginalState())
                    }
                    this._lendAction(t)
                }
            },
            _deactivateAction: function(t) {
                if (this._isActiveAction(t)) {
                    for (var e = t._propertyBindings, n = 0, r = e.length; n !== r; ++n) {
                        var i = e[n];
                        0 === --i.useCount && (i.restoreOriginalState(),
                        this._takeBackBinding(i))
                    }
                    this._takeBackAction(t)
                }
            },
            _initMemoryManager: function() {
                this._actions = [],
                this._nActiveActions = 0,
                this._actionsByClip = {},
                this._bindings = [],
                this._nActiveBindings = 0,
                this._bindingsByRootAndName = {},
                this._controlInterpolants = [],
                this._nActiveControlInterpolants = 0;
                var t = this;
                this.stats = {
                    actions: {
                        get total() {
                            return t._actions.length
                        },
                        get inUse() {
                            return t._nActiveActions
                        }
                    },
                    bindings: {
                        get total() {
                            return t._bindings.length
                        },
                        get inUse() {
                            return t._nActiveBindings
                        }
                    },
                    controlInterpolants: {
                        get total() {
                            return t._controlInterpolants.length
                        },
                        get inUse() {
                            return t._nActiveControlInterpolants
                        }
                    }
                }
            },
            _isActiveAction: function(t) {
                var e = t._cacheIndex;
                return null !== e && e < this._nActiveActions
            },
            _addInactiveAction: function(t, e, n) {
                var r = this._actions
                  , i = this._actionsByClip
                  , o = i[e];
                if (void 0 === o)
                    o = {
                        knownActions: [t],
                        actionByRoot: {}
                    },
                    t._byClipCacheIndex = 0,
                    i[e] = o;
                else {
                    var a = o.knownActions;
                    t._byClipCacheIndex = a.length,
                    a.push(t)
                }
                t._cacheIndex = r.length,
                r.push(t),
                o.actionByRoot[n] = t
            },
            _removeInactiveAction: function(t) {
                var e = this._actions
                  , n = e[e.length - 1]
                  , r = t._cacheIndex;
                n._cacheIndex = r,
                e[r] = n,
                e.pop(),
                t._cacheIndex = null ;
                var i = t._clip.name
                  , o = this._actionsByClip
                  , a = o[i]
                  , s = a.knownActions
                  , h = s[s.length - 1]
                  , u = t._byClipCacheIndex;
                h._byClipCacheIndex = u,
                s[u] = h,
                s.pop(),
                t._byClipCacheIndex = null ;
                var l = a.actionByRoot
                  , c = (e._localRoot || this._root).uuid;
                delete l[c],
                0 === s.length && delete o[i],
                this._removeInactiveBindingsForAction(t)
            },
            _removeInactiveBindingsForAction: function(t) {
                for (var e = t._propertyBindings, n = 0, r = e.length; n !== r; ++n) {
                    var i = e[n];
                    0 === --i.referenceCount && this._removeInactiveBinding(i)
                }
            },
            _lendAction: function(t) {
                var e = this._actions
                  , n = t._cacheIndex
                  , r = this._nActiveActions++
                  , i = e[r];
                t._cacheIndex = r,
                e[r] = t,
                i._cacheIndex = n,
                e[n] = i
            },
            _takeBackAction: function(t) {
                var e = this._actions
                  , n = t._cacheIndex
                  , r = --this._nActiveActions
                  , i = e[r];
                t._cacheIndex = r,
                e[r] = t,
                i._cacheIndex = n,
                e[n] = i
            },
            _addInactiveBinding: function(t, e, n) {
                var r = this._bindingsByRootAndName
                  , i = r[e]
                  , o = this._bindings;
                void 0 === i && (i = {},
                r[e] = i),
                i[n] = t,
                t._cacheIndex = o.length,
                o.push(t)
            },
            _removeInactiveBinding: function(t) {
                var e = this._bindings
                  , n = t.binding
                  , r = n.rootNode.uuid
                  , i = n.path
                  , o = this._bindingsByRootAndName
                  , a = o[r]
                  , s = e[e.length - 1]
                  , h = t._cacheIndex;
                s._cacheIndex = h,
                e[h] = s,
                e.pop(),
                delete a[i];
                t: {
                    for (var u in a)
                        break t;
                    delete o[r]
                }
            },
            _lendBinding: function(t) {
                var e = this._bindings
                  , n = t._cacheIndex
                  , r = this._nActiveBindings++
                  , i = e[r];
                t._cacheIndex = r,
                e[r] = t,
                i._cacheIndex = n,
                e[n] = i
            },
            _takeBackBinding: function(t) {
                var e = this._bindings
                  , n = t._cacheIndex
                  , r = --this._nActiveBindings
                  , i = e[r];
                t._cacheIndex = r,
                e[r] = t,
                i._cacheIndex = n,
                e[n] = i
            },
            _lendControlInterpolant: function() {
                var t = this._controlInterpolants
                  , e = this._nActiveControlInterpolants++
                  , n = t[e];
                return void 0 === n && (n = new r.LinearInterpolant(new Float32Array(2),new Float32Array(2),1,this._controlInterpolantsResultBuffer),
                n.__cacheIndex = e,
                t[e] = n),
                n
            },
            _takeBackControlInterpolant: function(t) {
                var e = this._controlInterpolants
                  , n = t.__cacheIndex
                  , r = --this._nActiveControlInterpolants
                  , i = e[r];
                t.__cacheIndex = r,
                e[r] = t,
                i.__cacheIndex = n,
                e[n] = i
            },
            _controlInterpolantsResultBuffer: new Float32Array(1)
        }),
        r.AnimationObjectGroup = function(t) {
            this.uuid = r.Math.generateUUID(),
            this._objects = Array.prototype.slice.call(arguments),
            this.nCachedObjects_ = 0;
            var e = {};
            this._indicesByUUID = e;
            for (var n = 0, i = arguments.length; n !== i; ++n)
                e[arguments[n].uuid] = n;
            this._paths = [],
            this._parsedPaths = [],
            this._bindings = [],
            this._bindingsIndicesByPath = {};
            var o = this;
            this.stats = {
                objects: {
                    get total() {
                        return o._objects.length
                    },
                    get inUse() {
                        return this.total - o.nCachedObjects_
                    }
                },
                get bindingsPerObject() {
                    return o._bindings.length
                }
            }
        }
        ,
        r.AnimationObjectGroup.prototype = {
            constructor: r.AnimationObjectGroup,
            add: function(t) {
                for (var e = this._objects, n = e.length, i = this.nCachedObjects_, o = this._indicesByUUID, a = this._paths, s = this._parsedPaths, h = this._bindings, u = h.length, l = 0, c = arguments.length; l !== c; ++l) {
                    var p = arguments[l]
                      , f = p.uuid
                      , d = o[f];
                    if (void 0 === d) {
                        d = n++,
                        o[f] = d,
                        e.push(p);
                        for (var m = 0, v = u; m !== v; ++m)
                            h[m].push(new r.PropertyBinding(p,a[m],s[m]))
                    } else if (d < i) {
                        var g = e[d]
                          , y = --i
                          , _ = e[y];
                        o[_.uuid] = d,
                        e[d] = _,
                        o[f] = y,
                        e[y] = p;
                        for (var m = 0, v = u; m !== v; ++m) {
                            var x = h[m]
                              , b = x[y]
                              , w = x[d];
                            x[d] = b,
                            void 0 === w && (w = new r.PropertyBinding(p,a[m],s[m])),
                            x[y] = w
                        }
                    } else
                        e[d] !== g && console.error("Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes...")
                }
                this.nCachedObjects_ = i
            },
            remove: function(t) {
                for (var e = this._objects, n = (e.length,
                this.nCachedObjects_), r = this._indicesByUUID, i = this._bindings, o = i.length, a = 0, s = arguments.length; a !== s; ++a) {
                    var h = arguments[a]
                      , u = h.uuid
                      , l = r[u];
                    if (void 0 !== l && l >= n) {
                        var c = n++
                          , p = e[c];
                        r[p.uuid] = l,
                        e[l] = p,
                        r[u] = c,
                        e[c] = h;
                        for (var f = 0, d = o; f !== d; ++f) {
                            var m = i[f]
                              , v = m[c]
                              , g = m[l];
                            m[l] = v,
                            m[c] = g
                        }
                    }
                }
                this.nCachedObjects_ = n
            },
            uncache: function(t) {
                for (var e = this._objects, n = e.length, r = this.nCachedObjects_, i = this._indicesByUUID, o = this._bindings, a = o.length, s = 0, h = arguments.length; s !== h; ++s) {
                    var u = arguments[s]
                      , l = u.uuid
                      , c = i[l];
                    if (void 0 !== c)
                        if (delete i[l],
                        c < r) {
                            var p = --r
                              , f = e[p]
                              , d = --n
                              , m = e[d];
                            i[f.uuid] = c,
                            e[c] = f,
                            i[m.uuid] = p,
                            e[p] = m,
                            e.pop();
                            for (var v = 0, g = a; v !== g; ++v) {
                                var y = o[v]
                                  , _ = y[p]
                                  , x = y[d];
                                y[c] = _,
                                y[p] = x,
                                y.pop()
                            }
                        } else {
                            var d = --n
                              , m = e[d];
                            i[m.uuid] = c,
                            e[c] = m,
                            e.pop();
                            for (var v = 0, g = a; v !== g; ++v) {
                                var y = o[v];
                                y[c] = y[d],
                                y.pop()
                            }
                        }
                }
                this.nCachedObjects_ = r
            },
            subscribe_: function(t, e) {
                var n = this._bindingsIndicesByPath
                  , i = n[t]
                  , o = this._bindings;
                if (void 0 !== i)
                    return o[i];
                var a = this._paths
                  , s = this._parsedPaths
                  , h = this._objects
                  , u = h.length
                  , l = this.nCachedObjects_
                  , c = new Array(u);
                i = o.length,
                n[t] = i,
                a.push(t),
                s.push(e),
                o.push(c);
                for (var p = l, f = h.length; p !== f; ++p) {
                    var d = h[p];
                    c[p] = new r.PropertyBinding(d,t,e)
                }
                return c
            },
            unsubscribe_: function(t) {
                var e = this._bindingsIndicesByPath
                  , n = e[t];
                if (void 0 !== n) {
                    var r = this._paths
                      , i = this._parsedPaths
                      , o = this._bindings
                      , a = o.length - 1
                      , s = o[a]
                      , h = t[a];
                    e[h] = n,
                    o[n] = s,
                    o.pop(),
                    i[n] = i[a],
                    i.pop(),
                    r[n] = r[a],
                    r.pop()
                }
            }
        },
        r.AnimationUtils = {
            arraySlice: function(t, e, n) {
                return r.AnimationUtils.isTypedArray(t) ? new t.constructor(t.subarray(e, n)) : t.slice(e, n)
            },
            convertArray: function(t, e, n) {
                return !t || !n && t.constructor === e ? t : "number" == typeof e.BYTES_PER_ELEMENT ? new e(t) : Array.prototype.slice.call(t)
            },
            isTypedArray: function(t) {
                return ArrayBuffer.isView(t) && !(t instanceof DataView)
            },
            getKeyframeOrder: function(t) {
                function e(e, n) {
                    return t[e] - t[n]
                }
                for (var n = t.length, r = new Array(n), i = 0; i !== n; ++i)
                    r[i] = i;
                return r.sort(e),
                r
            },
            sortedArray: function(t, e, n) {
                for (var r = t.length, i = new t.constructor(r), o = 0, a = 0; a !== r; ++o)
                    for (var s = n[o] * e, h = 0; h !== e; ++h)
                        i[a++] = t[s + h];
                return i
            },
            flattenJSON: function(t, e, n, r) {
                for (var i = 1, o = t[0]; void 0 !== o && void 0 === o[r]; )
                    o = t[i++];
                if (void 0 !== o) {
                    var a = o[r];
                    if (void 0 !== a)
                        if (Array.isArray(a)) {
                            do
                                a = o[r],
                                void 0 !== a && (e.push(o.time),
                                n.push.apply(n, a)),
                                o = t[i++];
                            while (void 0 !== o)
                        } else if (void 0 !== a.toArray) {
                            do
                                a = o[r],
                                void 0 !== a && (e.push(o.time),
                                a.toArray(n, n.length)),
                                o = t[i++];
                            while (void 0 !== o)
                        } else
                            do
                                a = o[r],
                                void 0 !== a && (e.push(o.time),
                                n.push(a)),
                                o = t[i++];
                            while (void 0 !== o)
                }
            }
        },
        r.KeyframeTrack = function(t, e, n, i) {
            if (void 0 === t)
                throw new Error("track name is undefined");
            if (void 0 === e || 0 === e.length)
                throw new Error("no keyframes in track named " + t);
            this.name = t,
            this.times = r.AnimationUtils.convertArray(e, this.TimeBufferType),
            this.values = r.AnimationUtils.convertArray(n, this.ValueBufferType),
            this.setInterpolation(i || this.DefaultInterpolation),
            this.validate(),
            this.optimize()
        }
        ,
        r.KeyframeTrack.prototype = {
            constructor: r.KeyframeTrack,
            TimeBufferType: Float32Array,
            ValueBufferType: Float32Array,
            DefaultInterpolation: r.InterpolateLinear,
            InterpolantFactoryMethodDiscrete: function(t) {
                return new r.DiscreteInterpolant(this.times,this.values,this.getValueSize(),t)
            },
            InterpolantFactoryMethodLinear: function(t) {
                return new r.LinearInterpolant(this.times,this.values,this.getValueSize(),t)
            },
            InterpolantFactoryMethodSmooth: function(t) {
                return new r.CubicInterpolant(this.times,this.values,this.getValueSize(),t)
            },
            setInterpolation: function(t) {
                var e = void 0;
                switch (t) {
                case r.InterpolateDiscrete:
                    e = this.InterpolantFactoryMethodDiscrete;
                    break;
                case r.InterpolateLinear:
                    e = this.InterpolantFactoryMethodLinear;
                    break;
                case r.InterpolateSmooth:
                    e = this.InterpolantFactoryMethodSmooth
                }
                if (void 0 === e) {
                    var n = "unsupported interpolation for " + this.ValueTypeName + " keyframe track named " + this.name;
                    if (void 0 === this.createInterpolant) {
                        if (t === this.DefaultInterpolation)
                            throw new Error(n);
                        this.setInterpolation(this.DefaultInterpolation)
                    }
                    return void console.warn(n)
                }
                this.createInterpolant = e
            },
            getInterpolation: function() {
                switch (this.createInterpolant) {
                case this.InterpolantFactoryMethodDiscrete:
                    return r.InterpolateDiscrete;
                case this.InterpolantFactoryMethodLinear:
                    return r.InterpolateLinear;
                case this.InterpolantFactoryMethodSmooth:
                    return r.InterpolateSmooth
                }
            },
            getValueSize: function() {
                return this.values.length / this.times.length
            },
            shift: function(t) {
                if (0 !== t)
                    for (var e = this.times, n = 0, r = e.length; n !== r; ++n)
                        e[n] += t;
                return this
            },
            scale: function(t) {
                if (1 !== t)
                    for (var e = this.times, n = 0, r = e.length; n !== r; ++n)
                        e[n] *= t;
                return this
            },
            trim: function(t, e) {
                for (var n = this.times, i = n.length, o = 0, a = i - 1; o !== i && n[o] < t; )
                    ++o;
                for (; a !== -1 && n[a] > e; )
                    --a;
                if (++a,
                0 !== o || a !== i) {
                    o >= a && (a = Math.max(a, 1),
                    o = a - 1);
                    var s = this.getValueSize();
                    this.times = r.AnimationUtils.arraySlice(n, o, a),
                    this.values = r.AnimationUtils.arraySlice(this.values, o * s, a * s)
                }
                return this
            },
            validate: function() {
                var t = !0
                  , e = this.getValueSize();
                e - Math.floor(e) !== 0 && (console.error("invalid value size in track", this),
                t = !1);
                var n = this.times
                  , i = this.values
                  , o = n.length;
                0 === o && (console.error("track is empty", this),
                t = !1);
                for (var a = null , s = 0; s !== o; s++) {
                    var h = n[s];
                    if ("number" == typeof h && isNaN(h)) {
                        console.error("time is not a valid number", this, s, h),
                        t = !1;
                        break
                    }
                    if (null !== a && a > h) {
                        console.error("out of order keys", this, s, h, a),
                        t = !1;
                        break
                    }
                    a = h
                }
                if (void 0 !== i && r.AnimationUtils.isTypedArray(i))
                    for (var s = 0, u = i.length; s !== u; ++s) {
                        var l = i[s];
                        if (isNaN(l)) {
                            console.error("value is not a valid number", this, s, l),
                            t = !1;
                            break
                        }
                    }
                return t
            },
            optimize: function() {
                for (var t = this.times, e = this.values, n = this.getValueSize(), i = 1, o = 1, a = t.length - 1; o <= a; ++o) {
                    var s = !1
                      , h = t[o]
                      , u = t[o + 1];
                    if (h !== u && (1 !== o || h !== h[0]))
                        for (var l = o * n, c = l - n, p = l + n, f = 0; f !== n; ++f) {
                            var d = e[l + f];
                            if (d !== e[c + f] || d !== e[p + f]) {
                                s = !0;
                                break
                            }
                        }
                    if (s) {
                        if (o !== i) {
                            t[i] = t[o];
                            for (var m = o * n, v = i * n, f = 0; f !== n; ++f)
                                e[v + f] = e[m + f]
                        }
                        ++i
                    }
                }
                return i !== t.length && (this.times = r.AnimationUtils.arraySlice(t, 0, i),
                this.values = r.AnimationUtils.arraySlice(e, 0, i * n)),
                this
            }
        },
        Object.assign(r.KeyframeTrack, {
            parse: function(t) {
                if (void 0 === t.type)
                    throw new Error("track type undefined, can not parse");
                var e = r.KeyframeTrack._getTrackTypeForValueTypeName(t.type);
                if (void 0 === t.times) {
                    console.warn("legacy JSON format detected, converting");
                    var n = []
                      , i = [];
                    r.AnimationUtils.flattenJSON(t.keys, n, i, "value"),
                    t.times = n,
                    t.values = i
                }
                return void 0 !== e.parse ? e.parse(t) : new e(t.name,t.times,t.values,t.interpolation)
            },
            toJSON: function(t) {
                var e, n = t.constructor;
                if (void 0 !== n.toJSON)
                    e = n.toJSON(t);
                else {
                    e = {
                        name: t.name,
                        times: r.AnimationUtils.convertArray(t.times, Array),
                        values: r.AnimationUtils.convertArray(t.values, Array)
                    };
                    var i = t.getInterpolation();
                    i !== t.DefaultInterpolation && (e.interpolation = i)
                }
                return e.type = t.ValueTypeName,
                e
            },
            _getTrackTypeForValueTypeName: function(t) {
                switch (t.toLowerCase()) {
                case "scalar":
                case "double":
                case "float":
                case "number":
                case "integer":
                    return r.NumberKeyframeTrack;
                case "vector":
                case "vector2":
                case "vector3":
                case "vector4":
                    return r.VectorKeyframeTrack;
                case "color":
                    return r.ColorKeyframeTrack;
                case "quaternion":
                    return r.QuaternionKeyframeTrack;
                case "bool":
                case "boolean":
                    return r.BooleanKeyframeTrack;
                case "string":
                    return r.StringKeyframeTrack
                }
                throw new Error("Unsupported typeName: " + t)
            }
        }),
        r.PropertyBinding = function(t, e, n) {
            this.path = e,
            this.parsedPath = n || r.PropertyBinding.parseTrackName(e),
            this.node = r.PropertyBinding.findNode(t, this.parsedPath.nodeName) || t,
            this.rootNode = t
        }
        ,
        r.PropertyBinding.prototype = {
            constructor: r.PropertyBinding,
            getValue: function(t, e) {
                this.bind(),
                this.getValue(t, e)
            },
            setValue: function(t, e) {
                this.bind(),
                this.setValue(t, e)
            },
            bind: function() {
                var t = this.node
                  , e = this.parsedPath
                  , n = e.objectName
                  , i = e.propertyName
                  , o = e.propertyIndex;
                if (t || (t = r.PropertyBinding.findNode(this.rootNode, e.nodeName) || this.rootNode,
                this.node = t),
                this.getValue = this._getValue_unavailable,
                this.setValue = this._setValue_unavailable,
                !t)
                    return void console.error("  trying to update node for track: " + this.path + " but it wasn't found.");
                if (n) {
                    var a = e.objectIndex;
                    switch (n) {
                    case "materials":
                        if (!t.material)
                            return void console.error("  can not bind to material as node does not have a material", this);
                        if (!t.material.materials)
                            return void console.error("  can not bind to material.materials as node.material does not have a materials array", this);
                        t = t.material.materials;
                        break;
                    case "bones":
                        if (!t.skeleton)
                            return void console.error("  can not bind to bones as node does not have a skeleton", this);
                        t = t.skeleton.bones;
                        for (var s = 0; s < t.length; s++)
                            if (t[s].name === a) {
                                a = s;
                                break
                            }
                        break;
                    default:
                        if (void 0 === t[n])
                            return void console.error("  can not bind to objectName of node, undefined", this);
                        t = t[n]
                    }
                    if (void 0 !== a) {
                        if (void 0 === t[a])
                            return void console.error("  trying to bind to objectIndex of objectName, but is undefined:", this, t);
                        t = t[a]
                    }
                }
                var h = t[i];
                if (!h) {
                    var u = e.nodeName;
                    return void console.error("  trying to update property for track: " + u + "." + i + " but it wasn't found.", t)
                }
                var l = this.Versioning.None;
                void 0 !== t.needsUpdate ? (l = this.Versioning.NeedsUpdate,
                this.targetObject = t) : void 0 !== t.matrixWorldNeedsUpdate && (l = this.Versioning.MatrixWorldNeedsUpdate,
                this.targetObject = t);
                var c = this.BindingType.Direct;
                if (void 0 !== o) {
                    if ("morphTargetInfluences" === i) {
                        if (!t.geometry)
                            return void console.error("  can not bind to morphTargetInfluences becasuse node does not have a geometry", this);
                        if (!t.geometry.morphTargets)
                            return void console.error("  can not bind to morphTargetInfluences becasuse node does not have a geometry.morphTargets", this);
                        for (var s = 0; s < this.node.geometry.morphTargets.length; s++)
                            if (t.geometry.morphTargets[s].name === o) {
                                o = s;
                                break
                            }
                    }
                    c = this.BindingType.ArrayElement,
                    this.resolvedProperty = h,
                    this.propertyIndex = o
                } else
                    void 0 !== h.fromArray && void 0 !== h.toArray ? (c = this.BindingType.HasFromToArray,
                    this.resolvedProperty = h) : void 0 !== h.length ? (c = this.BindingType.EntireArray,
                    this.resolvedProperty = h) : this.propertyName = i;
                this.getValue = this.GetterByBindingType[c],
                this.setValue = this.SetterByBindingTypeAndVersioning[c][l]
            },
            unbind: function() {
                this.node = null ,
                this.getValue = this._getValue_unbound,
                this.setValue = this._setValue_unbound
            }
        },
        Object.assign(r.PropertyBinding.prototype, {
            _getValue_unavailable: function() {},
            _setValue_unavailable: function() {},
            _getValue_unbound: r.PropertyBinding.prototype.getValue,
            _setValue_unbound: r.PropertyBinding.prototype.setValue,
            BindingType: {
                Direct: 0,
                EntireArray: 1,
                ArrayElement: 2,
                HasFromToArray: 3
            },
            Versioning: {
                None: 0,
                NeedsUpdate: 1,
                MatrixWorldNeedsUpdate: 2
            },
            GetterByBindingType: [function(t, e) {
                t[e] = this.node[this.propertyName]
            }
            , function(t, e) {
                for (var n = this.resolvedProperty, r = 0, i = n.length; r !== i; ++r)
                    t[e++] = n[r]
            }
            , function(t, e) {
                t[e] = this.resolvedProperty[this.propertyIndex]
            }
            , function(t, e) {
                this.resolvedProperty.toArray(t, e)
            }
            ],
            SetterByBindingTypeAndVersioning: [[function(t, e) {
                this.node[this.propertyName] = t[e]
            }
            , function(t, e) {
                this.node[this.propertyName] = t[e],
                this.targetObject.needsUpdate = !0
            }
            , function(t, e) {
                this.node[this.propertyName] = t[e],
                this.targetObject.matrixWorldNeedsUpdate = !0
            }
            ], [function(t, e) {
                for (var n = this.resolvedProperty, r = 0, i = n.length; r !== i; ++r)
                    n[r] = t[e++]
            }
            , function(t, e) {
                for (var n = this.resolvedProperty, r = 0, i = n.length; r !== i; ++r)
                    n[r] = t[e++];
                this.targetObject.needsUpdate = !0
            }
            , function(t, e) {
                for (var n = this.resolvedProperty, r = 0, i = n.length; r !== i; ++r)
                    n[r] = t[e++];
                this.targetObject.matrixWorldNeedsUpdate = !0
            }
            ], [function(t, e) {
                this.resolvedProperty[this.propertyIndex] = t[e]
            }
            , function(t, e) {
                this.resolvedProperty[this.propertyIndex] = t[e],
                this.targetObject.needsUpdate = !0
            }
            , function(t, e) {
                this.resolvedProperty[this.propertyIndex] = t[e],
                this.targetObject.matrixWorldNeedsUpdate = !0
            }
            ], [function(t, e) {
                this.resolvedProperty.fromArray(t, e)
            }
            , function(t, e) {
                this.resolvedProperty.fromArray(t, e),
                this.targetObject.needsUpdate = !0
            }
            , function(t, e) {
                this.resolvedProperty.fromArray(t, e),
                this.targetObject.matrixWorldNeedsUpdate = !0
            }
            ]]
        }),
        r.PropertyBinding.Composite = function(t, e, n) {
            var i = n || r.PropertyBinding.parseTrackName(e);
            this._targetGroup = t,
            this._bindings = t.subscribe_(e, i)
        }
        ,
        r.PropertyBinding.Composite.prototype = {
            constructor: r.PropertyBinding.Composite,
            getValue: function(t, e) {
                this.bind();
                var n = this._targetGroup.nCachedObjects_
                  , r = this._bindings[n];
                void 0 !== r && r.getValue(t, e)
            },
            setValue: function(t, e) {
                for (var n = this._bindings, r = this._targetGroup.nCachedObjects_, i = n.length; r !== i; ++r)
                    n[r].setValue(t, e)
            },
            bind: function() {
                for (var t = this._bindings, e = this._targetGroup.nCachedObjects_, n = t.length; e !== n; ++e)
                    t[e].bind()
            },
            unbind: function() {
                for (var t = this._bindings, e = this._targetGroup.nCachedObjects_, n = t.length; e !== n; ++e)
                    t[e].unbind()
            }
        },
        r.PropertyBinding.create = function(t, e, n) {
            return t instanceof r.AnimationObjectGroup ? new r.PropertyBinding.Composite(t,e,n) : new r.PropertyBinding(t,e,n)
        }
        ,
        r.PropertyBinding.parseTrackName = function(t) {
            var e = /^(([\w]+\/)*)([\w-\d]+)?(\.([\w]+)(\[([\w\d\[\]\_. ]+)\])?)?(\.([\w.]+)(\[([\w\d\[\]\_. ]+)\])?)$/
              , n = e.exec(t);
            if (!n)
                throw new Error("cannot parse trackName at all: " + t);
            n.index === e.lastIndex && e.lastIndex++;
            var r = {
                nodeName: n[3],
                objectName: n[5],
                objectIndex: n[7],
                propertyName: n[9],
                propertyIndex: n[11]
            };
            if (null === r.propertyName || 0 === r.propertyName.length)
                throw new Error("can not parse propertyName from trackName: " + t);
            return r
        }
        ,
        r.PropertyBinding.findNode = function(t, e) {
            if (!e || "" === e || "root" === e || "." === e || e === -1 || e === t.name || e === t.uuid)
                return t;
            if (t.skeleton) {
                var n = function(t) {
                    for (var n = 0; n < t.bones.length; n++) {
                        var r = t.bones[n];
                        if (r.name === e)
                            return r
                    }
                    return null
                }
                  , r = n(t.skeleton);
                if (r)
                    return r
            }
            if (t.children) {
                var i = function(t) {
                    for (var n = 0; n < t.length; n++) {
                        var r = t[n];
                        if (r.name === e || r.uuid === e)
                            return r;
                        var o = i(r.children);
                        if (o)
                            return o
                    }
                    return null
                }
                  , o = i(t.children);
                if (o)
                    return o
            }
            return null
        }
        ,
        r.PropertyMixer = function(t, e, n) {
            this.binding = t,
            this.valueSize = n;
            var r, i = Float64Array;
            switch (e) {
            case "quaternion":
                r = this._slerp;
                break;
            case "string":
            case "bool":
                i = Array,
                r = this._select;
                break;
            default:
                r = this._lerp
            }
            this.buffer = new i(4 * n),
            this._mixBufferRegion = r,
            this.cumulativeWeight = 0,
            this.useCount = 0,
            this.referenceCount = 0
        }
        ,
        r.PropertyMixer.prototype = {
            constructor: r.PropertyMixer,
            accumulate: function(t, e) {
                var n = this.buffer
                  , r = this.valueSize
                  , i = t * r + r
                  , o = this.cumulativeWeight;
                if (0 === o) {
                    for (var a = 0; a !== r; ++a)
                        n[i + a] = n[a];
                    o = e
                } else {
                    o += e;
                    var s = e / o;
                    this._mixBufferRegion(n, i, 0, s, r)
                }
                this.cumulativeWeight = o
            },
            apply: function(t) {
                var e = this.valueSize
                  , n = this.buffer
                  , r = t * e + e
                  , i = this.cumulativeWeight
                  , o = this.binding;
                if (this.cumulativeWeight = 0,
                i < 1) {
                    var a = 3 * e;
                    this._mixBufferRegion(n, r, a, 1 - i, e)
                }
                for (var s = e, h = e + e; s !== h; ++s)
                    if (n[s] !== n[s + e]) {
                        o.setValue(n, r);
                        break
                    }
            },
            saveOriginalState: function() {
                var t = this.binding
                  , e = this.buffer
                  , n = this.valueSize
                  , r = 3 * n;
                t.getValue(e, r);
                for (var i = n, o = r; i !== o; ++i)
                    e[i] = e[r + i % n];
                this.cumulativeWeight = 0
            },
            restoreOriginalState: function() {
                var t = 3 * this.valueSize;
                this.binding.setValue(this.buffer, t)
            },
            _select: function(t, e, n, r, i) {
                if (r >= .5)
                    for (var o = 0; o !== i; ++o)
                        t[e + o] = t[n + o]
            },
            _slerp: function(t, e, n, i, o) {
                r.Quaternion.slerpFlat(t, e, t, e, t, n, i)
            },
            _lerp: function(t, e, n, r, i) {
                for (var o = 1 - r, a = 0; a !== i; ++a) {
                    var s = e + a;
                    t[s] = t[s] * o + t[n + a] * r
                }
            }
        },
        r.BooleanKeyframeTrack = function(t, e, n) {
            r.KeyframeTrack.call(this, t, e, n)
        }
        ,
        r.BooleanKeyframeTrack.prototype = Object.assign(Object.create(r.KeyframeTrack.prototype), {
            constructor: r.BooleanKeyframeTrack,
            ValueTypeName: "bool",
            ValueBufferType: Array,
            DefaultInterpolation: r.IntepolateDiscrete,
            InterpolantFactoryMethodLinear: void 0,
            InterpolantFactoryMethodSmooth: void 0
        }),
        r.NumberKeyframeTrack = function(t, e, n, i) {
            r.KeyframeTrack.call(this, t, e, n, i)
        }
        ,
        r.NumberKeyframeTrack.prototype = Object.assign(Object.create(r.KeyframeTrack.prototype), {
            constructor: r.NumberKeyframeTrack,
            ValueTypeName: "number"
        }),
        r.QuaternionKeyframeTrack = function(t, e, n, i) {
            r.KeyframeTrack.call(this, t, e, n, i)
        }
        ,
        r.QuaternionKeyframeTrack.prototype = Object.assign(Object.create(r.KeyframeTrack.prototype), {
            constructor: r.QuaternionKeyframeTrack,
            ValueTypeName: "quaternion",
            DefaultInterpolation: r.InterpolateLinear,
            InterpolantFactoryMethodLinear: function(t) {
                return new r.QuaternionLinearInterpolant(this.times,this.values,this.getValueSize(),t)
            },
            InterpolantFactoryMethodSmooth: void 0
        }),
        r.StringKeyframeTrack = function(t, e, n, i) {
            r.KeyframeTrack.call(this, t, e, n, i)
        }
        ,
        r.StringKeyframeTrack.prototype = Object.assign(Object.create(r.KeyframeTrack.prototype), {
            constructor: r.StringKeyframeTrack,
            ValueTypeName: "string",
            ValueBufferType: Array,
            DefaultInterpolation: r.IntepolateDiscrete,
            InterpolantFactoryMethodLinear: void 0,
            InterpolantFactoryMethodSmooth: void 0
        }),
        r.VectorKeyframeTrack = function(t, e, n, i) {
            r.KeyframeTrack.call(this, t, e, n, i)
        }
        ,
        r.VectorKeyframeTrack.prototype = Object.assign(Object.create(r.KeyframeTrack.prototype), {
            constructor: r.VectorKeyframeTrack,
            ValueTypeName: "vector"
        }),
        r.Audio = function(t) {
            r.Object3D.call(this),
            this.type = "Audio",
            this.context = t.context,
            this.source = this.context.createBufferSource(),
            this.source.onended = this.onEnded.bind(this),
            this.gain = this.context.createGain(),
            this.gain.connect(t.getInput()),
            this.autoplay = !1,
            this.startTime = 0,
            this.playbackRate = 1,
            this.isPlaying = !1,
            this.hasPlaybackControl = !0,
            this.sourceType = "empty",
            this.filter = null
        }
        ,
        r.Audio.prototype = Object.create(r.Object3D.prototype),
        r.Audio.prototype.constructor = r.Audio,
        r.Audio.prototype.getOutput = function() {
            return this.gain
        }
        ,
        r.Audio.prototype.load = function(t) {
            var e = new r.AudioBuffer(this.context);
            return e.load(t),
            this.setBuffer(e),
            this
        }
        ,
        r.Audio.prototype.setNodeSource = function(t) {
            return this.hasPlaybackControl = !1,
            this.sourceType = "audioNode",
            this.source = t,
            this.connect(),
            this
        }
        ,
        r.Audio.prototype.setBuffer = function(t) {
            var e = this;
            return t.onReady(function(t) {
                e.source.buffer = t,
                e.sourceType = "buffer",
                e.autoplay && e.play()
            }),
            this
        }
        ,
        r.Audio.prototype.play = function() {
            if (this.isPlaying === !0)
                return void console.warn("THREE.Audio: Audio is already playing.");
            if (this.hasPlaybackControl === !1)
                return void console.warn("THREE.Audio: this Audio has no playback control.");
            var t = this.context.createBufferSource();
            t.buffer = this.source.buffer,
            t.loop = this.source.loop,
            t.onended = this.source.onended,
            t.start(0, this.startTime),
            t.playbackRate.value = this.playbackRate,
            this.isPlaying = !0,
            this.source = t,
            this.connect()
        }
        ,
        r.Audio.prototype.pause = function() {
            return this.hasPlaybackControl === !1 ? void console.warn("THREE.Audio: this Audio has no playback control.") : (this.source.stop(),
            void (this.startTime = this.context.currentTime))
        }
        ,
        r.Audio.prototype.stop = function() {
            return this.hasPlaybackControl === !1 ? void console.warn("THREE.Audio: this Audio has no playback control.") : (this.source.stop(),
            void (this.startTime = 0))
        }
        ,
        r.Audio.prototype.connect = function() {
            null !== this.filter ? (this.source.connect(this.filter),
            this.filter.connect(this.getOutput())) : this.source.connect(this.getOutput())
        }
        ,
        r.Audio.prototype.disconnect = function() {
            null !== this.filter ? (this.source.disconnect(this.filter),
            this.filter.disconnect(this.getOutput())) : this.source.disconnect(this.getOutput())
        }
        ,
        r.Audio.prototype.getFilter = function() {
            return this.filter
        }
        ,
        r.Audio.prototype.setFilter = function(t) {
            void 0 === t && (t = null ),
            this.isPlaying === !0 ? (this.disconnect(),
            this.filter = t,
            this.connect()) : this.filter = t
        }
        ,
        r.Audio.prototype.setPlaybackRate = function(t) {
            return this.hasPlaybackControl === !1 ? void console.warn("THREE.Audio: this Audio has no playback control.") : (this.playbackRate = t,
            void (this.isPlaying === !0 && (this.source.playbackRate.value = this.playbackRate)))
        }
        ,
        r.Audio.prototype.getPlaybackRate = function() {
            return this.playbackRate
        }
        ,
        r.Audio.prototype.onEnded = function() {
            this.isPlaying = !1
        }
        ,
        r.Audio.prototype.setLoop = function(t) {
            return this.hasPlaybackControl === !1 ? void console.warn("THREE.Audio: this Audio has no playback control.") : void (this.source.loop = t)
        }
        ,
        r.Audio.prototype.getLoop = function() {
            return this.hasPlaybackControl === !1 ? (console.warn("THREE.Audio: this Audio has no playback control."),
            !1) : this.source.loop
        }
        ,
        r.Audio.prototype.setVolume = function(t) {
            this.gain.gain.value = t
        }
        ,
        r.Audio.prototype.getVolume = function() {
            return this.gain.gain.value
        }
        ,
        r.AudioAnalyser = function(t, e) {
            this.analyser = t.context.createAnalyser(),
            this.analyser.fftSize = void 0 !== e ? e : 2048,
            this.data = new Uint8Array(this.analyser.frequencyBinCount),
            t.getOutput().connect(this.analyser)
        }
        ,
        r.AudioAnalyser.prototype = {
            constructor: r.AudioAnalyser,
            getData: function() {
                return this.analyser.getByteFrequencyData(this.data),
                this.data
            }
        },
        r.AudioBuffer = function(t) {
            this.context = t,
            this.ready = !1,
            this.readyCallbacks = []
        }
        ,
        r.AudioBuffer.prototype.load = function(t) {
            var e = this
              , n = new XMLHttpRequest;
            return n.open("GET", t, !0),
            n.responseType = "arraybuffer",
            n.onload = function(t) {
                e.context.decodeAudioData(this.response, function(t) {
                    e.buffer = t,
                    e.ready = !0;
                    for (var n = 0; n < e.readyCallbacks.length; n++)
                        e.readyCallbacks[n](e.buffer);
                    e.readyCallbacks = []
                })
            }
            ,
            n.send(),
            this
        }
        ,
        r.AudioBuffer.prototype.onReady = function(t) {
            this.ready ? t(this.buffer) : this.readyCallbacks.push(t)
        }
        ,
        r.PositionalAudio = function(t) {
            r.Audio.call(this, t),
            this.panner = this.context.createPanner(),
            this.panner.connect(this.gain)
        }
        ,
        r.PositionalAudio.prototype = Object.create(r.Audio.prototype),
        r.PositionalAudio.prototype.constructor = r.PositionalAudio,
        r.PositionalAudio.prototype.getOutput = function() {
            return this.panner
        }
        ,
        r.PositionalAudio.prototype.setRefDistance = function(t) {
            this.panner.refDistance = t
        }
        ,
        r.PositionalAudio.prototype.getRefDistance = function() {
            return this.panner.refDistance
        }
        ,
        r.PositionalAudio.prototype.setRolloffFactor = function(t) {
            this.panner.rolloffFactor = t
        }
        ,
        r.PositionalAudio.prototype.getRolloffFactor = function() {
            return this.panner.rolloffFactor
        }
        ,
        r.PositionalAudio.prototype.setDistanceModel = function(t) {
            this.panner.distanceModel = t
        }
        ,
        r.PositionalAudio.prototype.getDistanceModel = function() {
            return this.panner.distanceModel
        }
        ,
        r.PositionalAudio.prototype.setMaxDistance = function(t) {
            this.panner.maxDistance = t
        }
        ,
        r.PositionalAudio.prototype.getMaxDistance = function() {
            return this.panner.maxDistance
        }
        ,
        r.PositionalAudio.prototype.updateMatrixWorld = function() {
            var t = new r.Vector3;
            return function(e) {
                r.Object3D.prototype.updateMatrixWorld.call(this, e),
                t.setFromMatrixPosition(this.matrixWorld),
                this.panner.setPosition(t.x, t.y, t.z)
            }
        }(),
        r.AudioListener = function() {
            r.Object3D.call(this),
            this.type = "AudioListener",
            this.context = new (window.AudioContext || window.webkitAudioContext),
            this.gain = this.context.createGain(),
            this.gain.connect(this.context.destination),
            this.filter = null
        }
        ,
        r.AudioListener.prototype = Object.create(r.Object3D.prototype),
        r.AudioListener.prototype.constructor = r.AudioListener,
        r.AudioListener.prototype.getInput = function() {
            return this.gain
        }
        ,
        r.AudioListener.prototype.removeFilter = function() {
            null !== this.filter && (this.gain.disconnect(this.filter),
            this.filter.disconnect(this.context.destination),
            this.gain.connect(this.context.destination),
            this.filter = null )
        }
        ,
        r.AudioListener.prototype.setFilter = function(t) {
            null !== this.filter ? (this.gain.disconnect(this.filter),
            this.filter.disconnect(this.context.destination)) : this.gain.disconnect(this.context.destination),
            this.filter = t,
            this.gain.connect(this.filter),
            this.filter.connect(this.context.destination)
        }
        ,
        r.AudioListener.prototype.getFilter = function() {
            return this.filter
        }
        ,
        r.AudioListener.prototype.setMasterVolume = function(t) {
            this.gain.gain.value = t
        }
        ,
        r.AudioListener.prototype.getMasterVolume = function() {
            return this.gain.gain.value
        }
        ,
        r.AudioListener.prototype.updateMatrixWorld = function() {
            var t = new r.Vector3
              , e = new r.Quaternion
              , n = new r.Vector3
              , i = new r.Vector3;
            return function(o) {
                r.Object3D.prototype.updateMatrixWorld.call(this, o);
                var a = this.context.listener
                  , s = this.up;
                this.matrixWorld.decompose(t, e, n),
                i.set(0, 0, -1).applyQuaternion(e),
                a.setPosition(t.x, t.y, t.z),
                a.setOrientation(i.x, i.y, i.z, s.x, s.y, s.z)
            }
        }(),
        r.Camera = function() {
            r.Object3D.call(this),
            this.type = "Camera",
            this.matrixWorldInverse = new r.Matrix4,
            this.projectionMatrix = new r.Matrix4
        }
        ,
        r.Camera.prototype = Object.create(r.Object3D.prototype),
        r.Camera.prototype.constructor = r.Camera,
        r.Camera.prototype.getWorldDirection = function() {
            var t = new r.Quaternion;
            return function(e) {
                var n = e || new r.Vector3;
                return this.getWorldQuaternion(t),
                n.set(0, 0, -1).applyQuaternion(t)
            }
        }(),
        r.Camera.prototype.lookAt = function() {
            var t = new r.Matrix4;
            return function(e) {
                t.lookAt(this.position, e, this.up),
                this.quaternion.setFromRotationMatrix(t)
            }
        }(),
        r.Camera.prototype.clone = function() {
            return (new this.constructor).copy(this)
        }
        ,
        r.Camera.prototype.copy = function(t) {
            return r.Object3D.prototype.copy.call(this, t),
            this.matrixWorldInverse.copy(t.matrixWorldInverse),
            this.projectionMatrix.copy(t.projectionMatrix),
            this
        }
        ,
        r.CubeCamera = function(t, e, n) {
            r.Object3D.call(this),
            this.type = "CubeCamera";
            var i = 90
              , o = 1
              , a = new r.PerspectiveCamera(i,o,t,e);
            a.up.set(0, -1, 0),
            a.lookAt(new r.Vector3(1,0,0)),
            this.add(a);
            var s = new r.PerspectiveCamera(i,o,t,e);
            s.up.set(0, -1, 0),
            s.lookAt(new r.Vector3((-1),0,0)),
            this.add(s);
            var h = new r.PerspectiveCamera(i,o,t,e);
            h.up.set(0, 0, 1),
            h.lookAt(new r.Vector3(0,1,0)),
            this.add(h);
            var u = new r.PerspectiveCamera(i,o,t,e);
            u.up.set(0, 0, -1),
            u.lookAt(new r.Vector3(0,(-1),0)),
            this.add(u);
            var l = new r.PerspectiveCamera(i,o,t,e);
            l.up.set(0, -1, 0),
            l.lookAt(new r.Vector3(0,0,1)),
            this.add(l);
            var c = new r.PerspectiveCamera(i,o,t,e);
            c.up.set(0, -1, 0),
            c.lookAt(new r.Vector3(0,0,(-1))),
            this.add(c);
            var p = {
                format: r.RGBFormat,
                magFilter: r.LinearFilter,
                minFilter: r.LinearFilter
            };
            this.renderTarget = new r.WebGLRenderTargetCube(n,n,p),
            this.updateCubeMap = function(t, e) {
                null === this.parent && this.updateMatrixWorld();
                var n = this.renderTarget
                  , r = n.texture.generateMipmaps;
                n.texture.generateMipmaps = !1,
                n.activeCubeFace = 0,
                t.render(e, a, n),
                n.activeCubeFace = 1,
                t.render(e, s, n),
                n.activeCubeFace = 2,
                t.render(e, h, n),
                n.activeCubeFace = 3,
                t.render(e, u, n),
                n.activeCubeFace = 4,
                t.render(e, l, n),
                n.texture.generateMipmaps = r,
                n.activeCubeFace = 5,
                t.render(e, c, n),
                t.setRenderTarget(null )
            }
        }
        ,
        r.CubeCamera.prototype = Object.create(r.Object3D.prototype),
        r.CubeCamera.prototype.constructor = r.CubeCamera,
        r.OrthographicCamera = function(t, e, n, i, o, a) {
            r.Camera.call(this),
            this.type = "OrthographicCamera",
            this.zoom = 1,
            this.left = t,
            this.right = e,
            this.top = n,
            this.bottom = i,
            this.near = void 0 !== o ? o : .1,
            this.far = void 0 !== a ? a : 2e3,
            this.updateProjectionMatrix()
        }
        ,
        r.OrthographicCamera.prototype = Object.create(r.Camera.prototype),
        r.OrthographicCamera.prototype.constructor = r.OrthographicCamera,
        r.OrthographicCamera.prototype.updateProjectionMatrix = function() {
            var t = (this.right - this.left) / (2 * this.zoom)
              , e = (this.top - this.bottom) / (2 * this.zoom)
              , n = (this.right + this.left) / 2
              , r = (this.top + this.bottom) / 2;
            this.projectionMatrix.makeOrthographic(n - t, n + t, r + e, r - e, this.near, this.far)
        }
        ,
        r.OrthographicCamera.prototype.copy = function(t) {
            return r.Camera.prototype.copy.call(this, t),
            this.left = t.left,
            this.right = t.right,
            this.top = t.top,
            this.bottom = t.bottom,
            this.near = t.near,
            this.far = t.far,
            this.zoom = t.zoom,
            this
        }
        ,
        r.OrthographicCamera.prototype.toJSON = function(t) {
            var e = r.Object3D.prototype.toJSON.call(this, t);
            return e.object.zoom = this.zoom,
            e.object.left = this.left,
            e.object.right = this.right,
            e.object.top = this.top,
            e.object.bottom = this.bottom,
            e.object.near = this.near,
            e.object.far = this.far,
            e
        }
        ,
        r.PerspectiveCamera = function(t, e, n, i) {
            r.Camera.call(this),
            this.type = "PerspectiveCamera",
            this.focalLength = 10,
            this.zoom = 1,
            this.fov = void 0 !== t ? t : 50,
            this.aspect = void 0 !== e ? e : 1,
            this.near = void 0 !== n ? n : .1,
            this.far = void 0 !== i ? i : 2e3,
            this.updateProjectionMatrix()
        }
        ,
        r.PerspectiveCamera.prototype = Object.create(r.Camera.prototype),
        r.PerspectiveCamera.prototype.constructor = r.PerspectiveCamera,
        r.PerspectiveCamera.prototype.setLens = function(t, e) {
            void 0 === e && (e = 24),
            this.fov = 2 * r.Math.radToDeg(Math.atan(e / (2 * t))),
            this.updateProjectionMatrix()
        }
        ,
        r.PerspectiveCamera.prototype.setViewOffset = function(t, e, n, r, i, o) {
            this.fullWidth = t,
            this.fullHeight = e,
            this.x = n,
            this.y = r,
            this.width = i,
            this.height = o,
            this.updateProjectionMatrix()
        }
        ,
        r.PerspectiveCamera.prototype.updateProjectionMatrix = function() {
            var t = r.Math.radToDeg(2 * Math.atan(Math.tan(.5 * r.Math.degToRad(this.fov)) / this.zoom));
            if (this.fullWidth) {
                var e = this.fullWidth / this.fullHeight
                  , n = Math.tan(r.Math.degToRad(.5 * t)) * this.near
                  , i = -n
                  , o = e * i
                  , a = e * n
                  , s = Math.abs(a - o)
                  , h = Math.abs(n - i);
                this.projectionMatrix.makeFrustum(o + this.x * s / this.fullWidth, o + (this.x + this.width) * s / this.fullWidth, n - (this.y + this.height) * h / this.fullHeight, n - this.y * h / this.fullHeight, this.near, this.far)
            } else
                this.projectionMatrix.makePerspective(t, this.aspect, this.near, this.far)
        }
        ,
        r.PerspectiveCamera.prototype.copy = function(t) {
            return r.Camera.prototype.copy.call(this, t),
            this.focalLength = t.focalLength,
            this.zoom = t.zoom,
            this.fov = t.fov,
            this.aspect = t.aspect,
            this.near = t.near,
            this.far = t.far,
            this
        }
        ,
        r.PerspectiveCamera.prototype.toJSON = function(t) {
            var e = r.Object3D.prototype.toJSON.call(this, t);
            return e.object.focalLength = this.focalLength,
            e.object.zoom = this.zoom,
            e.object.fov = this.fov,
            e.object.aspect = this.aspect,
            e.object.near = this.near,
            e.object.far = this.far,
            e
        }
        ,
        r.StereoCamera = function() {
            this.type = "StereoCamera",
            this.aspect = 1,
            this.cameraL = new r.PerspectiveCamera,
            this.cameraL.layers.enable(1),
            this.cameraL.matrixAutoUpdate = !1,
            this.cameraR = new r.PerspectiveCamera,
            this.cameraR.layers.enable(2),
            this.cameraR.matrixAutoUpdate = !1
        }
        ,
        r.StereoCamera.prototype = {
            constructor: r.StereoCamera,
            update: function() {
                var t, e, n, i, o, a = new r.Matrix4, s = new r.Matrix4;
                return function(h) {
                    var u = t !== h.focalLength || e !== h.fov || n !== h.aspect * this.aspect || i !== h.near || o !== h.far;
                    if (u) {
                        t = h.focalLength,
                        e = h.fov,
                        n = h.aspect * this.aspect,
                        i = h.near,
                        o = h.far;
                        var l, c, p = h.projectionMatrix.clone(), f = .032, d = f * i / t, m = i * Math.tan(r.Math.degToRad(.5 * e));
                        s.elements[12] = -f,
                        a.elements[12] = f,
                        l = -m * n + d,
                        c = m * n + d,
                        p.elements[0] = 2 * i / (c - l),
                        p.elements[8] = (c + l) / (c - l),
                        this.cameraL.projectionMatrix.copy(p),
                        l = -m * n - d,
                        c = m * n - d,
                        p.elements[0] = 2 * i / (c - l),
                        p.elements[8] = (c + l) / (c - l),
                        this.cameraR.projectionMatrix.copy(p)
                    }
                    this.cameraL.matrixWorld.copy(h.matrixWorld).multiply(s),
                    this.cameraR.matrixWorld.copy(h.matrixWorld).multiply(a)
                }
            }()
        },
        r.Light = function(t, e) {
            r.Object3D.call(this),
            this.type = "Light",
            this.color = new r.Color(t),
            this.intensity = void 0 !== e ? e : 1,
            this.receiveShadow = void 0
        }
        ,
        r.Light.prototype = Object.create(r.Object3D.prototype),
        r.Light.prototype.constructor = r.Light,
        r.Light.prototype.copy = function(t) {
            return r.Object3D.prototype.copy.call(this, t),
            this.color.copy(t.color),
            this.intensity = t.intensity,
            this
        }
        ,
        r.Light.prototype.toJSON = function(t) {
            var e = r.Object3D.prototype.toJSON.call(this, t);
            return e.object.color = this.color.getHex(),
            e.object.intensity = this.intensity,
            void 0 !== this.groundColor && (e.object.groundColor = this.groundColor.getHex()),
            void 0 !== this.distance && (e.object.distance = this.distance),
            void 0 !== this.angle && (e.object.angle = this.angle),
            void 0 !== this.decay && (e.object.decay = this.decay),
            void 0 !== this.penumbra && (e.object.penumbra = this.penumbra),
            e
        }
        ,
        r.LightShadow = function(t) {
            this.camera = t,
            this.bias = 0,
            this.radius = 1,
            this.mapSize = new r.Vector2(512,512),
            this.map = null ,
            this.matrix = new r.Matrix4
        }
        ,
        r.LightShadow.prototype = {
            constructor: r.LightShadow,
            copy: function(t) {
                return this.camera = t.camera.clone(),
                this.bias = t.bias,
                this.radius = t.radius,
                this.mapSize.copy(t.mapSize),
                this
            },
            clone: function() {
                return (new this.constructor).copy(this)
            }
        },
        r.AmbientLight = function(t, e) {
            r.Light.call(this, t, e),
            this.type = "AmbientLight",
            this.castShadow = void 0
        }
        ,
        r.AmbientLight.prototype = Object.create(r.Light.prototype),
        r.AmbientLight.prototype.constructor = r.AmbientLight,
        r.DirectionalLight = function(t, e) {
            r.Light.call(this, t, e),
            this.type = "DirectionalLight",
            this.position.set(0, 1, 0),
            this.updateMatrix(),
            this.target = new r.Object3D,
            this.shadow = new r.LightShadow(new r.OrthographicCamera((-5),5,5,(-5),.5,500))
        }
        ,
        r.DirectionalLight.prototype = Object.create(r.Light.prototype),
        r.DirectionalLight.prototype.constructor = r.DirectionalLight,
        r.DirectionalLight.prototype.copy = function(t) {
            return r.Light.prototype.copy.call(this, t),
            this.target = t.target.clone(),
            this.shadow = t.shadow.clone(),
            this
        }
        ,
        r.HemisphereLight = function(t, e, n) {
            r.Light.call(this, t, n),
            this.type = "HemisphereLight",
            this.castShadow = void 0,
            this.position.set(0, 1, 0),
            this.updateMatrix(),
            this.groundColor = new r.Color(e)
        }
        ,
        r.HemisphereLight.prototype = Object.create(r.Light.prototype),
        r.HemisphereLight.prototype.constructor = r.HemisphereLight,
        r.HemisphereLight.prototype.copy = function(t) {
            return r.Light.prototype.copy.call(this, t),
            this.groundColor.copy(t.groundColor),
            this
        }
        ,
        r.PointLight = function(t, e, n, i) {
            r.Light.call(this, t, e),
            this.type = "PointLight",
            this.distance = void 0 !== n ? n : 0,
            this.decay = void 0 !== i ? i : 1,
            this.shadow = new r.LightShadow(new r.PerspectiveCamera(90,1,.5,500))
        }
        ,
        r.PointLight.prototype = Object.create(r.Light.prototype),
        r.PointLight.prototype.constructor = r.PointLight,
        r.PointLight.prototype.copy = function(t) {
            return r.Light.prototype.copy.call(this, t),
            this.distance = t.distance,
            this.decay = t.decay,
            this.shadow = t.shadow.clone(),
            this
        }
        ,
        r.SpotLight = function(t, e, n, i, o, a) {
            r.Light.call(this, t, e),
            this.type = "SpotLight",
            this.position.set(0, 1, 0),
            this.updateMatrix(),
            this.target = new r.Object3D,
            this.distance = void 0 !== n ? n : 0,
            this.angle = void 0 !== i ? i : Math.PI / 3,
            this.penumbra = void 0 !== o ? o : 0,
            this.decay = void 0 !== a ? a : 1,
            this.shadow = new r.LightShadow(new r.PerspectiveCamera(50,1,.5,500))
        }
        ,
        r.SpotLight.prototype = Object.create(r.Light.prototype),
        r.SpotLight.prototype.constructor = r.SpotLight,
        r.SpotLight.prototype.copy = function(t) {
            return r.Light.prototype.copy.call(this, t),
            this.distance = t.distance,
            this.angle = t.angle,
            this.penumbra = t.penumbra,
            this.decay = t.decay,
            this.target = t.target.clone(),
            this.shadow = t.shadow.clone(),
            this
        }
        ,
        r.Cache = {
            enabled: !1,
            files: {},
            add: function(t, e) {
                this.enabled !== !1 && (this.files[t] = e)
            },
            get: function(t) {
                if (this.enabled !== !1)
                    return this.files[t]
            },
            remove: function(t) {
                delete this.files[t]
            },
            clear: function() {
                this.files = {}
            }
        },
        r.Loader = function() {
            this.onLoadStart = function() {}
            ,
            this.onLoadProgress = function() {}
            ,
            this.onLoadComplete = function() {}
        }
        ,
        r.Loader.prototype = {
            constructor: r.Loader,
            crossOrigin: void 0,
            extractUrlBase: function(t) {
                var e = t.split("/");
                return 1 === e.length ? "./" : (e.pop(),
                e.join("/") + "/")
            },
            initMaterials: function(t, e, n) {
                for (var r = [], i = 0; i < t.length; ++i)
                    r[i] = this.createMaterial(t[i], e, n);
                return r
            },
            createMaterial: function() {
                var t, e, n;
                return function(i, o, a) {
                    function s(t, n, i, s, u) {
                        var l, c = o + t, p = r.Loader.Handlers.get(c);
                        null !== p ? l = p.load(c) : (e.setCrossOrigin(a),
                        l = e.load(c)),
                        void 0 !== n && (l.repeat.fromArray(n),
                        1 !== n[0] && (l.wrapS = r.RepeatWrapping),
                        1 !== n[1] && (l.wrapT = r.RepeatWrapping)),
                        void 0 !== i && l.offset.fromArray(i),
                        void 0 !== s && ("repeat" === s[0] && (l.wrapS = r.RepeatWrapping),
                        "mirror" === s[0] && (l.wrapS = r.MirroredRepeatWrapping),
                        "repeat" === s[1] && (l.wrapT = r.RepeatWrapping),
                        "mirror" === s[1] && (l.wrapT = r.MirroredRepeatWrapping)),
                        void 0 !== u && (l.anisotropy = u);
                        var f = r.Math.generateUUID();
                        return h[f] = l,
                        f
                    }
                    void 0 === t && (t = new r.Color),
                    void 0 === e && (e = new r.TextureLoader),
                    void 0 === n && (n = new r.MaterialLoader);
                    var h = {}
                      , u = {
                        uuid: r.Math.generateUUID(),
                        type: "MeshLambertMaterial"
                    };
                    for (var l in i) {
                        var c = i[l];
                        switch (l) {
                        case "DbgColor":
                        case "DbgIndex":
                        case "opticalDensity":
                        case "illumination":
                            break;
                        case "DbgName":
                            u.name = c;
                            break;
                        case "blending":
                            u.blending = r[c];
                            break;
                        case "colorAmbient":
                        case "mapAmbient":
                            console.warn("THREE.Loader.createMaterial:", l, "is no longer supported.");
                            break;
                        case "colorDiffuse":
                            u.color = t.fromArray(c).getHex();
                            break;
                        case "colorSpecular":
                            u.specular = t.fromArray(c).getHex();
                            break;
                        case "colorEmissive":
                            u.emissive = t.fromArray(c).getHex();
                            break;
                        case "specularCoef":
                            u.shininess = c;
                            break;
                        case "shading":
                            "basic" === c.toLowerCase() && (u.type = "MeshBasicMaterial"),
                            "phong" === c.toLowerCase() && (u.type = "MeshPhongMaterial");
                            break;
                        case "mapDiffuse":
                            u.map = s(c, i.mapDiffuseRepeat, i.mapDiffuseOffset, i.mapDiffuseWrap, i.mapDiffuseAnisotropy);
                            break;
                        case "mapDiffuseRepeat":
                        case "mapDiffuseOffset":
                        case "mapDiffuseWrap":
                        case "mapDiffuseAnisotropy":
                            break;
                        case "mapLight":
                            u.lightMap = s(c, i.mapLightRepeat, i.mapLightOffset, i.mapLightWrap, i.mapLightAnisotropy);
                            break;
                        case "mapLightRepeat":
                        case "mapLightOffset":
                        case "mapLightWrap":
                        case "mapLightAnisotropy":
                            break;
                        case "mapAO":
                            u.aoMap = s(c, i.mapAORepeat, i.mapAOOffset, i.mapAOWrap, i.mapAOAnisotropy);
                            break;
                        case "mapAORepeat":
                        case "mapAOOffset":
                        case "mapAOWrap":
                        case "mapAOAnisotropy":
                            break;
                        case "mapBump":
                            u.bumpMap = s(c, i.mapBumpRepeat, i.mapBumpOffset, i.mapBumpWrap, i.mapBumpAnisotropy);
                            break;
                        case "mapBumpScale":
                            u.bumpScale = c;
                            break;
                        case "mapBumpRepeat":
                        case "mapBumpOffset":
                        case "mapBumpWrap":
                        case "mapBumpAnisotropy":
                            break;
                        case "mapNormal":
                            u.normalMap = s(c, i.mapNormalRepeat, i.mapNormalOffset, i.mapNormalWrap, i.mapNormalAnisotropy);
                            break;
                        case "mapNormalFactor":
                            u.normalScale = [c, c];
                            break;
                        case "mapNormalRepeat":
                        case "mapNormalOffset":
                        case "mapNormalWrap":
                        case "mapNormalAnisotropy":
                            break;
                        case "mapSpecular":
                            u.specularMap = s(c, i.mapSpecularRepeat, i.mapSpecularOffset, i.mapSpecularWrap, i.mapSpecularAnisotropy);
                            break;
                        case "mapSpecularRepeat":
                        case "mapSpecularOffset":
                        case "mapSpecularWrap":
                        case "mapSpecularAnisotropy":
                            break;
                        case "mapAlpha":
                            u.alphaMap = s(c, i.mapAlphaRepeat, i.mapAlphaOffset, i.mapAlphaWrap, i.mapAlphaAnisotropy);
                            break;
                        case "mapAlphaRepeat":
                        case "mapAlphaOffset":
                        case "mapAlphaWrap":
                        case "mapAlphaAnisotropy":
                            break;
                        case "flipSided":
                            u.side = r.BackSide;
                            break;
                        case "doubleSided":
                            u.side = r.DoubleSide;
                            break;
                        case "transparency":
                            console.warn("THREE.Loader.createMaterial: transparency has been renamed to opacity"),
                            u.opacity = c;
                            break;
                        case "depthTest":
                        case "depthWrite":
                        case "colorWrite":
                        case "opacity":
                        case "reflectivity":
                        case "transparent":
                        case "visible":
                        case "wireframe":
                            u[l] = c;
                            break;
                        case "vertexColors":
                            c === !0 && (u.vertexColors = r.VertexColors),
                            "face" === c && (u.vertexColors = r.FaceColors);
                            break;
                        default:
                            console.error("THREE.Loader.createMaterial: Unsupported", l, c)
                        }
                    }
                    return "MeshBasicMaterial" === u.type && delete u.emissive,
                    "MeshPhongMaterial" !== u.type && delete u.specular,
                    u.opacity < 1 && (u.transparent = !0),
                    n.setTextures(h),
                    n.parse(u)
                }
            }()
        },
        r.Loader.Handlers = {
            handlers: [],
            add: function(t, e) {
                this.handlers.push(t, e)
            },
            get: function(t) {
                for (var e = this.handlers, n = 0, r = e.length; n < r; n += 2) {
                    var i = e[n]
                      , o = e[n + 1];
                    if (i.test(t))
                        return o
                }
                return null
            }
        },
        r.XHRLoader = function(t) {
            this.manager = void 0 !== t ? t : r.DefaultLoadingManager
        }
        ,
        r.XHRLoader.prototype = {
            constructor: r.XHRLoader,
            load: function(t, e, n, i) {
                void 0 !== this.path && (t = this.path + t);
                var o = this
                  , a = r.Cache.get(t);
                if (void 0 !== a)
                    return e && setTimeout(function() {
                        e(a)
                    }, 0),
                    a;
                var s = new XMLHttpRequest;
                return s.overrideMimeType("text/plain"),
                s.open("GET", t, !0),
                s.addEventListener("load", function(n) {
                    var a = n.target.response;
                    r.Cache.add(t, a),
                    200 === this.status ? (e && e(a),
                    o.manager.itemEnd(t)) : 0 === this.status ? (console.warn("THREE.XHRLoader: HTTP Status 0 received."),
                    e && e(a),
                    o.manager.itemEnd(t)) : (i && i(n),
                    o.manager.itemError(t))
                }, !1),
                void 0 !== n && s.addEventListener("progress", function(t) {
                    n(t)
                }, !1),
                s.addEventListener("error", function(e) {
                    i && i(e),
                    o.manager.itemError(t)
                }, !1),
                void 0 !== this.responseType && (s.responseType = this.responseType),
                void 0 !== this.withCredentials && (s.withCredentials = this.withCredentials),
                s.send(null ),
                o.manager.itemStart(t),
                s
            },
            setPath: function(t) {
                this.path = t
            },
            setResponseType: function(t) {
                this.responseType = t
            },
            setWithCredentials: function(t) {
                this.withCredentials = t
            }
        },
        r.FontLoader = function(t) {
            this.manager = void 0 !== t ? t : r.DefaultLoadingManager
        }
        ,
        r.FontLoader.prototype = {
            constructor: r.FontLoader,
            load: function(t, e, n, i) {
                var o = new r.XHRLoader(this.manager);
                o.load(t, function(t) {
                    e(new r.Font(JSON.parse(t.substring(65, t.length - 2))))
                }, n, i)
            }
        },
        r.ImageLoader = function(t) {
            this.manager = void 0 !== t ? t : r.DefaultLoadingManager
        }
        ,
        r.ImageLoader.prototype = {
            constructor: r.ImageLoader,
            load: function(t, e, n, i) {
                void 0 !== this.path && (t = this.path + t);
                var o = this
                  , a = r.Cache.get(t);
                if (void 0 !== a)
                    return o.manager.itemStart(t),
                    e ? setTimeout(function() {
                        e(a),
                        o.manager.itemEnd(t)
                    }, 0) : o.manager.itemEnd(t),
                    a;
                var s = document.createElement("img");
                return s.addEventListener("load", function(n) {
                    r.Cache.add(t, this),
                    e && e(this),
                    o.manager.itemEnd(t)
                }, !1),
                void 0 !== n && s.addEventListener("progress", function(t) {
                    n(t)
                }, !1),
                s.addEventListener("error", function(e) {
                    i && i(e),
                    o.manager.itemError(t)
                }, !1),
                void 0 !== this.crossOrigin && (s.crossOrigin = this.crossOrigin),
                o.manager.itemStart(t),
                s.src = t,
                s
            },
            setCrossOrigin: function(t) {
                this.crossOrigin = t
            },
            setPath: function(t) {
                this.path = t
            }
        },
        r.JSONLoader = function(t) {
            "boolean" == typeof t && (console.warn("THREE.JSONLoader: showStatus parameter has been removed from constructor."),
            t = void 0),
            this.manager = void 0 !== t ? t : r.DefaultLoadingManager,
            this.withCredentials = !1
        }
        ,
        r.JSONLoader.prototype = {
            constructor: r.JSONLoader,
            get statusDomElement() {
                return void 0 === this._statusDomElement && (this._statusDomElement = document.createElement("div")),
                console.warn("THREE.JSONLoader: .statusDomElement has been removed."),
                this._statusDomElement
            },
            load: function(t, e, n, i) {
                var o = this
                  , a = this.texturePath && "string" == typeof this.texturePath ? this.texturePath : r.Loader.prototype.extractUrlBase(t)
                  , s = new r.XHRLoader(this.manager);
                s.setWithCredentials(this.withCredentials),
                s.load(t, function(n) {
                    var r = JSON.parse(n)
                      , i = r.metadata;
                    if (void 0 !== i) {
                        var s = i.type;
                        if (void 0 !== s) {
                            if ("object" === s.toLowerCase())
                                return void console.error("THREE.JSONLoader: " + t + " should be loaded with THREE.ObjectLoader instead.");
                            if ("scene" === s.toLowerCase())
                                return void console.error("THREE.JSONLoader: " + t + " should be loaded with THREE.SceneLoader instead.")
                        }
                    }
                    var h = o.parse(r, a);
                    e(h.geometry, h.materials)
                }, n, i)
            },
            setTexturePath: function(t) {
                this.texturePath = t
            },
            parse: function(t, e) {
                function n(e) {
                    function n(t, e) {
                        return t & 1 << e
                    }
                    var i, o, a, h, u, l, c, p, f, d, m, v, g, y, _, x, b, w, E, S, T, M, C, A, P, L, R, k = t.faces, O = t.vertices, I = t.normals, D = t.colors, U = 0;
                    if (void 0 !== t.uvs) {
                        for (i = 0; i < t.uvs.length; i++)
                            t.uvs[i].length && U++;
                        for (i = 0; i < U; i++)
                            s.faceVertexUvs[i] = []
                    }
                    for (h = 0,
                    u = O.length; h < u; )
                        w = new r.Vector3,
                        w.x = O[h++] * e,
                        w.y = O[h++] * e,
                        w.z = O[h++] * e,
                        s.vertices.push(w);
                    for (h = 0,
                    u = k.length; h < u; )
                        if (d = k[h++],
                        m = n(d, 0),
                        v = n(d, 1),
                        g = n(d, 3),
                        y = n(d, 4),
                        _ = n(d, 5),
                        x = n(d, 6),
                        b = n(d, 7),
                        m) {
                            if (S = new r.Face3,
                            S.a = k[h],
                            S.b = k[h + 1],
                            S.c = k[h + 3],
                            T = new r.Face3,
                            T.a = k[h + 1],
                            T.b = k[h + 2],
                            T.c = k[h + 3],
                            h += 4,
                            v && (f = k[h++],
                            S.materialIndex = f,
                            T.materialIndex = f),
                            a = s.faces.length,
                            g)
                                for (i = 0; i < U; i++)
                                    for (A = t.uvs[i],
                                    s.faceVertexUvs[i][a] = [],
                                    s.faceVertexUvs[i][a + 1] = [],
                                    o = 0; o < 4; o++)
                                        p = k[h++],
                                        L = A[2 * p],
                                        R = A[2 * p + 1],
                                        P = new r.Vector2(L,R),
                                        2 !== o && s.faceVertexUvs[i][a].push(P),
                                        0 !== o && s.faceVertexUvs[i][a + 1].push(P);
                            if (y && (c = 3 * k[h++],
                            S.normal.set(I[c++], I[c++], I[c]),
                            T.normal.copy(S.normal)),
                            _)
                                for (i = 0; i < 4; i++)
                                    c = 3 * k[h++],
                                    C = new r.Vector3(I[c++],I[c++],I[c]),
                                    2 !== i && S.vertexNormals.push(C),
                                    0 !== i && T.vertexNormals.push(C);
                            if (x && (l = k[h++],
                            M = D[l],
                            S.color.setHex(M),
                            T.color.setHex(M)),
                            b)
                                for (i = 0; i < 4; i++)
                                    l = k[h++],
                                    M = D[l],
                                    2 !== i && S.vertexColors.push(new r.Color(M)),
                                    0 !== i && T.vertexColors.push(new r.Color(M));
                            s.faces.push(S),
                            s.faces.push(T)
                        } else {
                            if (E = new r.Face3,
                            E.a = k[h++],
                            E.b = k[h++],
                            E.c = k[h++],
                            v && (f = k[h++],
                            E.materialIndex = f),
                            a = s.faces.length,
                            g)
                                for (i = 0; i < U; i++)
                                    for (A = t.uvs[i],
                                    s.faceVertexUvs[i][a] = [],
                                    o = 0; o < 3; o++)
                                        p = k[h++],
                                        L = A[2 * p],
                                        R = A[2 * p + 1],
                                        P = new r.Vector2(L,R),
                                        s.faceVertexUvs[i][a].push(P);
                            if (y && (c = 3 * k[h++],
                            E.normal.set(I[c++], I[c++], I[c])),
                            _)
                                for (i = 0; i < 3; i++)
                                    c = 3 * k[h++],
                                    C = new r.Vector3(I[c++],I[c++],I[c]),
                                    E.vertexNormals.push(C);
                            if (x && (l = k[h++],
                            E.color.setHex(D[l])),
                            b)
                                for (i = 0; i < 3; i++)
                                    l = k[h++],
                                    E.vertexColors.push(new r.Color(D[l]));
                            s.faces.push(E)
                        }
                }
                function i() {
                    var e = void 0 !== t.influencesPerVertex ? t.influencesPerVertex : 2;
                    if (t.skinWeights)
                        for (var n = 0, i = t.skinWeights.length; n < i; n += e) {
                            var o = t.skinWeights[n]
                              , a = e > 1 ? t.skinWeights[n + 1] : 0
                              , h = e > 2 ? t.skinWeights[n + 2] : 0
                              , u = e > 3 ? t.skinWeights[n + 3] : 0;
                            s.skinWeights.push(new r.Vector4(o,a,h,u))
                        }
                    if (t.skinIndices)
                        for (var n = 0, i = t.skinIndices.length; n < i; n += e) {
                            var l = t.skinIndices[n]
                              , c = e > 1 ? t.skinIndices[n + 1] : 0
                              , p = e > 2 ? t.skinIndices[n + 2] : 0
                              , f = e > 3 ? t.skinIndices[n + 3] : 0;
                            s.skinIndices.push(new r.Vector4(l,c,p,f))
                        }
                    s.bones = t.bones,
                    s.bones && s.bones.length > 0 && (s.skinWeights.length !== s.skinIndices.length || s.skinIndices.length !== s.vertices.length) && console.warn("When skinning, number of vertices (" + s.vertices.length + "), skinIndices (" + s.skinIndices.length + "), and skinWeights (" + s.skinWeights.length + ") should match.")
                }
                function o(e) {
                    if (void 0 !== t.morphTargets)
                        for (var n = 0, i = t.morphTargets.length; n < i; n++) {
                            s.morphTargets[n] = {},
                            s.morphTargets[n].name = t.morphTargets[n].name,
                            s.morphTargets[n].vertices = [];
                            for (var o = s.morphTargets[n].vertices, a = t.morphTargets[n].vertices, h = 0, u = a.length; h < u; h += 3) {
                                var l = new r.Vector3;
                                l.x = a[h] * e,
                                l.y = a[h + 1] * e,
                                l.z = a[h + 2] * e,
                                o.push(l)
                            }
                        }
                    if (void 0 !== t.morphColors && t.morphColors.length > 0) {
                        console.warn('THREE.JSONLoader: "morphColors" no longer supported. Using them as face colors.');
                        for (var c = s.faces, p = t.morphColors[0].colors, n = 0, i = c.length; n < i; n++)
                            c[n].color.fromArray(p, 3 * n)
                    }
                }
                function a() {
                    var e = []
                      , n = [];
                    void 0 !== t.animation && n.push(t.animation),
                    void 0 !== t.animations && (t.animations.length ? n = n.concat(t.animations) : n.push(t.animations));
                    for (var i = 0; i < n.length; i++) {
                        var o = r.AnimationClip.parseAnimation(n[i], s.bones);
                        o && e.push(o)
                    }
                    if (s.morphTargets) {
                        var a = r.AnimationClip.CreateClipsFromMorphTargetSequences(s.morphTargets, 10);
                        e = e.concat(a)
                    }
                    e.length > 0 && (s.animations = e)
                }
                var s = new r.Geometry
                  , h = void 0 !== t.scale ? 1 / t.scale : 1;
                if (n(h),
                i(),
                o(h),
                a(),
                s.computeFaceNormals(),
                s.computeBoundingSphere(),
                void 0 === t.materials || 0 === t.materials.length)
                    return {
                        geometry: s
                    };
                var u = r.Loader.prototype.initMaterials(t.materials, e, this.crossOrigin);
                return {
                    geometry: s,
                    materials: u
                }
            }
        },
        r.LoadingManager = function(t, e, n) {
            var r = this
              , i = !1
              , o = 0
              , a = 0;
            this.onStart = void 0,
            this.onLoad = t,
            this.onProgress = e,
            this.onError = n,
            this.itemStart = function(t) {
                a++,
                i === !1 && void 0 !== r.onStart && r.onStart(t, o, a),
                i = !0
            }
            ,
            this.itemEnd = function(t) {
                o++,
                void 0 !== r.onProgress && r.onProgress(t, o, a),
                o === a && (i = !1,
                void 0 !== r.onLoad && r.onLoad())
            }
            ,
            this.itemError = function(t) {
                void 0 !== r.onError && r.onError(t)
            }
        }
        ,
        r.DefaultLoadingManager = new r.LoadingManager,
        r.BufferGeometryLoader = function(t) {
            this.manager = void 0 !== t ? t : r.DefaultLoadingManager
        }
        ,
        r.BufferGeometryLoader.prototype = {
            constructor: r.BufferGeometryLoader,
            load: function(t, e, n, i) {
                var o = this
                  , a = new r.XHRLoader(o.manager);
                a.load(t, function(t) {
                    e(o.parse(JSON.parse(t)))
                }, n, i)
            },
            parse: function(t) {
                var e = new r.BufferGeometry
                  , n = t.data.index
                  , i = {
                    Int8Array: Int8Array,
                    Uint8Array: Uint8Array,
                    Uint8ClampedArray: Uint8ClampedArray,
                    Int16Array: Int16Array,
                    Uint16Array: Uint16Array,
                    Int32Array: Int32Array,
                    Uint32Array: Uint32Array,
                    Float32Array: Float32Array,
                    Float64Array: Float64Array
                };
                if (void 0 !== n) {
                    var o = new i[n.type](n.array);
                    e.setIndex(new r.BufferAttribute(o,1))
                }
                var a = t.data.attributes;
                for (var s in a) {
                    var h = a[s]
                      , o = new i[h.type](h.array);
                    e.addAttribute(s, new r.BufferAttribute(o,h.itemSize))
                }
                var u = t.data.groups || t.data.drawcalls || t.data.offsets;
                if (void 0 !== u)
                    for (var l = 0, c = u.length; l !== c; ++l) {
                        var p = u[l];
                        e.addGroup(p.start, p.count, p.materialIndex)
                    }
                var f = t.data.boundingSphere;
                if (void 0 !== f) {
                    var d = new r.Vector3;
                    void 0 !== f.center && d.fromArray(f.center),
                    e.boundingSphere = new r.Sphere(d,f.radius)
                }
                return e
            }
        },
        r.MaterialLoader = function(t) {
            this.manager = void 0 !== t ? t : r.DefaultLoadingManager,
            this.textures = {}
        }
        ,
        r.MaterialLoader.prototype = {
            constructor: r.MaterialLoader,
            load: function(t, e, n, i) {
                var o = this
                  , a = new r.XHRLoader(o.manager);
                a.load(t, function(t) {
                    e(o.parse(JSON.parse(t)))
                }, n, i)
            },
            setTextures: function(t) {
                this.textures = t
            },
            getTexture: function(t) {
                var e = this.textures;
                return void 0 === e[t] && console.warn("THREE.MaterialLoader: Undefined texture", t),
                e[t]
            },
            parse: function(t) {
                var e = new r[t.type];
                if (void 0 !== t.uuid && (e.uuid = t.uuid),
                void 0 !== t.name && (e.name = t.name),
                void 0 !== t.color && e.color.setHex(t.color),
                void 0 !== t.roughness && (e.roughness = t.roughness),
                void 0 !== t.metalness && (e.metalness = t.metalness),
                void 0 !== t.emissive && e.emissive.setHex(t.emissive),
                void 0 !== t.specular && e.specular.setHex(t.specular),
                void 0 !== t.shininess && (e.shininess = t.shininess),
                void 0 !== t.uniforms && (e.uniforms = t.uniforms),
                void 0 !== t.vertexShader && (e.vertexShader = t.vertexShader),
                void 0 !== t.fragmentShader && (e.fragmentShader = t.fragmentShader),
                void 0 !== t.vertexColors && (e.vertexColors = t.vertexColors),
                void 0 !== t.shading && (e.shading = t.shading),
                void 0 !== t.blending && (e.blending = t.blending),
                void 0 !== t.side && (e.side = t.side),
                void 0 !== t.opacity && (e.opacity = t.opacity),
                void 0 !== t.transparent && (e.transparent = t.transparent),
                void 0 !== t.alphaTest && (e.alphaTest = t.alphaTest),
                void 0 !== t.depthTest && (e.depthTest = t.depthTest),
                void 0 !== t.depthWrite && (e.depthWrite = t.depthWrite),
                void 0 !== t.colorWrite && (e.colorWrite = t.colorWrite),
                void 0 !== t.wireframe && (e.wireframe = t.wireframe),
                void 0 !== t.wireframeLinewidth && (e.wireframeLinewidth = t.wireframeLinewidth),
                void 0 !== t.size && (e.size = t.size),
                void 0 !== t.sizeAttenuation && (e.sizeAttenuation = t.sizeAttenuation),
                void 0 !== t.map && (e.map = this.getTexture(t.map)),
                void 0 !== t.alphaMap && (e.alphaMap = this.getTexture(t.alphaMap),
                e.transparent = !0),
                void 0 !== t.bumpMap && (e.bumpMap = this.getTexture(t.bumpMap)),
                void 0 !== t.bumpScale && (e.bumpScale = t.bumpScale),
                void 0 !== t.normalMap && (e.normalMap = this.getTexture(t.normalMap)),
                void 0 !== t.normalScale) {
                    var n = t.normalScale;
                    Array.isArray(n) === !1 && (n = [n, n]),
                    e.normalScale = (new r.Vector2).fromArray(n)
                }
                if (void 0 !== t.displacementMap && (e.displacementMap = this.getTexture(t.displacementMap)),
                void 0 !== t.displacementScale && (e.displacementScale = t.displacementScale),
                void 0 !== t.displacementBias && (e.displacementBias = t.displacementBias),
                void 0 !== t.roughnessMap && (e.roughnessMap = this.getTexture(t.roughnessMap)),
                void 0 !== t.metalnessMap && (e.metalnessMap = this.getTexture(t.metalnessMap)),
                void 0 !== t.emissiveMap && (e.emissiveMap = this.getTexture(t.emissiveMap)),
                void 0 !== t.emissiveIntensity && (e.emissiveIntensity = t.emissiveIntensity),
                void 0 !== t.specularMap && (e.specularMap = this.getTexture(t.specularMap)),
                void 0 !== t.envMap && (e.envMap = this.getTexture(t.envMap),
                e.combine = r.MultiplyOperation),
                t.reflectivity && (e.reflectivity = t.reflectivity),
                void 0 !== t.lightMap && (e.lightMap = this.getTexture(t.lightMap)),
                void 0 !== t.lightMapIntensity && (e.lightMapIntensity = t.lightMapIntensity),
                void 0 !== t.aoMap && (e.aoMap = this.getTexture(t.aoMap)),
                void 0 !== t.aoMapIntensity && (e.aoMapIntensity = t.aoMapIntensity),
                void 0 !== t.materials)
                    for (var i = 0, o = t.materials.length; i < o; i++)
                        e.materials.push(this.parse(t.materials[i]));
                return e
            }
        },
        r.ObjectLoader = function(t) {
            this.manager = void 0 !== t ? t : r.DefaultLoadingManager,
            this.texturePath = ""
        }
        ,
        r.ObjectLoader.prototype = {
            constructor: r.ObjectLoader,
            load: function(t, e, n, i) {
                "" === this.texturePath && (this.texturePath = t.substring(0, t.lastIndexOf("/") + 1));
                var o = this
                  , a = new r.XHRLoader(o.manager);
                a.load(t, function(t) {
                    o.parse(JSON.parse(t), e)
                }, n, i)
            },
            setTexturePath: function(t) {
                this.texturePath = t
            },
            setCrossOrigin: function(t) {
                this.crossOrigin = t
            },
            parse: function(t, e) {
                var n = this.parseGeometries(t.geometries)
                  , r = this.parseImages(t.images, function() {
                    void 0 !== e && e(a)
                })
                  , i = this.parseTextures(t.textures, r)
                  , o = this.parseMaterials(t.materials, i)
                  , a = this.parseObject(t.object, n, o);
                return t.animations && (a.animations = this.parseAnimations(t.animations)),
                void 0 !== t.images && 0 !== t.images.length || void 0 !== e && e(a),
                a
            },
            parseGeometries: function(t) {
                var e = {};
                if (void 0 !== t)
                    for (var n = new r.JSONLoader, i = new r.BufferGeometryLoader, o = 0, a = t.length; o < a; o++) {
                        var s, h = t[o];
                        switch (h.type) {
                        case "PlaneGeometry":
                        case "PlaneBufferGeometry":
                            s = new r[h.type](h.width,h.height,h.widthSegments,h.heightSegments);
                            break;
                        case "BoxGeometry":
                        case "CubeGeometry":
                            s = new r.BoxGeometry(h.width,h.height,h.depth,h.widthSegments,h.heightSegments,h.depthSegments);
                            break;
                        case "CircleBufferGeometry":
                            s = new r.CircleBufferGeometry(h.radius,h.segments,h.thetaStart,h.thetaLength);
                            break;
                        case "CircleGeometry":
                            s = new r.CircleGeometry(h.radius,h.segments,h.thetaStart,h.thetaLength);
                            break;
                        case "CylinderGeometry":
                            s = new r.CylinderGeometry(h.radiusTop,h.radiusBottom,h.height,h.radialSegments,h.heightSegments,h.openEnded,h.thetaStart,h.thetaLength);
                            break;
                        case "SphereGeometry":
                            s = new r.SphereGeometry(h.radius,h.widthSegments,h.heightSegments,h.phiStart,h.phiLength,h.thetaStart,h.thetaLength);
                            break;
                        case "SphereBufferGeometry":
                            s = new r.SphereBufferGeometry(h.radius,h.widthSegments,h.heightSegments,h.phiStart,h.phiLength,h.thetaStart,h.thetaLength);
                            break;
                        case "DodecahedronGeometry":
                            s = new r.DodecahedronGeometry(h.radius,h.detail);
                            break;
                        case "IcosahedronGeometry":
                            s = new r.IcosahedronGeometry(h.radius,h.detail);
                            break;
                        case "OctahedronGeometry":
                            s = new r.OctahedronGeometry(h.radius,h.detail);
                            break;
                        case "TetrahedronGeometry":
                            s = new r.TetrahedronGeometry(h.radius,h.detail);
                            break;
                        case "RingGeometry":
                            s = new r.RingGeometry(h.innerRadius,h.outerRadius,h.thetaSegments,h.phiSegments,h.thetaStart,h.thetaLength);
                            break;
                        case "TorusGeometry":
                            s = new r.TorusGeometry(h.radius,h.tube,h.radialSegments,h.tubularSegments,h.arc);
                            break;
                        case "TorusKnotGeometry":
                            s = new r.TorusKnotGeometry(h.radius,h.tube,h.radialSegments,h.tubularSegments,h.p,h.q,h.heightScale);
                            break;
                        case "LatheGeometry":
                            s = new r.LatheGeometry(h.points,h.segments,h.phiStart,h.phiLength);
                            break;
                        case "BufferGeometry":
                            s = i.parse(h);
                            break;
                        case "Geometry":
                            s = n.parse(h.data, this.texturePath).geometry;
                            break;
                        default:
                            console.warn('THREE.ObjectLoader: Unsupported geometry type "' + h.type + '"');
                            continue
                        }
                        s.uuid = h.uuid,
                        void 0 !== h.name && (s.name = h.name),
                        e[h.uuid] = s
                    }
                return e
            },
            parseMaterials: function(t, e) {
                var n = {};
                if (void 0 !== t) {
                    var i = new r.MaterialLoader;
                    i.setTextures(e);
                    for (var o = 0, a = t.length; o < a; o++) {
                        var s = i.parse(t[o]);
                        n[s.uuid] = s
                    }
                }
                return n
            },
            parseAnimations: function(t) {
                for (var e = [], n = 0; n < t.length; n++) {
                    var i = r.AnimationClip.parse(t[n]);
                    e.push(i)
                }
                return e
            },
            parseImages: function(t, e) {
                function n(t) {
                    return i.manager.itemStart(t),
                    s.load(t, function() {
                        i.manager.itemEnd(t)
                    })
                }
                var i = this
                  , o = {};
                if (void 0 !== t && t.length > 0) {
                    var a = new r.LoadingManager(e)
                      , s = new r.ImageLoader(a);
                    s.setCrossOrigin(this.crossOrigin);
                    for (var h = 0, u = t.length; h < u; h++) {
                        var l = t[h]
                          , c = /^(\/\/)|([a-z]+:(\/\/)?)/i.test(l.url) ? l.url : i.texturePath + l.url;
                        o[l.uuid] = n(c)
                    }
                }
                return o
            },
            parseTextures: function(t, e) {
                function n(t) {
                    return "number" == typeof t ? t : (console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.", t),
                    r[t])
                }
                var i = {};
                if (void 0 !== t)
                    for (var o = 0, a = t.length; o < a; o++) {
                        var s = t[o];
                        void 0 === s.image && console.warn('THREE.ObjectLoader: No "image" specified for', s.uuid),
                        void 0 === e[s.image] && console.warn("THREE.ObjectLoader: Undefined image", s.image);
                        var h = new r.Texture(e[s.image]);
                        h.needsUpdate = !0,
                        h.uuid = s.uuid,
                        void 0 !== s.name && (h.name = s.name),
                        void 0 !== s.mapping && (h.mapping = n(s.mapping)),
                        void 0 !== s.offset && (h.offset = new r.Vector2(s.offset[0],s.offset[1])),
                        void 0 !== s.repeat && (h.repeat = new r.Vector2(s.repeat[0],s.repeat[1])),
                        void 0 !== s.minFilter && (h.minFilter = n(s.minFilter)),
                        void 0 !== s.magFilter && (h.magFilter = n(s.magFilter)),
                        void 0 !== s.anisotropy && (h.anisotropy = s.anisotropy),
                        Array.isArray(s.wrap) && (h.wrapS = n(s.wrap[0]),
                        h.wrapT = n(s.wrap[1])),
                        i[s.uuid] = h
                    }
                return i
            },
            parseObject: function() {
                var t = new r.Matrix4;
                return function(e, n, i) {
                    function o(t) {
                        return void 0 === n[t] && console.warn("THREE.ObjectLoader: Undefined geometry", t),
                        n[t]
                    }
                    function a(t) {
                        if (void 0 !== t)
                            return void 0 === i[t] && console.warn("THREE.ObjectLoader: Undefined material", t),
                            i[t]
                    }
                    var s;
                    switch (e.type) {
                    case "Scene":
                        s = new r.Scene;
                        break;
                    case "PerspectiveCamera":
                        s = new r.PerspectiveCamera(e.fov,e.aspect,e.near,e.far);
                        break;
                    case "OrthographicCamera":
                        s = new r.OrthographicCamera(e.left,e.right,e.top,e.bottom,e.near,e.far);
                        break;
                    case "AmbientLight":
                        s = new r.AmbientLight(e.color,e.intensity);
                        break;
                    case "DirectionalLight":
                        s = new r.DirectionalLight(e.color,e.intensity);
                        break;
                    case "PointLight":
                        s = new r.PointLight(e.color,e.intensity,e.distance,e.decay);
                        break;
                    case "SpotLight":
                        s = new r.SpotLight(e.color,e.intensity,e.distance,e.angle,e.penumbra,e.decay);
                        break;
                    case "HemisphereLight":
                        s = new r.HemisphereLight(e.color,e.groundColor,e.intensity);
                        break;
                    case "Mesh":
                        var h = o(e.geometry)
                          , u = a(e.material);
                        s = h.bones && h.bones.length > 0 ? new r.SkinnedMesh(h,u) : new r.Mesh(h,u);
                        break;
                    case "LOD":
                        s = new r.LOD;
                        break;
                    case "Line":
                        s = new r.Line(o(e.geometry),a(e.material),e.mode);
                        break;
                    case "PointCloud":
                    case "Points":
                        s = new r.Points(o(e.geometry),a(e.material));
                        break;
                    case "Sprite":
                        s = new r.Sprite(a(e.material));
                        break;
                    case "Group":
                        s = new r.Group;
                        break;
                    default:
                        s = new r.Object3D
                    }
                    if (s.uuid = e.uuid,
                    void 0 !== e.name && (s.name = e.name),
                    void 0 !== e.matrix ? (t.fromArray(e.matrix),
                    t.decompose(s.position, s.quaternion, s.scale)) : (void 0 !== e.position && s.position.fromArray(e.position),
                    void 0 !== e.rotation && s.rotation.fromArray(e.rotation),
                    void 0 !== e.scale && s.scale.fromArray(e.scale)),
                    void 0 !== e.castShadow && (s.castShadow = e.castShadow),
                    void 0 !== e.receiveShadow && (s.receiveShadow = e.receiveShadow),
                    void 0 !== e.visible && (s.visible = e.visible),
                    void 0 !== e.userData && (s.userData = e.userData),
                    void 0 !== e.children)
                        for (var l in e.children)
                            s.add(this.parseObject(e.children[l], n, i));
                    if ("LOD" === e.type)
                        for (var c = e.levels, p = 0; p < c.length; p++) {
                            var f = c[p]
                              , l = s.getObjectByProperty("uuid", f.object);
                            void 0 !== l && s.addLevel(l, f.distance)
                        }
                    return s
                }
            }()
        },
        r.TextureLoader = function(t) {
            this.manager = void 0 !== t ? t : r.DefaultLoadingManager
        }
        ,
        r.TextureLoader.prototype = {
            constructor: r.TextureLoader,
            load: function(t, e, n, i) {
                var o = new r.Texture
                  , a = new r.ImageLoader(this.manager);
                return a.setCrossOrigin(this.crossOrigin),
                a.setPath(this.path),
                a.load(t, function(t) {
                    o.image = t,
                    o.needsUpdate = !0,
                    void 0 !== e && e(o)
                }, n, i),
                o
            },
            setCrossOrigin: function(t) {
                this.crossOrigin = t
            },
            setPath: function(t) {
                this.path = t
            }
        },
        r.CubeTextureLoader = function(t) {
            this.manager = void 0 !== t ? t : r.DefaultLoadingManager
        }
        ,
        r.CubeTextureLoader.prototype = {
            constructor: r.CubeTextureLoader,
            load: function(t, e, n, i) {
                function o(n) {
                    s.load(t[n], function(t) {
                        a.images[n] = t,
                        h++,
                        6 === h && (a.needsUpdate = !0,
                        e && e(a))
                    }, void 0, i)
                }
                var a = new r.CubeTexture([])
                  , s = new r.ImageLoader(this.manager);
                s.setCrossOrigin(this.crossOrigin),
                s.setPath(this.path);
                for (var h = 0, u = 0; u < t.length; ++u)
                    o(u);
                return a
            },
            setCrossOrigin: function(t) {
                this.crossOrigin = t
            },
            setPath: function(t) {
                this.path = t
            }
        },
        r.DataTextureLoader = r.BinaryTextureLoader = function(t) {
            this.manager = void 0 !== t ? t : r.DefaultLoadingManager,
            this._parser = null
        }
        ,
        r.BinaryTextureLoader.prototype = {
            constructor: r.BinaryTextureLoader,
            load: function(t, e, n, i) {
                var o = this
                  , a = new r.DataTexture
                  , s = new r.XHRLoader(this.manager);
                return s.setResponseType("arraybuffer"),
                s.load(t, function(t) {
                    var n = o._parser(t);
                    n && (void 0 !== n.image ? a.image = n.image : void 0 !== n.data && (a.image.width = n.width,
                    a.image.height = n.height,
                    a.image.data = n.data),
                    a.wrapS = void 0 !== n.wrapS ? n.wrapS : r.ClampToEdgeWrapping,
                    a.wrapT = void 0 !== n.wrapT ? n.wrapT : r.ClampToEdgeWrapping,
                    a.magFilter = void 0 !== n.magFilter ? n.magFilter : r.LinearFilter,
                    a.minFilter = void 0 !== n.minFilter ? n.minFilter : r.LinearMipMapLinearFilter,
                    a.anisotropy = void 0 !== n.anisotropy ? n.anisotropy : 1,
                    void 0 !== n.format && (a.format = n.format),
                    void 0 !== n.type && (a.type = n.type),
                    void 0 !== n.mipmaps && (a.mipmaps = n.mipmaps),
                    1 === n.mipmapCount && (a.minFilter = r.LinearFilter),
                    a.needsUpdate = !0,
                    e && e(a, n))
                }, n, i),
                a
            }
        },
        r.CompressedTextureLoader = function(t) {
            this.manager = void 0 !== t ? t : r.DefaultLoadingManager,
            this._parser = null
        }
        ,
        r.CompressedTextureLoader.prototype = {
            constructor: r.CompressedTextureLoader,
            load: function(t, e, n, i) {
                function o(o) {
                    u.load(t[o], function(t) {
                        var n = a._parser(t, !0);
                        s[o] = {
                            width: n.width,
                            height: n.height,
                            format: n.format,
                            mipmaps: n.mipmaps
                        },
                        l += 1,
                        6 === l && (1 === n.mipmapCount && (h.minFilter = r.LinearFilter),
                        h.format = n.format,
                        h.needsUpdate = !0,
                        e && e(h))
                    }, n, i)
                }
                var a = this
                  , s = []
                  , h = new r.CompressedTexture;
                h.image = s;
                var u = new r.XHRLoader(this.manager);
                if (u.setPath(this.path),
                u.setResponseType("arraybuffer"),
                Array.isArray(t))
                    for (var l = 0, c = 0, p = t.length; c < p; ++c)
                        o(c);
                else
                    u.load(t, function(t) {
                        var n = a._parser(t, !0);
                        if (n.isCubemap)
                            for (var i = n.mipmaps.length / n.mipmapCount, o = 0; o < i; o++) {
                                s[o] = {
                                    mipmaps: []
                                };
                                for (var u = 0; u < n.mipmapCount; u++)
                                    s[o].mipmaps.push(n.mipmaps[o * n.mipmapCount + u]),
                                    s[o].format = n.format,
                                    s[o].width = n.width,
                                    s[o].height = n.height
                            }
                        else
                            h.image.width = n.width,
                            h.image.height = n.height,
                            h.mipmaps = n.mipmaps;
                        1 === n.mipmapCount && (h.minFilter = r.LinearFilter),
                        h.format = n.format,
                        h.needsUpdate = !0,
                        e && e(h)
                    }, n, i);
                return h
            },
            setPath: function(t) {
                this.path = t
            }
        },
        r.Material = function() {
            Object.defineProperty(this, "id", {
                value: r.MaterialIdCount++
            }),
            this.uuid = r.Math.generateUUID(),
            this.name = "",
            this.type = "Material",
            this.side = r.FrontSide,
            this.opacity = 1,
            this.transparent = !1,
            this.blending = r.NormalBlending,
            this.blendSrc = r.SrcAlphaFactor,
            this.blendDst = r.OneMinusSrcAlphaFactor,
            this.blendEquation = r.AddEquation,
            this.blendSrcAlpha = null ,
            this.blendDstAlpha = null ,
            this.blendEquationAlpha = null ,
            this.depthFunc = r.LessEqualDepth,
            this.depthTest = !0,
            this.depthWrite = !0,
            this.colorWrite = !0,
            this.precision = null ,
            this.polygonOffset = !1,
            this.polygonOffsetFactor = 0,
            this.polygonOffsetUnits = 0,
            this.alphaTest = 0,
            this.overdraw = 0,
            this.visible = !0,
            this._needsUpdate = !0
        }
        ,
        r.Material.prototype = {
            constructor: r.Material,
            get needsUpdate() {
                return this._needsUpdate
            },
            set needsUpdate(t) {
                t === !0 && this.update(),
                this._needsUpdate = t
            },
            setValues: function(t) {
                if (void 0 !== t)
                    for (var e in t) {
                        var n = t[e];
                        if (void 0 !== n) {
                            var i = this[e];
                            void 0 !== i ? i instanceof r.Color ? i.set(n) : i instanceof r.Vector3 && n instanceof r.Vector3 ? i.copy(n) : "overdraw" === e ? this[e] = Number(n) : this[e] = n : console.warn("THREE." + this.type + ": '" + e + "' is not a property of this material.")
                        } else
                            console.warn("THREE.Material: '" + e + "' parameter is undefined.")
                    }
            },
            toJSON: function(t) {
                function e(t) {
                    var e = [];
                    for (var n in t) {
                        var r = t[n];
                        delete r.metadata,
                        e.push(r)
                    }
                    return e
                }
                var n = void 0 === t;
                n && (t = {
                    textures: {},
                    images: {}
                });
                var i = {
                    metadata: {
                        version: 4.4,
                        type: "Material",
                        generator: "Material.toJSON"
                    }
                };
                if (i.uuid = this.uuid,
                i.type = this.type,
                "" !== this.name && (i.name = this.name),
                this.color instanceof r.Color && (i.color = this.color.getHex()),
                .5 !== this.roughness && (i.roughness = this.roughness),
                .5 !== this.metalness && (i.metalness = this.metalness),
                this.emissive instanceof r.Color && (i.emissive = this.emissive.getHex()),
                this.specular instanceof r.Color && (i.specular = this.specular.getHex()),
                void 0 !== this.shininess && (i.shininess = this.shininess),
                this.map instanceof r.Texture && (i.map = this.map.toJSON(t).uuid),
                this.alphaMap instanceof r.Texture && (i.alphaMap = this.alphaMap.toJSON(t).uuid),
                this.lightMap instanceof r.Texture && (i.lightMap = this.lightMap.toJSON(t).uuid),
                this.bumpMap instanceof r.Texture && (i.bumpMap = this.bumpMap.toJSON(t).uuid,
                i.bumpScale = this.bumpScale),
                this.normalMap instanceof r.Texture && (i.normalMap = this.normalMap.toJSON(t).uuid,
                i.normalScale = this.normalScale.toArray()),
                this.displacementMap instanceof r.Texture && (i.displacementMap = this.displacementMap.toJSON(t).uuid,
                i.displacementScale = this.displacementScale,
                i.displacementBias = this.displacementBias),
                this.roughnessMap instanceof r.Texture && (i.roughnessMap = this.roughnessMap.toJSON(t).uuid),
                this.metalnessMap instanceof r.Texture && (i.metalnessMap = this.metalnessMap.toJSON(t).uuid),
                this.emissiveMap instanceof r.Texture && (i.emissiveMap = this.emissiveMap.toJSON(t).uuid),
                this.specularMap instanceof r.Texture && (i.specularMap = this.specularMap.toJSON(t).uuid),
                this.envMap instanceof r.Texture && (i.envMap = this.envMap.toJSON(t).uuid,
                i.reflectivity = this.reflectivity),
                void 0 !== this.size && (i.size = this.size),
                void 0 !== this.sizeAttenuation && (i.sizeAttenuation = this.sizeAttenuation),
                void 0 !== this.vertexColors && this.vertexColors !== r.NoColors && (i.vertexColors = this.vertexColors),
                void 0 !== this.shading && this.shading !== r.SmoothShading && (i.shading = this.shading),
                void 0 !== this.blending && this.blending !== r.NormalBlending && (i.blending = this.blending),
                void 0 !== this.side && this.side !== r.FrontSide && (i.side = this.side),
                this.opacity < 1 && (i.opacity = this.opacity),
                this.transparent === !0 && (i.transparent = this.transparent),
                this.alphaTest > 0 && (i.alphaTest = this.alphaTest),
                this.wireframe === !0 && (i.wireframe = this.wireframe),
                this.wireframeLinewidth > 1 && (i.wireframeLinewidth = this.wireframeLinewidth),
                n) {
                    var o = e(t.textures)
                      , a = e(t.images);
                    o.length > 0 && (i.textures = o),
                    a.length > 0 && (i.images = a)
                }
                return i
            },
            clone: function() {
                return (new this.constructor).copy(this)
            },
            copy: function(t) {
                return this.name = t.name,
                this.side = t.side,
                this.opacity = t.opacity,
                this.transparent = t.transparent,
                this.blending = t.blending,
                this.blendSrc = t.blendSrc,
                this.blendDst = t.blendDst,
                this.blendEquation = t.blendEquation,
                this.blendSrcAlpha = t.blendSrcAlpha,
                this.blendDstAlpha = t.blendDstAlpha,
                this.blendEquationAlpha = t.blendEquationAlpha,
                this.depthFunc = t.depthFunc,
                this.depthTest = t.depthTest,
                this.depthWrite = t.depthWrite,
                this.colorWrite = t.colorWrite,
                this.precision = t.precision,
                this.polygonOffset = t.polygonOffset,
                this.polygonOffsetFactor = t.polygonOffsetFactor,
                this.polygonOffsetUnits = t.polygonOffsetUnits,
                this.alphaTest = t.alphaTest,
                this.overdraw = t.overdraw,
                this.visible = t.visible,
                this
            },
            update: function() {
                this.dispatchEvent({
                    type: "update"
                })
            },
            dispose: function() {
                this.dispatchEvent({
                    type: "dispose"
                })
            }
        },
        r.EventDispatcher.prototype.apply(r.Material.prototype),
        r.MaterialIdCount = 0,
        r.LineBasicMaterial = function(t) {
            r.Material.call(this),
            this.type = "LineBasicMaterial",
            this.color = new r.Color(16777215),
            this.linewidth = 1,
            this.linecap = "round",
            this.linejoin = "round",
            this.vertexColors = r.NoColors,
            this.fog = !0,
            this.setValues(t)
        }
        ,
        r.LineBasicMaterial.prototype = Object.create(r.Material.prototype),
        r.LineBasicMaterial.prototype.constructor = r.LineBasicMaterial,
        r.LineBasicMaterial.prototype.copy = function(t) {
            return r.Material.prototype.copy.call(this, t),
            this.color.copy(t.color),
            this.linewidth = t.linewidth,
            this.linecap = t.linecap,
            this.linejoin = t.linejoin,
            this.vertexColors = t.vertexColors,
            this.fog = t.fog,
            this
        }
        ,
        r.LineDashedMaterial = function(t) {
            r.Material.call(this),
            this.type = "LineDashedMaterial",
            this.color = new r.Color(16777215),
            this.linewidth = 1,
            this.scale = 1,
            this.dashSize = 3,
            this.gapSize = 1,
            this.vertexColors = r.NoColors,
            this.fog = !0,
            this.setValues(t)
        }
        ,
        r.LineDashedMaterial.prototype = Object.create(r.Material.prototype),
        r.LineDashedMaterial.prototype.constructor = r.LineDashedMaterial,
        r.LineDashedMaterial.prototype.copy = function(t) {
            return r.Material.prototype.copy.call(this, t),
            this.color.copy(t.color),
            this.linewidth = t.linewidth,
            this.scale = t.scale,
            this.dashSize = t.dashSize,
            this.gapSize = t.gapSize,
            this.vertexColors = t.vertexColors,
            this.fog = t.fog,
            this
        }
        ,
        r.MeshBasicMaterial = function(t) {
            r.Material.call(this),
            this.type = "MeshBasicMaterial",
            this.color = new r.Color(16777215),
            this.map = null ,
            this.aoMap = null ,
            this.aoMapIntensity = 1,
            this.specularMap = null ,
            this.alphaMap = null ,
            this.envMap = null ,
            this.combine = r.MultiplyOperation,
            this.reflectivity = 1,
            this.refractionRatio = .98,
            this.fog = !0,
            this.shading = r.SmoothShading,
            this.wireframe = !1,
            this.wireframeLinewidth = 1,
            this.wireframeLinecap = "round",
            this.wireframeLinejoin = "round",
            this.vertexColors = r.NoColors,
            this.skinning = !1,
            this.morphTargets = !1,
            this.setValues(t)
        }
        ,
        r.MeshBasicMaterial.prototype = Object.create(r.Material.prototype),
        r.MeshBasicMaterial.prototype.constructor = r.MeshBasicMaterial,
        r.MeshBasicMaterial.prototype.copy = function(t) {
            return r.Material.prototype.copy.call(this, t),
            this.color.copy(t.color),
            this.map = t.map,
            this.aoMap = t.aoMap,
            this.aoMapIntensity = t.aoMapIntensity,
            this.specularMap = t.specularMap,
            this.alphaMap = t.alphaMap,
            this.envMap = t.envMap,
            this.combine = t.combine,
            this.reflectivity = t.reflectivity,
            this.refractionRatio = t.refractionRatio,
            this.fog = t.fog,
            this.shading = t.shading,
            this.wireframe = t.wireframe,
            this.wireframeLinewidth = t.wireframeLinewidth,
            this.wireframeLinecap = t.wireframeLinecap,
            this.wireframeLinejoin = t.wireframeLinejoin,
            this.vertexColors = t.vertexColors,
            this.skinning = t.skinning,
            this.morphTargets = t.morphTargets,
            this
        }
        ,
        r.MeshLambertMaterial = function(t) {
            r.Material.call(this),
            this.type = "MeshLambertMaterial",
            this.color = new r.Color(16777215),
            this.map = null ,
            this.lightMap = null ,
            this.lightMapIntensity = 1,
            this.aoMap = null ,
            this.aoMapIntensity = 1,
            this.emissive = new r.Color(0),
            this.emissiveIntensity = 1,
            this.emissiveMap = null ,
            this.specularMap = null ,
            this.alphaMap = null ,
            this.envMap = null ,
            this.combine = r.MultiplyOperation,
            this.reflectivity = 1,
            this.refractionRatio = .98,
            this.fog = !0,
            this.wireframe = !1,
            this.wireframeLinewidth = 1,
            this.wireframeLinecap = "round",
            this.wireframeLinejoin = "round",
            this.vertexColors = r.NoColors,
            this.skinning = !1,
            this.morphTargets = !1,
            this.morphNormals = !1,
            this.setValues(t)
        }
        ,
        r.MeshLambertMaterial.prototype = Object.create(r.Material.prototype),
        r.MeshLambertMaterial.prototype.constructor = r.MeshLambertMaterial,
        r.MeshLambertMaterial.prototype.copy = function(t) {
            return r.Material.prototype.copy.call(this, t),
            this.color.copy(t.color),
            this.map = t.map,
            this.lightMap = t.lightMap,
            this.lightMapIntensity = t.lightMapIntensity,
            this.aoMap = t.aoMap,
            this.aoMapIntensity = t.aoMapIntensity,
            this.emissive.copy(t.emissive),
            this.emissiveMap = t.emissiveMap,
            this.emissiveIntensity = t.emissiveIntensity,
            this.specularMap = t.specularMap,
            this.alphaMap = t.alphaMap,
            this.envMap = t.envMap,
            this.combine = t.combine,
            this.reflectivity = t.reflectivity,
            this.refractionRatio = t.refractionRatio,
            this.fog = t.fog,
            this.wireframe = t.wireframe,
            this.wireframeLinewidth = t.wireframeLinewidth,
            this.wireframeLinecap = t.wireframeLinecap,
            this.wireframeLinejoin = t.wireframeLinejoin,
            this.vertexColors = t.vertexColors,
            this.skinning = t.skinning,
            this.morphTargets = t.morphTargets,
            this.morphNormals = t.morphNormals,
            this
        }
        ,
        r.MeshPhongMaterial = function(t) {
            r.Material.call(this),
            this.type = "MeshPhongMaterial",
            this.color = new r.Color(16777215),
            this.specular = new r.Color(1118481),
            this.shininess = 30,
            this.map = null ,
            this.lightMap = null ,
            this.lightMapIntensity = 1,
            this.aoMap = null ,
            this.aoMapIntensity = 1,
            this.emissive = new r.Color(0),
            this.emissiveIntensity = 1,
            this.emissiveMap = null ,
            this.bumpMap = null ,
            this.bumpScale = 1,
            this.normalMap = null ,
            this.normalScale = new r.Vector2(1,1),
            this.displacementMap = null ,
            this.displacementScale = 1,
            this.displacementBias = 0,
            this.specularMap = null ,
            this.alphaMap = null ,
            this.envMap = null ,
            this.combine = r.MultiplyOperation,
            this.reflectivity = 1,
            this.refractionRatio = .98,
            this.fog = !0,
            this.shading = r.SmoothShading,
            this.wireframe = !1,
            this.wireframeLinewidth = 1,
            this.wireframeLinecap = "round",
            this.wireframeLinejoin = "round",
            this.vertexColors = r.NoColors,
            this.skinning = !1,
            this.morphTargets = !1,
            this.morphNormals = !1,
            this.setValues(t)
        }
        ,
        r.MeshPhongMaterial.prototype = Object.create(r.Material.prototype),
        r.MeshPhongMaterial.prototype.constructor = r.MeshPhongMaterial,
        r.MeshPhongMaterial.prototype.copy = function(t) {
            return r.Material.prototype.copy.call(this, t),
            this.color.copy(t.color),
            this.specular.copy(t.specular),
            this.shininess = t.shininess,
            this.map = t.map,
            this.lightMap = t.lightMap,
            this.lightMapIntensity = t.lightMapIntensity,
            this.aoMap = t.aoMap,
            this.aoMapIntensity = t.aoMapIntensity,
            this.emissive.copy(t.emissive),
            this.emissiveMap = t.emissiveMap,
            this.emissiveIntensity = t.emissiveIntensity,
            this.bumpMap = t.bumpMap,
            this.bumpScale = t.bumpScale,
            this.normalMap = t.normalMap,
            this.normalScale.copy(t.normalScale),
            this.displacementMap = t.displacementMap,
            this.displacementScale = t.displacementScale,
            this.displacementBias = t.displacementBias,
            this.specularMap = t.specularMap,
            this.alphaMap = t.alphaMap,
            this.envMap = t.envMap,
            this.combine = t.combine,
            this.reflectivity = t.reflectivity,
            this.refractionRatio = t.refractionRatio,
            this.fog = t.fog,
            this.shading = t.shading,
            this.wireframe = t.wireframe,
            this.wireframeLinewidth = t.wireframeLinewidth,
            this.wireframeLinecap = t.wireframeLinecap,
            this.wireframeLinejoin = t.wireframeLinejoin,
            this.vertexColors = t.vertexColors,
            this.skinning = t.skinning,
            this.morphTargets = t.morphTargets,
            this.morphNormals = t.morphNormals,
            this
        }
        ,
        r.MeshStandardMaterial = function(t) {
            r.Material.call(this),
            this.type = "MeshStandardMaterial",
            this.color = new r.Color(16777215),
            this.roughness = .5,
            this.metalness = .5,
            this.map = null ,
            this.lightMap = null ,
            this.lightMapIntensity = 1,
            this.aoMap = null ,
            this.aoMapIntensity = 1,
            this.emissive = new r.Color(0),
            this.emissiveIntensity = 1,
            this.emissiveMap = null ,
            this.bumpMap = null ,
            this.bumpScale = 1,
            this.normalMap = null ,
            this.normalScale = new r.Vector2(1,1),
            this.displacementMap = null ,
            this.displacementScale = 1,
            this.displacementBias = 0,
            this.roughnessMap = null ,
            this.metalnessMap = null ,
            this.alphaMap = null ,
            this.envMap = null ,
            this.envMapIntensity = 1,
            this.refractionRatio = .98,
            this.fog = !0,
            this.shading = r.SmoothShading,
            this.wireframe = !1,
            this.wireframeLinewidth = 1,
            this.wireframeLinecap = "round",
            this.wireframeLinejoin = "round",
            this.vertexColors = r.NoColors,
            this.skinning = !1,
            this.morphTargets = !1,
            this.morphNormals = !1,
            this.setValues(t)
        }
        ,
        r.MeshStandardMaterial.prototype = Object.create(r.Material.prototype),
        r.MeshStandardMaterial.prototype.constructor = r.MeshStandardMaterial,
        r.MeshStandardMaterial.prototype.copy = function(t) {
            return r.Material.prototype.copy.call(this, t),
            this.color.copy(t.color),
            this.roughness = t.roughness,
            this.metalness = t.metalness,
            this.map = t.map,
            this.lightMap = t.lightMap,
            this.lightMapIntensity = t.lightMapIntensity,
            this.aoMap = t.aoMap,
            this.aoMapIntensity = t.aoMapIntensity,
            this.emissive.copy(t.emissive),
            this.emissiveMap = t.emissiveMap,
            this.emissiveIntensity = t.emissiveIntensity,
            this.bumpMap = t.bumpMap,
            this.bumpScale = t.bumpScale,
            this.normalMap = t.normalMap,
            this.normalScale.copy(t.normalScale),
            this.displacementMap = t.displacementMap,
            this.displacementScale = t.displacementScale,
            this.displacementBias = t.displacementBias,
            this.roughnessMap = t.roughnessMap,
            this.metalnessMap = t.metalnessMap,
            this.alphaMap = t.alphaMap,
            this.envMap = t.envMap,
            this.envMapIntensity = t.envMapIntensity,
            this.refractionRatio = t.refractionRatio,
            this.fog = t.fog,
            this.shading = t.shading,
            this.wireframe = t.wireframe,
            this.wireframeLinewidth = t.wireframeLinewidth,
            this.wireframeLinecap = t.wireframeLinecap,
            this.wireframeLinejoin = t.wireframeLinejoin,
            this.vertexColors = t.vertexColors,
            this.skinning = t.skinning,
            this.morphTargets = t.morphTargets,
            this.morphNormals = t.morphNormals,
            this
        }
        ,
        r.MeshDepthMaterial = function(t) {
            r.Material.call(this),
            this.type = "MeshDepthMaterial",
            this.morphTargets = !1,
            this.wireframe = !1,
            this.wireframeLinewidth = 1,
            this.setValues(t)
        }
        ,
        r.MeshDepthMaterial.prototype = Object.create(r.Material.prototype),
        r.MeshDepthMaterial.prototype.constructor = r.MeshDepthMaterial,
        r.MeshDepthMaterial.prototype.copy = function(t) {
            return r.Material.prototype.copy.call(this, t),
            this.wireframe = t.wireframe,
            this.wireframeLinewidth = t.wireframeLinewidth,
            this
        }
        ,
        r.MeshNormalMaterial = function(t) {
            r.Material.call(this, t),
            this.type = "MeshNormalMaterial",
            this.wireframe = !1,
            this.wireframeLinewidth = 1,
            this.morphTargets = !1,
            this.setValues(t)
        }
        ,
        r.MeshNormalMaterial.prototype = Object.create(r.Material.prototype),
        r.MeshNormalMaterial.prototype.constructor = r.MeshNormalMaterial,
        r.MeshNormalMaterial.prototype.copy = function(t) {
            return r.Material.prototype.copy.call(this, t),
            this.wireframe = t.wireframe,
            this.wireframeLinewidth = t.wireframeLinewidth,
            this
        }
        ,
        r.MultiMaterial = function(t) {
            this.uuid = r.Math.generateUUID(),
            this.type = "MultiMaterial",
            this.materials = t instanceof Array ? t : [],
            this.visible = !0
        }
        ,
        r.MultiMaterial.prototype = {
            constructor: r.MultiMaterial,
            toJSON: function(t) {
                for (var e = {
                    metadata: {
                        version: 4.2,
                        type: "material",
                        generator: "MaterialExporter"
                    },
                    uuid: this.uuid,
                    type: this.type,
                    materials: []
                }, n = this.materials, r = 0, i = n.length; r < i; r++) {
                    var o = n[r].toJSON(t);
                    delete o.metadata,
                    e.materials.push(o)
                }
                return e.visible = this.visible,
                e
            },
            clone: function() {
                for (var t = new this.constructor, e = 0; e < this.materials.length; e++)
                    t.materials.push(this.materials[e].clone());
                return t.visible = this.visible,
                t
            }
        },
        r.PointsMaterial = function(t) {
            r.Material.call(this),
            this.type = "PointsMaterial",
            this.color = new r.Color(16777215),
            this.map = null ,
            this.size = 1,
            this.sizeAttenuation = !0,
            this.vertexColors = r.NoColors,
            this.fog = !0,
            this.setValues(t)
        }
        ,
        r.PointsMaterial.prototype = Object.create(r.Material.prototype),
        r.PointsMaterial.prototype.constructor = r.PointsMaterial,
        r.PointsMaterial.prototype.copy = function(t) {
            return r.Material.prototype.copy.call(this, t),
            this.color.copy(t.color),
            this.map = t.map,
            this.size = t.size,
            this.sizeAttenuation = t.sizeAttenuation,
            this.vertexColors = t.vertexColors,
            this.fog = t.fog,
            this
        }
        ,
        r.ShaderMaterial = function(t) {
            r.Material.call(this),
            this.type = "ShaderMaterial",
            this.defines = {},
            this.uniforms = {},
            this.vertexShader = "void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",
            this.fragmentShader = "void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}",
            this.shading = r.SmoothShading,
            this.linewidth = 1,
            this.wireframe = !1,
            this.wireframeLinewidth = 1,
            this.fog = !1,
            this.lights = !1,
            this.vertexColors = r.NoColors,
            this.skinning = !1,
            this.morphTargets = !1,
            this.morphNormals = !1,
            this.extensions = {
                derivatives: !1,
                fragDepth: !1,
                drawBuffers: !1,
                shaderTextureLOD: !1
            },
            this.defaultAttributeValues = {
                color: [1, 1, 1],
                uv: [0, 0],
                uv2: [0, 0]
            },
            this.index0AttributeName = void 0,
            void 0 !== t && (void 0 !== t.attributes && console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."),
            this.setValues(t))
        }
        ,
        r.ShaderMaterial.prototype = Object.create(r.Material.prototype),
        r.ShaderMaterial.prototype.constructor = r.ShaderMaterial,
        r.ShaderMaterial.prototype.copy = function(t) {
            return r.Material.prototype.copy.call(this, t),
            this.fragmentShader = t.fragmentShader,
            this.vertexShader = t.vertexShader,
            this.uniforms = r.UniformsUtils.clone(t.uniforms),
            this.defines = t.defines,
            this.shading = t.shading,
            this.wireframe = t.wireframe,
            this.wireframeLinewidth = t.wireframeLinewidth,
            this.fog = t.fog,
            this.lights = t.lights,
            this.vertexColors = t.vertexColors,
            this.skinning = t.skinning,
            this.morphTargets = t.morphTargets,
            this.morphNormals = t.morphNormals,
            this.extensions = t.extensions,
            this
        }
        ,
        r.ShaderMaterial.prototype.toJSON = function(t) {
            var e = r.Material.prototype.toJSON.call(this, t);
            return e.uniforms = this.uniforms,
            e.vertexShader = this.vertexShader,
            e.fragmentShader = this.fragmentShader,
            e
        }
        ,
        r.RawShaderMaterial = function(t) {
            r.ShaderMaterial.call(this, t),
            this.type = "RawShaderMaterial"
        }
        ,
        r.RawShaderMaterial.prototype = Object.create(r.ShaderMaterial.prototype),
        r.RawShaderMaterial.prototype.constructor = r.RawShaderMaterial,
        r.SpriteMaterial = function(t) {
            r.Material.call(this),
            this.type = "SpriteMaterial",
            this.color = new r.Color(16777215),
            this.map = null ,
            this.rotation = 0,
            this.fog = !1,
            this.setValues(t)
        }
        ,
        r.SpriteMaterial.prototype = Object.create(r.Material.prototype),
        r.SpriteMaterial.prototype.constructor = r.SpriteMaterial,
        r.SpriteMaterial.prototype.copy = function(t) {
            return r.Material.prototype.copy.call(this, t),
            this.color.copy(t.color),
            this.map = t.map,
            this.rotation = t.rotation,
            this.fog = t.fog,
            this
        }
        ,
        r.Texture = function(t, e, n, i, o, a, s, h, u) {
            Object.defineProperty(this, "id", {
                value: r.TextureIdCount++
            }),
            this.uuid = r.Math.generateUUID(),
            this.name = "",
            this.sourceFile = "",
            this.image = void 0 !== t ? t : r.Texture.DEFAULT_IMAGE,
            this.mipmaps = [],
            this.mapping = void 0 !== e ? e : r.Texture.DEFAULT_MAPPING,
            this.wrapS = void 0 !== n ? n : r.ClampToEdgeWrapping,
            this.wrapT = void 0 !== i ? i : r.ClampToEdgeWrapping,
            this.magFilter = void 0 !== o ? o : r.LinearFilter,
            this.minFilter = void 0 !== a ? a : r.LinearMipMapLinearFilter,
            this.anisotropy = void 0 !== u ? u : 1,
            this.format = void 0 !== s ? s : r.RGBAFormat,
            this.type = void 0 !== h ? h : r.UnsignedByteType,
            this.offset = new r.Vector2(0,0),
            this.repeat = new r.Vector2(1,1),
            this.generateMipmaps = !0,
            this.premultiplyAlpha = !1,
            this.flipY = !0,
            this.unpackAlignment = 4,
            this.version = 0,
            this.onUpdate = null
        }
        ,
        r.Texture.DEFAULT_IMAGE = void 0,
        r.Texture.DEFAULT_MAPPING = r.UVMapping,
        r.Texture.prototype = {
            constructor: r.Texture,
            set needsUpdate(t) {
                t === !0 && this.version++
            },
            clone: function() {
                return (new this.constructor).copy(this)
            },
            copy: function(t) {
                return this.image = t.image,
                this.mipmaps = t.mipmaps.slice(0),
                this.mapping = t.mapping,
                this.wrapS = t.wrapS,
                this.wrapT = t.wrapT,
                this.magFilter = t.magFilter,
                this.minFilter = t.minFilter,
                this.anisotropy = t.anisotropy,
                this.format = t.format,
                this.type = t.type,
                this.offset.copy(t.offset),
                this.repeat.copy(t.repeat),
                this.generateMipmaps = t.generateMipmaps,
                this.premultiplyAlpha = t.premultiplyAlpha,
                this.flipY = t.flipY,
                this.unpackAlignment = t.unpackAlignment,
                this
            },
            toJSON: function(t) {
                function e(t) {
                    var e;
                    return void 0 !== t.toDataURL ? e = t : (e = document.createElement("canvas"),
                    e.width = t.width,
                    e.height = t.height,
                    e.getContext("2d").drawImage(t, 0, 0, t.width, t.height)),
                    e.width > 2048 || e.height > 2048 ? e.toDataURL("image/jpeg", .6) : e.toDataURL("image/png")
                }
                if (void 0 !== t.textures[this.uuid])
                    return t.textures[this.uuid];
                var n = {
                    metadata: {
                        version: 4.4,
                        type: "Texture",
                        generator: "Texture.toJSON"
                    },
                    uuid: this.uuid,
                    name: this.name,
                    mapping: this.mapping,
                    repeat: [this.repeat.x, this.repeat.y],
                    offset: [this.offset.x, this.offset.y],
                    wrap: [this.wrapS, this.wrapT],
                    minFilter: this.minFilter,
                    magFilter: this.magFilter,
                    anisotropy: this.anisotropy
                };
                if (void 0 !== this.image) {
                    var i = this.image;
                    void 0 === i.uuid && (i.uuid = r.Math.generateUUID()),
                    void 0 === t.images[i.uuid] && (t.images[i.uuid] = {
                        uuid: i.uuid,
                        url: e(i)
                    }),
                    n.image = i.uuid
                }
                return t.textures[this.uuid] = n,
                n
            },
            dispose: function() {
                this.dispatchEvent({
                    type: "dispose"
                })
            },
            transformUv: function(t) {
                if (this.mapping === r.UVMapping) {
                    if (t.multiply(this.repeat),
                    t.add(this.offset),
                    t.x < 0 || t.x > 1)
                        switch (this.wrapS) {
                        case r.RepeatWrapping:
                            t.x = t.x - Math.floor(t.x);
                            break;
                        case r.ClampToEdgeWrapping:
                            t.x = t.x < 0 ? 0 : 1;
                            break;
                        case r.MirroredRepeatWrapping:
                            1 === Math.abs(Math.floor(t.x) % 2) ? t.x = Math.ceil(t.x) - t.x : t.x = t.x - Math.floor(t.x)
                        }
                    if (t.y < 0 || t.y > 1)
                        switch (this.wrapT) {
                        case r.RepeatWrapping:
                            t.y = t.y - Math.floor(t.y);
                            break;
                        case r.ClampToEdgeWrapping:
                            t.y = t.y < 0 ? 0 : 1;
                            break;
                        case r.MirroredRepeatWrapping:
                            1 === Math.abs(Math.floor(t.y) % 2) ? t.y = Math.ceil(t.y) - t.y : t.y = t.y - Math.floor(t.y)
                        }
                    this.flipY && (t.y = 1 - t.y)
                }
            }
        },
        r.EventDispatcher.prototype.apply(r.Texture.prototype),
        r.TextureIdCount = 0,
        r.CanvasTexture = function(t, e, n, i, o, a, s, h, u) {
            r.Texture.call(this, t, e, n, i, o, a, s, h, u),
            this.needsUpdate = !0
        }
        ,
        r.CanvasTexture.prototype = Object.create(r.Texture.prototype),
        r.CanvasTexture.prototype.constructor = r.CanvasTexture,
        r.CubeTexture = function(t, e, n, i, o, a, s, h, u) {
            e = void 0 !== e ? e : r.CubeReflectionMapping,
            r.Texture.call(this, t, e, n, i, o, a, s, h, u),
            this.images = t,
            this.flipY = !1
        }
        ,
        r.CubeTexture.prototype = Object.create(r.Texture.prototype),
        r.CubeTexture.prototype.constructor = r.CubeTexture,
        r.CubeTexture.prototype.copy = function(t) {
            return r.Texture.prototype.copy.call(this, t),
            this.images = t.images,
            this
        }
        ,
        r.CompressedTexture = function(t, e, n, i, o, a, s, h, u, l, c) {
            r.Texture.call(this, null , a, s, h, u, l, i, o, c),
            this.image = {
                width: e,
                height: n
            },
            this.mipmaps = t,
            this.flipY = !1,
            this.generateMipmaps = !1
        }
        ,
        r.CompressedTexture.prototype = Object.create(r.Texture.prototype),
        r.CompressedTexture.prototype.constructor = r.CompressedTexture,
        r.DataTexture = function(t, e, n, i, o, a, s, h, u, l, c) {
            r.Texture.call(this, null , a, s, h, u, l, i, o, c),
            this.image = {
                data: t,
                width: e,
                height: n
            },
            this.magFilter = void 0 !== u ? u : r.NearestFilter,
            this.minFilter = void 0 !== l ? l : r.NearestFilter,
            this.flipY = !1,
            this.generateMipmaps = !1
        }
        ,
        r.DataTexture.prototype = Object.create(r.Texture.prototype),
        r.DataTexture.prototype.constructor = r.DataTexture,
        r.VideoTexture = function(t, e, n, i, o, a, s, h, u) {
            function l() {
                requestAnimationFrame(l),
                t.readyState === t.HAVE_ENOUGH_DATA && (c.needsUpdate = !0)
            }
            r.Texture.call(this, t, e, n, i, o, a, s, h, u),
            this.generateMipmaps = !1;
            var c = this;
            l()
        }
        ,
        r.VideoTexture.prototype = Object.create(r.Texture.prototype),
        r.VideoTexture.prototype.constructor = r.VideoTexture,
        r.Group = function() {
            r.Object3D.call(this),
            this.type = "Group"
        }
        ,
        r.Group.prototype = Object.create(r.Object3D.prototype),
        r.Group.prototype.constructor = r.Group,
        r.Points = function(t, e) {
            r.Object3D.call(this),
            this.type = "Points",
            this.geometry = void 0 !== t ? t : new r.Geometry,
            this.material = void 0 !== e ? e : new r.PointsMaterial({
                color: 16777215 * Math.random()
            })
        }
        ,
        r.Points.prototype = Object.create(r.Object3D.prototype),
        r.Points.prototype.constructor = r.Points,
        r.Points.prototype.raycast = function() {
            var t = new r.Matrix4
              , e = new r.Ray
              , n = new r.Sphere;
            return function(i, o) {
                function a(t, n) {
                    var r = e.distanceSqToPoint(t);
                    if (r < p) {
                        var a = e.closestPointToPoint(t);
                        a.applyMatrix4(u);
                        var h = i.ray.origin.distanceTo(a);
                        if (h < i.near || h > i.far)
                            return;
                        o.push({
                            distance: h,
                            distanceToRay: Math.sqrt(r),
                            point: a.clone(),
                            index: n,
                            face: null ,
                            object: s
                        })
                    }
                }
                var s = this
                  , h = this.geometry
                  , u = this.matrixWorld
                  , l = i.params.Points.threshold;
                if (null === h.boundingSphere && h.computeBoundingSphere(),
                n.copy(h.boundingSphere),
                n.applyMatrix4(u),
                i.ray.intersectsSphere(n) !== !1) {
                    t.getInverse(u),
                    e.copy(i.ray).applyMatrix4(t);
                    var c = l / ((this.scale.x + this.scale.y + this.scale.z) / 3)
                      , p = c * c
                      , f = new r.Vector3;
                    if (h instanceof r.BufferGeometry) {
                        var d = h.index
                          , m = h.attributes
                          , v = m.position.array;
                        if (null !== d)
                            for (var g = d.array, y = 0, _ = g.length; y < _; y++) {
                                var x = g[y];
                                f.fromArray(v, 3 * x),
                                a(f, x)
                            }
                        else
                            for (var y = 0, b = v.length / 3; y < b; y++)
                                f.fromArray(v, 3 * y),
                                a(f, y)
                    } else
                        for (var w = h.vertices, y = 0, b = w.length; y < b; y++)
                            a(w[y], y)
                }
            }
        }(),
        r.Points.prototype.clone = function() {
            return new this.constructor(this.geometry,this.material).copy(this)
        }
        ,
        r.Line = function(t, e, n) {
            return 1 === n ? (console.warn("THREE.Line: parameter THREE.LinePieces no longer supported. Created THREE.LineSegments instead."),
            new r.LineSegments(t,e)) : (r.Object3D.call(this),
            this.type = "Line",
            this.geometry = void 0 !== t ? t : new r.Geometry,
            void (this.material = void 0 !== e ? e : new r.LineBasicMaterial({
                color: 16777215 * Math.random()
            })))
        }
        ,
        r.Line.prototype = Object.create(r.Object3D.prototype),
        r.Line.prototype.constructor = r.Line,
        r.Line.prototype.raycast = function() {
            var t = new r.Matrix4
              , e = new r.Ray
              , n = new r.Sphere;
            return function(i, o) {
                var a = i.linePrecision
                  , s = a * a
                  , h = this.geometry
                  , u = this.matrixWorld;
                if (null === h.boundingSphere && h.computeBoundingSphere(),
                n.copy(h.boundingSphere),
                n.applyMatrix4(u),
                i.ray.intersectsSphere(n) !== !1) {
                    t.getInverse(u),
                    e.copy(i.ray).applyMatrix4(t);
                    var l = new r.Vector3
                      , c = new r.Vector3
                      , p = new r.Vector3
                      , f = new r.Vector3
                      , d = this instanceof r.LineSegments ? 2 : 1;
                    if (h instanceof r.BufferGeometry) {
                        var m = h.index
                          , v = h.attributes
                          , g = v.position.array;
                        if (null !== m)
                            for (var y = m.array, _ = 0, x = y.length - 1; _ < x; _ += d) {
                                var b = y[_]
                                  , w = y[_ + 1];
                                l.fromArray(g, 3 * b),
                                c.fromArray(g, 3 * w);
                                var E = e.distanceSqToSegment(l, c, f, p);
                                if (!(E > s)) {
                                    f.applyMatrix4(this.matrixWorld);
                                    var S = i.ray.origin.distanceTo(f);
                                    S < i.near || S > i.far || o.push({
                                        distance: S,
                                        point: p.clone().applyMatrix4(this.matrixWorld),
                                        index: _,
                                        face: null ,
                                        faceIndex: null ,
                                        object: this
                                    })
                                }
                            }
                        else
                            for (var _ = 0, x = g.length / 3 - 1; _ < x; _ += d) {
                                l.fromArray(g, 3 * _),
                                c.fromArray(g, 3 * _ + 3);
                                var E = e.distanceSqToSegment(l, c, f, p);
                                if (!(E > s)) {
                                    f.applyMatrix4(this.matrixWorld);
                                    var S = i.ray.origin.distanceTo(f);
                                    S < i.near || S > i.far || o.push({
                                        distance: S,
                                        point: p.clone().applyMatrix4(this.matrixWorld),
                                        index: _,
                                        face: null ,
                                        faceIndex: null ,
                                        object: this
                                    })
                                }
                            }
                    } else if (h instanceof r.Geometry)
                        for (var T = h.vertices, M = T.length, _ = 0; _ < M - 1; _ += d) {
                            var E = e.distanceSqToSegment(T[_], T[_ + 1], f, p);
                            if (!(E > s)) {
                                f.applyMatrix4(this.matrixWorld);
                                var S = i.ray.origin.distanceTo(f);
                                S < i.near || S > i.far || o.push({
                                    distance: S,
                                    point: p.clone().applyMatrix4(this.matrixWorld),
                                    index: _,
                                    face: null ,
                                    faceIndex: null ,
                                    object: this
                                })
                            }
                        }
                }
            }
        }(),
        r.Line.prototype.clone = function() {
            return new this.constructor(this.geometry,this.material).copy(this)
        }
        ,
        r.LineStrip = 0,
        r.LinePieces = 1,
        r.LineSegments = function(t, e) {
            r.Line.call(this, t, e),
            this.type = "LineSegments"
        }
        ,
        r.LineSegments.prototype = Object.create(r.Line.prototype),
        r.LineSegments.prototype.constructor = r.LineSegments,
        r.Mesh = function(t, e) {
            r.Object3D.call(this),
            this.type = "Mesh",
            this.geometry = void 0 !== t ? t : new r.Geometry,
            this.material = void 0 !== e ? e : new r.MeshBasicMaterial({
                color: 16777215 * Math.random()
            }),
            this.drawMode = r.TrianglesDrawMode,
            this.updateMorphTargets()
        }
        ,
        r.Mesh.prototype = Object.create(r.Object3D.prototype),
        r.Mesh.prototype.constructor = r.Mesh,
        r.Mesh.prototype.setDrawMode = function(t) {
            this.drawMode = t
        }
        ,
        r.Mesh.prototype.updateMorphTargets = function() {
            if (void 0 !== this.geometry.morphTargets && this.geometry.morphTargets.length > 0) {
                this.morphTargetBase = -1,
                this.morphTargetInfluences = [],
                this.morphTargetDictionary = {};
                for (var t = 0, e = this.geometry.morphTargets.length; t < e; t++)
                    this.morphTargetInfluences.push(0),
                    this.morphTargetDictionary[this.geometry.morphTargets[t].name] = t
            }
        }
        ,
        r.Mesh.prototype.getMorphTargetIndexByName = function(t) {
            return void 0 !== this.morphTargetDictionary[t] ? this.morphTargetDictionary[t] : (console.warn("THREE.Mesh.getMorphTargetIndexByName: morph target " + t + " does not exist. Returning 0."),
            0)
        }
        ,
        r.Mesh.prototype.raycast = function() {
            function t(t, e, n, i, o, a, s) {
                return r.Triangle.barycoordFromPoint(t, e, n, i, v),
                o.multiplyScalar(v.x),
                a.multiplyScalar(v.y),
                s.multiplyScalar(v.z),
                o.add(a).add(s),
                o.clone()
            }
            function e(t, e, n, i, o, a, s) {
                var h, u = t.material;
                if (h = u.side === r.BackSide ? n.intersectTriangle(a, o, i, !0, s) : n.intersectTriangle(i, o, a, u.side !== r.DoubleSide, s),
                null === h)
                    return null ;
                y.copy(s),
                y.applyMatrix4(t.matrixWorld);
                var l = e.ray.origin.distanceTo(y);
                return l < e.near || l > e.far ? null : {
                    distance: l,
                    point: y.clone(),
                    object: t
                }
            }
            function n(n, i, o, a, l, c, p, v) {
                s.fromArray(a, 3 * c),
                h.fromArray(a, 3 * p),
                u.fromArray(a, 3 * v);
                var y = e(n, i, o, s, h, u, g);
                return y && (l && (f.fromArray(l, 2 * c),
                d.fromArray(l, 2 * p),
                m.fromArray(l, 2 * v),
                y.uv = t(g, s, h, u, f, d, m)),
                y.face = new r.Face3(c,p,v,r.Triangle.normal(s, h, u)),
                y.faceIndex = c),
                y
            }
            var i = new r.Matrix4
              , o = new r.Ray
              , a = new r.Sphere
              , s = new r.Vector3
              , h = new r.Vector3
              , u = new r.Vector3
              , l = new r.Vector3
              , c = new r.Vector3
              , p = new r.Vector3
              , f = new r.Vector2
              , d = new r.Vector2
              , m = new r.Vector2
              , v = new r.Vector3
              , g = new r.Vector3
              , y = new r.Vector3;
            return function(v, y) {
                var _ = this.geometry
                  , x = this.material
                  , b = this.matrixWorld;
                if (void 0 !== x && (null === _.boundingSphere && _.computeBoundingSphere(),
                a.copy(_.boundingSphere),
                a.applyMatrix4(b),
                v.ray.intersectsSphere(a) !== !1 && (i.getInverse(b),
                o.copy(v.ray).applyMatrix4(i),
                null === _.boundingBox || o.intersectsBox(_.boundingBox) !== !1))) {
                    var w, E;
                    if (_ instanceof r.BufferGeometry) {
                        var S, T, M, C = _.index, A = _.attributes, P = A.position.array;
                        if (void 0 !== A.uv && (w = A.uv.array),
                        null !== C)
                            for (var L = C.array, R = 0, k = L.length; R < k; R += 3)
                                S = L[R],
                                T = L[R + 1],
                                M = L[R + 2],
                                E = n(this, v, o, P, w, S, T, M),
                                E && (E.faceIndex = Math.floor(R / 3),
                                y.push(E));
                        else
                            for (var R = 0, k = P.length; R < k; R += 9)
                                S = R / 3,
                                T = S + 1,
                                M = S + 2,
                                E = n(this, v, o, P, w, S, T, M),
                                E && (E.index = S,
                                y.push(E))
                    } else if (_ instanceof r.Geometry) {
                        var O, I, D, U = x instanceof r.MultiMaterial, B = U === !0 ? x.materials : null , F = _.vertices, N = _.faces, G = _.faceVertexUvs[0];
                        G.length > 0 && (w = G);
                        for (var V = 0, z = N.length; V < z; V++) {
                            var H = N[V]
                              , j = U === !0 ? B[H.materialIndex] : x;
                            if (void 0 !== j) {
                                if (O = F[H.a],
                                I = F[H.b],
                                D = F[H.c],
                                j.morphTargets === !0) {
                                    var W = _.morphTargets
                                      , X = this.morphTargetInfluences;
                                    s.set(0, 0, 0),
                                    h.set(0, 0, 0),
                                    u.set(0, 0, 0);
                                    for (var Y = 0, q = W.length; Y < q; Y++) {
                                        var Z = X[Y];
                                        if (0 !== Z) {
                                            var Q = W[Y].vertices;
                                            s.addScaledVector(l.subVectors(Q[H.a], O), Z),
                                            h.addScaledVector(c.subVectors(Q[H.b], I), Z),
                                            u.addScaledVector(p.subVectors(Q[H.c], D), Z)
                                        }
                                    }
                                    s.add(O),
                                    h.add(I),
                                    u.add(D),
                                    O = s,
                                    I = h,
                                    D = u
                                }
                                if (E = e(this, v, o, O, I, D, g)) {
                                    if (w) {
                                        var K = w[V];
                                        f.copy(K[0]),
                                        d.copy(K[1]),
                                        m.copy(K[2]),
                                        E.uv = t(g, O, I, D, f, d, m)
                                    }
                                    E.face = H,
                                    E.faceIndex = V,
                                    y.push(E)
                                }
                            }
                        }
                    }
                }
            }
        }(),
        r.Mesh.prototype.clone = function() {
            return new this.constructor(this.geometry,this.material).copy(this)
        }
        ,
        r.Bone = function(t) {
            r.Object3D.call(this),
            this.type = "Bone",
            this.skin = t
        }
        ,
        r.Bone.prototype = Object.create(r.Object3D.prototype),
        r.Bone.prototype.constructor = r.Bone,
        r.Bone.prototype.copy = function(t) {
            return r.Object3D.prototype.copy.call(this, t),
            this.skin = t.skin,
            this
        }
        ,
        r.Skeleton = function(t, e, n) {
            if (this.useVertexTexture = void 0 === n || n,
            this.identityMatrix = new r.Matrix4,
            t = t || [],
            this.bones = t.slice(0),
            this.useVertexTexture) {
                var i = Math.sqrt(4 * this.bones.length);
                i = r.Math.nextPowerOfTwo(Math.ceil(i)),
                i = Math.max(i, 4),
                this.boneTextureWidth = i,
                this.boneTextureHeight = i,
                this.boneMatrices = new Float32Array(this.boneTextureWidth * this.boneTextureHeight * 4),
                this.boneTexture = new r.DataTexture(this.boneMatrices,this.boneTextureWidth,this.boneTextureHeight,r.RGBAFormat,r.FloatType)
            } else
                this.boneMatrices = new Float32Array(16 * this.bones.length);
            if (void 0 === e)
                this.calculateInverses();
            else if (this.bones.length === e.length)
                this.boneInverses = e.slice(0);
            else {
                console.warn("THREE.Skeleton bonInverses is the wrong length."),
                this.boneInverses = [];
                for (var o = 0, a = this.bones.length; o < a; o++)
                    this.boneInverses.push(new r.Matrix4)
            }
        }
        ,
        r.Skeleton.prototype.calculateInverses = function() {
            this.boneInverses = [];
            for (var t = 0, e = this.bones.length; t < e; t++) {
                var n = new r.Matrix4;
                this.bones[t] && n.getInverse(this.bones[t].matrixWorld),
                this.boneInverses.push(n)
            }
        }
        ,
        r.Skeleton.prototype.pose = function() {
            for (var t, e = 0, n = this.bones.length; e < n; e++)
                t = this.bones[e],
                t && t.matrixWorld.getInverse(this.boneInverses[e]);
            for (var e = 0, n = this.bones.length; e < n; e++)
                t = this.bones[e],
                t && (t.parent ? (t.matrix.getInverse(t.parent.matrixWorld),
                t.matrix.multiply(t.matrixWorld)) : t.matrix.copy(t.matrixWorld),
                t.matrix.decompose(t.position, t.quaternion, t.scale))
        }
        ,
        r.Skeleton.prototype.update = function() {
            var t = new r.Matrix4;
            return function() {
                for (var e = 0, n = this.bones.length; e < n; e++) {
                    var r = this.bones[e] ? this.bones[e].matrixWorld : this.identityMatrix;
                    t.multiplyMatrices(r, this.boneInverses[e]),
                    t.flattenToArrayOffset(this.boneMatrices, 16 * e)
                }
                this.useVertexTexture && (this.boneTexture.needsUpdate = !0)
            }
        }(),
        r.Skeleton.prototype.clone = function() {
            return new r.Skeleton(this.bones,this.boneInverses,this.useVertexTexture)
        }
        ,
        r.SkinnedMesh = function(t, e, n) {
            r.Mesh.call(this, t, e),
            this.type = "SkinnedMesh",
            this.bindMode = "attached",
            this.bindMatrix = new r.Matrix4,
            this.bindMatrixInverse = new r.Matrix4;
            var i = [];
            if (this.geometry && void 0 !== this.geometry.bones) {
                for (var o, a, s = 0, h = this.geometry.bones.length; s < h; ++s)
                    a = this.geometry.bones[s],
                    o = new r.Bone(this),
                    i.push(o),
                    o.name = a.name,
                    o.position.fromArray(a.pos),
                    o.quaternion.fromArray(a.rotq),
                    void 0 !== a.scl && o.scale.fromArray(a.scl);
                for (var s = 0, h = this.geometry.bones.length; s < h; ++s)
                    a = this.geometry.bones[s],
                    a.parent !== -1 && null !== a.parent ? i[a.parent].add(i[s]) : this.add(i[s])
            }
            this.normalizeSkinWeights(),
            this.updateMatrixWorld(!0),
            this.bind(new r.Skeleton(i,(void 0),n), this.matrixWorld)
        }
        ,
        r.SkinnedMesh.prototype = Object.create(r.Mesh.prototype),
        r.SkinnedMesh.prototype.constructor = r.SkinnedMesh,
        r.SkinnedMesh.prototype.bind = function(t, e) {
            this.skeleton = t,
            void 0 === e && (this.updateMatrixWorld(!0),
            this.skeleton.calculateInverses(),
            e = this.matrixWorld),
            this.bindMatrix.copy(e),
            this.bindMatrixInverse.getInverse(e)
        }
        ,
        r.SkinnedMesh.prototype.pose = function() {
            this.skeleton.pose()
        }
        ,
        r.SkinnedMesh.prototype.normalizeSkinWeights = function() {
            if (this.geometry instanceof r.Geometry)
                for (var t = 0; t < this.geometry.skinWeights.length; t++) {
                    var e = this.geometry.skinWeights[t]
                      , n = 1 / e.lengthManhattan();
                    n !== 1 / 0 ? e.multiplyScalar(n) : e.set(1, 0, 0, 0)
                }
            else if (this.geometry instanceof r.BufferGeometry)
                for (var i = new r.Vector4, o = this.geometry.attributes.skinWeight, t = 0; t < o.count; t++) {
                    i.x = o.getX(t),
                    i.y = o.getY(t),
                    i.z = o.getZ(t),
                    i.w = o.getW(t);
                    var n = 1 / i.lengthManhattan();
                    n !== 1 / 0 ? i.multiplyScalar(n) : i.set(1, 0, 0, 0),
                    o.setXYZW(t, i.x, i.y, i.z, i.w)
                }
        }
        ,
        r.SkinnedMesh.prototype.updateMatrixWorld = function(t) {
            r.Mesh.prototype.updateMatrixWorld.call(this, !0),
            "attached" === this.bindMode ? this.bindMatrixInverse.getInverse(this.matrixWorld) : "detached" === this.bindMode ? this.bindMatrixInverse.getInverse(this.bindMatrix) : console.warn("THREE.SkinnedMesh unrecognized bindMode: " + this.bindMode)
        }
        ,
        r.SkinnedMesh.prototype.clone = function() {
            return new this.constructor(this.geometry,this.material,this.useVertexTexture).copy(this)
        }
        ,
        r.LOD = function() {
            r.Object3D.call(this),
            this.type = "LOD",
            Object.defineProperties(this, {
                levels: {
                    enumerable: !0,
                    value: []
                },
                objects: {
                    get: function() {
                        return console.warn("THREE.LOD: .objects has been renamed to .levels."),
                        this.levels
                    }
                }
            })
        }
        ,
        r.LOD.prototype = Object.create(r.Object3D.prototype),
        r.LOD.prototype.constructor = r.LOD,
        r.LOD.prototype.addLevel = function(t, e) {
            void 0 === e && (e = 0),
            e = Math.abs(e);
            for (var n = this.levels, r = 0; r < n.length && !(e < n[r].distance); r++)
                ;
            n.splice(r, 0, {
                distance: e,
                object: t
            }),
            this.add(t)
        }
        ,
        r.LOD.prototype.getObjectForDistance = function(t) {
            for (var e = this.levels, n = 1, r = e.length; n < r && !(t < e[n].distance); n++)
                ;
            return e[n - 1].object
        }
        ,
        r.LOD.prototype.raycast = function() {
            var t = new r.Vector3;
            return function(e, n) {
                t.setFromMatrixPosition(this.matrixWorld);
                var r = e.ray.origin.distanceTo(t);
                this.getObjectForDistance(r).raycast(e, n)
            }
        }(),
        r.LOD.prototype.update = function() {
            var t = new r.Vector3
              , e = new r.Vector3;
            return function(n) {
                var r = this.levels;
                if (r.length > 1) {
                    t.setFromMatrixPosition(n.matrixWorld),
                    e.setFromMatrixPosition(this.matrixWorld);
                    var i = t.distanceTo(e);
                    r[0].object.visible = !0;
                    for (var o = 1, a = r.length; o < a && i >= r[o].distance; o++)
                        r[o - 1].object.visible = !1,
                        r[o].object.visible = !0;
                    for (; o < a; o++)
                        r[o].object.visible = !1
                }
            }
        }(),
        r.LOD.prototype.copy = function(t) {
            r.Object3D.prototype.copy.call(this, t, !1);
            for (var e = t.levels, n = 0, i = e.length; n < i; n++) {
                var o = e[n];
                this.addLevel(o.object.clone(), o.distance)
            }
            return this
        }
        ,
        r.LOD.prototype.toJSON = function(t) {
            var e = r.Object3D.prototype.toJSON.call(this, t);
            e.object.levels = [];
            for (var n = this.levels, i = 0, o = n.length; i < o; i++) {
                var a = n[i];
                e.object.levels.push({
                    object: a.object.uuid,
                    distance: a.distance
                })
            }
            return e
        }
        ,
        r.Sprite = function() {
            var t = new Uint16Array([0, 1, 2, 0, 2, 3])
              , e = new Float32Array([-.5, -.5, 0, .5, -.5, 0, .5, .5, 0, -.5, .5, 0])
              , n = new Float32Array([0, 0, 1, 0, 1, 1, 0, 1])
              , i = new r.BufferGeometry;
            return i.setIndex(new r.BufferAttribute(t,1)),
            i.addAttribute("position", new r.BufferAttribute(e,3)),
            i.addAttribute("uv", new r.BufferAttribute(n,2)),
            function(t) {
                r.Object3D.call(this),
                this.type = "Sprite",
                this.geometry = i,
                this.material = void 0 !== t ? t : new r.SpriteMaterial
            }
        }(),
        r.Sprite.prototype = Object.create(r.Object3D.prototype),
        r.Sprite.prototype.constructor = r.Sprite,
        r.Sprite.prototype.raycast = function() {
            var t = new r.Vector3;
            return function(e, n) {
                t.setFromMatrixPosition(this.matrixWorld);
                var r = e.ray.distanceSqToPoint(t)
                  , i = this.scale.x * this.scale.y;
                r > i || n.push({
                    distance: Math.sqrt(r),
                    point: this.position,
                    face: null ,
                    object: this
                })
            }
        }(),
        r.Sprite.prototype.clone = function() {
            return new this.constructor(this.material).copy(this)
        }
        ,
        r.Particle = r.Sprite,
        r.LensFlare = function(t, e, n, i, o) {
            r.Object3D.call(this),
            this.lensFlares = [],
            this.positionScreen = new r.Vector3,
            this.customUpdateCallback = void 0,
            void 0 !== t && this.add(t, e, n, i, o)
        }
        ,
        r.LensFlare.prototype = Object.create(r.Object3D.prototype),
        r.LensFlare.prototype.constructor = r.LensFlare,
        r.LensFlare.prototype.add = function(t, e, n, i, o, a) {
            void 0 === e && (e = -1),
            void 0 === n && (n = 0),
            void 0 === a && (a = 1),
            void 0 === o && (o = new r.Color(16777215)),
            void 0 === i && (i = r.NormalBlending),
            n = Math.min(n, Math.max(0, n)),
            this.lensFlares.push({
                texture: t,
                size: e,
                distance: n,
                x: 0,
                y: 0,
                z: 0,
                scale: 1,
                rotation: 0,
                opacity: a,
                color: o,
                blending: i
            })
        }
        ,
        r.LensFlare.prototype.updateLensFlares = function() {
            var t, e, n = this.lensFlares.length, r = 2 * -this.positionScreen.x, i = 2 * -this.positionScreen.y;
            for (t = 0; t < n; t++)
                e = this.lensFlares[t],
                e.x = this.positionScreen.x + r * e.distance,
                e.y = this.positionScreen.y + i * e.distance,
                e.wantedRotation = e.x * Math.PI * .25,
                e.rotation += .25 * (e.wantedRotation - e.rotation)
        }
        ,
        r.LensFlare.prototype.copy = function(t) {
            r.Object3D.prototype.copy.call(this, t),
            this.positionScreen.copy(t.positionScreen),
            this.customUpdateCallback = t.customUpdateCallback;
            for (var e = 0, n = t.lensFlares.length; e < n; e++)
                this.lensFlares.push(t.lensFlares[e]);
            return this
        }
        ,
        r.Scene = function() {
            r.Object3D.call(this),
            this.type = "Scene",
            this.fog = null ,
            this.overrideMaterial = null ,
            this.autoUpdate = !0
        }
        ,
        r.Scene.prototype = Object.create(r.Object3D.prototype),
        r.Scene.prototype.constructor = r.Scene,
        r.Scene.prototype.copy = function(t, e) {
            return r.Object3D.prototype.copy.call(this, t, e),
            null !== t.fog && (this.fog = t.fog.clone()),
            null !== t.overrideMaterial && (this.overrideMaterial = t.overrideMaterial.clone()),
            this.autoUpdate = t.autoUpdate,
            this.matrixAutoUpdate = t.matrixAutoUpdate,
            this
        }
        ,
        r.Fog = function(t, e, n) {
            this.name = "",
            this.color = new r.Color(t),
            this.near = void 0 !== e ? e : 1,
            this.far = void 0 !== n ? n : 1e3
        }
        ,
        r.Fog.prototype.clone = function() {
            return new r.Fog(this.color.getHex(),this.near,this.far)
        }
        ,
        r.FogExp2 = function(t, e) {
            this.name = "",
            this.color = new r.Color(t),
            this.density = void 0 !== e ? e : 25e-5
        }
        ,
        r.FogExp2.prototype.clone = function() {
            return new r.FogExp2(this.color.getHex(),this.density)
        }
        ,
        r.ShaderChunk = {},
        r.ShaderChunk.alphamap_fragment = "#ifdef USE_ALPHAMAP\n\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\n\n#endif\n",
        r.ShaderChunk.alphamap_pars_fragment = "#ifdef USE_ALPHAMAP\n\n\tuniform sampler2D alphaMap;\n\n#endif\n",
        r.ShaderChunk.alphatest_fragment = "#ifdef ALPHATEST\n\n\tif ( diffuseColor.a < ALPHATEST ) discard;\n\n#endif\n",
        r.ShaderChunk.ambient_pars = "uniform vec3 ambientLightColor;\n\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\n\treturn PI * ambientLightColor;\n\n}\n",
        r.ShaderChunk.aomap_fragment = "#ifdef USE_AOMAP\n\n\treflectedLight.indirectDiffuse *= ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n\n#endif\n",
        r.ShaderChunk.aomap_pars_fragment = "#ifdef USE_AOMAP\n\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n\n#endif",
        r.ShaderChunk.begin_vertex = "\nvec3 transformed = vec3( position );\n",
        r.ShaderChunk.beginnormal_vertex = "\nvec3 objectNormal = vec3( normal );\n",
        r.ShaderChunk.bsdfs = 'bool testLightInRange( const in float lightDistance, const in float cutoffDistance ) {\n\n\treturn any( bvec2( cutoffDistance == 0.0, lightDistance < cutoffDistance ) );\n\n}\n\nfloat calcLightAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n\n\tif ( decayExponent > 0.0 ) {\n\n\t  return pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\n\n\t}\n\n\treturn 1.0;\n\n}\n\n\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\n\n\treturn RECIPROCAL_PI * diffuseColor;\n\n} // validated\n\n\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\n\n\t// Original approximation by Christophe Schlick \'94\n\t//;float fresnel = pow( 1.0 - dotLH, 5.0 );\n\n\t// Optimized variant (presented by Epic at SIGGRAPH \'13)\n\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\n\n\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\n\n} // validated\n\n\n// Microfacet Models for Refraction through Rough Surfaces - equation (34)\n// http://graphicrants.blogspot.com/2013/08/specular-brdf-reference.html\n// alpha is "roughness squared" in Disney’s reparameterization\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\n\n\t// geometry term = G(l)⋅G(v) / 4(n⋅l)(n⋅v)\n\n\tfloat a2 = alpha * alpha;\n\n\tfloat gl = dotNL + pow( a2 + ( 1.0 - a2 ) * dotNL * dotNL, 0.5 );\n\n\tfloat gv = dotNV + pow( a2 + ( 1.0 - a2 ) * dotNV * dotNV, 0.5 );\n\n\treturn 1.0 / ( gl * gv );\n\n} // validated\n\n\n// Microfacet Models for Refraction through Rough Surfaces - equation (33)\n// http://graphicrants.blogspot.com/2013/08/specular-brdf-reference.html\n// alpha is "roughness squared" in Disney’s reparameterization\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\n\tfloat a2 = alpha * alpha;\n\n\tfloat denom = dotNH * dotNH * ( a2 - 1.0 ) + 1.0; // avoid alpha = 0 with dotNH = 1\n\n\treturn RECIPROCAL_PI * a2 / ( denom * denom );\n\n}\n\n\n// GGX Distribution, Schlick Fresnel, GGX-Smith Visibility\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\n\n\tfloat alpha = roughness * roughness; // UE4\'s roughness\n\n\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\n\n\tfloat dotNL = saturate( dot( geometry.normal, incidentLight.direction ) );\n\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\n\tfloat G = G_GGX_Smith( alpha, dotNL, dotNV );\n\n\tfloat D = D_GGX( alpha, dotNH );\n\n\treturn F * ( G * D );\n\n} // validated\n\n\n// ref: https://www.unrealengine.com/blog/physically-based-shading-on-mobile - environmentBRDF for GGX on mobile\nvec3 BRDF_Specular_GGX_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\n\n\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\n\tvec4 r = roughness * c0 + c1;\n\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\n\tvec2 AB = vec2( -1.04, 1.04 ) * a004 + r.zw;\n\n\treturn specularColor * AB.x + AB.y;\n\n} // validated\n\n\nfloat G_BlinnPhong_Implicit( /* const in float dotNL, const in float dotNV */ ) {\n\n\t// geometry term is (n dot l)(n dot v) / 4(n dot l)(n dot v)\n\treturn 0.25;\n\n}\n\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n\n}\n\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\n\n\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\n\n\t//float dotNL = saturate( dot( geometry.normal, incidentLight.direction ) );\n\t//float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\n\tfloat G = G_BlinnPhong_Implicit( /* dotNL, dotNV */ );\n\n\tfloat D = D_BlinnPhong( shininess, dotNH );\n\n\treturn F * ( G * D );\n\n} // validated\n\n// source: http://simonstechblog.blogspot.ca/2011/12/microfacet-brdf.html\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\n\treturn ( 2.0 / square( ggxRoughness + 0.0001 ) - 2.0 );\n}\n',
        r.ShaderChunk.bumpmap_pars_fragment = "#ifdef USE_BUMPMAP\n\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\n\t// Derivative maps - bump mapping unparametrized surfaces by Morten Mikkelsen\n\t// http://mmikkelsen3d.blogspot.sk/2011/07/derivative-maps.html\n\n\t// Evaluate the derivative of the height w.r.t. screen-space using forward differencing (listing 2)\n\n\tvec2 dHdxy_fwd() {\n\n\t\tvec2 dSTdx = dFdx( vUv );\n\t\tvec2 dSTdy = dFdy( vUv );\n\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\n\t\treturn vec2( dBx, dBy );\n\n\t}\n\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\n\n\t\tvec3 vSigmaX = dFdx( surf_pos );\n\t\tvec3 vSigmaY = dFdy( surf_pos );\n\t\tvec3 vN = surf_norm;\t\t// normalized\n\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\n\t\tfloat fDet = dot( vSigmaX, R1 );\n\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\n\t}\n\n#endif\n",
        r.ShaderChunk.color_fragment = "#ifdef USE_COLOR\n\n\tdiffuseColor.rgb *= vColor;\n\n#endif",
        r.ShaderChunk.color_pars_fragment = "#ifdef USE_COLOR\n\n\tvarying vec3 vColor;\n\n#endif\n",
        r.ShaderChunk.color_pars_vertex = "#ifdef USE_COLOR\n\n\tvarying vec3 vColor;\n\n#endif",
        r.ShaderChunk.color_vertex = "#ifdef USE_COLOR\n\n\tvColor.xyz = color.xyz;\n\n#endif",
        r.ShaderChunk.common = "#define PI 3.14159\n#define PI2 6.28318\n#define RECIPROCAL_PI 0.31830988618\n#define RECIPROCAL_PI2 0.15915494\n#define LOG2 1.442695\n#define EPSILON 1e-6\n\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#define whiteCompliment(a) ( 1.0 - saturate( a ) )\n\nfloat square( const in float x ) { return x*x; }\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\n\n\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\n\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\n\nstruct GeometricContext {\n\tvec3 position;\n\tvec3 normal;\n\tvec3 viewDir;\n};\n\n\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n}\n\n// http://en.wikibooks.org/wiki/GLSL_Programming/Applying_Matrix_Transformations\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n\n}\n\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\n\tfloat distance = dot( planeNormal, point - pointOnPlane );\n\n\treturn - distance * planeNormal + point;\n\n}\n\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\n\treturn sign( dot( point - pointOnPlane, planeNormal ) );\n\n}\n\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\n\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\n\n}\n\nvec3 inputToLinear( in vec3 a ) {\n\n\t#ifdef GAMMA_INPUT\n\n\t\treturn pow( a, vec3( float( GAMMA_FACTOR ) ) );\n\n\t#else\n\n\t\treturn a;\n\n\t#endif\n\n}\n\nvec3 linearToOutput( in vec3 a ) {\n\n\t#ifdef GAMMA_OUTPUT\n\n\t\treturn pow( a, vec3( 1.0 / float( GAMMA_FACTOR ) ) );\n\n\t#else\n\n\t\treturn a;\n\n\t#endif\n\n}\n",
        r.ShaderChunk.defaultnormal_vertex = "#ifdef FLIP_SIDED\n\n\tobjectNormal = -objectNormal;\n\n#endif\n\nvec3 transformedNormal = normalMatrix * objectNormal;\n",
        r.ShaderChunk.displacementmap_vertex = "#ifdef USE_DISPLACEMENTMAP\n\n\ttransformed += normal * ( texture2D( displacementMap, uv ).x * displacementScale + displacementBias );\n\n#endif\n",
        r.ShaderChunk.displacementmap_pars_vertex = "#ifdef USE_DISPLACEMENTMAP\n\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n\n#endif\n",
        r.ShaderChunk.emissivemap_fragment = "#ifdef USE_EMISSIVEMAP\n\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\n\n\temissiveColor.rgb = inputToLinear( emissiveColor.rgb );\n\n\ttotalEmissiveLight *= emissiveColor.rgb;\n\n#endif\n",
        r.ShaderChunk.emissivemap_pars_fragment = "#ifdef USE_EMISSIVEMAP\n\n\tuniform sampler2D emissiveMap;\n\n#endif\n",
        r.ShaderChunk.envmap_fragment = "#ifdef USE_ENVMAP\n\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\n\t\tvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\n\n\t\t// Transforming Normal Vectors with the Inverse Transformation\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\n\t\t\tvec3 reflectVec = reflect( cameraToVertex, worldNormal );\n\n\t\t#else\n\n\t\t\tvec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\n\n\t\t#endif\n\n\t#else\n\n\t\tvec3 reflectVec = vReflect;\n\n\t#endif\n\n\t#ifdef DOUBLE_SIDED\n\t\tfloat flipNormal = ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t#else\n\t\tfloat flipNormal = 1.0;\n\t#endif\n\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 envColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\n\t#elif defined( ENVMAP_TYPE_EQUIREC )\n\t\tvec2 sampleUV;\n\t\tsampleUV.y = saturate( flipNormal * reflectVec.y * 0.5 + 0.5 );\n\t\tsampleUV.x = atan( flipNormal * reflectVec.z, flipNormal * reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\n\t\tvec4 envColor = texture2D( envMap, sampleUV );\n\n\t#elif defined( ENVMAP_TYPE_SPHERE )\n\t\tvec3 reflectView = flipNormal * normalize((viewMatrix * vec4( reflectVec, 0.0 )).xyz + vec3(0.0,0.0,1.0));\n\t\tvec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\n\t#endif\n\n\tenvColor.xyz = inputToLinear( envColor.xyz );\n\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\n\t#endif\n\n#endif\n",
        r.ShaderChunk.envmap_pars_fragment = "#if defined( USE_ENVMAP ) || defined( STANDARD )\n\tuniform float reflectivity;\n\tuniform float envMapIntenstiy;\n#endif\n\n#ifdef USE_ENVMAP\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\tuniform float flipEnvMap;\n\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( STANDARD )\n\n\t\tuniform float refractionRatio;\n\n\t#else\n\n\t\tvarying vec3 vReflect;\n\n\t#endif\n\n#endif\n",
        r.ShaderChunk.envmap_pars_vertex = "#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP ) && ! defined( PHONG ) && ! defined( STANDARD )\n\n\tvarying vec3 vReflect;\n\n\tuniform float refractionRatio;\n\n#endif\n",
        r.ShaderChunk.envmap_vertex = "#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP ) && ! defined( PHONG ) && ! defined( STANDARD )\n\n\tvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\n\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\n\t#ifdef ENVMAP_MODE_REFLECTION\n\n\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\n\t#else\n\n\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\n\t#endif\n\n#endif\n",
        r.ShaderChunk.fog_fragment = "#ifdef USE_FOG\n\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\n\t\tfloat depth = gl_FragDepthEXT / gl_FragCoord.w;\n\n\t#else\n\n\t\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;\n\n\t#endif\n\n\t#ifdef FOG_EXP2\n\n\t\tfloat fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * depth * depth * LOG2 ) );\n\n\t#else\n\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, depth );\n\n\t#endif\n\t\n\toutgoingLight = mix( outgoingLight, fogColor, fogFactor );\n\n#endif",
        r.ShaderChunk.fog_pars_fragment = "#ifdef USE_FOG\n\n\tuniform vec3 fogColor;\n\n\t#ifdef FOG_EXP2\n\n\t\tuniform float fogDensity;\n\n\t#else\n\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n\n#endif",
        r.ShaderChunk.lightmap_fragment = "#ifdef USE_LIGHTMAP\n\n\treflectedLight.indirectDiffuse += PI * texture2D( lightMap, vUv2 ).xyz * lightMapIntensity; // factor of PI should not be present; included here to prevent breakage\n\n#endif\n",
        r.ShaderChunk.lightmap_pars_fragment = "#ifdef USE_LIGHTMAP\n\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n\n#endif",
        r.ShaderChunk.lights_lambert_vertex = "vec3 diffuse = vec3( 1.0 );\n\nGeometricContext geometry;\ngeometry.position = mvPosition.xyz;\ngeometry.normal = normalize( transformedNormal );\ngeometry.viewDir = normalize( -mvPosition.xyz );\n\nGeometricContext backGeometry;\nbackGeometry.position = geometry.position;\nbackGeometry.normal = -geometry.normal;\nbackGeometry.viewDir = geometry.viewDir;\n\nvLightFront = vec3( 0.0 );\n\n#ifdef DOUBLE_SIDED\n\tvLightBack = vec3( 0.0 );\n#endif\n\nIncidentLight directLight;\nfloat dotNL;\nvec3 directLightColor_Diffuse;\n\n#if NUM_POINT_LIGHTS > 0\n\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\n\t\tgetPointDirectLight( pointLights[ i ], geometry, directLight );\n\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\n\t\t#ifdef DOUBLE_SIDED\n\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\n\t\t#endif\n\n\t}\n\n#endif\n\n#if NUM_SPOT_LIGHTS > 0\n\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\n\t\tgetSpotDirectLight( spotLights[ i ], geometry, directLight );\n\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\n\t\t#ifdef DOUBLE_SIDED\n\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\n\t\t#endif\n\t}\n\n#endif\n\n#if NUM_DIR_LIGHTS > 0\n\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\n\t\tgetDirectionalDirectLight( directionalLights[ i ], geometry, directLight );\n\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\n\t\t#ifdef DOUBLE_SIDED\n\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\n\t\t#endif\n\n\t}\n\n#endif\n\n#if NUM_HEMI_LIGHTS > 0\n\n\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\n\t\tvLightFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\n\t\t#ifdef DOUBLE_SIDED\n\n\t\t\tvLightBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\n\n\t\t#endif\n\n\t}\n\n#endif\n",
        r.ShaderChunk.lights_pars = "#if NUM_DIR_LIGHTS > 0\n\n\tstruct DirectionalLight {\n\t\tvec3 direction;\n\t\tvec3 color;\n\n\t\tint shadow;\n\t\tfloat shadowBias;\n\t\tfloat shadowRadius;\n\t\tvec2 shadowMapSize;\n\t};\n\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n\n\tvoid getDirectionalDirectLight( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\n\t\tdirectLight.color = directionalLight.color;\n\t\tdirectLight.direction = directionalLight.direction;\n\t\tdirectLight.visible = true;\n\n\t}\n\n#endif\n\n\n#if NUM_POINT_LIGHTS > 0\n\n\tstruct PointLight {\n\t\tvec3 position;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\n\t\tint shadow;\n\t\tfloat shadowBias;\n\t\tfloat shadowRadius;\n\t\tvec2 shadowMapSize;\n\t};\n\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n\n\tvoid getPointDirectLight( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\n\t\tvec3 lVector = pointLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\n\t\tfloat lightDistance = length( lVector );\n\n\t\tif ( testLightInRange( lightDistance, pointLight.distance ) ) {\n\n\t\t\tdirectLight.color = pointLight.color;\n\t\t\tdirectLight.color *= calcLightAttenuation( lightDistance, pointLight.distance, pointLight.decay );\n\t\t\tdirectLight.visible = true;\n\n\t\t} else {\n\n\t\t\tdirectLight.color = vec3( 0.0 );\n\t\t\tdirectLight.visible = false;\n\n\t\t}\n\n\n\t}\n\n#endif\n\n\n#if NUM_SPOT_LIGHTS > 0\n\n\tstruct SpotLight {\n\t\tvec3 position;\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tfloat angleCos;\n\t\tfloat penumbra;\n\n\t\tint shadow;\n\t\tfloat shadowBias;\n\t\tfloat shadowRadius;\n\t\tvec2 shadowMapSize;\n\t};\n\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n\n\tvoid getSpotDirectLight( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\n\n\t\tvec3 lVector = spotLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\n\t\tfloat lightDistance = length( lVector );\n\t\tfloat spotEffect = dot( directLight.direction, spotLight.direction );\n\n\t\tif ( all( bvec2( spotEffect > spotLight.angleCos, testLightInRange( lightDistance, spotLight.distance ) ) ) ) {\n\n\t\t\tfloat spotEffect = dot( spotLight.direction, directLight.direction );\n\t\t\tspotEffect *= clamp( ( spotEffect - spotLight.angleCos ) / spotLight.penumbra, 0.0, 1.0 );\n\n\t\t\tdirectLight.color = spotLight.color;\n\t\t\tdirectLight.color *= ( spotEffect * calcLightAttenuation( lightDistance, spotLight.distance, spotLight.decay ) );\n\t\t\tdirectLight.visible = true;\n\n\t\t} else {\n\n\t\t\tdirectLight.color = vec3( 0.0 );\n\t\t\tdirectLight.visible = false;\n\n\t\t}\n\n\t}\n\n#endif\n\n\n#if NUM_HEMI_LIGHTS > 0\n\n\tstruct HemisphereLight {\n\t\tvec3 direction;\n\t\tvec3 skyColor;\n\t\tvec3 groundColor;\n\t};\n\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\n\n\t\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n\n\t\treturn PI * mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\n\t}\n\n#endif\n\n\n#if defined( USE_ENVMAP ) && defined( STANDARD )\n\n\tvec3 getLightProbeIndirectIrradiance( /*const in SpecularLightProbe specularLightProbe,*/ const in GeometricContext geometry, const in int maxMIPLevel ) {\n\n\t\t#ifdef DOUBLE_SIDED\n\n\t\t\tfloat flipNormal = ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\n\t\t#else\n\n\t\t\tfloat flipNormal = 1.0;\n\n\t\t#endif\n\n\t\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\n\t\t\tvec3 queryVec = flipNormal * vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n\n\t\t\t// TODO: replace with properly filtered cubemaps and access the irradiance LOD level, be it the last LOD level\n\t\t\t// of a specular cubemap, or just the default level of a specially created irradiance cubemap.\n\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\n\n\t\t\t#else\n\n\t\t\t\t// force the bias high to get the last LOD level as it is the most blurred.\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\n\n\t\t\t#endif\n\n\t\t#else\n\n\t\t\tvec3 envMapColor = vec3( 0.0 );\n\n\t\t#endif\n\n\t\tenvMapColor.rgb = inputToLinear( envMapColor.rgb );\n\n\t\treturn PI * envMapColor.rgb * envMapIntensity;\n\n\t}\n\n\t// taken from here: http://casual-effects.blogspot.ca/2011/08/plausible-environment-lighting-in-two.html\n\tfloat getSpecularMIPLevel( const in float blinnShininessExponent, const in int maxMIPLevel ) {\n\n\t\t//float envMapWidth = pow( 2.0, maxMIPLevelScalar );\n\t\t//float desiredMIPLevel = log2( envMapWidth * sqrt( 3.0 ) ) - 0.5 * log2( square( blinnShininessExponent ) + 1.0 );\n\n\t\tfloat maxMIPLevelScalar = float( maxMIPLevel );\n\t\tfloat desiredMIPLevel = maxMIPLevelScalar - 0.79248 - 0.5 * log2( square( blinnShininessExponent ) + 1.0 );\n\n\t\t// clamp to allowable LOD ranges.\n\t\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\n\n\t}\n\n\tvec3 getLightProbeIndirectRadiance( /*const in SpecularLightProbe specularLightProbe,*/ const in GeometricContext geometry, const in float blinnShininessExponent, const in int maxMIPLevel ) {\n\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\n\t\t\tvec3 reflectVec = reflect( -geometry.viewDir, geometry.normal );\n\n\t\t#else\n\n\t\t\tvec3 reflectVec = refract( -geometry.viewDir, geometry.normal, refractionRatio );\n\n\t\t#endif\n\n\t\t#ifdef DOUBLE_SIDED\n\n\t\t\tfloat flipNormal = ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\n\t\t#else\n\n\t\t\tfloat flipNormal = 1.0;\n\n\t\t#endif\n\n\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\n\t\tfloat specularMIPLevel = getSpecularMIPLevel( blinnShininessExponent, maxMIPLevel );\n\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\n\t\t\tvec3 queryReflectVec = flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\n\n\t\t\t#else\n\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\n\n\t\t\t#endif\n\n\t\t#elif defined( ENVMAP_TYPE_EQUIREC )\n\n\t\t\tvec2 sampleUV;\n\t\t\tsampleUV.y = saturate( flipNormal * reflectVec.y * 0.5 + 0.5 );\n\t\t\tsampleUV.x = atan( flipNormal * reflectVec.z, flipNormal * reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\n\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\n\t\t\t\tvec4 envMapColor = texture2DLodEXT( envMap, sampleUV, specularMIPLevel );\n\n\t\t\t#else\n\n\t\t\t\tvec4 envMapColor = texture2D( envMap, sampleUV, specularMIPLevel );\n\n\t\t\t#endif\n\n\t\t#elif defined( ENVMAP_TYPE_SPHERE )\n\n\t\t\tvec3 reflectView = flipNormal * normalize((viewMatrix * vec4( reflectVec, 0.0 )).xyz + vec3(0.0,0.0,1.0));\n\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\n\t\t\t\tvec4 envMapColor = texture2DLodEXT( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\n\n\t\t\t#else\n\n\t\t\t\tvec4 envMapColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\n\n\t\t\t#endif\n\n\t\t#endif\n\n\t\tenvMapColor.rgb = inputToLinear( envMapColor.rgb );\n\n\t\treturn envMapColor.rgb * envMapIntensity;\n\n\t}\n\n#endif\n",
        r.ShaderChunk.lights_phong_fragment = "BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;\n",
        r.ShaderChunk.lights_phong_pars_fragment = "#ifdef USE_ENVMAP\n\n\tvarying vec3 vWorldPosition;\n\n#endif\n\nvarying vec3 vViewPosition;\n\n#ifndef FLAT_SHADED\n\n\tvarying vec3 vNormal;\n\n#endif\n\n\nstruct BlinnPhongMaterial {\n\n\tvec3\tdiffuseColor;\n\tvec3\tspecularColor;\n\tfloat\tspecularShininess;\n\tfloat\tspecularStrength;\n\n};\n\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\n\tvec3 irradiance = dotNL * PI * directLight.color; // punctual light\n\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\n\n}\n\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\n}\n\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong\n\n#define Material_LightProbeLOD( material )\t(0)\n",
        r.ShaderChunk.lights_phong_pars_vertex = "#ifdef USE_ENVMAP\n\n\tvarying vec3 vWorldPosition;\n\n#endif\n",
        r.ShaderChunk.lights_phong_vertex = "#ifdef USE_ENVMAP\n\n\tvWorldPosition = worldPosition.xyz;\n\n#endif\n",
        r.ShaderChunk.lights_standard_fragment = "StandardMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nmaterial.specularRoughness = clamp( roughnessFactor, 0.04, 1.0 );\nmaterial.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );\n",
        r.ShaderChunk.lights_standard_pars_fragment = "struct StandardMaterial {\n\n\tvec3\tdiffuseColor;\n\tfloat\tspecularRoughness;\n\tvec3\tspecularColor;\n\n};\n\nvoid RE_Direct_Standard( const in IncidentLight directLight, const in GeometricContext geometry, const in StandardMaterial material, inout ReflectedLight reflectedLight ) {\n\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\n\tvec3 irradiance = dotNL * PI * directLight.color; // punctual light\n\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\n\treflectedLight.directSpecular += irradiance * BRDF_Specular_GGX( directLight, geometry, material.specularColor, material.specularRoughness );\n\n}\n\nvoid RE_IndirectDiffuse_Standard( const in vec3 irradiance, const in GeometricContext geometry, const in StandardMaterial material, inout ReflectedLight reflectedLight ) {\n\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\n}\n\nvoid RE_IndirectSpecular_Standard( const in vec3 radiance, const in GeometricContext geometry, const in StandardMaterial material, inout ReflectedLight reflectedLight ) {\n\n\treflectedLight.indirectSpecular += radiance * BRDF_Specular_GGX_Environment( geometry, material.specularColor, material.specularRoughness );\n\n}\n\n#define RE_Direct\t\t\t\tRE_Direct_Standard\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Standard\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Standard\n\n#define Material_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.specularRoughness )\n",
        r.ShaderChunk.lights_template = "//\n// This is a template that can be used to light a material, it uses pluggable RenderEquations (RE)\n//   for specific lighting scenarios.\n//\n// Instructions for use:\n//  - Ensure that both RE_Direct, RE_IndirectDiffuse and RE_IndirectSpecular are defined\n//  - If you have defined an RE_IndirectSpecular, you need to also provide a Material_LightProbeLOD. <---- ???\n//  - Create a material parameter that is to be passed as the third parameter to your lighting functions.\n//\n// TODO:\n//  - Add area light support.\n//  - Add sphere light support.\n//  - Add diffuse light probe (irradiance cubemap) support.\n//\n\nGeometricContext geometry;\n\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = normalize( vViewPosition );\n\nIncidentLight directLight;\n\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\n\tPointLight pointLight;\n\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\n\t\tpointLight = pointLights[ i ];\n\n\t\tgetPointDirectLight( pointLight, geometry, directLight );\n\n\t\t#ifdef USE_SHADOWMAP\n\t\tdirectLight.color *= all( bvec2( pointLight.shadow, directLight.visible ) ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\n\t}\n\n#endif\n\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\n\tSpotLight spotLight;\n\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\n\t\tspotLight = spotLights[ i ];\n\n\t\tgetSpotDirectLight( spotLight, geometry, directLight );\n\n\t\t#ifdef USE_SHADOWMAP\n\t\tdirectLight.color *= all( bvec2( spotLight.shadow, directLight.visible ) ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\n\t}\n\n#endif\n\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n\n\tDirectionalLight directionalLight;\n\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\n\t\tdirectionalLight = directionalLights[ i ];\n\n\t\tgetDirectionalDirectLight( directionalLight, geometry, directLight );\n\n\t\t#ifdef USE_SHADOWMAP\n\t\tdirectLight.color *= all( bvec2( directionalLight.shadow, directLight.visible ) ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\n\t}\n\n#endif\n\n#if defined( RE_IndirectDiffuse )\n\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\n\t#ifdef USE_LIGHTMAP\n\n\t\tirradiance += PI * texture2D( lightMap, vUv2 ).xyz * lightMapIntensity; // factor of PI should not be present; included here to prevent breakage\n\n\t#endif\n\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\n\t\t}\n\n\t#endif\n\n\t// #if defined( USE_ENVMAP ) && defined( STANDARD )\n\n\t\t// TODO, replace 8 with the real maxMIPLevel\n\t\t// irradiance += getLightProbeIndirectIrradiance( /*lightProbe,*/ geometry, 8 ); // comment out until seams are fixed\n\n\t// #endif\n\n\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n\n#endif\n\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n\n\t// TODO, replace 8 with the real maxMIPLevel\n\tvec3 radiance = getLightProbeIndirectRadiance( /*specularLightProbe,*/ geometry, Material_BlinnShininessExponent( material ), 8 );\n\n\tRE_IndirectSpecular( radiance, geometry, material, reflectedLight );\n\n#endif\n",
        r.ShaderChunk.linear_to_gamma_fragment = "\n\toutgoingLight = linearToOutput( outgoingLight );\n",
        r.ShaderChunk.logdepthbuf_fragment = "#if defined(USE_LOGDEPTHBUF) && defined(USE_LOGDEPTHBUF_EXT)\n\n\tgl_FragDepthEXT = log2(vFragDepth) * logDepthBufFC * 0.5;\n\n#endif",
        r.ShaderChunk.logdepthbuf_pars_fragment = "#ifdef USE_LOGDEPTHBUF\n\n\tuniform float logDepthBufFC;\n\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\n\t\tvarying float vFragDepth;\n\n\t#endif\n\n#endif\n",
        r.ShaderChunk.logdepthbuf_pars_vertex = "#ifdef USE_LOGDEPTHBUF\n\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\n\t\tvarying float vFragDepth;\n\n\t#endif\n\n\tuniform float logDepthBufFC;\n\n#endif",
        r.ShaderChunk.logdepthbuf_vertex = "#ifdef USE_LOGDEPTHBUF\n\n\tgl_Position.z = log2(max( EPSILON, gl_Position.w + 1.0 )) * logDepthBufFC;\n\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\n\t\tvFragDepth = 1.0 + gl_Position.w;\n\n\t#else\n\n\t\tgl_Position.z = (gl_Position.z - 1.0) * gl_Position.w;\n\n\t#endif\n\n#endif\n",
        r.ShaderChunk.map_fragment = "#ifdef USE_MAP\n\n\tvec4 texelColor = texture2D( map, vUv );\n\n\ttexelColor.xyz = inputToLinear( texelColor.xyz );\n\n\tdiffuseColor *= texelColor;\n\n#endif\n",
        r.ShaderChunk.map_pars_fragment = "#ifdef USE_MAP\n\n\tuniform sampler2D map;\n\n#endif",
        r.ShaderChunk.map_particle_fragment = "#ifdef USE_MAP\n\n\tdiffuseColor *= texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) * offsetRepeat.zw + offsetRepeat.xy );\n\n#endif\n",
        r.ShaderChunk.map_particle_pars_fragment = "#ifdef USE_MAP\n\n\tuniform vec4 offsetRepeat;\n\tuniform sampler2D map;\n\n#endif\n",
        r.ShaderChunk.metalnessmap_fragment = "float metalnessFactor = metalness;\n\n#ifdef USE_METALNESSMAP\n\n\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\n\tmetalnessFactor *= texelMetalness.r;\n\n#endif\n",
        r.ShaderChunk.metalnessmap_pars_fragment = "#ifdef USE_METALNESSMAP\n\n\tuniform sampler2D metalnessMap;\n\n#endif",
        r.ShaderChunk.morphnormal_vertex = "#ifdef USE_MORPHNORMALS\n\n\tobjectNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\n\tobjectNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\n\tobjectNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\n\tobjectNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\n\n#endif\n",
        r.ShaderChunk.morphtarget_pars_vertex = "#ifdef USE_MORPHTARGETS\n\n\t#ifndef USE_MORPHNORMALS\n\n\tuniform float morphTargetInfluences[ 8 ];\n\n\t#else\n\n\tuniform float morphTargetInfluences[ 4 ];\n\n\t#endif\n\n#endif",
        r.ShaderChunk.morphtarget_vertex = "#ifdef USE_MORPHTARGETS\n\n\ttransformed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\n\ttransformed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\n\ttransformed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\n\ttransformed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\n\n\t#ifndef USE_MORPHNORMALS\n\n\ttransformed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\n\ttransformed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\n\ttransformed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\n\ttransformed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\n\n\t#endif\n\n#endif\n",
        r.ShaderChunk.normal_fragment = "#ifdef FLAT_SHADED\n\n\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\n\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n\n#else\n\n\tvec3 normal = normalize( vNormal );\n\n\t#ifdef DOUBLE_SIDED\n\n\t\tnormal = normal * ( -1.0 + 2.0 * float( gl_FrontFacing ) );\n\n\t#endif\n\n#endif\n\n#ifdef USE_NORMALMAP\n\n\tnormal = perturbNormal2Arb( -vViewPosition, normal );\n\n#elif defined( USE_BUMPMAP )\n\n\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\n\n#endif\n",
        r.ShaderChunk.normalmap_pars_fragment = "#ifdef USE_NORMALMAP\n\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n\n\t// Per-Pixel Tangent Space Normal Mapping\n\t// http://hacksoflife.blogspot.ch/2009/11/per-pixel-tangent-space-normal-mapping.html\n\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\n\n\t\tvec3 q0 = dFdx( eye_pos.xyz );\n\t\tvec3 q1 = dFdy( eye_pos.xyz );\n\t\tvec2 st0 = dFdx( vUv.st );\n\t\tvec2 st1 = dFdy( vUv.st );\n\n\t\tvec3 S = normalize( q0 * st1.t - q1 * st0.t );\n\t\tvec3 T = normalize( -q0 * st1.s + q1 * st0.s );\n\t\tvec3 N = normalize( surf_norm );\n\n\t\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t\tmapN.xy = normalScale * mapN.xy;\n\t\tmat3 tsn = mat3( S, T, N );\n\t\treturn normalize( tsn * mapN );\n\n\t}\n\n#endif\n",
        r.ShaderChunk.project_vertex = "#ifdef USE_SKINNING\n\n\tvec4 mvPosition = modelViewMatrix * skinned;\n\n#else\n\n\tvec4 mvPosition = modelViewMatrix * vec4( transformed, 1.0 );\n\n#endif\n\ngl_Position = projectionMatrix * mvPosition;\n",
        r.ShaderChunk.roughnessmap_fragment = "float roughnessFactor = roughness;\n\n#ifdef USE_ROUGHNESSMAP\n\n\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\n\troughnessFactor *= texelRoughness.r;\n\n#endif\n",
        r.ShaderChunk.roughnessmap_pars_fragment = "#ifdef USE_ROUGHNESSMAP\n\n\tuniform sampler2D roughnessMap;\n\n#endif",
        r.ShaderChunk.shadowmap_pars_fragment = "#ifdef USE_SHADOWMAP\n\n\t#if NUM_DIR_LIGHTS > 0\n\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHTS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\n\n\t#endif\n\n\t#if NUM_SPOT_LIGHTS > 0\n\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHTS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\n\n\t#endif\n\n\t#if NUM_POINT_LIGHTS > 0\n\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHTS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\n\n\t#endif\n\n\tfloat unpackDepth( const in vec4 rgba_depth ) {\n\n\t\tconst vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\n\t\treturn dot( rgba_depth, bit_shift );\n\n\t}\n\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\n\t\treturn step( compare, unpackDepth( texture2D( depths, uv ) ) );\n\n\t}\n\n\tfloat texture2DShadowLerp( sampler2D depths, vec2 size, vec2 uv, float compare ) {\n\n\t\tconst vec2 offset = vec2( 0.0, 1.0 );\n\n\t\tvec2 texelSize = vec2( 1.0 ) / size;\n\t\tvec2 centroidUV = floor( uv * size + 0.5 ) / size;\n\n\t\tfloat lb = texture2DCompare( depths, centroidUV + texelSize * offset.xx, compare );\n\t\tfloat lt = texture2DCompare( depths, centroidUV + texelSize * offset.xy, compare );\n\t\tfloat rb = texture2DCompare( depths, centroidUV + texelSize * offset.yx, compare );\n\t\tfloat rt = texture2DCompare( depths, centroidUV + texelSize * offset.yy, compare );\n\n\t\tvec2 f = fract( uv * size + 0.5 );\n\n\t\tfloat a = mix( lb, lt, f.y );\n\t\tfloat b = mix( rb, rt, f.y );\n\t\tfloat c = mix( a, b, f.x );\n\n\t\treturn c;\n\n\t}\n\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\n\t\tshadowCoord.xyz /= shadowCoord.w;\n\t\tshadowCoord.z += shadowBias;\n\n\t\t// if ( something && something ) breaks ATI OpenGL shader compiler\n\t\t// if ( all( something, something ) ) using this instead\n\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n\t\tbool inFrustum = all( inFrustumVec );\n\n\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\n\t\tbool frustumTest = all( frustumTestVec );\n\n\t\tif ( frustumTest ) {\n\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 9.0 );\n\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\n\t\t\treturn (\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 9.0 );\n\n\t\t#else // no percentage-closer filtering:\n\n\t\t\treturn texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\n\t\t#endif\n\n\t\t}\n\n\t\treturn 1.0;\n\n\t}\n\n\t// cubeToUV() maps a 3D direction vector suitable for cube texture mapping to a 2D\n\t// vector suitable for 2D texture mapping. This code uses the following layout for the\n\t// 2D texture:\n\t//\n\t// xzXZ\n\t//  y Y\n\t//\n\t// Y - Positive y direction\n\t// y - Negative y direction\n\t// X - Positive x direction\n\t// x - Negative x direction\n\t// Z - Positive z direction\n\t// z - Negative z direction\n\t//\n\t// Source and test bed:\n\t// https://gist.github.com/tschw/da10c43c467ce8afd0c4\n\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\n\t\t// Number of texels to avoid at the edge of each square\n\n\t\tvec3 absV = abs( v );\n\n\t\t// Intersect unit cube\n\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\tabsV *= scaleToCube;\n\n\t\t// Apply scale to avoid seams\n\n\t\t// two texels less per square (one texel will do for NEAREST)\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\n\t\t// Unwrap\n\n\t\t// space: -1 ... 1 range for each square\n\t\t//\n\t\t// #X##\t\tdim    := ( 4 , 2 )\n\t\t//  # #\t\tcenter := ( 1 , 1 )\n\n\t\tvec2 planar = v.xy;\n\n\t\tfloat almostATexel = 1.5 * texelSizeY;\n\t\tfloat almostOne = 1.0 - almostATexel;\n\n\t\tif ( absV.z >= almostOne ) {\n\n\t\t\tif ( v.z > 0.0 )\n\t\t\t\tplanar.x = 4.0 - v.x;\n\n\t\t} else if ( absV.x >= almostOne ) {\n\n\t\t\tfloat signX = sign( v.x );\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\n\n\t\t} else if ( absV.y >= almostOne ) {\n\n\t\t\tfloat signY = sign( v.y );\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\n\t\t\tplanar.y = v.z * signY - 2.0;\n\n\t\t}\n\n\t\t// Transform to UV space\n\n\t\t// scale := 0.5 / dim\n\t\t// translate := ( center + 0.5 ) / dim\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\n\t}\n\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\n\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\n\t\t// for point lights, the uniform @vShadowCoord is re-purposed to hold\n\t\t// the distance from the light to the world-space position of the fragment.\n\t\tvec3 lightToPosition = shadowCoord.xyz;\n\n\t\t// bd3D = base direction 3D\n\t\tvec3 bd3D = normalize( lightToPosition );\n\t\t// dp = distance from light to fragment position\n\t\tfloat dp = ( length( lightToPosition ) - shadowBias ) / 1000.0;\n\n\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT )\n\n\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n\t\t\t) * ( 1.0 / 9.0 );\n\n\t\t#else // no percentage-closer filtering\n\n\t\t\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\n\t\t#endif\n\n\t}\n\n#endif\n",
        r.ShaderChunk.shadowmap_pars_vertex = "#ifdef USE_SHADOWMAP\n\n\t#if NUM_DIR_LIGHTS > 0\n\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHTS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\n\n\t#endif\n\n\t#if NUM_SPOT_LIGHTS > 0\n\n\t\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHTS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\n\n\t#endif\n\n\t#if NUM_POINT_LIGHTS > 0\n\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHTS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\n\n\t#endif\n\n#endif\n",
        r.ShaderChunk.shadowmap_vertex = "#ifdef USE_SHADOWMAP\n\n\t#if NUM_DIR_LIGHTS > 0\n\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\n\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * worldPosition;\n\n\t}\n\n\t#endif\n\n\t#if NUM_SPOT_LIGHTS > 0\n\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\n\t\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * worldPosition;\n\n\t}\n\n\t#endif\n\n\t#if NUM_POINT_LIGHTS > 0\n\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\n\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * worldPosition;\n\n\t}\n\n\t#endif\n\n#endif\n",
        r.ShaderChunk.shadowmask_pars_fragment = "float getShadowMask() {\n\n\tfloat shadow = 1.0;\n\n\t#ifdef USE_SHADOWMAP\n\n\t#if NUM_DIR_LIGHTS > 0\n\n\tDirectionalLight directionalLight;\n\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tshadow *= bool( directionalLight.shadow ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\n\t}\n\n\t#endif\n\n\t#if NUM_SPOT_LIGHTS > 0\n\n\tSpotLight spotLight;\n\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\n\t\tspotLight = spotLights[ i ];\n\t\tshadow *= bool( spotLight.shadow ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\n\t}\n\n\t#endif\n\n\t#if NUM_POINT_LIGHTS > 0\n\n\tPointLight pointLight;\n\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\n\t\tpointLight = pointLights[ i ];\n\t\tshadow *= bool( pointLight.shadow ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ] ) : 1.0;\n\n\t}\n\n\t#endif\n\n\t#endif\n\n\treturn shadow;\n\n}\n",
        r.ShaderChunk.skinbase_vertex = "#ifdef USE_SKINNING\n\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n\n#endif",
        r.ShaderChunk.skinning_pars_vertex = "#ifdef USE_SKINNING\n\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\n\t#ifdef BONE_TEXTURE\n\n\t\tuniform sampler2D boneTexture;\n\t\tuniform int boneTextureWidth;\n\t\tuniform int boneTextureHeight;\n\n\t\tmat4 getBoneMatrix( const in float i ) {\n\n\t\t\tfloat j = i * 4.0;\n\t\t\tfloat x = mod( j, float( boneTextureWidth ) );\n\t\t\tfloat y = floor( j / float( boneTextureWidth ) );\n\n\t\t\tfloat dx = 1.0 / float( boneTextureWidth );\n\t\t\tfloat dy = 1.0 / float( boneTextureHeight );\n\n\t\t\ty = dy * ( y + 0.5 );\n\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\n\n\t\t\treturn bone;\n\n\t\t}\n\n\t#else\n\n\t\tuniform mat4 boneGlobalMatrices[ MAX_BONES ];\n\n\t\tmat4 getBoneMatrix( const in float i ) {\n\n\t\t\tmat4 bone = boneGlobalMatrices[ int(i) ];\n\t\t\treturn bone;\n\n\t\t}\n\n\t#endif\n\n#endif\n",
        r.ShaderChunk.skinning_vertex = "#ifdef USE_SKINNING\n\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\tskinned  = bindMatrixInverse * skinned;\n\n#endif\n",
        r.ShaderChunk.skinnormal_vertex = "#ifdef USE_SKINNING\n\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\n\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n\n#endif\n",
        r.ShaderChunk.specularmap_fragment = "float specularStrength;\n\n#ifdef USE_SPECULARMAP\n\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\n\tspecularStrength = texelSpecular.r;\n\n#else\n\n\tspecularStrength = 1.0;\n\n#endif",
        r.ShaderChunk.specularmap_pars_fragment = "#ifdef USE_SPECULARMAP\n\n\tuniform sampler2D specularMap;\n\n#endif",
        r.ShaderChunk.uv2_pars_fragment = "#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\n\tvarying vec2 vUv2;\n\n#endif",
        r.ShaderChunk.uv2_pars_vertex = "#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\n\tattribute vec2 uv2;\n\tvarying vec2 vUv2;\n\n#endif",
        r.ShaderChunk.uv2_vertex = "#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\n\tvUv2 = uv2;\n\n#endif",
        r.ShaderChunk.uv_pars_fragment = "#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\n\n\tvarying vec2 vUv;\n\n#endif",
        r.ShaderChunk.uv_pars_vertex = "#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\n\n\tvarying vec2 vUv;\n\tuniform vec4 offsetRepeat;\n\n#endif\n",
        r.ShaderChunk.uv_vertex = "#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\n\n\tvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\n\n#endif",
        r.ShaderChunk.worldpos_vertex = "#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( STANDARD ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )\n\n\t#ifdef USE_SKINNING\n\n\t\tvec4 worldPosition = modelMatrix * skinned;\n\n\t#else\n\n\t\tvec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );\n\n\t#endif\n\n#endif\n",
        r.UniformsUtils = {
            merge: function(t) {
                for (var e = {}, n = 0; n < t.length; n++) {
                    var r = this.clone(t[n]);
                    for (var i in r)
                        e[i] = r[i]
                }
                return e
            },
            clone: function(t) {
                var e = {};
                for (var n in t) {
                    e[n] = {};
                    for (var i in t[n]) {
                        var o = t[n][i];
                        o instanceof r.Color || o instanceof r.Vector2 || o instanceof r.Vector3 || o instanceof r.Vector4 || o instanceof r.Matrix3 || o instanceof r.Matrix4 || o instanceof r.Texture ? e[n][i] = o.clone() : Array.isArray(o) ? e[n][i] = o.slice() : e[n][i] = o
                    }
                }
                return e
            }
        },
        r.UniformsLib = {
            common: {
                diffuse: {
                    type: "c",
                    value: new r.Color(15658734)
                },
                opacity: {
                    type: "f",
                    value: 1
                },
                map: {
                    type: "t",
                    value: null
                },
                offsetRepeat: {
                    type: "v4",
                    value: new r.Vector4(0,0,1,1)
                },
                specularMap: {
                    type: "t",
                    value: null
                },
                alphaMap: {
                    type: "t",
                    value: null
                },
                envMap: {
                    type: "t",
                    value: null
                },
                flipEnvMap: {
                    type: "f",
                    value: -1
                },
                reflectivity: {
                    type: "f",
                    value: 1
                },
                refractionRatio: {
                    type: "f",
                    value: .98
                }
            },
            aomap: {
                aoMap: {
                    type: "t",
                    value: null
                },
                aoMapIntensity: {
                    type: "f",
                    value: 1
                }
            },
            lightmap: {
                lightMap: {
                    type: "t",
                    value: null
                },
                lightMapIntensity: {
                    type: "f",
                    value: 1
                }
            },
            emissivemap: {
                emissiveMap: {
                    type: "t",
                    value: null
                }
            },
            bumpmap: {
                bumpMap: {
                    type: "t",
                    value: null
                },
                bumpScale: {
                    type: "f",
                    value: 1
                }
            },
            normalmap: {
                normalMap: {
                    type: "t",
                    value: null
                },
                normalScale: {
                    type: "v2",
                    value: new r.Vector2(1,1)
                }
            },
            displacementmap: {
                displacementMap: {
                    type: "t",
                    value: null
                },
                displacementScale: {
                    type: "f",
                    value: 1
                },
                displacementBias: {
                    type: "f",
                    value: 0
                }
            },
            roughnessmap: {
                roughnessMap: {
                    type: "t",
                    value: null
                }
            },
            metalnessmap: {
                metalnessMap: {
                    type: "t",
                    value: null
                }
            },
            fog: {
                fogDensity: {
                    type: "f",
                    value: 25e-5
                },
                fogNear: {
                    type: "f",
                    value: 1
                },
                fogFar: {
                    type: "f",
                    value: 2e3
                },
                fogColor: {
                    type: "c",
                    value: new r.Color(16777215)
                }
            },
            ambient: {
                ambientLightColor: {
                    type: "fv",
                    value: []
                }
            },
            lights: {
                directionalLights: {
                    type: "sa",
                    value: [],
                    properties: {
                        direction: {
                            type: "v3"
                        },
                        color: {
                            type: "c"
                        },
                        shadow: {
                            type: "i"
                        },
                        shadowBias: {
                            type: "f"
                        },
                        shadowRadius: {
                            type: "f"
                        },
                        shadowMapSize: {
                            type: "v2"
                        }
                    }
                },
                directionalShadowMap: {
                    type: "tv",
                    value: []
                },
                directionalShadowMatrix: {
                    type: "m4v",
                    value: []
                },
                spotLights: {
                    type: "sa",
                    value: [],
                    properties: {
                        color: {
                            type: "c"
                        },
                        position: {
                            type: "v3"
                        },
                        direction: {
                            type: "v3"
                        },
                        distance: {
                            type: "f"
                        },
                        angleCos: {
                            type: "f"
                        },
                        penumbra: {
                            type: "f"
                        },
                        decay: {
                            type: "f"
                        },
                        shadow: {
                            type: "i"
                        },
                        shadowBias: {
                            type: "f"
                        },
                        shadowRadius: {
                            type: "f"
                        },
                        shadowMapSize: {
                            type: "v2"
                        }
                    }
                },
                spotShadowMap: {
                    type: "tv",
                    value: []
                },
                spotShadowMatrix: {
                    type: "m4v",
                    value: []
                },
                pointLights: {
                    type: "sa",
                    value: [],
                    properties: {
                        color: {
                            type: "c"
                        },
                        position: {
                            type: "v3"
                        },
                        decay: {
                            type: "f"
                        },
                        distance: {
                            type: "f"
                        },
                        shadow: {
                            type: "i"
                        },
                        shadowBias: {
                            type: "f"
                        },
                        shadowRadius: {
                            type: "f"
                        },
                        shadowMapSize: {
                            type: "v2"
                        }
                    }
                },
                pointShadowMap: {
                    type: "tv",
                    value: []
                },
                pointShadowMatrix: {
                    type: "m4v",
                    value: []
                },
                hemisphereLights: {
                    type: "sa",
                    value: [],
                    properties: {
                        direction: {
                            type: "v3"
                        },
                        skyColor: {
                            type: "c"
                        },
                        groundColor: {
                            type: "c"
                        }
                    }
                }
            },
            points: {
                diffuse: {
                    type: "c",
                    value: new r.Color(15658734)
                },
                opacity: {
                    type: "f",
                    value: 1
                },
                size: {
                    type: "f",
                    value: 1
                },
                scale: {
                    type: "f",
                    value: 1
                },
                map: {
                    type: "t",
                    value: null
                },
                offsetRepeat: {
                    type: "v4",
                    value: new r.Vector4(0,0,1,1)
                }
            }
        },
        r.ShaderLib = {
            basic: {
                uniforms: r.UniformsUtils.merge([r.UniformsLib.common, r.UniformsLib.aomap, r.UniformsLib.fog]),
                vertexShader: [r.ShaderChunk.common, r.ShaderChunk.uv_pars_vertex, r.ShaderChunk.uv2_pars_vertex, r.ShaderChunk.envmap_pars_vertex, r.ShaderChunk.color_pars_vertex, r.ShaderChunk.morphtarget_pars_vertex, r.ShaderChunk.skinning_pars_vertex, r.ShaderChunk.logdepthbuf_pars_vertex, "void main() {", r.ShaderChunk.uv_vertex, r.ShaderChunk.uv2_vertex, r.ShaderChunk.color_vertex, r.ShaderChunk.skinbase_vertex, "\t#ifdef USE_ENVMAP", r.ShaderChunk.beginnormal_vertex, r.ShaderChunk.morphnormal_vertex, r.ShaderChunk.skinnormal_vertex, r.ShaderChunk.defaultnormal_vertex, "\t#endif", r.ShaderChunk.begin_vertex, r.ShaderChunk.morphtarget_vertex, r.ShaderChunk.skinning_vertex, r.ShaderChunk.project_vertex, r.ShaderChunk.logdepthbuf_vertex, r.ShaderChunk.worldpos_vertex, r.ShaderChunk.envmap_vertex, "}"].join("\n"),
                fragmentShader: ["uniform vec3 diffuse;", "uniform float opacity;", "#ifndef FLAT_SHADED", "\tvarying vec3 vNormal;", "#endif", r.ShaderChunk.common, r.ShaderChunk.color_pars_fragment, r.ShaderChunk.uv_pars_fragment, r.ShaderChunk.uv2_pars_fragment, r.ShaderChunk.map_pars_fragment, r.ShaderChunk.alphamap_pars_fragment, r.ShaderChunk.aomap_pars_fragment, r.ShaderChunk.envmap_pars_fragment, r.ShaderChunk.fog_pars_fragment, r.ShaderChunk.specularmap_pars_fragment, r.ShaderChunk.logdepthbuf_pars_fragment, "void main() {", "\tvec4 diffuseColor = vec4( diffuse, opacity );", r.ShaderChunk.logdepthbuf_fragment, r.ShaderChunk.map_fragment, r.ShaderChunk.color_fragment, r.ShaderChunk.alphamap_fragment, r.ShaderChunk.alphatest_fragment, r.ShaderChunk.specularmap_fragment, "\tReflectedLight reflectedLight;", "\treflectedLight.directDiffuse = vec3( 0.0 );", "\treflectedLight.directSpecular = vec3( 0.0 );", "\treflectedLight.indirectDiffuse = diffuseColor.rgb;", "\treflectedLight.indirectSpecular = vec3( 0.0 );", r.ShaderChunk.aomap_fragment, "\tvec3 outgoingLight = reflectedLight.indirectDiffuse;", r.ShaderChunk.envmap_fragment, r.ShaderChunk.linear_to_gamma_fragment, r.ShaderChunk.fog_fragment, "\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );", "}"].join("\n")
            },
            lambert: {
                uniforms: r.UniformsUtils.merge([r.UniformsLib.common, r.UniformsLib.aomap, r.UniformsLib.lightmap, r.UniformsLib.emissivemap, r.UniformsLib.fog, r.UniformsLib.ambient, r.UniformsLib.lights, {
                    emissive: {
                        type: "c",
                        value: new r.Color(0)
                    }
                }]),
                vertexShader: ["#define LAMBERT", "varying vec3 vLightFront;", "#ifdef DOUBLE_SIDED", "\tvarying vec3 vLightBack;", "#endif", r.ShaderChunk.common, r.ShaderChunk.uv_pars_vertex, r.ShaderChunk.uv2_pars_vertex, r.ShaderChunk.envmap_pars_vertex, r.ShaderChunk.bsdfs, r.ShaderChunk.lights_pars, r.ShaderChunk.color_pars_vertex, r.ShaderChunk.morphtarget_pars_vertex, r.ShaderChunk.skinning_pars_vertex, r.ShaderChunk.shadowmap_pars_vertex, r.ShaderChunk.logdepthbuf_pars_vertex, "void main() {", r.ShaderChunk.uv_vertex, r.ShaderChunk.uv2_vertex, r.ShaderChunk.color_vertex, r.ShaderChunk.beginnormal_vertex, r.ShaderChunk.morphnormal_vertex, r.ShaderChunk.skinbase_vertex, r.ShaderChunk.skinnormal_vertex, r.ShaderChunk.defaultnormal_vertex, r.ShaderChunk.begin_vertex, r.ShaderChunk.morphtarget_vertex, r.ShaderChunk.skinning_vertex, r.ShaderChunk.project_vertex, r.ShaderChunk.logdepthbuf_vertex, r.ShaderChunk.worldpos_vertex, r.ShaderChunk.envmap_vertex, r.ShaderChunk.lights_lambert_vertex, r.ShaderChunk.shadowmap_vertex, "}"].join("\n"),
                fragmentShader: ["uniform vec3 diffuse;", "uniform vec3 emissive;", "uniform float opacity;", "varying vec3 vLightFront;", "#ifdef DOUBLE_SIDED", "\tvarying vec3 vLightBack;", "#endif", r.ShaderChunk.common, r.ShaderChunk.color_pars_fragment, r.ShaderChunk.uv_pars_fragment, r.ShaderChunk.uv2_pars_fragment, r.ShaderChunk.map_pars_fragment, r.ShaderChunk.alphamap_pars_fragment, r.ShaderChunk.aomap_pars_fragment, r.ShaderChunk.lightmap_pars_fragment, r.ShaderChunk.emissivemap_pars_fragment, r.ShaderChunk.envmap_pars_fragment, r.ShaderChunk.bsdfs, r.ShaderChunk.ambient_pars, r.ShaderChunk.lights_pars, r.ShaderChunk.fog_pars_fragment, r.ShaderChunk.shadowmap_pars_fragment, r.ShaderChunk.shadowmask_pars_fragment, r.ShaderChunk.specularmap_pars_fragment, r.ShaderChunk.logdepthbuf_pars_fragment, "void main() {", "\tvec4 diffuseColor = vec4( diffuse, opacity );", "\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );", "\tvec3 totalEmissiveLight = emissive;", r.ShaderChunk.logdepthbuf_fragment, r.ShaderChunk.map_fragment, r.ShaderChunk.color_fragment, r.ShaderChunk.alphamap_fragment, r.ShaderChunk.alphatest_fragment, r.ShaderChunk.specularmap_fragment, r.ShaderChunk.emissivemap_fragment, "\treflectedLight.indirectDiffuse = getAmbientLightIrradiance( ambientLightColor );", r.ShaderChunk.lightmap_fragment, "\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );", "\t#ifdef DOUBLE_SIDED", "\t\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;", "\t#else", "\t\treflectedLight.directDiffuse = vLightFront;", "\t#endif", "\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();", r.ShaderChunk.aomap_fragment, "\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveLight;", r.ShaderChunk.envmap_fragment, r.ShaderChunk.linear_to_gamma_fragment, r.ShaderChunk.fog_fragment, "\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );", "}"].join("\n")
            },
            phong: {
                uniforms: r.UniformsUtils.merge([r.UniformsLib.common, r.UniformsLib.aomap, r.UniformsLib.lightmap, r.UniformsLib.emissivemap, r.UniformsLib.bumpmap, r.UniformsLib.normalmap, r.UniformsLib.displacementmap, r.UniformsLib.fog, r.UniformsLib.ambient, r.UniformsLib.lights, {
                    emissive: {
                        type: "c",
                        value: new r.Color(0)
                    },
                    specular: {
                        type: "c",
                        value: new r.Color(1118481)
                    },
                    shininess: {
                        type: "f",
                        value: 30
                    }
                }]),
                vertexShader: ["#define PHONG", "varying vec3 vViewPosition;", "#ifndef FLAT_SHADED", "\tvarying vec3 vNormal;", "#endif", r.ShaderChunk.common, r.ShaderChunk.uv_pars_vertex, r.ShaderChunk.uv2_pars_vertex, r.ShaderChunk.displacementmap_pars_vertex, r.ShaderChunk.envmap_pars_vertex, r.ShaderChunk.lights_phong_pars_vertex, r.ShaderChunk.color_pars_vertex, r.ShaderChunk.morphtarget_pars_vertex, r.ShaderChunk.skinning_pars_vertex, r.ShaderChunk.shadowmap_pars_vertex, r.ShaderChunk.logdepthbuf_pars_vertex, "void main() {", r.ShaderChunk.uv_vertex, r.ShaderChunk.uv2_vertex, r.ShaderChunk.color_vertex, r.ShaderChunk.beginnormal_vertex, r.ShaderChunk.morphnormal_vertex, r.ShaderChunk.skinbase_vertex, r.ShaderChunk.skinnormal_vertex, r.ShaderChunk.defaultnormal_vertex, "#ifndef FLAT_SHADED", "\tvNormal = normalize( transformedNormal );", "#endif", r.ShaderChunk.begin_vertex, r.ShaderChunk.displacementmap_vertex, r.ShaderChunk.morphtarget_vertex, r.ShaderChunk.skinning_vertex, r.ShaderChunk.project_vertex, r.ShaderChunk.logdepthbuf_vertex, "\tvViewPosition = - mvPosition.xyz;", r.ShaderChunk.worldpos_vertex, r.ShaderChunk.envmap_vertex, r.ShaderChunk.lights_phong_vertex, r.ShaderChunk.shadowmap_vertex, "}"].join("\n"),
                fragmentShader: ["#define PHONG", "uniform vec3 diffuse;", "uniform vec3 emissive;", "uniform vec3 specular;", "uniform float shininess;", "uniform float opacity;", r.ShaderChunk.common, r.ShaderChunk.color_pars_fragment, r.ShaderChunk.uv_pars_fragment, r.ShaderChunk.uv2_pars_fragment, r.ShaderChunk.map_pars_fragment, r.ShaderChunk.alphamap_pars_fragment, r.ShaderChunk.aomap_pars_fragment, r.ShaderChunk.lightmap_pars_fragment, r.ShaderChunk.emissivemap_pars_fragment, r.ShaderChunk.envmap_pars_fragment, r.ShaderChunk.fog_pars_fragment, r.ShaderChunk.bsdfs, r.ShaderChunk.ambient_pars, r.ShaderChunk.lights_pars, r.ShaderChunk.lights_phong_pars_fragment, r.ShaderChunk.shadowmap_pars_fragment, r.ShaderChunk.bumpmap_pars_fragment, r.ShaderChunk.normalmap_pars_fragment, r.ShaderChunk.specularmap_pars_fragment, r.ShaderChunk.logdepthbuf_pars_fragment, "void main() {", "\tvec4 diffuseColor = vec4( diffuse, opacity );", "\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );", "\tvec3 totalEmissiveLight = emissive;", r.ShaderChunk.logdepthbuf_fragment, r.ShaderChunk.map_fragment, r.ShaderChunk.color_fragment, r.ShaderChunk.alphamap_fragment, r.ShaderChunk.alphatest_fragment, r.ShaderChunk.specularmap_fragment, r.ShaderChunk.normal_fragment, r.ShaderChunk.emissivemap_fragment, r.ShaderChunk.lights_phong_fragment, r.ShaderChunk.lights_template, r.ShaderChunk.aomap_fragment, "vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveLight;", r.ShaderChunk.envmap_fragment, r.ShaderChunk.linear_to_gamma_fragment, r.ShaderChunk.fog_fragment, "\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );", "}"].join("\n")
            },
            standard: {
                uniforms: r.UniformsUtils.merge([r.UniformsLib.common, r.UniformsLib.aomap, r.UniformsLib.lightmap, r.UniformsLib.emissivemap, r.UniformsLib.bumpmap, r.UniformsLib.normalmap, r.UniformsLib.displacementmap, r.UniformsLib.roughnessmap, r.UniformsLib.metalnessmap, r.UniformsLib.fog, r.UniformsLib.ambient, r.UniformsLib.lights, {
                    emissive: {
                        type: "c",
                        value: new r.Color(0)
                    },
                    roughness: {
                        type: "f",
                        value: .5
                    },
                    metalness: {
                        type: "f",
                        value: 0
                    },
                    envMapIntensity: {
                        type: "f",
                        value: 1
                    }
                }]),
                vertexShader: ["#define STANDARD", "varying vec3 vViewPosition;", "#ifndef FLAT_SHADED", "\tvarying vec3 vNormal;", "#endif", r.ShaderChunk.common, r.ShaderChunk.uv_pars_vertex, r.ShaderChunk.uv2_pars_vertex, r.ShaderChunk.displacementmap_pars_vertex, r.ShaderChunk.envmap_pars_vertex, r.ShaderChunk.color_pars_vertex, r.ShaderChunk.morphtarget_pars_vertex, r.ShaderChunk.skinning_pars_vertex, r.ShaderChunk.shadowmap_pars_vertex, r.ShaderChunk.specularmap_pars_fragment, r.ShaderChunk.logdepthbuf_pars_vertex, "void main() {", r.ShaderChunk.uv_vertex, r.ShaderChunk.uv2_vertex, r.ShaderChunk.color_vertex, r.ShaderChunk.beginnormal_vertex, r.ShaderChunk.morphnormal_vertex, r.ShaderChunk.skinbase_vertex, r.ShaderChunk.skinnormal_vertex, r.ShaderChunk.defaultnormal_vertex, "#ifndef FLAT_SHADED", "\tvNormal = normalize( transformedNormal );", "#endif", r.ShaderChunk.begin_vertex, r.ShaderChunk.displacementmap_vertex, r.ShaderChunk.morphtarget_vertex, r.ShaderChunk.skinning_vertex, r.ShaderChunk.project_vertex, r.ShaderChunk.logdepthbuf_vertex, "\tvViewPosition = - mvPosition.xyz;", r.ShaderChunk.worldpos_vertex, r.ShaderChunk.envmap_vertex, r.ShaderChunk.shadowmap_vertex, "}"].join("\n"),
                fragmentShader: ["#define STANDARD", "uniform vec3 diffuse;", "uniform vec3 emissive;", "uniform float roughness;", "uniform float metalness;", "uniform float opacity;", "uniform float envMapIntensity;", "varying vec3 vViewPosition;", "#ifndef FLAT_SHADED", "\tvarying vec3 vNormal;", "#endif", r.ShaderChunk.common, r.ShaderChunk.color_pars_fragment, r.ShaderChunk.uv_pars_fragment, r.ShaderChunk.uv2_pars_fragment, r.ShaderChunk.map_pars_fragment, r.ShaderChunk.alphamap_pars_fragment, r.ShaderChunk.aomap_pars_fragment, r.ShaderChunk.lightmap_pars_fragment, r.ShaderChunk.emissivemap_pars_fragment, r.ShaderChunk.envmap_pars_fragment, r.ShaderChunk.fog_pars_fragment, r.ShaderChunk.bsdfs, r.ShaderChunk.ambient_pars, r.ShaderChunk.lights_pars, r.ShaderChunk.lights_standard_pars_fragment, r.ShaderChunk.shadowmap_pars_fragment, r.ShaderChunk.bumpmap_pars_fragment, r.ShaderChunk.normalmap_pars_fragment, r.ShaderChunk.roughnessmap_pars_fragment, r.ShaderChunk.metalnessmap_pars_fragment, r.ShaderChunk.logdepthbuf_pars_fragment, "void main() {", "\tvec4 diffuseColor = vec4( diffuse, opacity );", "\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );", "\tvec3 totalEmissiveLight = emissive;", r.ShaderChunk.logdepthbuf_fragment, r.ShaderChunk.map_fragment, r.ShaderChunk.color_fragment, r.ShaderChunk.alphamap_fragment, r.ShaderChunk.alphatest_fragment, r.ShaderChunk.specularmap_fragment, r.ShaderChunk.roughnessmap_fragment, r.ShaderChunk.metalnessmap_fragment, r.ShaderChunk.normal_fragment, r.ShaderChunk.emissivemap_fragment, r.ShaderChunk.lights_standard_fragment, r.ShaderChunk.lights_template, r.ShaderChunk.aomap_fragment, "vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveLight;", r.ShaderChunk.linear_to_gamma_fragment, r.ShaderChunk.fog_fragment, "\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );", "}"].join("\n")
            },
            points: {
                uniforms: r.UniformsUtils.merge([r.UniformsLib.points, r.UniformsLib.fog]),
                vertexShader: ["uniform float size;", "uniform float scale;", r.ShaderChunk.common, r.ShaderChunk.color_pars_vertex, r.ShaderChunk.shadowmap_pars_vertex, r.ShaderChunk.logdepthbuf_pars_vertex, "void main() {", r.ShaderChunk.color_vertex, r.ShaderChunk.begin_vertex, r.ShaderChunk.project_vertex, "\t#ifdef USE_SIZEATTENUATION", "\t\tgl_PointSize = size * ( scale / - mvPosition.z );", "\t#else", "\t\tgl_PointSize = size;", "\t#endif", r.ShaderChunk.logdepthbuf_vertex, r.ShaderChunk.worldpos_vertex, r.ShaderChunk.shadowmap_vertex, "}"].join("\n"),
                fragmentShader: ["uniform vec3 diffuse;", "uniform float opacity;", r.ShaderChunk.common, r.ShaderChunk.color_pars_fragment, r.ShaderChunk.map_particle_pars_fragment, r.ShaderChunk.fog_pars_fragment, r.ShaderChunk.shadowmap_pars_fragment, r.ShaderChunk.logdepthbuf_pars_fragment, "void main() {", "\tvec3 outgoingLight = vec3( 0.0 );", "\tvec4 diffuseColor = vec4( diffuse, opacity );", r.ShaderChunk.logdepthbuf_fragment, r.ShaderChunk.map_particle_fragment, r.ShaderChunk.color_fragment, r.ShaderChunk.alphatest_fragment, "\toutgoingLight = diffuseColor.rgb;", r.ShaderChunk.fog_fragment, "\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );", "}"].join("\n")
            },
            dashed: {
                uniforms: r.UniformsUtils.merge([r.UniformsLib.common, r.UniformsLib.fog, {
                    scale: {
                        type: "f",
                        value: 1
                    },
                    dashSize: {
                        type: "f",
                        value: 1
                    },
                    totalSize: {
                        type: "f",
                        value: 2
                    }
                }]),
                vertexShader: ["uniform float scale;", "attribute float lineDistance;", "varying float vLineDistance;", r.ShaderChunk.common, r.ShaderChunk.color_pars_vertex, r.ShaderChunk.logdepthbuf_pars_vertex, "void main() {", r.ShaderChunk.color_vertex, "\tvLineDistance = scale * lineDistance;", "\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );", "\tgl_Position = projectionMatrix * mvPosition;", r.ShaderChunk.logdepthbuf_vertex, "}"].join("\n"),
                fragmentShader: ["uniform vec3 diffuse;", "uniform float opacity;", "uniform float dashSize;", "uniform float totalSize;", "varying float vLineDistance;", r.ShaderChunk.common, r.ShaderChunk.color_pars_fragment, r.ShaderChunk.fog_pars_fragment, r.ShaderChunk.logdepthbuf_pars_fragment, "void main() {", "\tif ( mod( vLineDistance, totalSize ) > dashSize ) {", "\t\tdiscard;", "\t}", "\tvec3 outgoingLight = vec3( 0.0 );", "\tvec4 diffuseColor = vec4( diffuse, opacity );", r.ShaderChunk.logdepthbuf_fragment, r.ShaderChunk.color_fragment, "\toutgoingLight = diffuseColor.rgb;", r.ShaderChunk.fog_fragment, "\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );", "}"].join("\n")
            },
            depth: {
                uniforms: {
                    mNear: {
                        type: "f",
                        value: 1
                    },
                    mFar: {
                        type: "f",
                        value: 2e3
                    },
                    opacity: {
                        type: "f",
                        value: 1
                    }
                },
                vertexShader: [r.ShaderChunk.common, r.ShaderChunk.morphtarget_pars_vertex, r.ShaderChunk.logdepthbuf_pars_vertex, "void main() {", r.ShaderChunk.begin_vertex, r.ShaderChunk.morphtarget_vertex, r.ShaderChunk.project_vertex, r.ShaderChunk.logdepthbuf_vertex, "}"].join("\n"),
                fragmentShader: ["uniform float mNear;", "uniform float mFar;", "uniform float opacity;", r.ShaderChunk.common, r.ShaderChunk.logdepthbuf_pars_fragment, "void main() {", r.ShaderChunk.logdepthbuf_fragment, "\t#ifdef USE_LOGDEPTHBUF_EXT", "\t\tfloat depth = gl_FragDepthEXT / gl_FragCoord.w;", "\t#else", "\t\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;", "\t#endif", "\tfloat color = 1.0 - smoothstep( mNear, mFar, depth );", "\tgl_FragColor = vec4( vec3( color ), opacity );", "}"].join("\n")
            },
            normal: {
                uniforms: {
                    opacity: {
                        type: "f",
                        value: 1
                    }
                },
                vertexShader: ["varying vec3 vNormal;", r.ShaderChunk.common, r.ShaderChunk.morphtarget_pars_vertex, r.ShaderChunk.logdepthbuf_pars_vertex, "void main() {", "\tvNormal = normalize( normalMatrix * normal );", r.ShaderChunk.begin_vertex, r.ShaderChunk.morphtarget_vertex, r.ShaderChunk.project_vertex, r.ShaderChunk.logdepthbuf_vertex, "}"].join("\n"),
                fragmentShader: ["uniform float opacity;", "varying vec3 vNormal;", r.ShaderChunk.common, r.ShaderChunk.logdepthbuf_pars_fragment, "void main() {", "\tgl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, opacity );", r.ShaderChunk.logdepthbuf_fragment, "}"].join("\n")
            },
            cube: {
                uniforms: {
                    tCube: {
                        type: "t",
                        value: null
                    },
                    tFlip: {
                        type: "f",
                        value: -1
                    }
                },
                vertexShader: ["varying vec3 vWorldPosition;", r.ShaderChunk.common, r.ShaderChunk.logdepthbuf_pars_vertex, "void main() {", "\tvWorldPosition = transformDirection( position, modelMatrix );", "\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );", r.ShaderChunk.logdepthbuf_vertex, "}"].join("\n"),
                fragmentShader: ["uniform samplerCube tCube;", "uniform float tFlip;", "varying vec3 vWorldPosition;", r.ShaderChunk.common, r.ShaderChunk.logdepthbuf_pars_fragment, "void main() {", "\tgl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );", r.ShaderChunk.logdepthbuf_fragment, "}"].join("\n")
            },
            equirect: {
                uniforms: {
                    tEquirect: {
                        type: "t",
                        value: null
                    },
                    tFlip: {
                        type: "f",
                        value: -1
                    }
                },
                vertexShader: ["varying vec3 vWorldPosition;", r.ShaderChunk.common, r.ShaderChunk.logdepthbuf_pars_vertex, "void main() {", "\tvWorldPosition = transformDirection( position, modelMatrix );", "\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );", r.ShaderChunk.logdepthbuf_vertex, "}"].join("\n"),
                fragmentShader: ["uniform sampler2D tEquirect;", "uniform float tFlip;", "varying vec3 vWorldPosition;", r.ShaderChunk.common, r.ShaderChunk.logdepthbuf_pars_fragment, "void main() {", "vec3 direction = normalize( vWorldPosition );", "vec2 sampleUV;", "sampleUV.y = saturate( tFlip * direction.y * -0.5 + 0.5 );", "sampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;", "gl_FragColor = texture2D( tEquirect, sampleUV );", r.ShaderChunk.logdepthbuf_fragment, "}"].join("\n")
            },
            depthRGBA: {
                uniforms: {},
                vertexShader: [r.ShaderChunk.common, r.ShaderChunk.morphtarget_pars_vertex, r.ShaderChunk.skinning_pars_vertex, r.ShaderChunk.logdepthbuf_pars_vertex, "void main() {", r.ShaderChunk.skinbase_vertex, r.ShaderChunk.begin_vertex, r.ShaderChunk.morphtarget_vertex, r.ShaderChunk.skinning_vertex, r.ShaderChunk.project_vertex, r.ShaderChunk.logdepthbuf_vertex, "}"].join("\n"),
                fragmentShader: [r.ShaderChunk.common, r.ShaderChunk.logdepthbuf_pars_fragment, "vec4 pack_depth( const in float depth ) {", "\tconst vec4 bit_shift = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );", "\tconst vec4 bit_mask = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );", "\tvec4 res = mod( depth * bit_shift * vec4( 255 ), vec4( 256 ) ) / vec4( 255 );", "\tres -= res.xxyz * bit_mask;", "\treturn res;", "}", "void main() {", r.ShaderChunk.logdepthbuf_fragment, "\t#ifdef USE_LOGDEPTHBUF_EXT", "\t\tgl_FragData[ 0 ] = pack_depth( gl_FragDepthEXT );", "\t#else", "\t\tgl_FragData[ 0 ] = pack_depth( gl_FragCoord.z );", "\t#endif", "}"].join("\n")
            },
            distanceRGBA: {
                uniforms: {
                    lightPos: {
                        type: "v3",
                        value: new r.Vector3(0,0,0)
                    }
                },
                vertexShader: ["varying vec4 vWorldPosition;", r.ShaderChunk.common, r.ShaderChunk.morphtarget_pars_vertex, r.ShaderChunk.skinning_pars_vertex, "void main() {", r.ShaderChunk.skinbase_vertex, r.ShaderChunk.begin_vertex, r.ShaderChunk.morphtarget_vertex, r.ShaderChunk.skinning_vertex, r.ShaderChunk.project_vertex, r.ShaderChunk.worldpos_vertex, "vWorldPosition = worldPosition;", "}"].join("\n"),
                fragmentShader: ["uniform vec3 lightPos;", "varying vec4 vWorldPosition;", r.ShaderChunk.common, "vec4 pack1K ( float depth ) {", "\tdepth /= 1000.0;", "\tconst vec4 bitSh = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );", "\tconst vec4 bitMsk = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );", "\tvec4 res = mod( depth * bitSh * vec4( 255 ), vec4( 256 ) ) / vec4( 255 );", "\tres -= res.xxyz * bitMsk;", "\treturn res; ", "}", "float unpack1K ( vec4 color ) {", "\tconst vec4 bitSh = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );", "\treturn dot( color, bitSh ) * 1000.0;", "}", "void main () {", "\tgl_FragColor = pack1K( length( vWorldPosition.xyz - lightPos.xyz ) );", "}"].join("\n")
            }
        },
        r.WebGLRenderer = function(t) {
            function e() {
                return null === yt ? Rt : 1
            }
            function n(t, e, n, r) {
                at === !0 && (t *= r,
                e *= r,
                n *= r),
                Xt.clearColor(t, e, n, r)
            }
            function i() {
                Xt.init(),
                Xt.scissor(Et.copy(kt).multiplyScalar(Rt)),
                Xt.viewport(Tt.copy(It).multiplyScalar(Rt)),
                n(Ct.r, Ct.g, Ct.b, At)
            }
            function o() {
                gt = null ,
                wt = null ,
                bt = "",
                xt = -1,
                Xt.reset()
            }
            function a(t) {
                t.preventDefault(),
                o(),
                i(),
                Yt.clear()
            }
            function s(t) {
                var e = t.target;
                e.removeEventListener("dispose", s),
                l(e),
                Nt.textures--
            }
            function h(t) {
                var e = t.target;
                e.removeEventListener("dispose", h),
                c(e),
                Nt.textures--
            }
            function u(t) {
                var e = t.target;
                e.removeEventListener("dispose", u),
                p(e)
            }
            function l(t) {
                var e = Yt.get(t);
                if (t.image && e.__image__webglTextureCube)
                    Vt.deleteTexture(e.__image__webglTextureCube);
                else {
                    if (void 0 === e.__webglInit)
                        return;
                    Vt.deleteTexture(e.__webglTexture)
                }
                Yt["delete"](t)
            }
            function c(t) {
                var e = Yt.get(t)
                  , n = Yt.get(t.texture);
                if (t && void 0 !== n.__webglTexture) {
                    if (Vt.deleteTexture(n.__webglTexture),
                    t instanceof r.WebGLRenderTargetCube)
                        for (var i = 0; i < 6; i++)
                            Vt.deleteFramebuffer(e.__webglFramebuffer[i]),
                            Vt.deleteRenderbuffer(e.__webglDepthbuffer[i]);
                    else
                        Vt.deleteFramebuffer(e.__webglFramebuffer),
                        Vt.deleteRenderbuffer(e.__webglDepthbuffer);
                    Yt["delete"](t.texture),
                    Yt["delete"](t)
                }
            }
            function p(t) {
                f(t),
                Yt["delete"](t)
            }
            function f(t) {
                var e = Yt.get(t).program;
                t.program = void 0,
                void 0 !== e && Zt.releaseProgram(e)
            }
            function d(t, e, n, i) {
                var o;
                if (n instanceof r.InstancedBufferGeometry && (o = jt.get("ANGLE_instanced_arrays"),
                null === o))
                    return void console.error("THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");
                void 0 === i && (i = 0),
                Xt.initAttributes();
                var a = n.attributes
                  , s = e.getAttributes()
                  , h = t.defaultAttributeValues;
                for (var u in s) {
                    var l = s[u];
                    if (l >= 0) {
                        var c = a[u];
                        if (void 0 !== c) {
                            var p = c.itemSize
                              , f = qt.getAttributeBuffer(c);
                            if (c instanceof r.InterleavedBufferAttribute) {
                                var d = c.data
                                  , m = d.stride
                                  , v = c.offset;
                                d instanceof r.InstancedInterleavedBuffer ? (Xt.enableAttributeAndDivisor(l, d.meshPerAttribute, o),
                                void 0 === n.maxInstancedCount && (n.maxInstancedCount = d.meshPerAttribute * d.count)) : Xt.enableAttribute(l),
                                Vt.bindBuffer(Vt.ARRAY_BUFFER, f),
                                Vt.vertexAttribPointer(l, p, Vt.FLOAT, !1, m * d.array.BYTES_PER_ELEMENT, (i * m + v) * d.array.BYTES_PER_ELEMENT)
                            } else
                                c instanceof r.InstancedBufferAttribute ? (Xt.enableAttributeAndDivisor(l, c.meshPerAttribute, o),
                                void 0 === n.maxInstancedCount && (n.maxInstancedCount = c.meshPerAttribute * c.count)) : Xt.enableAttribute(l),
                                Vt.bindBuffer(Vt.ARRAY_BUFFER, f),
                                Vt.vertexAttribPointer(l, p, Vt.FLOAT, !1, 0, i * p * 4)
                        } else if (void 0 !== h) {
                            var g = h[u];
                            if (void 0 !== g)
                                switch (g.length) {
                                case 2:
                                    Vt.vertexAttrib2fv(l, g);
                                    break;
                                case 3:
                                    Vt.vertexAttrib3fv(l, g);
                                    break;
                                case 4:
                                    Vt.vertexAttrib4fv(l, g);
                                    break;
                                default:
                                    Vt.vertexAttrib1fv(l, g)
                                }
                        }
                    }
                }
                Xt.disableUnusedAttributes()
            }
            function m(t, e) {
                return Math.abs(e[0]) - Math.abs(t[0])
            }
            function v(t, e) {
                return t.object.renderOrder !== e.object.renderOrder ? t.object.renderOrder - e.object.renderOrder : t.material.id !== e.material.id ? t.material.id - e.material.id : t.z !== e.z ? t.z - e.z : t.id - e.id
            }
            function g(t, e) {
                return t.object.renderOrder !== e.object.renderOrder ? t.object.renderOrder - e.object.renderOrder : t.z !== e.z ? e.z - t.z : t.id - e.id
            }
            function y(t, e, n, r, i) {
                var o, a;
                n.transparent ? (o = ct,
                a = ++pt) : (o = ut,
                a = ++lt);
                var s = o[a];
                void 0 !== s ? (s.id = t.id,
                s.object = t,
                s.geometry = e,
                s.material = n,
                s.z = Bt.z,
                s.group = i) : (s = {
                    id: t.id,
                    object: t,
                    geometry: e,
                    material: n,
                    z: Bt.z,
                    group: i
                },
                o.push(s))
            }
            function _(t, e) {
                if (t.visible !== !1) {
                    if (t.layers.test(e.layers))
                        if (t instanceof r.Light)
                            ht.push(t);
                        else if (t instanceof r.Sprite)
                            t.frustumCulled !== !1 && Dt.intersectsObject(t) !== !0 || dt.push(t);
                        else if (t instanceof r.LensFlare)
                            mt.push(t);
                        else if (t instanceof r.ImmediateRenderObject)
                            vt.sortObjects === !0 && (Bt.setFromMatrixPosition(t.matrixWorld),
                            Bt.applyProjection(Ut)),
                            y(t, null , t.material, Bt.z, null );
                        else if ((t instanceof r.Mesh || t instanceof r.Line || t instanceof r.Points) && (t instanceof r.SkinnedMesh && t.skeleton.update(),
                        t.frustumCulled === !1 || Dt.intersectsObject(t) === !0)) {
                            var n = t.material;
                            if (n.visible === !0) {
                                vt.sortObjects === !0 && (Bt.setFromMatrixPosition(t.matrixWorld),
                                Bt.applyProjection(Ut));
                                var i = qt.update(t);
                                if (n instanceof r.MultiMaterial)
                                    for (var o = i.groups, a = n.materials, s = 0, h = o.length; s < h; s++) {
                                        var u = o[s]
                                          , l = a[u.materialIndex];
                                        l.visible === !0 && y(t, i, l, Bt.z, u)
                                    }
                                else
                                    y(t, i, n, Bt.z, null )
                            }
                        }
                    for (var c = t.children, s = 0, h = c.length; s < h; s++)
                        _(c[s], e)
                }
            }
            function x(t, e, n, i) {
                for (var o = 0, a = t.length; o < a; o++) {
                    var s = t[o]
                      , h = s.object
                      , u = s.geometry
                      , l = void 0 === i ? s.material : i
                      , c = s.group;
                    if (h.modelViewMatrix.multiplyMatrices(e.matrixWorldInverse, h.matrixWorld),
                    h.normalMatrix.getNormalMatrix(h.modelViewMatrix),
                    h instanceof r.ImmediateRenderObject) {
                        w(l);
                        var p = S(e, n, l, h);
                        bt = "",
                        h.render(function(t) {
                            vt.renderBufferImmediate(t, p, l)
                        })
                    } else
                        vt.renderBufferDirect(e, n, u, l, h, c)
                }
            }
            function b(t, e, n) {
                var i = Yt.get(t)
                  , o = Zt.getParameters(t, Ft, e, n)
                  , a = Zt.getProgramCode(t, o)
                  , s = i.program
                  , h = !0;
                if (void 0 === s)
                    t.addEventListener("dispose", u);
                else if (s.code !== a)
                    f(t);
                else {
                    if (void 0 !== o.shaderID)
                        return;
                    h = !1
                }
                if (h) {
                    if (o.shaderID) {
                        var l = r.ShaderLib[o.shaderID];
                        i.__webglShader = {
                            name: t.type,
                            uniforms: r.UniformsUtils.clone(l.uniforms),
                            vertexShader: l.vertexShader,
                            fragmentShader: l.fragmentShader
                        }
                    } else
                        i.__webglShader = {
                            name: t.type,
                            uniforms: t.uniforms,
                            vertexShader: t.vertexShader,
                            fragmentShader: t.fragmentShader
                        };
                    t.__webglShader = i.__webglShader,
                    s = Zt.acquireProgram(t, o, a),
                    i.program = s,
                    t.program = s
                }
                var c = s.getAttributes();
                if (t.morphTargets) {
                    t.numSupportedMorphTargets = 0;
                    for (var p = 0; p < vt.maxMorphTargets; p++)
                        c["morphTarget" + p] >= 0 && t.numSupportedMorphTargets++
                }
                if (t.morphNormals) {
                    t.numSupportedMorphNormals = 0;
                    for (var p = 0; p < vt.maxMorphNormals; p++)
                        c["morphNormal" + p] >= 0 && t.numSupportedMorphNormals++
                }
                i.uniformsList = [];
                var d = i.__webglShader.uniforms
                  , m = i.program.getUniforms();
                for (var v in d) {
                    var g = m[v];
                    g && i.uniformsList.push([i.__webglShader.uniforms[v], g])
                }
                (t instanceof r.MeshPhongMaterial || t instanceof r.MeshLambertMaterial || t instanceof r.MeshStandardMaterial || t.lights) && (i.lightsHash = Ft.hash,
                d.ambientLightColor.value = Ft.ambient,
                d.directionalLights.value = Ft.directional,
                d.spotLights.value = Ft.spot,
                d.pointLights.value = Ft.point,
                d.hemisphereLights.value = Ft.hemi,
                d.directionalShadowMap.value = Ft.directionalShadowMap,
                d.directionalShadowMatrix.value = Ft.directionalShadowMatrix,
                d.spotShadowMap.value = Ft.spotShadowMap,
                d.spotShadowMatrix.value = Ft.spotShadowMatrix,
                d.pointShadowMap.value = Ft.pointShadowMap,
                d.pointShadowMatrix.value = Ft.pointShadowMatrix),
                i.hasDynamicUniforms = !1;
                for (var y = 0, _ = i.uniformsList.length; y < _; y++) {
                    var x = i.uniformsList[y][0];
                    if (x.dynamic === !0) {
                        i.hasDynamicUniforms = !0;
                        break
                    }
                }
            }
            function w(t) {
                E(t),
                t.transparent === !0 ? Xt.setBlending(t.blending, t.blendEquation, t.blendSrc, t.blendDst, t.blendEquationAlpha, t.blendSrcAlpha, t.blendDstAlpha) : Xt.setBlending(r.NoBlending),
                Xt.setDepthFunc(t.depthFunc),
                Xt.setDepthTest(t.depthTest),
                Xt.setDepthWrite(t.depthWrite),
                Xt.setColorWrite(t.colorWrite),
                Xt.setPolygonOffset(t.polygonOffset, t.polygonOffsetFactor, t.polygonOffsetUnits)
            }
            function E(t) {
                t.side !== r.DoubleSide ? Xt.enable(Vt.CULL_FACE) : Xt.disable(Vt.CULL_FACE),
                Xt.setFlipSided(t.side === r.BackSide)
            }
            function S(t, e, n, i) {
                Mt = 0;
                var o = Yt.get(n);
                void 0 === o.program && (n.needsUpdate = !0),
                void 0 !== o.lightsHash && o.lightsHash !== Ft.hash && (n.needsUpdate = !0),
                n.needsUpdate && (b(n, e, i),
                n.needsUpdate = !1);
                var a = !1
                  , s = !1
                  , h = !1
                  , u = o.program
                  , l = u.getUniforms()
                  , c = o.__webglShader.uniforms;
                if (u.id !== gt && (Vt.useProgram(u.program),
                gt = u.id,
                a = !0,
                s = !0,
                h = !0),
                n.id !== xt && (xt = n.id,
                s = !0),
                (a || t !== wt) && (Vt.uniformMatrix4fv(l.projectionMatrix, !1, t.projectionMatrix.elements),
                Wt.logarithmicDepthBuffer && Vt.uniform1f(l.logDepthBufFC, 2 / (Math.log(t.far + 1) / Math.LN2)),
                t !== wt && (wt = t,
                s = !0,
                h = !0),
                (n instanceof r.ShaderMaterial || n instanceof r.MeshPhongMaterial || n instanceof r.MeshStandardMaterial || n.envMap) && void 0 !== l.cameraPosition && (Bt.setFromMatrixPosition(t.matrixWorld),
                Vt.uniform3f(l.cameraPosition, Bt.x, Bt.y, Bt.z)),
                (n instanceof r.MeshPhongMaterial || n instanceof r.MeshLambertMaterial || n instanceof r.MeshBasicMaterial || n instanceof r.MeshStandardMaterial || n instanceof r.ShaderMaterial || n.skinning) && void 0 !== l.viewMatrix && Vt.uniformMatrix4fv(l.viewMatrix, !1, t.matrixWorldInverse.elements)),
                n.skinning)
                    if (i.bindMatrix && void 0 !== l.bindMatrix && Vt.uniformMatrix4fv(l.bindMatrix, !1, i.bindMatrix.elements),
                    i.bindMatrixInverse && void 0 !== l.bindMatrixInverse && Vt.uniformMatrix4fv(l.bindMatrixInverse, !1, i.bindMatrixInverse.elements),
                    Wt.floatVertexTextures && i.skeleton && i.skeleton.useVertexTexture) {
                        if (void 0 !== l.boneTexture) {
                            var p = U();
                            Vt.uniform1i(l.boneTexture, p),
                            vt.setTexture(i.skeleton.boneTexture, p)
                        }
                        void 0 !== l.boneTextureWidth && Vt.uniform1i(l.boneTextureWidth, i.skeleton.boneTextureWidth),
                        void 0 !== l.boneTextureHeight && Vt.uniform1i(l.boneTextureHeight, i.skeleton.boneTextureHeight)
                    } else
                        i.skeleton && i.skeleton.boneMatrices && void 0 !== l.boneGlobalMatrices && Vt.uniformMatrix4fv(l.boneGlobalMatrices, !1, i.skeleton.boneMatrices);
                return s && ((n instanceof r.MeshPhongMaterial || n instanceof r.MeshLambertMaterial || n instanceof r.MeshStandardMaterial || n.lights) && I(c, h),
                e && n.fog && L(c, e),
                (n instanceof r.MeshBasicMaterial || n instanceof r.MeshLambertMaterial || n instanceof r.MeshPhongMaterial || n instanceof r.MeshStandardMaterial) && M(c, n),
                n instanceof r.LineBasicMaterial ? C(c, n) : n instanceof r.LineDashedMaterial ? (C(c, n),
                A(c, n)) : n instanceof r.PointsMaterial ? P(c, n) : n instanceof r.MeshLambertMaterial ? R(c, n) : n instanceof r.MeshPhongMaterial ? k(c, n) : n instanceof r.MeshStandardMaterial ? O(c, n) : n instanceof r.MeshDepthMaterial ? (c.mNear.value = t.near,
                c.mFar.value = t.far,
                c.opacity.value = n.opacity) : n instanceof r.MeshNormalMaterial && (c.opacity.value = n.opacity),
                B(o.uniformsList)),
                D(l, i),
                void 0 !== l.modelMatrix && Vt.uniformMatrix4fv(l.modelMatrix, !1, i.matrixWorld.elements),
                o.hasDynamicUniforms === !0 && T(o.uniformsList, i, t),
                u
            }
            function T(t, e, n) {
                for (var r = [], i = 0, o = t.length; i < o; i++) {
                    var a = t[i][0]
                      , s = a.onUpdateCallback;
                    void 0 !== s && (s.bind(a)(e, n),
                    r.push(t[i]))
                }
                B(r)
            }
            function M(t, e) {
                t.opacity.value = e.opacity,
                t.diffuse.value = e.color,
                e.emissive && t.emissive.value.copy(e.emissive).multiplyScalar(e.emissiveIntensity),
                t.map.value = e.map,
                t.specularMap.value = e.specularMap,
                t.alphaMap.value = e.alphaMap,
                e.aoMap && (t.aoMap.value = e.aoMap,
                t.aoMapIntensity.value = e.aoMapIntensity);
                var n;
                if (e.map ? n = e.map : e.specularMap ? n = e.specularMap : e.displacementMap ? n = e.displacementMap : e.normalMap ? n = e.normalMap : e.bumpMap ? n = e.bumpMap : e.roughnessMap ? n = e.roughnessMap : e.metalnessMap ? n = e.metalnessMap : e.alphaMap ? n = e.alphaMap : e.emissiveMap && (n = e.emissiveMap),
                void 0 !== n) {
                    n instanceof r.WebGLRenderTarget && (n = n.texture);
                    var i = n.offset
                      , o = n.repeat;
                    t.offsetRepeat.value.set(i.x, i.y, o.x, o.y)
                }
                t.envMap.value = e.envMap,
                t.flipEnvMap.value = e.envMap instanceof r.WebGLRenderTargetCube ? 1 : -1,
                t.reflectivity.value = e.reflectivity,
                t.refractionRatio.value = e.refractionRatio
            }
            function C(t, e) {
                t.diffuse.value = e.color,
                t.opacity.value = e.opacity
            }
            function A(t, e) {
                t.dashSize.value = e.dashSize,
                t.totalSize.value = e.dashSize + e.gapSize,
                t.scale.value = e.scale
            }
            function P(t, e) {
                if (t.diffuse.value = e.color,
                t.opacity.value = e.opacity,
                t.size.value = e.size * Rt,
                t.scale.value = tt.clientHeight / 2,
                t.map.value = e.map,
                null !== e.map) {
                    var n = e.map.offset
                      , r = e.map.repeat;
                    t.offsetRepeat.value.set(n.x, n.y, r.x, r.y)
                }
            }
            function L(t, e) {
                t.fogColor.value = e.color,
                e instanceof r.Fog ? (t.fogNear.value = e.near,
                t.fogFar.value = e.far) : e instanceof r.FogExp2 && (t.fogDensity.value = e.density)
            }
            function R(t, e) {
                e.lightMap && (t.lightMap.value = e.lightMap,
                t.lightMapIntensity.value = e.lightMapIntensity),
                e.emissiveMap && (t.emissiveMap.value = e.emissiveMap)
            }
            function k(t, e) {
                t.specular.value = e.specular,
                t.shininess.value = Math.max(e.shininess, 1e-4),
                e.lightMap && (t.lightMap.value = e.lightMap,
                t.lightMapIntensity.value = e.lightMapIntensity),
                e.emissiveMap && (t.emissiveMap.value = e.emissiveMap),
                e.bumpMap && (t.bumpMap.value = e.bumpMap,
                t.bumpScale.value = e.bumpScale),
                e.normalMap && (t.normalMap.value = e.normalMap,
                t.normalScale.value.copy(e.normalScale)),
                e.displacementMap && (t.displacementMap.value = e.displacementMap,
                t.displacementScale.value = e.displacementScale,
                t.displacementBias.value = e.displacementBias)
            }
            function O(t, e) {
                t.roughness.value = e.roughness,
                t.metalness.value = e.metalness,
                e.roughnessMap && (t.roughnessMap.value = e.roughnessMap),
                e.metalnessMap && (t.metalnessMap.value = e.metalnessMap),
                e.lightMap && (t.lightMap.value = e.lightMap,
                t.lightMapIntensity.value = e.lightMapIntensity),
                e.emissiveMap && (t.emissiveMap.value = e.emissiveMap),
                e.bumpMap && (t.bumpMap.value = e.bumpMap,
                t.bumpScale.value = e.bumpScale),
                e.normalMap && (t.normalMap.value = e.normalMap,
                t.normalScale.value.copy(e.normalScale)),
                e.displacementMap && (t.displacementMap.value = e.displacementMap,
                t.displacementScale.value = e.displacementScale,
                t.displacementBias.value = e.displacementBias),
                e.envMap && (t.envMapIntensity.value = e.envMapIntensity)
            }
            function I(t, e) {
                t.ambientLightColor.needsUpdate = e,
                t.directionalLights.needsUpdate = e,
                t.pointLights.needsUpdate = e,
                t.spotLights.needsUpdate = e,
                t.hemisphereLights.needsUpdate = e
            }
            function D(t, e) {
                Vt.uniformMatrix4fv(t.modelViewMatrix, !1, e.modelViewMatrix.elements),
                t.normalMatrix && Vt.uniformMatrix3fv(t.normalMatrix, !1, e.normalMatrix.elements)
            }
            function U() {
                var t = Mt;
                return t >= Wt.maxTextures && console.warn("WebGLRenderer: trying to use " + t + " texture units while this GPU supports only " + Wt.maxTextures),
                Mt += 1,
                t
            }
            function B(t) {
                for (var e, n, i = 0, o = t.length; i < o; i++) {
                    var a = t[i][0];
                    if (a.needsUpdate !== !1) {
                        var s = a.type
                          , h = a.value
                          , u = t[i][1];
                        switch (s) {
                        case "1i":
                            Vt.uniform1i(u, h);
                            break;
                        case "1f":
                            Vt.uniform1f(u, h);
                            break;
                        case "2f":
                            Vt.uniform2f(u, h[0], h[1]);
                            break;
                        case "3f":
                            Vt.uniform3f(u, h[0], h[1], h[2]);
                            break;
                        case "4f":
                            Vt.uniform4f(u, h[0], h[1], h[2], h[3]);
                            break;
                        case "1iv":
                            Vt.uniform1iv(u, h);
                            break;
                        case "3iv":
                            Vt.uniform3iv(u, h);
                            break;
                        case "1fv":
                            Vt.uniform1fv(u, h);
                            break;
                        case "2fv":
                            Vt.uniform2fv(u, h);
                            break;
                        case "3fv":
                            Vt.uniform3fv(u, h);
                            break;
                        case "4fv":
                            Vt.uniform4fv(u, h);
                            break;
                        case "Matrix2fv":
                            Vt.uniformMatrix2fv(u, !1, h);
                            break;
                        case "Matrix3fv":
                            Vt.uniformMatrix3fv(u, !1, h);
                            break;
                        case "Matrix4fv":
                            Vt.uniformMatrix4fv(u, !1, h);
                            break;
                        case "i":
                            Vt.uniform1i(u, h);
                            break;
                        case "f":
                            Vt.uniform1f(u, h);
                            break;
                        case "v2":
                            Vt.uniform2f(u, h.x, h.y);
                            break;
                        case "v3":
                            Vt.uniform3f(u, h.x, h.y, h.z);
                            break;
                        case "v4":
                            Vt.uniform4f(u, h.x, h.y, h.z, h.w);
                            break;
                        case "c":
                            Vt.uniform3f(u, h.r, h.g, h.b);
                            break;
                        case "sa":
                            for (var l = 0; l < h.length; l++)
                                for (var c in a.properties) {
                                    var p = a.properties[c]
                                      , f = u[l][c]
                                      , d = h[l][c];
                                    switch (p.type) {
                                    case "i":
                                        Vt.uniform1i(f, d);
                                        break;
                                    case "f":
                                        Vt.uniform1f(f, d);
                                        break;
                                    case "v2":
                                        Vt.uniform2f(f, d.x, d.y);
                                        break;
                                    case "v3":
                                        Vt.uniform3f(f, d.x, d.y, d.z);
                                        break;
                                    case "v4":
                                        Vt.uniform4f(f, d.x, d.y, d.z, d.w);
                                        break;
                                    case "c":
                                        Vt.uniform3f(f, d.r, d.g, d.b);
                                        break;
                                    case "m4":
                                        Vt.uniformMatrix4fv(f, !1, d.elements)
                                    }
                                }
                            break;
                        case "iv1":
                            Vt.uniform1iv(u, h);
                            break;
                        case "iv":
                            Vt.uniform3iv(u, h);
                            break;
                        case "fv1":
                            Vt.uniform1fv(u, h);
                            break;
                        case "fv":
                            Vt.uniform3fv(u, h);
                            break;
                        case "v2v":
                            void 0 === a._array && (a._array = new Float32Array(2 * h.length));
                            for (var l = 0, m = 0, v = h.length; l < v; l++,
                            m += 2)
                                a._array[m + 0] = h[l].x,
                                a._array[m + 1] = h[l].y;
                            Vt.uniform2fv(u, a._array);
                            break;
                        case "v3v":
                            void 0 === a._array && (a._array = new Float32Array(3 * h.length));
                            for (var l = 0, g = 0, v = h.length; l < v; l++,
                            g += 3)
                                a._array[g + 0] = h[l].x,
                                a._array[g + 1] = h[l].y,
                                a._array[g + 2] = h[l].z;
                            Vt.uniform3fv(u, a._array);
                            break;
                        case "v4v":
                            void 0 === a._array && (a._array = new Float32Array(4 * h.length));
                            for (var l = 0, y = 0, v = h.length; l < v; l++,
                            y += 4)
                                a._array[y + 0] = h[l].x,
                                a._array[y + 1] = h[l].y,
                                a._array[y + 2] = h[l].z,
                                a._array[y + 3] = h[l].w;
                            Vt.uniform4fv(u, a._array);
                            break;
                        case "m2":
                            Vt.uniformMatrix2fv(u, !1, h.elements);
                            break;
                        case "m3":
                            Vt.uniformMatrix3fv(u, !1, h.elements);
                            break;
                        case "m3v":
                            void 0 === a._array && (a._array = new Float32Array(9 * h.length));
                            for (var l = 0, v = h.length; l < v; l++)
                                h[l].flattenToArrayOffset(a._array, 9 * l);
                            Vt.uniformMatrix3fv(u, !1, a._array);
                            break;
                        case "m4":
                            Vt.uniformMatrix4fv(u, !1, h.elements);
                            break;
                        case "m4v":
                            void 0 === a._array && (a._array = new Float32Array(16 * h.length));
                            for (var l = 0, v = h.length; l < v; l++)
                                h[l].flattenToArrayOffset(a._array, 16 * l);
                            Vt.uniformMatrix4fv(u, !1, a._array);
                            break;
                        case "t":
                            if (e = h,
                            n = U(),
                            Vt.uniform1i(u, n),
                            !e)
                                continue;e instanceof r.CubeTexture || Array.isArray(e.image) && 6 === e.image.length ? W(e, n) : e instanceof r.WebGLRenderTargetCube ? X(e.texture, n) : e instanceof r.WebGLRenderTarget ? vt.setTexture(e.texture, n) : vt.setTexture(e, n);
                            break;
                        case "tv":
                            void 0 === a._array && (a._array = []);
                            for (var l = 0, v = a.value.length; l < v; l++)
                                a._array[l] = U();
                            Vt.uniform1iv(u, a._array);
                            for (var l = 0, v = a.value.length; l < v; l++)
                                e = a.value[l],
                                n = a._array[l],
                                e && (e instanceof r.CubeTexture || e.image instanceof Array && 6 === e.image.length ? W(e, n) : e instanceof r.WebGLRenderTarget ? vt.setTexture(e.texture, n) : e instanceof r.WebGLRenderTargetCube ? X(e.texture, n) : vt.setTexture(e, n));
                            break;
                        default:
                            console.warn("THREE.WebGLRenderer: Unknown uniform type: " + s)
                        }
                    }
                }
            }
            function F(t, e) {
                var n, i, o, a, s, h, u = 0, l = 0, c = 0, p = e.matrixWorldInverse, f = 0, d = 0, m = 0, v = 0, g = 0;
                for (Ft.shadowsPointLight = 0,
                n = 0,
                i = t.length; n < i; n++)
                    if (o = t[n],
                    a = o.color,
                    s = o.intensity,
                    h = o.distance,
                    o instanceof r.AmbientLight)
                        u += a.r * s,
                        l += a.g * s,
                        c += a.b * s;
                    else if (o instanceof r.DirectionalLight) {
                        var y = Qt.get(o);
                        y.color.copy(o.color).multiplyScalar(o.intensity),
                        y.direction.setFromMatrixPosition(o.matrixWorld),
                        Bt.setFromMatrixPosition(o.target.matrixWorld),
                        y.direction.sub(Bt),
                        y.direction.transformDirection(p),
                        y.shadow = o.castShadow,
                        o.castShadow && (y.shadowBias = o.shadow.bias,
                        y.shadowRadius = o.shadow.radius,
                        y.shadowMapSize = o.shadow.mapSize,
                        Ft.shadows[g++] = o),
                        Ft.directionalShadowMap[f] = o.shadow.map,
                        Ft.directionalShadowMatrix[f] = o.shadow.matrix,
                        Ft.directional[f++] = y
                    } else if (o instanceof r.SpotLight) {
                        var y = Qt.get(o);
                        y.position.setFromMatrixPosition(o.matrixWorld),
                        y.position.applyMatrix4(p),
                        y.color.copy(a).multiplyScalar(s),
                        y.distance = h,
                        y.direction.setFromMatrixPosition(o.matrixWorld),
                        Bt.setFromMatrixPosition(o.target.matrixWorld),
                        y.direction.sub(Bt),
                        y.direction.transformDirection(p),
                        y.angleCos = Math.cos(o.angle),
                        y.penumbra = Math.cos(o.angle) * o.penumbra,
                        y.decay = 0 === o.distance ? 0 : o.decay,
                        y.shadow = o.castShadow,
                        o.castShadow && (y.shadowBias = o.shadow.bias,
                        y.shadowRadius = o.shadow.radius,
                        y.shadowMapSize = o.shadow.mapSize,
                        Ft.shadows[g++] = o),
                        Ft.spotShadowMap[m] = o.shadow.map,
                        Ft.spotShadowMatrix[m] = o.shadow.matrix,
                        Ft.spot[m++] = y
                    } else if (o instanceof r.PointLight) {
                        var y = Qt.get(o);
                        y.position.setFromMatrixPosition(o.matrixWorld),
                        y.position.applyMatrix4(p),
                        y.color.copy(o.color).multiplyScalar(o.intensity),
                        y.distance = o.distance,
                        y.decay = 0 === o.distance ? 0 : o.decay,
                        y.shadow = o.castShadow,
                        o.castShadow && (y.shadowBias = o.shadow.bias,
                        y.shadowRadius = o.shadow.radius,
                        y.shadowMapSize = o.shadow.mapSize,
                        Ft.shadows[g++] = o),
                        Ft.pointShadowMap[d] = o.shadow.map,
                        void 0 === Ft.pointShadowMatrix[d] && (Ft.pointShadowMatrix[d] = new r.Matrix4),
                        Bt.setFromMatrixPosition(o.matrixWorld).negate(),
                        Ft.pointShadowMatrix[d].identity().setPosition(Bt),
                        Ft.point[d++] = y
                    } else if (o instanceof r.HemisphereLight) {
                        var y = Qt.get(o);
                        y.direction.setFromMatrixPosition(o.matrixWorld),
                        y.direction.transformDirection(p),
                        y.direction.normalize(),
                        y.skyColor.copy(o.color).multiplyScalar(s),
                        y.groundColor.copy(o.groundColor).multiplyScalar(s),
                        Ft.hemi[v++] = y
                    }
                Ft.ambient[0] = u,
                Ft.ambient[1] = l,
                Ft.ambient[2] = c,
                Ft.directional.length = f,
                Ft.spot.length = m,
                Ft.point.length = d,
                Ft.hemi.length = v,
                Ft.shadows.length = g,
                Ft.hash = f + "," + d + "," + m + "," + v + "," + g
            }
            function N(t, e, n) {
                var i;
                if (n ? (Vt.texParameteri(t, Vt.TEXTURE_WRAP_S, $(e.wrapS)),
                Vt.texParameteri(t, Vt.TEXTURE_WRAP_T, $(e.wrapT)),
                Vt.texParameteri(t, Vt.TEXTURE_MAG_FILTER, $(e.magFilter)),
                Vt.texParameteri(t, Vt.TEXTURE_MIN_FILTER, $(e.minFilter))) : (Vt.texParameteri(t, Vt.TEXTURE_WRAP_S, Vt.CLAMP_TO_EDGE),
                Vt.texParameteri(t, Vt.TEXTURE_WRAP_T, Vt.CLAMP_TO_EDGE),
                e.wrapS === r.ClampToEdgeWrapping && e.wrapT === r.ClampToEdgeWrapping || console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.", e),
                Vt.texParameteri(t, Vt.TEXTURE_MAG_FILTER, J(e.magFilter)),
                Vt.texParameteri(t, Vt.TEXTURE_MIN_FILTER, J(e.minFilter)),
                e.minFilter !== r.NearestFilter && e.minFilter !== r.LinearFilter && console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.", e)),
                i = jt.get("EXT_texture_filter_anisotropic")) {
                    if (e.type === r.FloatType && null === jt.get("OES_texture_float_linear"))
                        return;
                    if (e.type === r.HalfFloatType && null === jt.get("OES_texture_half_float_linear"))
                        return;
                    (e.anisotropy > 1 || Yt.get(e).__currentAnisotropy) && (Vt.texParameterf(t, i.TEXTURE_MAX_ANISOTROPY_EXT, Math.min(e.anisotropy, vt.getMaxAnisotropy())),
                    Yt.get(e).__currentAnisotropy = e.anisotropy)
                }
            }
            function G(t, e, n) {
                void 0 === t.__webglInit && (t.__webglInit = !0,
                e.addEventListener("dispose", s),
                t.__webglTexture = Vt.createTexture(),
                Nt.textures++),
                Xt.activeTexture(Vt.TEXTURE0 + n),
                Xt.bindTexture(Vt.TEXTURE_2D, t.__webglTexture),
                Vt.pixelStorei(Vt.UNPACK_FLIP_Y_WEBGL, e.flipY),
                Vt.pixelStorei(Vt.UNPACK_PREMULTIPLY_ALPHA_WEBGL, e.premultiplyAlpha),
                Vt.pixelStorei(Vt.UNPACK_ALIGNMENT, e.unpackAlignment);
                var i = V(e.image, Wt.maxTextureSize);
                H(e) && z(i) === !1 && (i = j(i));
                var o = z(i)
                  , a = $(e.format)
                  , h = $(e.type);
                N(Vt.TEXTURE_2D, e, o);
                var u, l = e.mipmaps;
                if (e instanceof r.DataTexture)
                    if (l.length > 0 && o) {
                        for (var c = 0, p = l.length; c < p; c++)
                            u = l[c],
                            Xt.texImage2D(Vt.TEXTURE_2D, c, a, u.width, u.height, 0, a, h, u.data);
                        e.generateMipmaps = !1
                    } else
                        Xt.texImage2D(Vt.TEXTURE_2D, 0, a, i.width, i.height, 0, a, h, i.data);
                else if (e instanceof r.CompressedTexture)
                    for (var c = 0, p = l.length; c < p; c++)
                        u = l[c],
                        e.format !== r.RGBAFormat && e.format !== r.RGBFormat ? Xt.getCompressedTextureFormats().indexOf(a) > -1 ? Xt.compressedTexImage2D(Vt.TEXTURE_2D, c, a, u.width, u.height, 0, u.data) : console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()") : Xt.texImage2D(Vt.TEXTURE_2D, c, a, u.width, u.height, 0, a, h, u.data);
                else if (l.length > 0 && o) {
                    for (var c = 0, p = l.length; c < p; c++)
                        u = l[c],
                        Xt.texImage2D(Vt.TEXTURE_2D, c, a, a, h, u);
                    e.generateMipmaps = !1
                } else
                    Xt.texImage2D(Vt.TEXTURE_2D, 0, a, a, h, i);
                e.generateMipmaps && o && Vt.generateMipmap(Vt.TEXTURE_2D),
                t.__version = e.version,
                e.onUpdate && e.onUpdate(e)
            }
            function V(t, e) {
                if (t.width > e || t.height > e) {
                    var n = e / Math.max(t.width, t.height)
                      , r = document.createElement("canvas");
                    r.width = Math.floor(t.width * n),
                    r.height = Math.floor(t.height * n);
                    var i = r.getContext("2d");
                    return i.drawImage(t, 0, 0, t.width, t.height, 0, 0, r.width, r.height),
                    console.warn("THREE.WebGLRenderer: image is too big (" + t.width + "x" + t.height + "). Resized to " + r.width + "x" + r.height, t),
                    r
                }
                return t
            }
            function z(t) {
                return r.Math.isPowerOfTwo(t.width) && r.Math.isPowerOfTwo(t.height)
            }
            function H(t) {
                return t.wrapS !== r.ClampToEdgeWrapping || t.wrapT !== r.ClampToEdgeWrapping || t.minFilter !== r.NearestFilter && t.minFilter !== r.LinearFilter
            }
            function j(t) {
                if (t instanceof HTMLImageElement || t instanceof HTMLCanvasElement) {
                    var e = document.createElement("canvas");
                    e.width = r.Math.nearestPowerOfTwo(t.width),
                    e.height = r.Math.nearestPowerOfTwo(t.height);
                    var n = e.getContext("2d");
                    return n.drawImage(t, 0, 0, e.width, e.height),
                    console.warn("THREE.WebGLRenderer: image is not power of two (" + t.width + "x" + t.height + "). Resized to " + e.width + "x" + e.height, t),
                    e
                }
                return t
            }
            function W(t, e) {
                var n = Yt.get(t);
                if (6 === t.image.length)
                    if (t.version > 0 && n.__version !== t.version) {
                        n.__image__webglTextureCube || (t.addEventListener("dispose", s),
                        n.__image__webglTextureCube = Vt.createTexture(),
                        Nt.textures++),
                        Xt.activeTexture(Vt.TEXTURE0 + e),
                        Xt.bindTexture(Vt.TEXTURE_CUBE_MAP, n.__image__webglTextureCube),
                        Vt.pixelStorei(Vt.UNPACK_FLIP_Y_WEBGL, t.flipY);
                        for (var i = t instanceof r.CompressedTexture, o = t.image[0]instanceof r.DataTexture, a = [], h = 0; h < 6; h++)
                            !vt.autoScaleCubemaps || i || o ? a[h] = o ? t.image[h].image : t.image[h] : a[h] = V(t.image[h], Wt.maxCubemapSize);
                        var u = a[0]
                          , l = z(u)
                          , c = $(t.format)
                          , p = $(t.type);
                        N(Vt.TEXTURE_CUBE_MAP, t, l);
                        for (var h = 0; h < 6; h++)
                            if (i)
                                for (var f, d = a[h].mipmaps, m = 0, v = d.length; m < v; m++)
                                    f = d[m],
                                    t.format !== r.RGBAFormat && t.format !== r.RGBFormat ? Xt.getCompressedTextureFormats().indexOf(c) > -1 ? Xt.compressedTexImage2D(Vt.TEXTURE_CUBE_MAP_POSITIVE_X + h, m, c, f.width, f.height, 0, f.data) : console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setCubeTexture()") : Xt.texImage2D(Vt.TEXTURE_CUBE_MAP_POSITIVE_X + h, m, c, f.width, f.height, 0, c, p, f.data);
                            else
                                o ? Xt.texImage2D(Vt.TEXTURE_CUBE_MAP_POSITIVE_X + h, 0, c, a[h].width, a[h].height, 0, c, p, a[h].data) : Xt.texImage2D(Vt.TEXTURE_CUBE_MAP_POSITIVE_X + h, 0, c, c, p, a[h]);
                        t.generateMipmaps && l && Vt.generateMipmap(Vt.TEXTURE_CUBE_MAP),
                        n.__version = t.version,
                        t.onUpdate && t.onUpdate(t)
                    } else
                        Xt.activeTexture(Vt.TEXTURE0 + e),
                        Xt.bindTexture(Vt.TEXTURE_CUBE_MAP, n.__image__webglTextureCube)
            }
            function X(t, e) {
                Xt.activeTexture(Vt.TEXTURE0 + e),
                Xt.bindTexture(Vt.TEXTURE_CUBE_MAP, Yt.get(t).__webglTexture)
            }
            function Y(t, e, n, r) {
                var i = $(e.texture.format)
                  , o = $(e.texture.type);
                Xt.texImage2D(r, 0, i, e.width, e.height, 0, i, o, null ),
                Vt.bindFramebuffer(Vt.FRAMEBUFFER, t),
                Vt.framebufferTexture2D(Vt.FRAMEBUFFER, n, r, Yt.get(e.texture).__webglTexture, 0),
                Vt.bindFramebuffer(Vt.FRAMEBUFFER, null )
            }
            function q(t, e) {
                Vt.bindRenderbuffer(Vt.RENDERBUFFER, t),
                e.depthBuffer && !e.stencilBuffer ? (Vt.renderbufferStorage(Vt.RENDERBUFFER, Vt.DEPTH_COMPONENT16, e.width, e.height),
                Vt.framebufferRenderbuffer(Vt.FRAMEBUFFER, Vt.DEPTH_ATTACHMENT, Vt.RENDERBUFFER, t)) : e.depthBuffer && e.stencilBuffer ? (Vt.renderbufferStorage(Vt.RENDERBUFFER, Vt.DEPTH_STENCIL, e.width, e.height),
                Vt.framebufferRenderbuffer(Vt.FRAMEBUFFER, Vt.DEPTH_STENCIL_ATTACHMENT, Vt.RENDERBUFFER, t)) : Vt.renderbufferStorage(Vt.RENDERBUFFER, Vt.RGBA4, e.width, e.height),
                Vt.bindRenderbuffer(Vt.RENDERBUFFER, null )
            }
            function Z(t) {
                var e = Yt.get(t)
                  , n = t instanceof r.WebGLRenderTargetCube;
                if (n) {
                    e.__webglDepthbuffer = [];
                    for (var i = 0; i < 6; i++)
                        Vt.bindFramebuffer(Vt.FRAMEBUFFER, e.__webglFramebuffer[i]),
                        e.__webglDepthbuffer[i] = Vt.createRenderbuffer(),
                        q(e.__webglDepthbuffer[i], t)
                } else
                    Vt.bindFramebuffer(Vt.FRAMEBUFFER, e.__webglFramebuffer),
                    e.__webglDepthbuffer = Vt.createRenderbuffer(),
                    q(e.__webglDepthbuffer, t);
                Vt.bindFramebuffer(Vt.FRAMEBUFFER, null )
            }
            function Q(t) {
                var e = Yt.get(t)
                  , n = Yt.get(t.texture);
                t.addEventListener("dispose", h),
                n.__webglTexture = Vt.createTexture(),
                Nt.textures++;
                var i = t instanceof r.WebGLRenderTargetCube
                  , o = r.Math.isPowerOfTwo(t.width) && r.Math.isPowerOfTwo(t.height);
                if (i) {
                    e.__webglFramebuffer = [];
                    for (var a = 0; a < 6; a++)
                        e.__webglFramebuffer[a] = Vt.createFramebuffer()
                } else
                    e.__webglFramebuffer = Vt.createFramebuffer();
                if (i) {
                    Xt.bindTexture(Vt.TEXTURE_CUBE_MAP, n.__webglTexture),
                    N(Vt.TEXTURE_CUBE_MAP, t.texture, o);
                    for (var a = 0; a < 6; a++)
                        Y(e.__webglFramebuffer[a], t, Vt.COLOR_ATTACHMENT0, Vt.TEXTURE_CUBE_MAP_POSITIVE_X + a);
                    t.texture.generateMipmaps && o && Vt.generateMipmap(Vt.TEXTURE_CUBE_MAP),
                    Xt.bindTexture(Vt.TEXTURE_CUBE_MAP, null )
                } else
                    Xt.bindTexture(Vt.TEXTURE_2D, n.__webglTexture),
                    N(Vt.TEXTURE_2D, t.texture, o),
                    Y(e.__webglFramebuffer, t, Vt.COLOR_ATTACHMENT0, Vt.TEXTURE_2D),
                    t.texture.generateMipmaps && o && Vt.generateMipmap(Vt.TEXTURE_2D),
                    Xt.bindTexture(Vt.TEXTURE_2D, null );
                t.depthBuffer && Z(t)
            }
            function K(t) {
                var e = t instanceof r.WebGLRenderTargetCube ? Vt.TEXTURE_CUBE_MAP : Vt.TEXTURE_2D
                  , n = Yt.get(t.texture).__webglTexture;
                Xt.bindTexture(e, n),
                Vt.generateMipmap(e),
                Xt.bindTexture(e, null )
            }
            function J(t) {
                return t === r.NearestFilter || t === r.NearestMipMapNearestFilter || t === r.NearestMipMapLinearFilter ? Vt.NEAREST : Vt.LINEAR
            }
            function $(t) {
                var e;
                if (t === r.RepeatWrapping)
                    return Vt.REPEAT;
                if (t === r.ClampToEdgeWrapping)
                    return Vt.CLAMP_TO_EDGE;
                if (t === r.MirroredRepeatWrapping)
                    return Vt.MIRRORED_REPEAT;
                if (t === r.NearestFilter)
                    return Vt.NEAREST;
                if (t === r.NearestMipMapNearestFilter)
                    return Vt.NEAREST_MIPMAP_NEAREST;
                if (t === r.NearestMipMapLinearFilter)
                    return Vt.NEAREST_MIPMAP_LINEAR;
                if (t === r.LinearFilter)
                    return Vt.LINEAR;
                if (t === r.LinearMipMapNearestFilter)
                    return Vt.LINEAR_MIPMAP_NEAREST;
                if (t === r.LinearMipMapLinearFilter)
                    return Vt.LINEAR_MIPMAP_LINEAR;
                if (t === r.UnsignedByteType)
                    return Vt.UNSIGNED_BYTE;
                if (t === r.UnsignedShort4444Type)
                    return Vt.UNSIGNED_SHORT_4_4_4_4;
                if (t === r.UnsignedShort5551Type)
                    return Vt.UNSIGNED_SHORT_5_5_5_1;
                if (t === r.UnsignedShort565Type)
                    return Vt.UNSIGNED_SHORT_5_6_5;
                if (t === r.ByteType)
                    return Vt.BYTE;
                if (t === r.ShortType)
                    return Vt.SHORT;
                if (t === r.UnsignedShortType)
                    return Vt.UNSIGNED_SHORT;
                if (t === r.IntType)
                    return Vt.INT;
                if (t === r.UnsignedIntType)
                    return Vt.UNSIGNED_INT;
                if (t === r.FloatType)
                    return Vt.FLOAT;
                if (e = jt.get("OES_texture_half_float"),
                null !== e && t === r.HalfFloatType)
                    return e.HALF_FLOAT_OES;
                if (t === r.AlphaFormat)
                    return Vt.ALPHA;
                if (t === r.RGBFormat)
                    return Vt.RGB;
                if (t === r.RGBAFormat)
                    return Vt.RGBA;
                if (t === r.LuminanceFormat)
                    return Vt.LUMINANCE;
                if (t === r.LuminanceAlphaFormat)
                    return Vt.LUMINANCE_ALPHA;
                if (t === r.AddEquation)
                    return Vt.FUNC_ADD;
                if (t === r.SubtractEquation)
                    return Vt.FUNC_SUBTRACT;
                if (t === r.ReverseSubtractEquation)
                    return Vt.FUNC_REVERSE_SUBTRACT;
                if (t === r.ZeroFactor)
                    return Vt.ZERO;
                if (t === r.OneFactor)
                    return Vt.ONE;
                if (t === r.SrcColorFactor)
                    return Vt.SRC_COLOR;
                if (t === r.OneMinusSrcColorFactor)
                    return Vt.ONE_MINUS_SRC_COLOR;
                if (t === r.SrcAlphaFactor)
                    return Vt.SRC_ALPHA;
                if (t === r.OneMinusSrcAlphaFactor)
                    return Vt.ONE_MINUS_SRC_ALPHA;
                if (t === r.DstAlphaFactor)
                    return Vt.DST_ALPHA;
                if (t === r.OneMinusDstAlphaFactor)
                    return Vt.ONE_MINUS_DST_ALPHA;
                if (t === r.DstColorFactor)
                    return Vt.DST_COLOR;
                if (t === r.OneMinusDstColorFactor)
                    return Vt.ONE_MINUS_DST_COLOR;
                if (t === r.SrcAlphaSaturateFactor)
                    return Vt.SRC_ALPHA_SATURATE;
                if (e = jt.get("WEBGL_compressed_texture_s3tc"),
                null !== e) {
                    if (t === r.RGB_S3TC_DXT1_Format)
                        return e.COMPRESSED_RGB_S3TC_DXT1_EXT;
                    if (t === r.RGBA_S3TC_DXT1_Format)
                        return e.COMPRESSED_RGBA_S3TC_DXT1_EXT;
                    if (t === r.RGBA_S3TC_DXT3_Format)
                        return e.COMPRESSED_RGBA_S3TC_DXT3_EXT;
                    if (t === r.RGBA_S3TC_DXT5_Format)
                        return e.COMPRESSED_RGBA_S3TC_DXT5_EXT
                }
                if (e = jt.get("WEBGL_compressed_texture_pvrtc"),
                null !== e) {
                    if (t === r.RGB_PVRTC_4BPPV1_Format)
                        return e.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;
                    if (t === r.RGB_PVRTC_2BPPV1_Format)
                        return e.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;
                    if (t === r.RGBA_PVRTC_4BPPV1_Format)
                        return e.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;
                    if (t === r.RGBA_PVRTC_2BPPV1_Format)
                        return e.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG
                }
                if (e = jt.get("WEBGL_compressed_texture_etc1"),
                null !== e && t === r.RGB_ETC1_Format)
                    return e.COMPRESSED_RGB_ETC1_WEBGL;
                if (e = jt.get("EXT_blend_minmax"),
                null !== e) {
                    if (t === r.MinEquation)
                        return e.MIN_EXT;
                    if (t === r.MaxEquation)
                        return e.MAX_EXT
                }
                return 0
            }
            console.log("THREE.WebGLRenderer", r.REVISION),
            t = t || {};
            var tt = void 0 !== t.canvas ? t.canvas : document.createElement("canvas")
              , et = void 0 !== t.context ? t.context : null
              , nt = void 0 !== t.alpha && t.alpha
              , rt = void 0 === t.depth || t.depth
              , it = void 0 === t.stencil || t.stencil
              , ot = void 0 !== t.antialias && t.antialias
              , at = void 0 === t.premultipliedAlpha || t.premultipliedAlpha
              , st = void 0 !== t.preserveDrawingBuffer && t.preserveDrawingBuffer
              , ht = []
              , ut = []
              , lt = -1
              , ct = []
              , pt = -1
              , ft = new Float32Array(8)
              , dt = []
              , mt = [];
            this.domElement = tt,
            this.context = null ,
            this.autoClear = !0,
            this.autoClearColor = !0,
            this.autoClearDepth = !0,
            this.autoClearStencil = !0,
            this.sortObjects = !0,
            this.gammaFactor = 2,
            this.gammaInput = !1,
            this.gammaOutput = !1,
            this.maxMorphTargets = 8,
            this.maxMorphNormals = 4,
            this.autoScaleCubemaps = !0;
            var vt = this
              , gt = null
              , yt = null
              , _t = null
              , xt = -1
              , bt = ""
              , wt = null
              , Et = new r.Vector4
              , St = null
              , Tt = new r.Vector4
              , Mt = 0
              , Ct = new r.Color(0)
              , At = 0
              , Pt = tt.width
              , Lt = tt.height
              , Rt = 1
              , kt = new r.Vector4(0,0,Pt,Lt)
              , Ot = !1
              , It = new r.Vector4(0,0,Pt,Lt)
              , Dt = new r.Frustum
              , Ut = new r.Matrix4
              , Bt = new r.Vector3
              , Ft = {
                hash: "",
                ambient: [0, 0, 0],
                directional: [],
                directionalShadowMap: [],
                directionalShadowMatrix: [],
                spot: [],
                spotShadowMap: [],
                spotShadowMatrix: [],
                point: [],
                pointShadowMap: [],
                pointShadowMatrix: [],
                hemi: [],
                shadows: [],
                shadowsPointLight: 0
            }
              , Nt = {
                geometries: 0,
                textures: 0
            }
              , Gt = {
                calls: 0,
                vertices: 0,
                faces: 0,
                points: 0
            };
            this.info = {
                render: Gt,
                memory: Nt,
                programs: null
            };
            var Vt;
            try {
                var zt = {
                    alpha: nt,
                    depth: rt,
                    stencil: it,
                    antialias: ot,
                    premultipliedAlpha: at,
                    preserveDrawingBuffer: st
                };
                if (Vt = et || tt.getContext("webgl", zt) || tt.getContext("experimental-webgl", zt),
                null === Vt)
                    throw null !== tt.getContext("webgl") ? "Error creating WebGL context with your selected attributes." : "Error creating WebGL context.";
                tt.addEventListener("webglcontextlost", a, !1)
            } catch (Ht) {
                console.error("THREE.WebGLRenderer: " + Ht)
            }
            var jt = new r.WebGLExtensions(Vt);
            jt.get("OES_texture_float"),
            jt.get("OES_texture_float_linear"),
            jt.get("OES_texture_half_float"),
            jt.get("OES_texture_half_float_linear"),
            jt.get("OES_standard_derivatives"),
            jt.get("ANGLE_instanced_arrays"),
            jt.get("OES_element_index_uint") && (r.BufferGeometry.MaxIndex = 4294967296);
            var Wt = new r.WebGLCapabilities(Vt,jt,t)
              , Xt = new r.WebGLState(Vt,jt,$)
              , Yt = new r.WebGLProperties
              , qt = new r.WebGLObjects(Vt,Yt,this.info)
              , Zt = new r.WebGLPrograms(this,Wt)
              , Qt = new r.WebGLLights;
            this.info.programs = Zt.programs;
            var Kt = new r.WebGLBufferRenderer(Vt,jt,Gt)
              , Jt = new r.WebGLIndexedBufferRenderer(Vt,jt,Gt);
            i(),
            this.context = Vt,
            this.capabilities = Wt,
            this.extensions = jt,
            this.properties = Yt,
            this.state = Xt;
            var $t = new r.WebGLShadowMap(this,Ft,qt);
            this.shadowMap = $t;
            var te = new r.SpritePlugin(this,dt)
              , ee = new r.LensFlarePlugin(this,mt);
            this.getContext = function() {
                return Vt
            }
            ,
            this.getContextAttributes = function() {
                return Vt.getContextAttributes()
            }
            ,
            this.forceContextLoss = function() {
                jt.get("WEBGL_lose_context").loseContext()
            }
            ,
            this.getMaxAnisotropy = function() {
                var t;
                return function() {
                    if (void 0 !== t)
                        return t;
                    var e = jt.get("EXT_texture_filter_anisotropic");
                    return t = null !== e ? Vt.getParameter(e.MAX_TEXTURE_MAX_ANISOTROPY_EXT) : 0
                }
            }(),
            this.getPrecision = function() {
                return Wt.precision
            }
            ,
            this.getPixelRatio = function() {
                return Rt
            }
            ,
            this.setPixelRatio = function(t) {
                void 0 !== t && (Rt = t,
                this.setSize(It.z, It.w, !1))
            }
            ,
            this.getSize = function() {
                return {
                    width: Pt,
                    height: Lt
                }
            }
            ,
            this.setSize = function(t, e, n) {
                Pt = t,
                Lt = e,
                tt.width = t * Rt,
                tt.height = e * Rt,
                n !== !1 && (tt.style.width = t + "px",
                tt.style.height = e + "px"),
                this.setViewport(0, 0, t, e)
            }
            ,
            this.setViewport = function(t, e, n, r) {
                Xt.viewport(It.set(t, e, n, r))
            }
            ,
            this.setScissor = function(t, e, n, r) {
                Xt.scissor(kt.set(t, e, n, r))
            }
            ,
            this.setScissorTest = function(t) {
                Xt.setScissorTest(Ot = t)
            }
            ,
            this.getClearColor = function() {
                return Ct
            }
            ,
            this.setClearColor = function(t, e) {
                Ct.set(t),
                At = void 0 !== e ? e : 1,
                n(Ct.r, Ct.g, Ct.b, At)
            }
            ,
            this.getClearAlpha = function() {
                return At
            }
            ,
            this.setClearAlpha = function(t) {
                At = t,
                n(Ct.r, Ct.g, Ct.b, At)
            }
            ,
            this.clear = function(t, e, n) {
                var r = 0;
                (void 0 === t || t) && (r |= Vt.COLOR_BUFFER_BIT),
                (void 0 === e || e) && (r |= Vt.DEPTH_BUFFER_BIT),
                (void 0 === n || n) && (r |= Vt.STENCIL_BUFFER_BIT),
                Vt.clear(r)
            }
            ,
            this.clearColor = function() {
                this.clear(!0, !1, !1)
            }
            ,
            this.clearDepth = function() {
                this.clear(!1, !0, !1)
            }
            ,
            this.clearStencil = function() {
                this.clear(!1, !1, !0)
            }
            ,
            this.clearTarget = function(t, e, n, r) {
                this.setRenderTarget(t),
                this.clear(e, n, r)
            }
            ,
            this.resetGLState = o,
            this.dispose = function() {
                tt.removeEventListener("webglcontextlost", a, !1)
            }
            ,
            this.renderBufferImmediate = function(t, e, n) {
                Xt.initAttributes();
                var i = Yt.get(t);
                t.hasPositions && !i.position && (i.position = Vt.createBuffer()),
                t.hasNormals && !i.normal && (i.normal = Vt.createBuffer()),
                t.hasUvs && !i.uv && (i.uv = Vt.createBuffer()),
                t.hasColors && !i.color && (i.color = Vt.createBuffer());
                var o = e.getAttributes();
                if (t.hasPositions && (Vt.bindBuffer(Vt.ARRAY_BUFFER, i.position),
                Vt.bufferData(Vt.ARRAY_BUFFER, t.positionArray, Vt.DYNAMIC_DRAW),
                Xt.enableAttribute(o.position),
                Vt.vertexAttribPointer(o.position, 3, Vt.FLOAT, !1, 0, 0)),
                t.hasNormals) {
                    if (Vt.bindBuffer(Vt.ARRAY_BUFFER, i.normal),
                    "MeshPhongMaterial" !== n.type && "MeshStandardMaterial" !== n.type && n.shading === r.FlatShading)
                        for (var a = 0, s = 3 * t.count; a < s; a += 9) {
                            var h = t.normalArray
                              , u = (h[a + 0] + h[a + 3] + h[a + 6]) / 3
                              , l = (h[a + 1] + h[a + 4] + h[a + 7]) / 3
                              , c = (h[a + 2] + h[a + 5] + h[a + 8]) / 3;
                            h[a + 0] = u,
                            h[a + 1] = l,
                            h[a + 2] = c,
                            h[a + 3] = u,
                            h[a + 4] = l,
                            h[a + 5] = c,
                            h[a + 6] = u,
                            h[a + 7] = l,
                            h[a + 8] = c
                        }
                    Vt.bufferData(Vt.ARRAY_BUFFER, t.normalArray, Vt.DYNAMIC_DRAW),
                    Xt.enableAttribute(o.normal),
                    Vt.vertexAttribPointer(o.normal, 3, Vt.FLOAT, !1, 0, 0)
                }
                t.hasUvs && n.map && (Vt.bindBuffer(Vt.ARRAY_BUFFER, i.uv),
                Vt.bufferData(Vt.ARRAY_BUFFER, t.uvArray, Vt.DYNAMIC_DRAW),
                Xt.enableAttribute(o.uv),
                Vt.vertexAttribPointer(o.uv, 2, Vt.FLOAT, !1, 0, 0)),
                t.hasColors && n.vertexColors !== r.NoColors && (Vt.bindBuffer(Vt.ARRAY_BUFFER, i.color),
                Vt.bufferData(Vt.ARRAY_BUFFER, t.colorArray, Vt.DYNAMIC_DRAW),
                Xt.enableAttribute(o.color),
                Vt.vertexAttribPointer(o.color, 3, Vt.FLOAT, !1, 0, 0)),
                Xt.disableUnusedAttributes(),
                Vt.drawArrays(Vt.TRIANGLES, 0, t.count),
                t.count = 0
            }
            ,
            this.renderBufferDirect = function(t, n, i, o, a, s) {
                w(o);
                var h = S(t, n, o, a)
                  , u = !1
                  , l = i.id + "_" + h.id + "_" + o.wireframe;
                l !== bt && (bt = l,
                u = !0);
                var c = a.morphTargetInfluences;
                if (void 0 !== c) {
                    for (var p = [], f = 0, v = c.length; f < v; f++) {
                        var g = c[f];
                        p.push([g, f])
                    }
                    p.sort(m),
                    p.length > 8 && (p.length = 8);
                    for (var y = i.morphAttributes, f = 0, v = p.length; f < v; f++) {
                        var g = p[f];
                        if (ft[f] = g[0],
                        0 !== g[0]) {
                            var _ = g[1];
                            o.morphTargets === !0 && y.position && i.addAttribute("morphTarget" + f, y.position[_]),
                            o.morphNormals === !0 && y.normal && i.addAttribute("morphNormal" + f, y.normal[_])
                        } else
                            o.morphTargets === !0 && i.removeAttribute("morphTarget" + f),
                            o.morphNormals === !0 && i.removeAttribute("morphNormal" + f)
                    }
                    var x = h.getUniforms();
                    null !== x.morphTargetInfluences && Vt.uniform1fv(x.morphTargetInfluences, ft),
                    u = !0
                }
                var _ = i.index
                  , b = i.attributes.position;
                o.wireframe === !0 && (_ = qt.getWireframeAttribute(i));
                var E;
                null !== _ ? (E = Jt,
                E.setIndex(_)) : E = Kt,
                u && (d(o, h, i),
                null !== _ && Vt.bindBuffer(Vt.ELEMENT_ARRAY_BUFFER, qt.getAttributeBuffer(_)));
                var T = 0
                  , M = 1 / 0;
                null !== _ ? M = _.count : void 0 !== b && (M = b.count);
                var C = i.drawRange.start
                  , A = i.drawRange.count
                  , P = null !== s ? s.start : 0
                  , L = null !== s ? s.count : 1 / 0
                  , R = Math.max(T, C, P)
                  , k = Math.min(T + M, C + A, P + L) - 1
                  , O = Math.max(0, k - R + 1);
                if (a instanceof r.Mesh)
                    if (o.wireframe === !0)
                        Xt.setLineWidth(o.wireframeLinewidth * e()),
                        E.setMode(Vt.LINES);
                    else
                        switch (a.drawMode) {
                        case r.TrianglesDrawMode:
                            E.setMode(Vt.TRIANGLES);
                            break;
                        case r.TriangleStripDrawMode:
                            E.setMode(Vt.TRIANGLE_STRIP);
                            break;
                        case r.TriangleFanDrawMode:
                            E.setMode(Vt.TRIANGLE_FAN)
                        }
                else if (a instanceof r.Line) {
                    var I = o.linewidth;
                    void 0 === I && (I = 1),
                    Xt.setLineWidth(I * e()),
                    a instanceof r.LineSegments ? E.setMode(Vt.LINES) : E.setMode(Vt.LINE_STRIP)
                } else
                    a instanceof r.Points && E.setMode(Vt.POINTS);
                i instanceof r.InstancedBufferGeometry && i.maxInstancedCount > 0 ? E.renderInstances(i, R, O) : E.render(R, O)
            }
            ,
            this.render = function(t, e, n, i) {
                if (e instanceof r.Camera == !1)
                    return void console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");
                var o = t.fog;
                if (bt = "",
                xt = -1,
                wt = null ,
                t.autoUpdate === !0 && t.updateMatrixWorld(),
                null === e.parent && e.updateMatrixWorld(),
                e.matrixWorldInverse.getInverse(e.matrixWorld),
                Ut.multiplyMatrices(e.projectionMatrix, e.matrixWorldInverse),
                Dt.setFromMatrix(Ut),
                ht.length = 0,
                lt = -1,
                pt = -1,
                dt.length = 0,
                mt.length = 0,
                _(t, e),
                ut.length = lt + 1,
                ct.length = pt + 1,
                vt.sortObjects === !0 && (ut.sort(v),
                ct.sort(g)),
                F(ht, e),
                $t.render(t, e),
                Gt.calls = 0,
                Gt.vertices = 0,
                Gt.faces = 0,
                Gt.points = 0,
                void 0 === n && (n = null ),
                this.setRenderTarget(n),
                (this.autoClear || i) && this.clear(this.autoClearColor, this.autoClearDepth, this.autoClearStencil),
                t.overrideMaterial) {
                    var a = t.overrideMaterial;
                    x(ut, e, o, a),
                    x(ct, e, o, a)
                } else
                    Xt.setBlending(r.NoBlending),
                    x(ut, e, o),
                    x(ct, e, o);
                if (te.render(t, e),
                ee.render(t, e, Tt),
                n) {
                    var s = n.texture;
                    s.generateMipmaps && z(n) && s.minFilter !== r.NearestFilter && s.minFilter !== r.LinearFilter && K(n)
                }
                Xt.setDepthTest(!0),
                Xt.setDepthWrite(!0),
                Xt.setColorWrite(!0)
            }
            ,
            this.setFaceCulling = function(t, e) {
                t === r.CullFaceNone ? Xt.disable(Vt.CULL_FACE) : (e === r.FrontFaceDirectionCW ? Vt.frontFace(Vt.CW) : Vt.frontFace(Vt.CCW),
                t === r.CullFaceBack ? Vt.cullFace(Vt.BACK) : t === r.CullFaceFront ? Vt.cullFace(Vt.FRONT) : Vt.cullFace(Vt.FRONT_AND_BACK),
                Xt.enable(Vt.CULL_FACE))
            }
            ,
            this.setTexture = function(t, e) {
                var n = Yt.get(t);
                if (t.version > 0 && n.__version !== t.version) {
                    var r = t.image;
                    return void 0 === r ? void console.warn("THREE.WebGLRenderer: Texture marked for update but image is undefined", t) : r.complete === !1 ? void console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete", t) : void G(n, t, e)
                }
                Xt.activeTexture(Vt.TEXTURE0 + e),
                Xt.bindTexture(Vt.TEXTURE_2D, n.__webglTexture)
            }
            ,
            this.setRenderTarget = function(t) {
                yt = t,
                t && void 0 === Yt.get(t).__webglFramebuffer && Q(t);
                var e, n = t instanceof r.WebGLRenderTargetCube;
                if (t) {
                    var i = Yt.get(t);
                    e = n ? i.__webglFramebuffer[t.activeCubeFace] : i.__webglFramebuffer,
                    Et.copy(t.scissor),
                    St = t.scissorTest,
                    Tt.copy(t.viewport)
                } else
                    e = null ,
                    Et.copy(kt).multiplyScalar(Rt),
                    St = Ot,
                    Tt.copy(It).multiplyScalar(Rt);
                if (_t !== e && (Vt.bindFramebuffer(Vt.FRAMEBUFFER, e),
                _t = e),
                Xt.scissor(Et),
                Xt.setScissorTest(St),
                Xt.viewport(Tt),
                n) {
                    var o = Yt.get(t.texture);
                    Vt.framebufferTexture2D(Vt.FRAMEBUFFER, Vt.COLOR_ATTACHMENT0, Vt.TEXTURE_CUBE_MAP_POSITIVE_X + t.activeCubeFace, o.__webglTexture, 0)
                }
            }
            ,
            this.readRenderTargetPixels = function(t, e, n, i, o, a) {
                if (t instanceof r.WebGLRenderTarget == !1)
                    return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");
                var s = Yt.get(t).__webglFramebuffer;
                if (s) {
                    var h = !1;
                    s !== _t && (Vt.bindFramebuffer(Vt.FRAMEBUFFER, s),
                    h = !0);
                    try {
                        var u = t.texture;
                        if (u.format !== r.RGBAFormat && $(u.format) !== Vt.getParameter(Vt.IMPLEMENTATION_COLOR_READ_FORMAT))
                            return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");
                        if (!(u.type === r.UnsignedByteType || $(u.type) === Vt.getParameter(Vt.IMPLEMENTATION_COLOR_READ_TYPE) || u.type === r.FloatType && jt.get("WEBGL_color_buffer_float") || u.type === r.HalfFloatType && jt.get("EXT_color_buffer_half_float")))
                            return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");
                        Vt.checkFramebufferStatus(Vt.FRAMEBUFFER) === Vt.FRAMEBUFFER_COMPLETE ? Vt.readPixels(e, n, i, o, $(u.format), $(u.type), a) : console.error("THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.")
                    } finally {
                        h && Vt.bindFramebuffer(Vt.FRAMEBUFFER, _t)
                    }
                }
            }
        }
        ,
        r.WebGLRenderTarget = function(t, e, n) {
            this.uuid = r.Math.generateUUID(),
            this.width = t,
            this.height = e,
            this.scissor = new r.Vector4(0,0,t,e),
            this.scissorTest = !1,
            this.viewport = new r.Vector4(0,0,t,e),
            n = n || {},
            void 0 === n.minFilter && (n.minFilter = r.LinearFilter),
            this.texture = new r.Texture((void 0),(void 0),n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy),
            this.depthBuffer = void 0 === n.depthBuffer || n.depthBuffer,
            this.stencilBuffer = void 0 === n.stencilBuffer || n.stencilBuffer
        }
        ,
        r.WebGLRenderTarget.prototype = {
            constructor: r.WebGLRenderTarget,
            setSize: function(t, e) {
                this.width === t && this.height === e || (this.width = t,
                this.height = e,
                this.dispose()),
                this.viewport.set(0, 0, t, e),
                this.scissor.set(0, 0, t, e)
            },
            clone: function() {
                return (new this.constructor).copy(this)
            },
            copy: function(t) {
                return this.width = t.width,
                this.height = t.height,
                this.viewport.copy(t.viewport),
                this.texture = t.texture.clone(),
                this.depthBuffer = t.depthBuffer,
                this.stencilBuffer = t.stencilBuffer,
                this.shareDepthFrom = t.shareDepthFrom,
                this
            },
            dispose: function() {
                this.dispatchEvent({
                    type: "dispose"
                })
            }
        },
        r.EventDispatcher.prototype.apply(r.WebGLRenderTarget.prototype),
        r.WebGLRenderTargetCube = function(t, e, n) {
            r.WebGLRenderTarget.call(this, t, e, n),
            this.activeCubeFace = 0
        }
        ,
        r.WebGLRenderTargetCube.prototype = Object.create(r.WebGLRenderTarget.prototype),
        r.WebGLRenderTargetCube.prototype.constructor = r.WebGLRenderTargetCube,
        r.WebGLBufferRenderer = function(t, e, n) {
            function i(t) {
                s = t
            }
            function o(e, r) {
                t.drawArrays(s, e, r),
                n.calls++,
                n.vertices += r,
                s === t.TRIANGLES && (n.faces += r / 3)
            }
            function a(i) {
                var o = e.get("ANGLE_instanced_arrays");
                if (null === o)
                    return void console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");
                var a = i.attributes.position
                  , h = 0;
                a instanceof r.InterleavedBufferAttribute ? (h = a.data.count,
                o.drawArraysInstancedANGLE(s, 0, h, i.maxInstancedCount)) : (h = a.count,
                o.drawArraysInstancedANGLE(s, 0, h, i.maxInstancedCount)),
                n.calls++,
                n.vertices += h * i.maxInstancedCount,
                s === t.TRIANGLES && (n.faces += i.maxInstancedCount * h / 3)
            }
            var s;
            this.setMode = i,
            this.render = o,
            this.renderInstances = a
        }
        ,
        r.WebGLIndexedBufferRenderer = function(t, e, n) {
            function r(t) {
                s = t
            }
            function i(n) {
                n.array instanceof Uint32Array && e.get("OES_element_index_uint") ? (h = t.UNSIGNED_INT,
                u = 4) : (h = t.UNSIGNED_SHORT,
                u = 2)
            }
            function o(e, r) {
                t.drawElements(s, r, h, e * u),
                n.calls++,
                n.vertices += r,
                s === t.TRIANGLES && (n.faces += r / 3)
            }
            function a(r, i, o) {
                var a = e.get("ANGLE_instanced_arrays");
                return null === a ? void console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.") : (a.drawElementsInstancedANGLE(s, o, h, i * u, r.maxInstancedCount),
                n.calls++,
                n.vertices += o * r.maxInstancedCount,
                void (s === t.TRIANGLES && (n.faces += r.maxInstancedCount * o / 3)))
            }
            var s, h, u;
            this.setMode = r,
            this.setIndex = i,
            this.render = o,
            this.renderInstances = a
        }
        ,
        r.WebGLExtensions = function(t) {
            var e = {};
            this.get = function(n) {
                if (void 0 !== e[n])
                    return e[n];
                var r;
                switch (n) {
                case "EXT_texture_filter_anisotropic":
                    r = t.getExtension("EXT_texture_filter_anisotropic") || t.getExtension("MOZ_EXT_texture_filter_anisotropic") || t.getExtension("WEBKIT_EXT_texture_filter_anisotropic");
                    break;
                case "WEBGL_compressed_texture_s3tc":
                    r = t.getExtension("WEBGL_compressed_texture_s3tc") || t.getExtension("MOZ_WEBGL_compressed_texture_s3tc") || t.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");
                    break;
                case "WEBGL_compressed_texture_pvrtc":
                    r = t.getExtension("WEBGL_compressed_texture_pvrtc") || t.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");
                    break;
                case "WEBGL_compressed_texture_etc1":
                    r = t.getExtension("WEBGL_compressed_texture_etc1");
                    break;
                default:
                    r = t.getExtension(n)
                }
                return null === r && console.warn("THREE.WebGLRenderer: " + n + " extension not supported."),
                e[n] = r,
                r
            }
        }
        ,
        r.WebGLCapabilities = function(t, e, n) {
            function r(e) {
                if ("highp" === e) {
                    if (t.getShaderPrecisionFormat(t.VERTEX_SHADER, t.HIGH_FLOAT).precision > 0 && t.getShaderPrecisionFormat(t.FRAGMENT_SHADER, t.HIGH_FLOAT).precision > 0)
                        return "highp";
                    e = "mediump"
                }
                return "mediump" === e && t.getShaderPrecisionFormat(t.VERTEX_SHADER, t.MEDIUM_FLOAT).precision > 0 && t.getShaderPrecisionFormat(t.FRAGMENT_SHADER, t.MEDIUM_FLOAT).precision > 0 ? "mediump" : "lowp"
            }
            this.getMaxPrecision = r,
            this.precision = void 0 !== n.precision ? n.precision : "highp",
            this.logarithmicDepthBuffer = void 0 !== n.logarithmicDepthBuffer && n.logarithmicDepthBuffer,
            this.maxTextures = t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS),
            this.maxVertexTextures = t.getParameter(t.MAX_VERTEX_TEXTURE_IMAGE_UNITS),
            this.maxTextureSize = t.getParameter(t.MAX_TEXTURE_SIZE),
            this.maxCubemapSize = t.getParameter(t.MAX_CUBE_MAP_TEXTURE_SIZE),
            this.maxAttributes = t.getParameter(t.MAX_VERTEX_ATTRIBS),
            this.maxVertexUniforms = t.getParameter(t.MAX_VERTEX_UNIFORM_VECTORS),
            this.maxVaryings = t.getParameter(t.MAX_VARYING_VECTORS),
            this.maxFragmentUniforms = t.getParameter(t.MAX_FRAGMENT_UNIFORM_VECTORS),
            this.vertexTextures = this.maxVertexTextures > 0,
            this.floatFragmentTextures = !!e.get("OES_texture_float"),
            this.floatVertexTextures = this.vertexTextures && this.floatFragmentTextures;
            var i = r(this.precision);
            i !== this.precision && (console.warn("THREE.WebGLRenderer:", this.precision, "not supported, using", i, "instead."),
            this.precision = i),
            this.logarithmicDepthBuffer && (this.logarithmicDepthBuffer = !!e.get("EXT_frag_depth"))
        }
        ,
        r.WebGLGeometries = function(t, e, n) {
            function i(t) {
                var e = t.geometry;
                if (void 0 !== l[e.id])
                    return l[e.id];
                e.addEventListener("dispose", o);
                var i;
                return e instanceof r.BufferGeometry ? i = e : e instanceof r.Geometry && (void 0 === e._bufferGeometry && (e._bufferGeometry = (new r.BufferGeometry).setFromObject(t)),
                i = e._bufferGeometry),
                l[e.id] = i,
                n.memory.geometries++,
                i
            }
            function o(t) {
                var r = t.target
                  , i = l[r.id];
                null !== i.index && s(i.index),
                h(i.attributes),
                r.removeEventListener("dispose", o),
                delete l[r.id];
                var a = e.get(r);
                a.wireframe && s(a.wireframe),
                e["delete"](r);
                var u = e.get(i);
                u.wireframe && s(u.wireframe),
                e["delete"](i),
                n.memory.geometries--
            }
            function a(t) {
                return t instanceof r.InterleavedBufferAttribute ? e.get(t.data).__webglBuffer : e.get(t).__webglBuffer
            }
            function s(e) {
                var n = a(e);
                void 0 !== n && (t.deleteBuffer(n),
                u(e))
            }
            function h(t) {
                for (var e in t)
                    s(t[e])
            }
            function u(t) {
                t instanceof r.InterleavedBufferAttribute ? e["delete"](t.data) : e["delete"](t)
            }
            var l = {};
            this.get = i
        }
        ,
        r.WebGLLights = function() {
            var t = {};
            this.get = function(e) {
                if (void 0 !== t[e.id])
                    return t[e.id];
                var n;
                switch (e.type) {
                case "DirectionalLight":
                    n = {
                        direction: new r.Vector3,
                        color: new r.Color,
                        shadow: !1,
                        shadowBias: 0,
                        shadowRadius: 1,
                        shadowMapSize: new r.Vector2
                    };
                    break;
                case "SpotLight":
                    n = {
                        position: new r.Vector3,
                        direction: new r.Vector3,
                        color: new r.Color,
                        distance: 0,
                        angleCos: 0,
                        penumbra: 0,
                        decay: 0,
                        shadow: !1,
                        shadowBias: 0,
                        shadowRadius: 1,
                        shadowMapSize: new r.Vector2
                    };
                    break;
                case "PointLight":
                    n = {
                        position: new r.Vector3,
                        color: new r.Color,
                        distance: 0,
                        decay: 0,
                        shadow: !1,
                        shadowBias: 0,
                        shadowRadius: 1,
                        shadowMapSize: new r.Vector2
                    };
                    break;
                case "HemisphereLight":
                    n = {
                        direction: new r.Vector3,
                        skyColor: new r.Color,
                        groundColor: new r.Color
                    }
                }
                return t[e.id] = n,
                n
            }
        }
        ,
        r.WebGLObjects = function(t, e, n) {
            function i(e) {
                var n = c.get(e);
                e.geometry instanceof r.Geometry && n.updateFromObject(e);
                var i = n.index
                  , a = n.attributes;
                null !== i && o(i, t.ELEMENT_ARRAY_BUFFER);
                for (var s in a)
                    o(a[s], t.ARRAY_BUFFER);
                var h = n.morphAttributes;
                for (var s in h)
                    for (var u = h[s], l = 0, p = u.length; l < p; l++)
                        o(u[l], t.ARRAY_BUFFER);
                return n
            }
            function o(t, n) {
                var i = t instanceof r.InterleavedBufferAttribute ? t.data : t
                  , o = e.get(i);
                void 0 === o.__webglBuffer ? a(o, i, n) : o.version !== i.version && s(o, i, n)
            }
            function a(e, n, r) {
                e.__webglBuffer = t.createBuffer(),
                t.bindBuffer(r, e.__webglBuffer);
                var i = n.dynamic ? t.DYNAMIC_DRAW : t.STATIC_DRAW;
                t.bufferData(r, n.array, i),
                e.version = n.version
            }
            function s(e, n, r) {
                t.bindBuffer(r, e.__webglBuffer),
                n.dynamic === !1 || n.updateRange.count === -1 ? t.bufferSubData(r, 0, n.array) : 0 === n.updateRange.count ? console.error("THREE.WebGLObjects.updateBuffer: dynamic THREE.BufferAttribute marked as needsUpdate but updateRange.count is 0, ensure you are using set methods or updating manually.") : (t.bufferSubData(r, n.updateRange.offset * n.array.BYTES_PER_ELEMENT, n.array.subarray(n.updateRange.offset, n.updateRange.offset + n.updateRange.count)),
                n.updateRange.count = 0),
                e.version = n.version
            }
            function h(t) {
                return t instanceof r.InterleavedBufferAttribute ? e.get(t.data).__webglBuffer : e.get(t).__webglBuffer
            }
            function u(n) {
                var i = e.get(n);
                if (void 0 !== i.wireframe)
                    return i.wireframe;
                var a = []
                  , s = n.index
                  , h = n.attributes
                  , u = h.position;
                if (null !== s)
                    for (var c = {}, p = s.array, f = 0, d = p.length; f < d; f += 3) {
                        var m = p[f + 0]
                          , v = p[f + 1]
                          , g = p[f + 2];
                        l(c, m, v) && a.push(m, v),
                        l(c, v, g) && a.push(v, g),
                        l(c, g, m) && a.push(g, m)
                    }
                else
                    for (var p = h.position.array, f = 0, d = p.length / 3 - 1; f < d; f += 3) {
                        var m = f + 0
                          , v = f + 1
                          , g = f + 2;
                        a.push(m, v, v, g, g, m)
                    }
                var y = u.count > 65535 ? Uint32Array : Uint16Array
                  , _ = new r.BufferAttribute(new y(a),1);
                return o(_, t.ELEMENT_ARRAY_BUFFER),
                i.wireframe = _,
                _
            }
            function l(t, e, n) {
                if (e > n) {
                    var r = e;
                    e = n,
                    n = r
                }
                var i = t[e];
                return void 0 === i ? (t[e] = [n],
                !0) : i.indexOf(n) === -1 && (i.push(n),
                !0)
            }
            var c = new r.WebGLGeometries(t,e,n);
            this.getAttributeBuffer = h,
            this.getWireframeAttribute = u,
            this.update = i
        }
        ,
        r.WebGLProgram = function() {
            function t(t, e, n) {
                t = t || {};
                var r = [t.derivatives || e.bumpMap || e.normalMap || e.flatShading ? "#extension GL_OES_standard_derivatives : enable" : "", (t.fragDepth || e.logarithmicDepthBuffer) && n.get("EXT_frag_depth") ? "#extension GL_EXT_frag_depth : enable" : "", t.drawBuffers && n.get("WEBGL_draw_buffers") ? "#extension GL_EXT_draw_buffers : require" : "", (t.shaderTextureLOD || e.envMap) && n.get("EXT_shader_texture_lod") ? "#extension GL_EXT_shader_texture_lod : enable" : ""];
                return r.filter(o).join("\n")
            }
            function e(t) {
                var e = [];
                for (var n in t) {
                    var r = t[n];
                    r !== !1 && e.push("#define " + n + " " + r)
                }
                return e.join("\n")
            }
            function n(t, e, n) {
                for (var r = {}, i = t.getProgramParameter(e, t.ACTIVE_UNIFORMS), o = 0; o < i; o++) {
                    var a = t.getActiveUniform(e, o)
                      , s = a.name
                      , h = t.getUniformLocation(e, s)
                      , p = u.exec(s);
                    if (p) {
                        var f = p[1]
                          , d = p[2]
                          , m = r[f];
                        m || (m = r[f] = {}),
                        m[d] = h
                    } else if (p = l.exec(s)) {
                        var v = p[1]
                          , g = p[2]
                          , y = p[3]
                          , _ = r[v];
                        _ || (_ = r[v] = []);
                        var x = _[g];
                        x || (x = _[g] = {}),
                        x[y] = h
                    } else if (p = c.exec(s)) {
                        var v = p[1];
                        r[v] = h
                    } else
                        r[s] = h
                }
                return r
            }
            function i(t, e, n) {
                for (var r = {}, i = t.getProgramParameter(e, t.ACTIVE_ATTRIBUTES), o = 0; o < i; o++) {
                    var a = t.getActiveAttrib(e, o)
                      , s = a.name;
                    r[s] = t.getAttribLocation(e, s)
                }
                return r
            }
            function o(t) {
                return "" !== t
            }
            function a(t, e) {
                return t.replace(/NUM_DIR_LIGHTS/g, e.numDirLights).replace(/NUM_SPOT_LIGHTS/g, e.numSpotLights).replace(/NUM_POINT_LIGHTS/g, e.numPointLights).replace(/NUM_HEMI_LIGHTS/g, e.numHemiLights)
            }
            function s(t) {
                function e(t, e, n, r) {
                    for (var i = "", o = parseInt(e); o < parseInt(n); o++)
                        i += r.replace(/\[ i \]/g, "[ " + o + " ]");
                    return i
                }
                var n = /for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g;
                return t.replace(n, e)
            }
            var h = 0
              , u = /^([\w\d_]+)\.([\w\d_]+)$/
              , l = /^([\w\d_]+)\[(\d+)\]\.([\w\d_]+)$/
              , c = /^([\w\d_]+)\[0\]$/;
            return function(u, l, c, p) {
                var f = u.context
                  , d = c.extensions
                  , m = c.defines
                  , v = c.__webglShader.vertexShader
                  , g = c.__webglShader.fragmentShader
                  , y = "SHADOWMAP_TYPE_BASIC";
                p.shadowMapType === r.PCFShadowMap ? y = "SHADOWMAP_TYPE_PCF" : p.shadowMapType === r.PCFSoftShadowMap && (y = "SHADOWMAP_TYPE_PCF_SOFT");
                var _ = "ENVMAP_TYPE_CUBE"
                  , x = "ENVMAP_MODE_REFLECTION"
                  , b = "ENVMAP_BLENDING_MULTIPLY";
                if (p.envMap) {
                    switch (c.envMap.mapping) {
                    case r.CubeReflectionMapping:
                    case r.CubeRefractionMapping:
                        _ = "ENVMAP_TYPE_CUBE";
                        break;
                    case r.EquirectangularReflectionMapping:
                    case r.EquirectangularRefractionMapping:
                        _ = "ENVMAP_TYPE_EQUIREC";
                        break;
                    case r.SphericalReflectionMapping:
                        _ = "ENVMAP_TYPE_SPHERE"
                    }
                    switch (c.envMap.mapping) {
                    case r.CubeRefractionMapping:
                    case r.EquirectangularRefractionMapping:
                        x = "ENVMAP_MODE_REFRACTION"
                    }
                    switch (c.combine) {
                    case r.MultiplyOperation:
                        b = "ENVMAP_BLENDING_MULTIPLY";
                        break;
                    case r.MixOperation:
                        b = "ENVMAP_BLENDING_MIX";
                        break;
                    case r.AddOperation:
                        b = "ENVMAP_BLENDING_ADD"
                    }
                }
                var w, E, S = u.gammaFactor > 0 ? u.gammaFactor : 1, T = t(d, p, u.extensions), M = e(m), C = f.createProgram();
                c instanceof r.RawShaderMaterial ? (w = "",
                E = "") : (w = ["precision " + p.precision + " float;", "precision " + p.precision + " int;", "#define SHADER_NAME " + c.__webglShader.name, M, p.supportsVertexTextures ? "#define VERTEX_TEXTURES" : "", u.gammaInput ? "#define GAMMA_INPUT" : "", u.gammaOutput ? "#define GAMMA_OUTPUT" : "", "#define GAMMA_FACTOR " + S, "#define MAX_BONES " + p.maxBones, p.map ? "#define USE_MAP" : "", p.envMap ? "#define USE_ENVMAP" : "", p.envMap ? "#define " + x : "", p.lightMap ? "#define USE_LIGHTMAP" : "", p.aoMap ? "#define USE_AOMAP" : "", p.emissiveMap ? "#define USE_EMISSIVEMAP" : "", p.bumpMap ? "#define USE_BUMPMAP" : "", p.normalMap ? "#define USE_NORMALMAP" : "", p.displacementMap && p.supportsVertexTextures ? "#define USE_DISPLACEMENTMAP" : "", p.specularMap ? "#define USE_SPECULARMAP" : "", p.roughnessMap ? "#define USE_ROUGHNESSMAP" : "", p.metalnessMap ? "#define USE_METALNESSMAP" : "", p.alphaMap ? "#define USE_ALPHAMAP" : "", p.vertexColors ? "#define USE_COLOR" : "", p.flatShading ? "#define FLAT_SHADED" : "", p.skinning ? "#define USE_SKINNING" : "", p.useVertexTexture ? "#define BONE_TEXTURE" : "", p.morphTargets ? "#define USE_MORPHTARGETS" : "", p.morphNormals && p.flatShading === !1 ? "#define USE_MORPHNORMALS" : "", p.doubleSided ? "#define DOUBLE_SIDED" : "", p.flipSided ? "#define FLIP_SIDED" : "", p.shadowMapEnabled ? "#define USE_SHADOWMAP" : "", p.shadowMapEnabled ? "#define " + y : "", p.pointLightShadows > 0 ? "#define POINT_LIGHT_SHADOWS" : "", p.sizeAttenuation ? "#define USE_SIZEATTENUATION" : "", p.logarithmicDepthBuffer ? "#define USE_LOGDEPTHBUF" : "", p.logarithmicDepthBuffer && u.extensions.get("EXT_frag_depth") ? "#define USE_LOGDEPTHBUF_EXT" : "", "uniform mat4 modelMatrix;", "uniform mat4 modelViewMatrix;", "uniform mat4 projectionMatrix;", "uniform mat4 viewMatrix;", "uniform mat3 normalMatrix;", "uniform vec3 cameraPosition;", "attribute vec3 position;", "attribute vec3 normal;", "attribute vec2 uv;", "#ifdef USE_COLOR", "\tattribute vec3 color;", "#endif", "#ifdef USE_MORPHTARGETS", "\tattribute vec3 morphTarget0;", "\tattribute vec3 morphTarget1;", "\tattribute vec3 morphTarget2;", "\tattribute vec3 morphTarget3;", "\t#ifdef USE_MORPHNORMALS", "\t\tattribute vec3 morphNormal0;", "\t\tattribute vec3 morphNormal1;", "\t\tattribute vec3 morphNormal2;", "\t\tattribute vec3 morphNormal3;", "\t#else", "\t\tattribute vec3 morphTarget4;", "\t\tattribute vec3 morphTarget5;", "\t\tattribute vec3 morphTarget6;", "\t\tattribute vec3 morphTarget7;", "\t#endif", "#endif", "#ifdef USE_SKINNING", "\tattribute vec4 skinIndex;", "\tattribute vec4 skinWeight;", "#endif", "\n"].filter(o).join("\n"),
                E = [T, "precision " + p.precision + " float;", "precision " + p.precision + " int;", "#define SHADER_NAME " + c.__webglShader.name, M, p.alphaTest ? "#define ALPHATEST " + p.alphaTest : "", u.gammaInput ? "#define GAMMA_INPUT" : "", u.gammaOutput ? "#define GAMMA_OUTPUT" : "", "#define GAMMA_FACTOR " + S, p.useFog && p.fog ? "#define USE_FOG" : "", p.useFog && p.fogExp ? "#define FOG_EXP2" : "", p.map ? "#define USE_MAP" : "", p.envMap ? "#define USE_ENVMAP" : "", p.envMap ? "#define " + _ : "", p.envMap ? "#define " + x : "", p.envMap ? "#define " + b : "", p.lightMap ? "#define USE_LIGHTMAP" : "", p.aoMap ? "#define USE_AOMAP" : "", p.emissiveMap ? "#define USE_EMISSIVEMAP" : "", p.bumpMap ? "#define USE_BUMPMAP" : "", p.normalMap ? "#define USE_NORMALMAP" : "", p.specularMap ? "#define USE_SPECULARMAP" : "", p.roughnessMap ? "#define USE_ROUGHNESSMAP" : "", p.metalnessMap ? "#define USE_METALNESSMAP" : "", p.alphaMap ? "#define USE_ALPHAMAP" : "", p.vertexColors ? "#define USE_COLOR" : "", p.flatShading ? "#define FLAT_SHADED" : "", p.doubleSided ? "#define DOUBLE_SIDED" : "", p.flipSided ? "#define FLIP_SIDED" : "", p.shadowMapEnabled ? "#define USE_SHADOWMAP" : "", p.shadowMapEnabled ? "#define " + y : "", p.pointLightShadows > 0 ? "#define POINT_LIGHT_SHADOWS" : "", p.logarithmicDepthBuffer ? "#define USE_LOGDEPTHBUF" : "", p.logarithmicDepthBuffer && u.extensions.get("EXT_frag_depth") ? "#define USE_LOGDEPTHBUF_EXT" : "", p.envMap && u.extensions.get("EXT_shader_texture_lod") ? "#define TEXTURE_LOD_EXT" : "", "uniform mat4 viewMatrix;", "uniform vec3 cameraPosition;", "\n"].filter(o).join("\n")),
                v = a(v, p),
                g = a(g, p),
                c instanceof r.ShaderMaterial == !1 && (v = s(v),
                g = s(g));
                var A = w + v
                  , P = E + g
                  , L = r.WebGLShader(f, f.VERTEX_SHADER, A)
                  , R = r.WebGLShader(f, f.FRAGMENT_SHADER, P);
                f.attachShader(C, L),
                f.attachShader(C, R),
                void 0 !== c.index0AttributeName ? f.bindAttribLocation(C, 0, c.index0AttributeName) : p.morphTargets === !0 && f.bindAttribLocation(C, 0, "position"),
                f.linkProgram(C);
                var k = f.getProgramInfoLog(C)
                  , O = f.getShaderInfoLog(L)
                  , I = f.getShaderInfoLog(R)
                  , D = !0
                  , U = !0;
                f.getProgramParameter(C, f.LINK_STATUS) === !1 ? (D = !1,
                console.error("THREE.WebGLProgram: shader error: ", f.getError(), "gl.VALIDATE_STATUS", f.getProgramParameter(C, f.VALIDATE_STATUS), "gl.getProgramInfoLog", k, O, I)) : "" !== k ? console.warn("THREE.WebGLProgram: gl.getProgramInfoLog()", k) : "" !== O && "" !== I || (U = !1),
                U && (this.diagnostics = {
                    runnable: D,
                    material: c,
                    programLog: k,
                    vertexShader: {
                        log: O,
                        prefix: w
                    },
                    fragmentShader: {
                        log: I,
                        prefix: E
                    }
                }),
                f.deleteShader(L),
                f.deleteShader(R);
                var B;
                this.getUniforms = function() {
                    return void 0 === B && (B = n(f, C)),
                    B
                }
                ;
                var F;
                return this.getAttributes = function() {
                    return void 0 === F && (F = i(f, C)),
                    F
                }
                ,
                this.destroy = function() {
                    f.deleteProgram(C),
                    this.program = void 0
                }
                ,
                Object.defineProperties(this, {
                    uniforms: {
                        get: function() {
                            return console.warn("THREE.WebGLProgram: .uniforms is now .getUniforms()."),
                            this.getUniforms()
                        }
                    },
                    attributes: {
                        get: function() {
                            return console.warn("THREE.WebGLProgram: .attributes is now .getAttributes()."),
                            this.getAttributes()
                        }
                    }
                }),
                this.id = h++,
                this.code = l,
                this.usedTimes = 1,
                this.program = C,
                this.vertexShader = L,
                this.fragmentShader = R,
                this
            }
        }(),
        r.WebGLPrograms = function(t, e) {
            function n(t) {
                if (e.floatVertexTextures && t && t.skeleton && t.skeleton.useVertexTexture)
                    return 1024;
                var n = e.maxVertexUniforms
                  , i = Math.floor((n - 20) / 4)
                  , o = i;
                return void 0 !== t && t instanceof r.SkinnedMesh && (o = Math.min(t.skeleton.bones.length, o),
                o < t.skeleton.bones.length && console.warn("WebGLRenderer: too many bones - " + t.skeleton.bones.length + ", this GPU supports just " + o + " (try OpenGL instead of ANGLE)")),
                o
            }
            var i = []
              , o = {
                MeshDepthMaterial: "depth",
                MeshNormalMaterial: "normal",
                MeshBasicMaterial: "basic",
                MeshLambertMaterial: "lambert",
                MeshPhongMaterial: "phong",
                MeshStandardMaterial: "standard",
                LineBasicMaterial: "basic",
                LineDashedMaterial: "dashed",
                PointsMaterial: "points"
            }
              , a = ["precision", "supportsVertexTextures", "map", "envMap", "envMapMode", "lightMap", "aoMap", "emissiveMap", "bumpMap", "normalMap", "displacementMap", "specularMap", "roughnessMap", "metalnessMap", "alphaMap", "combine", "vertexColors", "fog", "useFog", "fogExp", "flatShading", "sizeAttenuation", "logarithmicDepthBuffer", "skinning", "maxBones", "useVertexTexture", "morphTargets", "morphNormals", "maxMorphTargets", "maxMorphNormals", "numDirLights", "numPointLights", "numSpotLights", "numHemiLights", "shadowMapEnabled", "pointLightShadows", "shadowMapType", "alphaTest", "doubleSided", "flipSided"];
            this.getParameters = function(i, a, s, h) {
                var u = o[i.type]
                  , l = n(h)
                  , c = t.getPrecision();
                null !== i.precision && (c = e.getMaxPrecision(i.precision),
                c !== i.precision && console.warn("THREE.WebGLProgram.getParameters:", i.precision, "not supported, using", c, "instead."));
                var p = {
                    shaderID: u,
                    precision: c,
                    supportsVertexTextures: e.vertexTextures,
                    map: !!i.map,
                    envMap: !!i.envMap,
                    envMapMode: i.envMap && i.envMap.mapping,
                    lightMap: !!i.lightMap,
                    aoMap: !!i.aoMap,
                    emissiveMap: !!i.emissiveMap,
                    bumpMap: !!i.bumpMap,
                    normalMap: !!i.normalMap,
                    displacementMap: !!i.displacementMap,
                    roughnessMap: !!i.roughnessMap,
                    metalnessMap: !!i.metalnessMap,
                    specularMap: !!i.specularMap,
                    alphaMap: !!i.alphaMap,
                    combine: i.combine,
                    vertexColors: i.vertexColors,
                    fog: s,
                    useFog: i.fog,
                    fogExp: s instanceof r.FogExp2,
                    flatShading: i.shading === r.FlatShading,
                    sizeAttenuation: i.sizeAttenuation,
                    logarithmicDepthBuffer: e.logarithmicDepthBuffer,
                    skinning: i.skinning,
                    maxBones: l,
                    useVertexTexture: e.floatVertexTextures && h && h.skeleton && h.skeleton.useVertexTexture,
                    morphTargets: i.morphTargets,
                    morphNormals: i.morphNormals,
                    maxMorphTargets: t.maxMorphTargets,
                    maxMorphNormals: t.maxMorphNormals,
                    numDirLights: a.directional.length,
                    numPointLights: a.point.length,
                    numSpotLights: a.spot.length,
                    numHemiLights: a.hemi.length,
                    pointLightShadows: a.shadowsPointLight,
                    shadowMapEnabled: t.shadowMap.enabled && h.receiveShadow && a.shadows.length > 0,
                    shadowMapType: t.shadowMap.type,
                    alphaTest: i.alphaTest,
                    doubleSided: i.side === r.DoubleSide,
                    flipSided: i.side === r.BackSide
                };
                return p
            }
            ,
            this.getProgramCode = function(t, e) {
                var n = [];
                if (e.shaderID ? n.push(e.shaderID) : (n.push(t.fragmentShader),
                n.push(t.vertexShader)),
                void 0 !== t.defines)
                    for (var r in t.defines)
                        n.push(r),
                        n.push(t.defines[r]);
                for (var i = 0; i < a.length; i++) {
                    var o = a[i];
                    n.push(o),
                    n.push(e[o])
                }
                return n.join()
            }
            ,
            this.acquireProgram = function(e, n, o) {
                for (var a, s = 0, h = i.length; s < h; s++) {
                    var u = i[s];
                    if (u.code === o) {
                        a = u,
                        ++a.usedTimes;
                        break
                    }
                }
                return void 0 === a && (a = new r.WebGLProgram(t,o,e,n),
                i.push(a)),
                a
            }
            ,
            this.releaseProgram = function(t) {
                if (0 === --t.usedTimes) {
                    var e = i.indexOf(t);
                    i[e] = i[i.length - 1],
                    i.pop(),
                    t.destroy()
                }
            }
            ,
            this.programs = i
        }
        ,
        r.WebGLProperties = function() {
            var t = {};
            this.get = function(e) {
                var n = e.uuid
                  , r = t[n];
                return void 0 === r && (r = {},
                t[n] = r),
                r
            }
            ,
            this["delete"] = function(e) {
                delete t[e.uuid]
            }
            ,
            this.clear = function() {
                t = {}
            }
        }
        ,
        r.WebGLShader = function() {
            function t(t) {
                for (var e = t.split("\n"), n = 0; n < e.length; n++)
                    e[n] = n + 1 + ": " + e[n];
                return e.join("\n")
            }
            return function(e, n, r) {
                var i = e.createShader(n);
                return e.shaderSource(i, r),
                e.compileShader(i),
                e.getShaderParameter(i, e.COMPILE_STATUS) === !1 && console.error("THREE.WebGLShader: Shader couldn't compile."),
                "" !== e.getShaderInfoLog(i) && console.warn("THREE.WebGLShader: gl.getShaderInfoLog()", n === e.VERTEX_SHADER ? "vertex" : "fragment", e.getShaderInfoLog(i), t(r)),
                i
            }
        }(),
        r.WebGLShadowMap = function(t, e, n) {
            function i(t, e, n, i) {
                var o = t.geometry
                  , a = null
                  , s = g
                  , h = t.customDepthMaterial;
                if (n && (s = y,
                h = t.customDistanceMaterial),
                h)
                    a = h;
                else {
                    var u = void 0 !== o.morphTargets && o.morphTargets.length > 0 && e.morphTargets
                      , l = t instanceof r.SkinnedMesh && e.skinning
                      , c = 0;
                    u && (c |= d),
                    l && (c |= m),
                    a = s[c]
                }
                return a.visible = e.visible,
                a.wireframe = e.wireframe,
                a.wireframeLinewidth = e.wireframeLinewidth,
                n && void 0 !== a.uniforms.lightPos && a.uniforms.lightPos.value.copy(i),
                a
            }
            function o(t, e, n) {
                if (t.visible !== !1) {
                    if (t.layers.test(e.layers) && (t instanceof r.Mesh || t instanceof r.Line || t instanceof r.Points) && t.castShadow && (t.frustumCulled === !1 || h.intersectsObject(t) === !0)) {
                        var i = t.material;
                        i.visible === !0 && (t.modelViewMatrix.multiplyMatrices(n.matrixWorldInverse, t.matrixWorld),
                        f.push(t))
                    }
                    for (var a = t.children, s = 0, u = a.length; s < u; s++)
                        o(a[s], e, n)
                }
            }
            for (var a = t.context, s = t.state, h = new r.Frustum, u = new r.Matrix4, l = new r.Vector2, c = new r.Vector3, p = new r.Vector3, f = [], d = 1, m = 2, v = (d | m) + 1, g = new Array(v), y = new Array(v), _ = [new r.Vector3(1,0,0), new r.Vector3((-1),0,0), new r.Vector3(0,0,1), new r.Vector3(0,0,(-1)), new r.Vector3(0,1,0), new r.Vector3(0,(-1),0)], x = [new r.Vector3(0,1,0), new r.Vector3(0,1,0), new r.Vector3(0,1,0), new r.Vector3(0,1,0), new r.Vector3(0,0,1), new r.Vector3(0,0,(-1))], b = [new r.Vector4, new r.Vector4, new r.Vector4, new r.Vector4, new r.Vector4, new r.Vector4], w = r.ShaderLib.depthRGBA, E = r.UniformsUtils.clone(w.uniforms), S = r.ShaderLib.distanceRGBA, T = r.UniformsUtils.clone(S.uniforms), M = 0; M !== v; ++M) {
                var C = 0 !== (M & d)
                  , A = 0 !== (M & m)
                  , P = new r.ShaderMaterial({
                    uniforms: E,
                    vertexShader: w.vertexShader,
                    fragmentShader: w.fragmentShader,
                    morphTargets: C,
                    skinning: A
                });
                P._shadowPass = !0,
                g[M] = P;
                var L = new r.ShaderMaterial({
                    uniforms: T,
                    vertexShader: S.vertexShader,
                    fragmentShader: S.fragmentShader,
                    morphTargets: C,
                    skinning: A
                });
                L._shadowPass = !0,
                y[M] = L
            }
            var R = this;
            this.enabled = !1,
            this.autoUpdate = !0,
            this.needsUpdate = !1,
            this.type = r.PCFShadowMap,
            this.cullFace = r.CullFaceFront,
            this.render = function(d, m) {
                var v, g;
                if (R.enabled !== !1 && (R.autoUpdate !== !1 || R.needsUpdate !== !1)) {
                    s.clearColor(1, 1, 1, 1),
                    s.disable(a.BLEND),
                    s.enable(a.CULL_FACE),
                    a.frontFace(a.CCW),
                    a.cullFace(R.cullFace === r.CullFaceFront ? a.FRONT : a.BACK),
                    s.setDepthTest(!0),
                    s.setScissorTest(!1);
                    for (var y = e.shadows, w = 0, E = y.length; w < E; w++) {
                        var S = y[w]
                          , T = S.shadow
                          , M = T.camera;
                        if (l.copy(T.mapSize),
                        S instanceof r.PointLight) {
                            v = 6,
                            g = !0;
                            var C = l.x
                              , A = l.y;
                            b[0].set(2 * C, A, C, A),
                            b[1].set(0, A, C, A),
                            b[2].set(3 * C, A, C, A),
                            b[3].set(C, A, C, A),
                            b[4].set(3 * C, 0, C, A),
                            b[5].set(C, 0, C, A),
                            l.x *= 4,
                            l.y *= 2
                        } else
                            v = 1,
                            g = !1;
                        if (null === T.map) {
                            var P = {
                                minFilter: r.NearestFilter,
                                magFilter: r.NearestFilter,
                                format: r.RGBAFormat
                            };
                            T.map = new r.WebGLRenderTarget(l.x,l.y,P),
                            S instanceof r.SpotLight && (M.aspect = l.x / l.y),
                            M.updateProjectionMatrix()
                        }
                        var L = T.map
                          , k = T.matrix;
                        p.setFromMatrixPosition(S.matrixWorld),
                        M.position.copy(p),
                        t.setRenderTarget(L),
                        t.clear();
                        for (var O = 0; O < v; O++) {
                            if (g) {
                                c.copy(M.position),
                                c.add(_[O]),
                                M.up.copy(x[O]),
                                M.lookAt(c);
                                var I = b[O];
                                s.viewport(I)
                            } else
                                c.setFromMatrixPosition(S.target.matrixWorld),
                                M.lookAt(c);
                            M.updateMatrixWorld(),
                            M.matrixWorldInverse.getInverse(M.matrixWorld),
                            k.set(.5, 0, 0, .5, 0, .5, 0, .5, 0, 0, .5, .5, 0, 0, 0, 1),
                            k.multiply(M.projectionMatrix),
                            k.multiply(M.matrixWorldInverse),
                            u.multiplyMatrices(M.projectionMatrix, M.matrixWorldInverse),
                            h.setFromMatrix(u),
                            f.length = 0,
                            o(d, m, M);
                            for (var D = 0, U = f.length; D < U; D++) {
                                var B = f[D]
                                  , F = n.update(B)
                                  , N = B.material;
                                if (N instanceof r.MultiMaterial)
                                    for (var G = F.groups, V = N.materials, z = 0, H = G.length; z < H; z++) {
                                        var j = G[z]
                                          , W = V[j.materialIndex];
                                        if (W.visible === !0) {
                                            var X = i(B, W, g, p);
                                            t.renderBufferDirect(M, null , F, X, B, j)
                                        }
                                    }
                                else {
                                    var X = i(B, N, g, p);
                                    t.renderBufferDirect(M, null , F, X, B, null )
                                }
                            }
                        }
                        t.resetGLState()
                    }
                    var Y = t.getClearColor()
                      , q = t.getClearAlpha();
                    t.setClearColor(Y, q),
                    s.enable(a.BLEND),
                    R.cullFace === r.CullFaceFront && a.cullFace(a.BACK),
                    t.resetGLState(),
                    R.needsUpdate = !1
                }
            }
        }
        ,
        r.WebGLState = function(t, e, n) {
            function i(e, n, r) {
                var i = new Uint8Array(3)
                  , o = t.createTexture();
                t.bindTexture(e, o),
                t.texParameteri(e, t.TEXTURE_MIN_FILTER, t.LINEAR);
                for (var a = 0; a < r; a++)
                    t.texImage2D(n + a, 0, t.RGB, 1, 1, 0, t.RGB, t.UNSIGNED_BYTE, i);
                return o
            }
            var o = this
              , a = new r.Vector4
              , s = new Uint8Array(16)
              , h = new Uint8Array(16)
              , u = new Uint8Array(16)
              , l = {}
              , c = null
              , p = null
              , f = null
              , d = null
              , m = null
              , v = null
              , g = null
              , y = null
              , _ = null
              , x = null
              , b = null
              , w = null
              , E = null
              , S = null
              , T = null
              , M = null
              , C = null
              , A = null
              , P = null
              , L = null
              , R = null
              , k = null
              , O = null
              , I = t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)
              , D = void 0
              , U = {}
              , B = new r.Vector4
              , F = null
              , N = null
              , G = new r.Vector4
              , V = new r.Vector4
              , z = {};
            z[t.TEXTURE_2D] = i(t.TEXTURE_2D, t.TEXTURE_2D, 1),
            z[t.TEXTURE_CUBE_MAP] = i(t.TEXTURE_CUBE_MAP, t.TEXTURE_CUBE_MAP_POSITIVE_X, 6),
            this.init = function() {
                this.clearColor(0, 0, 0, 1),
                this.clearDepth(1),
                this.clearStencil(0),
                this.enable(t.DEPTH_TEST),
                t.depthFunc(t.LEQUAL),
                t.frontFace(t.CCW),
                t.cullFace(t.BACK),
                this.enable(t.CULL_FACE),
                this.enable(t.BLEND),
                t.blendEquation(t.FUNC_ADD),
                t.blendFunc(t.SRC_ALPHA, t.ONE_MINUS_SRC_ALPHA)
            }
            ,
            this.initAttributes = function() {
                for (var t = 0, e = s.length; t < e; t++)
                    s[t] = 0
            }
            ,
            this.enableAttribute = function(n) {
                if (s[n] = 1,
                0 === h[n] && (t.enableVertexAttribArray(n),
                h[n] = 1),
                0 !== u[n]) {
                    var r = e.get("ANGLE_instanced_arrays");
                    r.vertexAttribDivisorANGLE(n, 0),
                    u[n] = 0
                }
            }
            ,
            this.enableAttributeAndDivisor = function(e, n, r) {
                s[e] = 1,
                0 === h[e] && (t.enableVertexAttribArray(e),
                h[e] = 1),
                u[e] !== n && (r.vertexAttribDivisorANGLE(e, n),
                u[e] = n)
            }
            ,
            this.disableUnusedAttributes = function() {
                for (var e = 0, n = h.length; e < n; e++)
                    h[e] !== s[e] && (t.disableVertexAttribArray(e),
                    h[e] = 0)
            }
            ,
            this.enable = function(e) {
                l[e] !== !0 && (t.enable(e),
                l[e] = !0)
            }
            ,
            this.disable = function(e) {
                l[e] !== !1 && (t.disable(e),
                l[e] = !1)
            }
            ,
            this.getCompressedTextureFormats = function() {
                if (null === c && (c = [],
                e.get("WEBGL_compressed_texture_pvrtc") || e.get("WEBGL_compressed_texture_s3tc") || e.get("WEBGL_compressed_texture_etc1")))
                    for (var n = t.getParameter(t.COMPRESSED_TEXTURE_FORMATS), r = 0; r < n.length; r++)
                        c.push(n[r]);
                return c
            }
            ,
            this.setBlending = function(e, i, o, a, s, h, u) {
                e === r.NoBlending ? this.disable(t.BLEND) : this.enable(t.BLEND),
                e !== p && (e === r.AdditiveBlending ? (t.blendEquation(t.FUNC_ADD),
                t.blendFunc(t.SRC_ALPHA, t.ONE)) : e === r.SubtractiveBlending ? (t.blendEquation(t.FUNC_ADD),
                t.blendFunc(t.ZERO, t.ONE_MINUS_SRC_COLOR)) : e === r.MultiplyBlending ? (t.blendEquation(t.FUNC_ADD),
                t.blendFunc(t.ZERO, t.SRC_COLOR)) : (t.blendEquationSeparate(t.FUNC_ADD, t.FUNC_ADD),
                t.blendFuncSeparate(t.SRC_ALPHA, t.ONE_MINUS_SRC_ALPHA, t.ONE, t.ONE_MINUS_SRC_ALPHA)),
                p = e),
                e === r.CustomBlending ? (s = s || i,
                h = h || o,
                u = u || a,
                i === f && s === v || (t.blendEquationSeparate(n(i), n(s)),
                f = i,
                v = s),
                o === d && a === m && h === g && u === y || (t.blendFuncSeparate(n(o), n(a), n(h), n(u)),
                d = o,
                m = a,
                g = h,
                y = u)) : (f = null ,
                d = null ,
                m = null ,
                v = null ,
                g = null ,
                y = null )
            }
            ,
            this.setDepthFunc = function(e) {
                if (_ !== e) {
                    if (e)
                        switch (e) {
                        case r.NeverDepth:
                            t.depthFunc(t.NEVER);
                            break;
                        case r.AlwaysDepth:
                            t.depthFunc(t.ALWAYS);
                            break;
                        case r.LessDepth:
                            t.depthFunc(t.LESS);
                            break;
                        case r.LessEqualDepth:
                            t.depthFunc(t.LEQUAL);
                            break;
                        case r.EqualDepth:
                            t.depthFunc(t.EQUAL);
                            break;
                        case r.GreaterEqualDepth:
                            t.depthFunc(t.GEQUAL);
                            break;
                        case r.GreaterDepth:
                            t.depthFunc(t.GREATER);
                            break;
                        case r.NotEqualDepth:
                            t.depthFunc(t.NOTEQUAL);
                            break;
                        default:
                            t.depthFunc(t.LEQUAL)
                        }
                    else
                        t.depthFunc(t.LEQUAL);
                    _ = e
                }
            }
            ,
            this.setDepthTest = function(e) {
                e ? this.enable(t.DEPTH_TEST) : this.disable(t.DEPTH_TEST)
            }
            ,
            this.setDepthWrite = function(e) {
                x !== e && (t.depthMask(e),
                x = e)
            }
            ,
            this.setColorWrite = function(e) {
                b !== e && (t.colorMask(e, e, e, e),
                b = e)
            }
            ,
            this.setStencilFunc = function(e, n, r) {
                E === e && S === n && T === r || (t.stencilFunc(e, n, r),
                E = e,
                S = n,
                T = r)
            }
            ,
            this.setStencilOp = function(e, n, r) {
                M === e && C === n && A === r || (t.stencilOp(e, n, r),
                M = e,
                C = n,
                A = r)
            }
            ,
            this.setStencilTest = function(e) {
                e ? this.enable(t.STENCIL_TEST) : this.disable(t.STENCIL_TEST)
            }
            ,
            this.setStencilWrite = function(e) {
                w !== e && (t.stencilMask(e),
                w = e)
            }
            ,
            this.setFlipSided = function(e) {
                P !== e && (e ? t.frontFace(t.CW) : t.frontFace(t.CCW),
                P = e)
            }
            ,
            this.setLineWidth = function(e) {
                e !== L && (t.lineWidth(e),
                L = e)
            }
            ,
            this.setPolygonOffset = function(e, n, r) {
                e ? this.enable(t.POLYGON_OFFSET_FILL) : this.disable(t.POLYGON_OFFSET_FILL),
                !e || R === n && k === r || (t.polygonOffset(n, r),
                R = n,
                k = r)
            }
            ,
            this.getScissorTest = function() {
                return O
            }
            ,
            this.setScissorTest = function(e) {
                O = e,
                e ? this.enable(t.SCISSOR_TEST) : this.disable(t.SCISSOR_TEST)
            }
            ,
            this.activeTexture = function(e) {
                void 0 === e && (e = t.TEXTURE0 + I - 1),
                D !== e && (t.activeTexture(e),
                D = e)
            }
            ,
            this.bindTexture = function(e, n) {
                void 0 === D && o.activeTexture();
                var r = U[D];
                void 0 === r && (r = {
                    type: void 0,
                    texture: void 0
                },
                U[D] = r),
                r.type === e && r.texture === n || (t.bindTexture(e, n || z[e]),
                r.type = e,
                r.texture = n)
            }
            ,
            this.compressedTexImage2D = function() {
                try {
                    t.compressedTexImage2D.apply(t, arguments)
                } catch (e) {
                    console.error(e)
                }
            }
            ,
            this.texImage2D = function() {
                try {
                    t.texImage2D.apply(t, arguments)
                } catch (e) {
                    console.error(e)
                }
            }
            ,
            this.clearColor = function(e, n, r, i) {
                a.set(e, n, r, i),
                B.equals(a) === !1 && (t.clearColor(e, n, r, i),
                B.copy(a))
            }
            ,
            this.clearDepth = function(e) {
                F !== e && (t.clearDepth(e),
                F = e)
            }
            ,
            this.clearStencil = function(e) {
                N !== e && (t.clearStencil(e),
                N = e)
            }
            ,
            this.scissor = function(e) {
                G.equals(e) === !1 && (t.scissor(e.x, e.y, e.z, e.w),
                G.copy(e))
            }
            ,
            this.viewport = function(e) {
                V.equals(e) === !1 && (t.viewport(e.x, e.y, e.z, e.w),
                V.copy(e))
            }
            ,
            this.reset = function() {
                for (var e = 0; e < h.length; e++)
                    1 === h[e] && (t.disableVertexAttribArray(e),
                    h[e] = 0);
                l = {},
                c = null ,
                p = null ,
                b = null ,
                x = null ,
                w = null ,
                P = null
            }
        }
        ,
        r.LensFlarePlugin = function(t, e) {
            function n() {
                var t = new Float32Array([-1, -1, 0, 0, 1, -1, 1, 0, 1, 1, 1, 1, -1, 1, 0, 1])
                  , e = new Uint16Array([0, 1, 2, 0, 2, 3]);
                o = f.createBuffer(),
                a = f.createBuffer(),
                f.bindBuffer(f.ARRAY_BUFFER, o),
                f.bufferData(f.ARRAY_BUFFER, t, f.STATIC_DRAW),
                f.bindBuffer(f.ELEMENT_ARRAY_BUFFER, a),
                f.bufferData(f.ELEMENT_ARRAY_BUFFER, e, f.STATIC_DRAW),
                c = f.createTexture(),
                p = f.createTexture(),
                d.bindTexture(f.TEXTURE_2D, c),
                f.texImage2D(f.TEXTURE_2D, 0, f.RGB, 16, 16, 0, f.RGB, f.UNSIGNED_BYTE, null ),
                f.texParameteri(f.TEXTURE_2D, f.TEXTURE_WRAP_S, f.CLAMP_TO_EDGE),
                f.texParameteri(f.TEXTURE_2D, f.TEXTURE_WRAP_T, f.CLAMP_TO_EDGE),
                f.texParameteri(f.TEXTURE_2D, f.TEXTURE_MAG_FILTER, f.NEAREST),
                f.texParameteri(f.TEXTURE_2D, f.TEXTURE_MIN_FILTER, f.NEAREST),
                d.bindTexture(f.TEXTURE_2D, p),
                f.texImage2D(f.TEXTURE_2D, 0, f.RGBA, 16, 16, 0, f.RGBA, f.UNSIGNED_BYTE, null ),
                f.texParameteri(f.TEXTURE_2D, f.TEXTURE_WRAP_S, f.CLAMP_TO_EDGE),
                f.texParameteri(f.TEXTURE_2D, f.TEXTURE_WRAP_T, f.CLAMP_TO_EDGE),
                f.texParameteri(f.TEXTURE_2D, f.TEXTURE_MAG_FILTER, f.NEAREST),
                f.texParameteri(f.TEXTURE_2D, f.TEXTURE_MIN_FILTER, f.NEAREST),
                l = f.getParameter(f.MAX_VERTEX_TEXTURE_IMAGE_UNITS) > 0;
                var n;
                n = l ? {
                    vertexShader: ["uniform lowp int renderType;", "uniform vec3 screenPosition;", "uniform vec2 scale;", "uniform float rotation;", "uniform sampler2D occlusionMap;", "attribute vec2 position;", "attribute vec2 uv;", "varying vec2 vUV;", "varying float vVisibility;", "void main() {", "vUV = uv;", "vec2 pos = position;", "if ( renderType == 2 ) {", "vec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) );", "visibility += texture2D( occlusionMap, vec2( 0.5, 0.1 ) );", "visibility += texture2D( occlusionMap, vec2( 0.9, 0.1 ) );", "visibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) );", "visibility += texture2D( occlusionMap, vec2( 0.9, 0.9 ) );", "visibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) );", "visibility += texture2D( occlusionMap, vec2( 0.1, 0.9 ) );", "visibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) );", "visibility += texture2D( occlusionMap, vec2( 0.5, 0.5 ) );", "vVisibility =        visibility.r / 9.0;", "vVisibility *= 1.0 - visibility.g / 9.0;", "vVisibility *=       visibility.b / 9.0;", "vVisibility *= 1.0 - visibility.a / 9.0;", "pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;", "pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;", "}", "gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );", "}"].join("\n"),
                    fragmentShader: ["uniform lowp int renderType;", "uniform sampler2D map;", "uniform float opacity;", "uniform vec3 color;", "varying vec2 vUV;", "varying float vVisibility;", "void main() {", "if ( renderType == 0 ) {", "gl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );", "} else if ( renderType == 1 ) {", "gl_FragColor = texture2D( map, vUV );", "} else {", "vec4 texture = texture2D( map, vUV );", "texture.a *= opacity * vVisibility;", "gl_FragColor = texture;", "gl_FragColor.rgb *= color;", "}", "}"].join("\n")
                } : {
                    vertexShader: ["uniform lowp int renderType;", "uniform vec3 screenPosition;", "uniform vec2 scale;", "uniform float rotation;", "attribute vec2 position;", "attribute vec2 uv;", "varying vec2 vUV;", "void main() {", "vUV = uv;", "vec2 pos = position;", "if ( renderType == 2 ) {", "pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;", "pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;", "}", "gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );", "}"].join("\n"),
                    fragmentShader: ["precision mediump float;", "uniform lowp int renderType;", "uniform sampler2D map;", "uniform sampler2D occlusionMap;", "uniform float opacity;", "uniform vec3 color;", "varying vec2 vUV;", "void main() {", "if ( renderType == 0 ) {", "gl_FragColor = vec4( texture2D( map, vUV ).rgb, 0.0 );", "} else if ( renderType == 1 ) {", "gl_FragColor = texture2D( map, vUV );", "} else {", "float visibility = texture2D( occlusionMap, vec2( 0.5, 0.1 ) ).a;", "visibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) ).a;", "visibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) ).a;", "visibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) ).a;", "visibility = ( 1.0 - visibility / 4.0 );", "vec4 texture = texture2D( map, vUV );", "texture.a *= opacity * visibility;", "gl_FragColor = texture;", "gl_FragColor.rgb *= color;", "}", "}"].join("\n")
                },
                s = i(n),
                h = {
                    vertex: f.getAttribLocation(s, "position"),
                    uv: f.getAttribLocation(s, "uv")
                },
                u = {
                    renderType: f.getUniformLocation(s, "renderType"),
                    map: f.getUniformLocation(s, "map"),
                    occlusionMap: f.getUniformLocation(s, "occlusionMap"),
                    opacity: f.getUniformLocation(s, "opacity"),
                    color: f.getUniformLocation(s, "color"),
                    scale: f.getUniformLocation(s, "scale"),
                    rotation: f.getUniformLocation(s, "rotation"),
                    screenPosition: f.getUniformLocation(s, "screenPosition")
                }
            }
            function i(e) {
                var n = f.createProgram()
                  , r = f.createShader(f.FRAGMENT_SHADER)
                  , i = f.createShader(f.VERTEX_SHADER)
                  , o = "precision " + t.getPrecision() + " float;\n";
                return f.shaderSource(r, o + e.fragmentShader),
                f.shaderSource(i, o + e.vertexShader),
                f.compileShader(r),
                f.compileShader(i),
                f.attachShader(n, r),
                f.attachShader(n, i),
                f.linkProgram(n),
                n
            }
            var o, a, s, h, u, l, c, p, f = t.context, d = t.state;
            this.render = function(i, m, v) {
                if (0 !== e.length) {
                    var g = new r.Vector3
                      , y = v.w / v.z
                      , _ = .5 * v.z
                      , x = .5 * v.w
                      , b = 16 / v.w
                      , w = new r.Vector2(b * y,b)
                      , E = new r.Vector3(1,1,0)
                      , S = new r.Vector2(1,1);
                    void 0 === s && n(),
                    f.useProgram(s),
                    d.initAttributes(),
                    d.enableAttribute(h.vertex),
                    d.enableAttribute(h.uv),
                    d.disableUnusedAttributes(),
                    f.uniform1i(u.occlusionMap, 0),
                    f.uniform1i(u.map, 1),
                    f.bindBuffer(f.ARRAY_BUFFER, o),
                    f.vertexAttribPointer(h.vertex, 2, f.FLOAT, !1, 16, 0),
                    f.vertexAttribPointer(h.uv, 2, f.FLOAT, !1, 16, 8),
                    f.bindBuffer(f.ELEMENT_ARRAY_BUFFER, a),
                    d.disable(f.CULL_FACE),
                    d.setDepthWrite(!1);
                    for (var T = 0, M = e.length; T < M; T++) {
                        b = 16 / v.w,
                        w.set(b * y, b);
                        var C = e[T];
                        if (g.set(C.matrixWorld.elements[12], C.matrixWorld.elements[13], C.matrixWorld.elements[14]),
                        g.applyMatrix4(m.matrixWorldInverse),
                        g.applyProjection(m.projectionMatrix),
                        E.copy(g),
                        S.x = E.x * _ + _,
                        S.y = E.y * x + x,
                        l || S.x > 0 && S.x < v.z && S.y > 0 && S.y < v.w) {
                            d.activeTexture(f.TEXTURE0),
                            d.bindTexture(f.TEXTURE_2D, null ),
                            d.activeTexture(f.TEXTURE1),
                            d.bindTexture(f.TEXTURE_2D, c),
                            f.copyTexImage2D(f.TEXTURE_2D, 0, f.RGB, v.x + S.x - 8, v.y + S.y - 8, 16, 16, 0),
                            f.uniform1i(u.renderType, 0),
                            f.uniform2f(u.scale, w.x, w.y),
                            f.uniform3f(u.screenPosition, E.x, E.y, E.z),
                            d.disable(f.BLEND),
                            d.enable(f.DEPTH_TEST),
                            f.drawElements(f.TRIANGLES, 6, f.UNSIGNED_SHORT, 0),
                            d.activeTexture(f.TEXTURE0),
                            d.bindTexture(f.TEXTURE_2D, p),
                            f.copyTexImage2D(f.TEXTURE_2D, 0, f.RGBA, v.x + S.x - 8, v.y + S.y - 8, 16, 16, 0),
                            f.uniform1i(u.renderType, 1),
                            d.disable(f.DEPTH_TEST),
                            d.activeTexture(f.TEXTURE1),
                            d.bindTexture(f.TEXTURE_2D, c),
                            f.drawElements(f.TRIANGLES, 6, f.UNSIGNED_SHORT, 0),
                            C.positionScreen.copy(E),
                            C.customUpdateCallback ? C.customUpdateCallback(C) : C.updateLensFlares(),
                            f.uniform1i(u.renderType, 2),
                            d.enable(f.BLEND);
                            for (var A = 0, P = C.lensFlares.length; A < P; A++) {
                                var L = C.lensFlares[A];
                                L.opacity > .001 && L.scale > .001 && (E.x = L.x,
                                E.y = L.y,
                                E.z = L.z,
                                b = L.size * L.scale / v.w,
                                w.x = b * y,
                                w.y = b,
                                f.uniform3f(u.screenPosition, E.x, E.y, E.z),
                                f.uniform2f(u.scale, w.x, w.y),
                                f.uniform1f(u.rotation, L.rotation),
                                f.uniform1f(u.opacity, L.opacity),
                                f.uniform3f(u.color, L.color.r, L.color.g, L.color.b),
                                d.setBlending(L.blending, L.blendEquation, L.blendSrc, L.blendDst),
                                t.setTexture(L.texture, 1),
                                f.drawElements(f.TRIANGLES, 6, f.UNSIGNED_SHORT, 0))
                            }
                        }
                    }
                    d.enable(f.CULL_FACE),
                    d.enable(f.DEPTH_TEST),
                    d.setDepthWrite(!0),
                    t.resetGLState()
                }
            }
        }
        ,
        r.SpritePlugin = function(t, e) {
            function n() {
                var t = new Float32Array([-.5, -.5, 0, 0, .5, -.5, 1, 0, .5, .5, 1, 1, -.5, .5, 0, 1])
                  , e = new Uint16Array([0, 1, 2, 0, 2, 3]);
                a = p.createBuffer(),
                s = p.createBuffer(),
                p.bindBuffer(p.ARRAY_BUFFER, a),
                p.bufferData(p.ARRAY_BUFFER, t, p.STATIC_DRAW),
                p.bindBuffer(p.ELEMENT_ARRAY_BUFFER, s),
                p.bufferData(p.ELEMENT_ARRAY_BUFFER, e, p.STATIC_DRAW),
                h = i(),
                u = {
                    position: p.getAttribLocation(h, "position"),
                    uv: p.getAttribLocation(h, "uv")
                },
                l = {
                    uvOffset: p.getUniformLocation(h, "uvOffset"),
                    uvScale: p.getUniformLocation(h, "uvScale"),
                    rotation: p.getUniformLocation(h, "rotation"),
                    scale: p.getUniformLocation(h, "scale"),
                    color: p.getUniformLocation(h, "color"),
                    map: p.getUniformLocation(h, "map"),
                    opacity: p.getUniformLocation(h, "opacity"),
                    modelViewMatrix: p.getUniformLocation(h, "modelViewMatrix"),
                    projectionMatrix: p.getUniformLocation(h, "projectionMatrix"),
                    fogType: p.getUniformLocation(h, "fogType"),
                    fogDensity: p.getUniformLocation(h, "fogDensity"),
                    fogNear: p.getUniformLocation(h, "fogNear"),
                    fogFar: p.getUniformLocation(h, "fogFar"),
                    fogColor: p.getUniformLocation(h, "fogColor"),
                    alphaTest: p.getUniformLocation(h, "alphaTest")
                };
                var n = document.createElement("canvas");
                n.width = 8,
                n.height = 8;
                var o = n.getContext("2d");
                o.fillStyle = "white",
                o.fillRect(0, 0, 8, 8),
                c = new r.Texture(n),
                c.needsUpdate = !0
            }
            function i() {
                var e = p.createProgram()
                  , n = p.createShader(p.VERTEX_SHADER)
                  , r = p.createShader(p.FRAGMENT_SHADER);
                return p.shaderSource(n, ["precision " + t.getPrecision() + " float;", "uniform mat4 modelViewMatrix;", "uniform mat4 projectionMatrix;", "uniform float rotation;", "uniform vec2 scale;", "uniform vec2 uvOffset;", "uniform vec2 uvScale;", "attribute vec2 position;", "attribute vec2 uv;", "varying vec2 vUV;", "void main() {", "vUV = uvOffset + uv * uvScale;", "vec2 alignedPosition = position * scale;", "vec2 rotatedPosition;", "rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;", "rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;", "vec4 finalPosition;", "finalPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );", "finalPosition.xy += rotatedPosition;", "finalPosition = projectionMatrix * finalPosition;", "gl_Position = finalPosition;", "}"].join("\n")),
                p.shaderSource(r, ["precision " + t.getPrecision() + " float;", "uniform vec3 color;", "uniform sampler2D map;", "uniform float opacity;", "uniform int fogType;", "uniform vec3 fogColor;", "uniform float fogDensity;", "uniform float fogNear;", "uniform float fogFar;", "uniform float alphaTest;", "varying vec2 vUV;", "void main() {", "vec4 texture = texture2D( map, vUV );", "if ( texture.a < alphaTest ) discard;", "gl_FragColor = vec4( color * texture.xyz, texture.a * opacity );", "if ( fogType > 0 ) {", "float depth = gl_FragCoord.z / gl_FragCoord.w;", "float fogFactor = 0.0;", "if ( fogType == 1 ) {", "fogFactor = smoothstep( fogNear, fogFar, depth );", "} else {", "const float LOG2 = 1.442695;", "fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );", "fogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );", "}", "gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );", "}", "}"].join("\n")),
                p.compileShader(n),
                p.compileShader(r),
                p.attachShader(e, n),
                p.attachShader(e, r),
                p.linkProgram(e),
                e
            }
            function o(t, e) {
                return t.renderOrder !== e.renderOrder ? t.renderOrder - e.renderOrder : t.z !== e.z ? e.z - t.z : e.id - t.id
            }
            var a, s, h, u, l, c, p = t.context, f = t.state, d = new r.Vector3, m = new r.Quaternion, v = new r.Vector3;
            this.render = function(i, g) {
                if (0 !== e.length) {
                    void 0 === h && n(),
                    p.useProgram(h),
                    f.initAttributes(),
                    f.enableAttribute(u.position),
                    f.enableAttribute(u.uv),
                    f.disableUnusedAttributes(),
                    f.disable(p.CULL_FACE),
                    f.enable(p.BLEND),
                    p.bindBuffer(p.ARRAY_BUFFER, a),
                    p.vertexAttribPointer(u.position, 2, p.FLOAT, !1, 16, 0),
                    p.vertexAttribPointer(u.uv, 2, p.FLOAT, !1, 16, 8),
                    p.bindBuffer(p.ELEMENT_ARRAY_BUFFER, s),
                    p.uniformMatrix4fv(l.projectionMatrix, !1, g.projectionMatrix.elements),
                    f.activeTexture(p.TEXTURE0),
                    p.uniform1i(l.map, 0);
                    var y = 0
                      , _ = 0
                      , x = i.fog;
                    x ? (p.uniform3f(l.fogColor, x.color.r, x.color.g, x.color.b),
                    x instanceof r.Fog ? (p.uniform1f(l.fogNear, x.near),
                    p.uniform1f(l.fogFar, x.far),
                    p.uniform1i(l.fogType, 1),
                    y = 1,
                    _ = 1) : x instanceof r.FogExp2 && (p.uniform1f(l.fogDensity, x.density),
                    p.uniform1i(l.fogType, 2),
                    y = 2,
                    _ = 2)) : (p.uniform1i(l.fogType, 0),
                    y = 0,
                    _ = 0);
                    for (var b = 0, w = e.length; b < w; b++) {
                        var E = e[b];
                        E.modelViewMatrix.multiplyMatrices(g.matrixWorldInverse, E.matrixWorld),
                        E.z = -E.modelViewMatrix.elements[14]
                    }
                    e.sort(o);
                    for (var S = [], b = 0, w = e.length; b < w; b++) {
                        var E = e[b]
                          , T = E.material;
                        p.uniform1f(l.alphaTest, T.alphaTest),
                        p.uniformMatrix4fv(l.modelViewMatrix, !1, E.modelViewMatrix.elements),
                        E.matrixWorld.decompose(d, m, v),
                        S[0] = v.x,
                        S[1] = v.y;
                        var M = 0;
                        i.fog && T.fog && (M = _),
                        y !== M && (p.uniform1i(l.fogType, M),
                        y = M),
                        null !== T.map ? (p.uniform2f(l.uvOffset, T.map.offset.x, T.map.offset.y),
                        p.uniform2f(l.uvScale, T.map.repeat.x, T.map.repeat.y)) : (p.uniform2f(l.uvOffset, 0, 0),
                        p.uniform2f(l.uvScale, 1, 1)),
                        p.uniform1f(l.opacity, T.opacity),
                        p.uniform3f(l.color, T.color.r, T.color.g, T.color.b),
                        p.uniform1f(l.rotation, T.rotation),
                        p.uniform2fv(l.scale, S),
                        f.setBlending(T.blending, T.blendEquation, T.blendSrc, T.blendDst),
                        f.setDepthTest(T.depthTest),
                        f.setDepthWrite(T.depthWrite),
                        T.map && T.map.image && T.map.image.width ? t.setTexture(T.map, 0) : t.setTexture(c, 0),
                        p.drawElements(p.TRIANGLES, 6, p.UNSIGNED_SHORT, 0)
                    }
                    f.enable(p.CULL_FACE),
                    t.resetGLState()
                }
            }
        }
        ,
        Object.defineProperties(r.Box2.prototype, {
            empty: {
                value: function() {
                    return console.warn("THREE.Box2: .empty() has been renamed to .isEmpty()."),
                    this.isEmpty()
                }
            },
            isIntersectionBox: {
                value: function(t) {
                    return console.warn("THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox()."),
                    this.intersectsBox(t)
                }
            }
        }),
        Object.defineProperties(r.Box3.prototype, {
            empty: {
                value: function() {
                    return console.warn("THREE.Box3: .empty() has been renamed to .isEmpty()."),
                    this.isEmpty()
                }
            },
            isIntersectionBox: {
                value: function(t) {
                    return console.warn("THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox()."),
                    this.intersectsBox(t)
                }
            },
            isIntersectionSphere: {
                value: function(t) {
                    return console.warn("THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere()."),
                    this.intersectsSphere(t)
                }
            }
        }),
        Object.defineProperties(r.Matrix3.prototype, {
            multiplyVector3: {
                value: function(t) {
                    return console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."),
                    t.applyMatrix3(this)
                }
            },
            multiplyVector3Array: {
                value: function(t) {
                    return console.warn("THREE.Matrix3: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead."),
                    this.applyToVector3Array(t)
                }
            }
        }),
        Object.defineProperties(r.Matrix4.prototype, {
            extractPosition: {
                value: function(t) {
                    return console.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition()."),
                    this.copyPosition(t)
                }
            },
            setRotationFromQuaternion: {
                value: function(t) {
                    return console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion()."),
                    this.makeRotationFromQuaternion(t)
                }
            },
            multiplyVector3: {
                value: function(t) {
                    return console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) or vector.applyProjection( matrix ) instead."),
                    t.applyProjection(this)
                }
            },
            multiplyVector4: {
                value: function(t) {
                    return console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."),
                    t.applyMatrix4(this)
                }
            },
            multiplyVector3Array: {
                value: function(t) {
                    return console.warn("THREE.Matrix4: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead."),
                    this.applyToVector3Array(t)
                }
            },
            rotateAxis: {
                value: function(t) {
                    console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."),
                    t.transformDirection(this)
                }
            },
            crossVector: {
                value: function(t) {
                    return console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."),
                    t.applyMatrix4(this)
                }
            },
            translate: {
                value: function(t) {
                    console.error("THREE.Matrix4: .translate() has been removed.")
                }
            },
            rotateX: {
                value: function(t) {
                    console.error("THREE.Matrix4: .rotateX() has been removed.")
                }
            },
            rotateY: {
                value: function(t) {
                    console.error("THREE.Matrix4: .rotateY() has been removed.")
                }
            },
            rotateZ: {
                value: function(t) {
                    console.error("THREE.Matrix4: .rotateZ() has been removed.")
                }
            },
            rotateByAxis: {
                value: function(t, e) {
                    console.error("THREE.Matrix4: .rotateByAxis() has been removed.")
                }
            }
        }),
        Object.defineProperties(r.Plane.prototype, {
            isIntersectionLine: {
                value: function(t) {
                    return console.warn("THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine()."),
                    this.intersectsLine(t)
                }
            }
        }),
        Object.defineProperties(r.Quaternion.prototype, {
            multiplyVector3: {
                value: function(t) {
                    return console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."),
                    t.applyQuaternion(this)
                }
            }
        }),
        Object.defineProperties(r.Ray.prototype, {
            isIntersectionBox: {
                value: function(t) {
                    return console.warn("THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox()."),
                    this.intersectsBox(t)
                }
            },
            isIntersectionPlane: {
                value: function(t) {
                    return console.warn("THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane()."),
                    this.intersectsPlane(t)
                }
            },
            isIntersectionSphere: {
                value: function(t) {
                    return console.warn("THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere()."),
                    this.intersectsSphere(t)
                }
            }
        }),
        Object.defineProperties(r.Vector3.prototype, {
            setEulerFromRotationMatrix: {
                value: function() {
                    console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.")
                }
            },
            setEulerFromQuaternion: {
                value: function() {
                    console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.")
                }
            },
            getPositionFromMatrix: {
                value: function(t) {
                    return console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition()."),
                    this.setFromMatrixPosition(t)
                }
            },
            getScaleFromMatrix: {
                value: function(t) {
                    return console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale()."),
                    this.setFromMatrixScale(t)
                }
            },
            getColumnFromMatrix: {
                value: function(t, e) {
                    return console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn()."),
                    this.setFromMatrixColumn(t, e)
                }
            }
        }),
        r.Face4 = function(t, e, n, i, o, a, s) {
            return console.warn("THREE.Face4 has been removed. A THREE.Face3 will be created instead."),
            new r.Face3(t,e,n,o,a,s)
        }
        ,
        Object.defineProperties(r.Object3D.prototype, {
            eulerOrder: {
                get: function() {
                    return console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),
                    this.rotation.order
                },
                set: function(t) {
                    console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),
                    this.rotation.order = t
                }
            },
            getChildByName: {
                value: function(t) {
                    return console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName()."),
                    this.getObjectByName(t)
                }
            },
            renderDepth: {
                set: function(t) {
                    console.warn("THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.")
                }
            },
            translate: {
                value: function(t, e) {
                    return console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead."),
                    this.translateOnAxis(e, t)
                }
            },
            useQuaternion: {
                get: function() {
                    console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")
                },
                set: function(t) {
                    console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")
                }
            }
        }),
        Object.defineProperties(r, {
            PointCloud: {
                value: function(t, e) {
                    return console.warn("THREE.PointCloud has been renamed to THREE.Points."),
                    new r.Points(t,e)
                }
            },
            ParticleSystem: {
                value: function(t, e) {
                    return console.warn("THREE.ParticleSystem has been renamed to THREE.Points."),
                    new r.Points(t,e)
                }
            }
        }),
        Object.defineProperties(r.Light.prototype, {
            onlyShadow: {
                set: function(t) {
                    console.warn("THREE.Light: .onlyShadow has been removed.")
                }
            },
            shadowCameraFov: {
                set: function(t) {
                    console.warn("THREE.Light: .shadowCameraFov is now .shadow.camera.fov."),
                    this.shadow.camera.fov = t
                }
            },
            shadowCameraLeft: {
                set: function(t) {
                    console.warn("THREE.Light: .shadowCameraLeft is now .shadow.camera.left."),
                    this.shadow.camera.left = t
                }
            },
            shadowCameraRight: {
                set: function(t) {
                    console.warn("THREE.Light: .shadowCameraRight is now .shadow.camera.right."),
                    this.shadow.camera.right = t
                }
            },
            shadowCameraTop: {
                set: function(t) {
                    console.warn("THREE.Light: .shadowCameraTop is now .shadow.camera.top."),
                    this.shadow.camera.top = t
                }
            },
            shadowCameraBottom: {
                set: function(t) {
                    console.warn("THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom."),
                    this.shadow.camera.bottom = t
                }
            },
            shadowCameraNear: {
                set: function(t) {
                    console.warn("THREE.Light: .shadowCameraNear is now .shadow.camera.near."),
                    this.shadow.camera.near = t
                }
            },
            shadowCameraFar: {
                set: function(t) {
                    console.warn("THREE.Light: .shadowCameraFar is now .shadow.camera.far."),
                    this.shadow.camera.far = t
                }
            },
            shadowCameraVisible: {
                set: function(t) {
                    console.warn("THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.")
                }
            },
            shadowBias: {
                set: function(t) {
                    console.warn("THREE.Light: .shadowBias is now .shadow.bias."),
                    this.shadow.bias = t
                }
            },
            shadowDarkness: {
                set: function(t) {
                    console.warn("THREE.Light: .shadowDarkness has been removed.")
                }
            },
            shadowMapWidth: {
                set: function(t) {
                    console.warn("THREE.Light: .shadowMapWidth is now .shadow.mapSize.width."),
                    this.shadow.mapSize.width = t
                }
            },
            shadowMapHeight: {
                set: function(t) {
                    console.warn("THREE.Light: .shadowMapHeight is now .shadow.mapSize.height."),
                    this.shadow.mapSize.height = t
                }
            }
        }),
        Object.defineProperties(r.BufferAttribute.prototype, {
            length: {
                get: function() {
                    return console.warn("THREE.BufferAttribute: .length has been deprecated. Please use .count."),
                    this.array.length
                }
            }
        }),
        Object.defineProperties(r.BufferGeometry.prototype, {
            drawcalls: {
                get: function() {
                    return console.error("THREE.BufferGeometry: .drawcalls has been renamed to .groups."),
                    this.groups
                }
            },
            offsets: {
                get: function() {
                    return console.warn("THREE.BufferGeometry: .offsets has been renamed to .groups."),
                    this.groups
                }
            },
            addIndex: {
                value: function(t) {
                    console.warn("THREE.BufferGeometry: .addIndex() has been renamed to .setIndex()."),
                    this.setIndex(t)
                }
            },
            addDrawCall: {
                value: function(t, e, n) {
                    void 0 !== n && console.warn("THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset."),
                    console.warn("THREE.BufferGeometry: .addDrawCall() is now .addGroup()."),
                    this.addGroup(t, e)
                }
            },
            clearDrawCalls: {
                value: function() {
                    console.warn("THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups()."),
                    this.clearGroups()
                }
            },
            computeTangents: {
                value: function() {
                    console.warn("THREE.BufferGeometry: .computeTangents() has been removed.")
                }
            },
            computeOffsets: {
                value: function() {
                    console.warn("THREE.BufferGeometry: .computeOffsets() has been removed.")
                }
            }
        }),
        Object.defineProperties(r.Material.prototype, {
            wrapAround: {
                get: function() {
                    console.warn("THREE." + this.type + ": .wrapAround has been removed.")
                },
                set: function(t) {
                    console.warn("THREE." + this.type + ": .wrapAround has been removed.")
                }
            },
            wrapRGB: {
                get: function() {
                    return console.warn("THREE." + this.type + ": .wrapRGB has been removed."),
                    new r.Color
                }
            }
        }),
        Object.defineProperties(r, {
            PointCloudMaterial: {
                value: function(t) {
                    return console.warn("THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial."),
                    new r.PointsMaterial(t)
                }
            },
            ParticleBasicMaterial: {
                value: function(t) {
                    return console.warn("THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial."),
                    new r.PointsMaterial(t)
                }
            },
            ParticleSystemMaterial: {
                value: function(t) {
                    return console.warn("THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial."),
                    new r.PointsMaterial(t)
                }
            }
        }),
        Object.defineProperties(r.MeshPhongMaterial.prototype, {
            metal: {
                get: function() {
                    return console.warn("THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead."),
                    !1
                },
                set: function(t) {
                    console.warn("THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead")
                }
            }
        }),
        Object.defineProperties(r.ShaderMaterial.prototype, {
            derivatives: {
                get: function() {
                    return console.warn("THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),
                    this.extensions.derivatives
                },
                set: function(t) {
                    console.warn("THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),
                    this.extensions.derivatives = t
                }
            }
        }),
        Object.defineProperties(r.WebGLRenderer.prototype, {
            supportsFloatTextures: {
                value: function() {
                    return console.warn("THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' )."),
                    this.extensions.get("OES_texture_float")
                }
            },
            supportsHalfFloatTextures: {
                value: function() {
                    return console.warn("THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' )."),
                    this.extensions.get("OES_texture_half_float")
                }
            },
            supportsStandardDerivatives: {
                value: function() {
                    return console.warn("THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' )."),
                    this.extensions.get("OES_standard_derivatives")
                }
            },
            supportsCompressedTextureS3TC: {
                value: function() {
                    return console.warn("THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' )."),
                    this.extensions.get("WEBGL_compressed_texture_s3tc")
                }
            },
            supportsCompressedTexturePVRTC: {
                value: function() {
                    return console.warn("THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' )."),
                    this.extensions.get("WEBGL_compressed_texture_pvrtc")
                }
            },
            supportsBlendMinMax: {
                value: function() {
                    return console.warn("THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' )."),
                    this.extensions.get("EXT_blend_minmax")
                }
            },
            supportsVertexTextures: {
                value: function() {
                    return this.capabilities.vertexTextures
                }
            },
            supportsInstancedArrays: {
                value: function() {
                    return console.warn("THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' )."),
                    this.extensions.get("ANGLE_instanced_arrays")
                }
            },
            enableScissorTest: {
                value: function(t) {
                    console.warn("THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest()."),
                    this.setScissorTest(t)
                }
            },
            initMaterial: {
                value: function() {
                    console.warn("THREE.WebGLRenderer: .initMaterial() has been removed.")
                }
            },
            addPrePlugin: {
                value: function() {
                    console.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.")
                }
            },
            addPostPlugin: {
                value: function() {
                    console.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.")
                }
            },
            updateShadowMap: {
                value: function() {
                    console.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.")
                }
            },
            shadowMapEnabled: {
                get: function() {
                    return this.shadowMap.enabled
                },
                set: function(t) {
                    console.warn("THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled."),
                    this.shadowMap.enabled = t
                }
            },
            shadowMapType: {
                get: function() {
                    return this.shadowMap.type
                },
                set: function(t) {
                    console.warn("THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type."),
                    this.shadowMap.type = t
                }
            },
            shadowMapCullFace: {
                get: function() {
                    return this.shadowMap.cullFace
                },
                set: function(t) {
                    console.warn("THREE.WebGLRenderer: .shadowMapCullFace is now .shadowMap.cullFace."),
                    this.shadowMap.cullFace = t
                }
            }
        }),
        Object.defineProperties(r.WebGLRenderTarget.prototype, {
            wrapS: {
                get: function() {
                    return console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),
                    this.texture.wrapS
                },
                set: function(t) {
                    console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),
                    this.texture.wrapS = t
                }
            },
            wrapT: {
                get: function() {
                    return console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),
                    this.texture.wrapT
                },
                set: function(t) {
                    console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),
                    this.texture.wrapT = t
                }
            },
            magFilter: {
                get: function() {
                    return console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),
                    this.texture.magFilter
                },
                set: function(t) {
                    console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),
                    this.texture.magFilter = t
                }
            },
            minFilter: {
                get: function() {
                    return console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),
                    this.texture.minFilter
                },
                set: function(t) {
                    console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),
                    this.texture.minFilter = t
                }
            },
            anisotropy: {
                get: function() {
                    return console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),
                    this.texture.anisotropy
                },
                set: function(t) {
                    console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),
                    this.texture.anisotropy = t
                }
            },
            offset: {
                get: function() {
                    return console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),
                    this.texture.offset
                },
                set: function(t) {
                    console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),
                    this.texture.offset = t
                }
            },
            repeat: {
                get: function() {
                    return console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),
                    this.texture.repeat
                },
                set: function(t) {
                    console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),
                    this.texture.repeat = t
                }
            },
            format: {
                get: function() {
                    return console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),
                    this.texture.format
                },
                set: function(t) {
                    console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),
                    this.texture.format = t
                }
            },
            type: {
                get: function() {
                    return console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),
                    this.texture.type
                },
                set: function(t) {
                    console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),
                    this.texture.type = t
                }
            },
            generateMipmaps: {
                get: function() {
                    return console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),
                    this.texture.generateMipmaps
                },
                set: function(t) {
                    console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),
                    this.texture.generateMipmaps = t
                }
            }
        }),
        r.GeometryUtils = {
            merge: function(t, e, n) {
                console.warn("THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead.");
                var i;
                e instanceof r.Mesh && (e.matrixAutoUpdate && e.updateMatrix(),
                i = e.matrix,
                e = e.geometry),
                t.merge(e, i, n)
            },
            center: function(t) {
                return console.warn("THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead."),
                t.center()
            }
        },
        r.ImageUtils = {
            crossOrigin: void 0,
            loadTexture: function(t, e, n, i) {
                console.warn("THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.");
                var o = new r.TextureLoader;
                o.setCrossOrigin(this.crossOrigin);
                var a = o.load(t, n, void 0, i);
                return e && (a.mapping = e),
                a
            },
            loadTextureCube: function(t, e, n, i) {
                console.warn("THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.");
                var o = new r.CubeTextureLoader;
                o.setCrossOrigin(this.crossOrigin);
                var a = o.load(t, n, void 0, i);
                return e && (a.mapping = e),
                a
            },
            loadCompressedTexture: function() {
                console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.")
            },
            loadCompressedTextureCube: function() {
                console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.")
            }
        },
        r.Projector = function() {
            console.error("THREE.Projector has been moved to /examples/js/renderers/Projector.js."),
            this.projectVector = function(t, e) {
                console.warn("THREE.Projector: .projectVector() is now vector.project()."),
                t.project(e)
            }
            ,
            this.unprojectVector = function(t, e) {
                console.warn("THREE.Projector: .unprojectVector() is now vector.unproject()."),
                t.unproject(e)
            }
            ,
            this.pickingRay = function(t, e) {
                console.error("THREE.Projector: .pickingRay() is now raycaster.setFromCamera().")
            }
        }
        ,
        r.CanvasRenderer = function() {
            console.error("THREE.CanvasRenderer has been moved to /examples/js/renderers/CanvasRenderer.js"),
            this.domElement = document.createElement("canvas"),
            this.clear = function() {}
            ,
            this.render = function() {}
            ,
            this.setClearColor = function() {}
            ,
            this.setSize = function() {}
        }
        ,
        r.MeshFaceMaterial = r.MultiMaterial,
        r.CurveUtils = {
            tangentQuadraticBezier: function(t, e, n, r) {
                return 2 * (1 - t) * (n - e) + 2 * t * (r - n)
            },
            tangentCubicBezier: function(t, e, n, r, i) {
                return -3 * e * (1 - t) * (1 - t) + 3 * n * (1 - t) * (1 - t) - 6 * t * n * (1 - t) + 6 * t * r * (1 - t) - 3 * t * t * r + 3 * t * t * i
            },
            tangentSpline: function(t, e, n, r, i) {
                var o = 6 * t * t - 6 * t
                  , a = 3 * t * t - 4 * t + 1
                  , s = -6 * t * t + 6 * t
                  , h = 3 * t * t - 2 * t;
                return o + a + s + h
            },
            interpolate: function(t, e, n, r, i) {
                var o = .5 * (n - t)
                  , a = .5 * (r - e)
                  , s = i * i
                  , h = i * s;
                return (2 * e - 2 * n + o + a) * h + (-3 * e + 3 * n - 2 * o - a) * s + o * i + e
            }
        },
        r.SceneUtils = {
            createMultiMaterialObject: function(t, e) {
                for (var n = new r.Group, i = 0, o = e.length; i < o; i++)
                    n.add(new r.Mesh(t,e[i]));
                return n
            },
            detach: function(t, e, n) {
                t.applyMatrix(e.matrixWorld),
                e.remove(t),
                n.add(t)
            },
            attach: function(t, e, n) {
                var i = new r.Matrix4;
                i.getInverse(n.matrixWorld),
                t.applyMatrix(i),
                e.remove(t),
                n.add(t)
            }
        },
        r.ShapeUtils = {
            area: function(t) {
                for (var e = t.length, n = 0, r = e - 1, i = 0; i < e; r = i++)
                    n += t[r].x * t[i].y - t[i].x * t[r].y;
                return .5 * n
            },
            triangulate: function() {
                function t(t, e, n, r, i, o) {
                    var a, s, h, u, l, c, p, f, d;
                    if (s = t[o[e]].x,
                    h = t[o[e]].y,
                    u = t[o[n]].x,
                    l = t[o[n]].y,
                    c = t[o[r]].x,
                    p = t[o[r]].y,
                    Number.EPSILON > (u - s) * (p - h) - (l - h) * (c - s))
                        return !1;
                    var m, v, g, y, _, x, b, w, E, S, T, M, C, A, P;
                    for (m = c - u,
                    v = p - l,
                    g = s - c,
                    y = h - p,
                    _ = u - s,
                    x = l - h,
                    a = 0; a < i; a++)
                        if (f = t[o[a]].x,
                        d = t[o[a]].y,
                        !(f === s && d === h || f === u && d === l || f === c && d === p) && (b = f - s,
                        w = d - h,
                        E = f - u,
                        S = d - l,
                        T = f - c,
                        M = d - p,
                        P = m * S - v * E,
                        C = _ * w - x * b,
                        A = g * M - y * T,
                        P >= -Number.EPSILON && A >= -Number.EPSILON && C >= -Number.EPSILON))
                            return !1;
                    return !0
                }
                return function(e, n) {
                    var i = e.length;
                    if (i < 3)
                        return null ;
                    var o, a, s, h = [], u = [], l = [];
                    if (r.ShapeUtils.area(e) > 0)
                        for (a = 0; a < i; a++)
                            u[a] = a;
                    else
                        for (a = 0; a < i; a++)
                            u[a] = i - 1 - a;
                    var c = i
                      , p = 2 * c;
                    for (a = c - 1; c > 2; ) {
                        if (p-- <= 0)
                            return console.warn("THREE.ShapeUtils: Unable to triangulate polygon! in triangulate()"),
                            n ? l : h;
                        if (o = a,
                        c <= o && (o = 0),
                        a = o + 1,
                        c <= a && (a = 0),
                        s = a + 1,
                        c <= s && (s = 0),
                        t(e, o, a, s, c, u)) {
                            var f, d, m, v, g;
                            for (f = u[o],
                            d = u[a],
                            m = u[s],
                            h.push([e[f], e[d], e[m]]),
                            l.push([u[o], u[a], u[s]]),
                            v = a,
                            g = a + 1; g < c; v++,
                            g++)
                                u[v] = u[g];
                            c--,
                            p = 2 * c
                        }
                    }
                    return n ? l : h
                }
            }(),
            triangulateShape: function(t, e) {
                function n(t, e, n) {
                    return t.x !== e.x ? t.x < e.x ? t.x <= n.x && n.x <= e.x : e.x <= n.x && n.x <= t.x : t.y < e.y ? t.y <= n.y && n.y <= e.y : e.y <= n.y && n.y <= t.y
                }
                function i(t, e, r, i, o) {
                    var a = e.x - t.x
                      , s = e.y - t.y
                      , h = i.x - r.x
                      , u = i.y - r.y
                      , l = t.x - r.x
                      , c = t.y - r.y
                      , p = s * h - a * u
                      , f = s * l - a * c;
                    if (Math.abs(p) > Number.EPSILON) {
                        var d;
                        if (p > 0) {
                            if (f < 0 || f > p)
                                return [];
                            if (d = u * l - h * c,
                            d < 0 || d > p)
                                return []
                        } else {
                            if (f > 0 || f < p)
                                return [];
                            if (d = u * l - h * c,
                            d > 0 || d < p)
                                return []
                        }
                        if (0 === d)
                            return !o || 0 !== f && f !== p ? [t] : [];
                        if (d === p)
                            return !o || 0 !== f && f !== p ? [e] : [];
                        if (0 === f)
                            return [r];
                        if (f === p)
                            return [i];
                        var m = d / p;
                        return [{
                            x: t.x + m * a,
                            y: t.y + m * s
                        }]
                    }
                    if (0 !== f || u * l !== h * c)
                        return [];
                    var v = 0 === a && 0 === s
                      , g = 0 === h && 0 === u;
                    if (v && g)
                        return t.x !== r.x || t.y !== r.y ? [] : [t];
                    if (v)
                        return n(r, i, t) ? [t] : [];
                    if (g)
                        return n(t, e, r) ? [r] : [];
                    var y, _, x, b, w, E, S, T;
                    return 0 !== a ? (t.x < e.x ? (y = t,
                    x = t.x,
                    _ = e,
                    b = e.x) : (y = e,
                    x = e.x,
                    _ = t,
                    b = t.x),
                    r.x < i.x ? (w = r,
                    S = r.x,
                    E = i,
                    T = i.x) : (w = i,
                    S = i.x,
                    E = r,
                    T = r.x)) : (t.y < e.y ? (y = t,
                    x = t.y,
                    _ = e,
                    b = e.y) : (y = e,
                    x = e.y,
                    _ = t,
                    b = t.y),
                    r.y < i.y ? (w = r,
                    S = r.y,
                    E = i,
                    T = i.y) : (w = i,
                    S = i.y,
                    E = r,
                    T = r.y)),
                    x <= S ? b < S ? [] : b === S ? o ? [] : [w] : b <= T ? [w, _] : [w, E] : x > T ? [] : x === T ? o ? [] : [y] : b <= T ? [y, _] : [y, E]
                }
                function o(t, e, n, r) {
                    var i = e.x - t.x
                      , o = e.y - t.y
                      , a = n.x - t.x
                      , s = n.y - t.y
                      , h = r.x - t.x
                      , u = r.y - t.y
                      , l = i * s - o * a
                      , c = i * u - o * h;
                    if (Math.abs(l) > Number.EPSILON) {
                        var p = h * s - u * a;
                        return l > 0 ? c >= 0 && p >= 0 : c >= 0 || p >= 0
                    }
                    return c > 0
                }
                function a(t, e) {
                    function n(t, e) {
                        var n = y.length - 1
                          , r = t - 1;
                        r < 0 && (r = n);
                        var i = t + 1;
                        i > n && (i = 0);
                        var a = o(y[t], y[r], y[i], s[e]);
                        if (!a)
                            return !1;
                        var h = s.length - 1
                          , u = e - 1;
                        u < 0 && (u = h);
                        var l = e + 1;
                        return l > h && (l = 0),
                        a = o(s[e], s[u], s[l], y[t]),
                        !!a
                    }
                    function r(t, e) {
                        var n, r, o;
                        for (n = 0; n < y.length; n++)
                            if (r = n + 1,
                            r %= y.length,
                            o = i(t, e, y[n], y[r], !0),
                            o.length > 0)
                                return !0;
                        return !1
                    }
                    function a(t, n) {
                        var r, o, a, s, h;
                        for (r = 0; r < _.length; r++)
                            for (o = e[_[r]],
                            a = 0; a < o.length; a++)
                                if (s = a + 1,
                                s %= o.length,
                                h = i(t, n, o[a], o[s], !0),
                                h.length > 0)
                                    return !0;
                        return !1
                    }
                    for (var s, h, u, l, c, p, f, d, m, v, g, y = t.concat(), _ = [], x = [], b = 0, w = e.length; b < w; b++)
                        _.push(b);
                    for (var E = 0, S = 2 * _.length; _.length > 0; ) {
                        if (S--,
                        S < 0) {
                            console.log("Infinite Loop! Holes left:" + _.length + ", Probably Hole outside Shape!");
                            break
                        }
                        for (u = E; u < y.length; u++) {
                            l = y[u],
                            h = -1;
                            for (var b = 0; b < _.length; b++)
                                if (p = _[b],
                                f = l.x + ":" + l.y + ":" + p,
                                void 0 === x[f]) {
                                    s = e[p];
                                    for (var T = 0; T < s.length; T++)
                                        if (c = s[T],
                                        n(u, T) && !r(l, c) && !a(l, c)) {
                                            h = T,
                                            _.splice(b, 1),
                                            d = y.slice(0, u + 1),
                                            m = y.slice(u),
                                            v = s.slice(h),
                                            g = s.slice(0, h + 1),
                                            y = d.concat(v).concat(g).concat(m),
                                            E = u;
                                            break
                                        }
                                    if (h >= 0)
                                        break;
                                    x[f] = !0
                                }
                            if (h >= 0)
                                break
                        }
                    }
                    return y
                }
                for (var s, h, u, l, c, p, f = {}, d = t.concat(), m = 0, v = e.length; m < v; m++)
                    Array.prototype.push.apply(d, e[m]);
                for (s = 0,
                h = d.length; s < h; s++)
                    c = d[s].x + ":" + d[s].y,
                    void 0 !== f[c] && console.warn("THREE.Shape: Duplicate point", c),
                    f[c] = s;
                var g = a(t, e)
                  , y = r.ShapeUtils.triangulate(g, !1);
                for (s = 0,
                h = y.length; s < h; s++)
                    for (l = y[s],
                    u = 0; u < 3; u++)
                        c = l[u].x + ":" + l[u].y,
                        p = f[c],
                        void 0 !== p && (l[u] = p);
                return y.concat()
            },
            isClockWise: function(t) {
                return r.ShapeUtils.area(t) < 0
            },
            b2: function() {
                function t(t, e) {
                    var n = 1 - t;
                    return n * n * e
                }
                function e(t, e) {
                    return 2 * (1 - t) * t * e
                }
                function n(t, e) {
                    return t * t * e
                }
                return function(r, i, o, a) {
                    return t(r, i) + e(r, o) + n(r, a)
                }
            }(),
            b3: function() {
                function t(t, e) {
                    var n = 1 - t;
                    return n * n * n * e
                }
                function e(t, e) {
                    var n = 1 - t;
                    return 3 * n * n * t * e
                }
                function n(t, e) {
                    var n = 1 - t;
                    return 3 * n * t * t * e
                }
                function r(t, e) {
                    return t * t * t * e
                }
                return function(i, o, a, s, h) {
                    return t(i, o) + e(i, a) + n(i, s) + r(i, h)
                }
            }()
        },
        r.Curve = function() {}
        ,
        r.Curve.prototype = {
            constructor: r.Curve,
            getPoint: function(t) {
                return console.warn("THREE.Curve: Warning, getPoint() not implemented!"),
                null
            },
            getPointAt: function(t) {
                var e = this.getUtoTmapping(t);
                return this.getPoint(e)
            },
            getPoints: function(t) {
                t || (t = 5);
                var e, n = [];
                for (e = 0; e <= t; e++)
                    n.push(this.getPoint(e / t));
                return n
            },
            getSpacedPoints: function(t) {
                t || (t = 5);
                var e, n = [];
                for (e = 0; e <= t; e++)
                    n.push(this.getPointAt(e / t));
                return n
            },
            getLength: function() {
                var t = this.getLengths();
                return t[t.length - 1]
            },
            getLengths: function(t) {
                if (t || (t = this.__arcLengthDivisions ? this.__arcLengthDivisions : 200),
                this.cacheArcLengths && this.cacheArcLengths.length === t + 1 && !this.needsUpdate)
                    return this.cacheArcLengths;
                this.needsUpdate = !1;
                var e, n, r = [], i = this.getPoint(0), o = 0;
                for (r.push(0),
                n = 1; n <= t; n++)
                    e = this.getPoint(n / t),
                    o += e.distanceTo(i),
                    r.push(o),
                    i = e;
                return this.cacheArcLengths = r,
                r
            },
            updateArcLengths: function() {
                this.needsUpdate = !0,
                this.getLengths()
            },
            getUtoTmapping: function(t, e) {
                var n, r = this.getLengths(), i = 0, o = r.length;
                n = e ? e : t * r[o - 1];
                for (var a, s = 0, h = o - 1; s <= h; )
                    if (i = Math.floor(s + (h - s) / 2),
                    a = r[i] - n,
                    a < 0)
                        s = i + 1;
                    else {
                        if (!(a > 0)) {
                            h = i;
                            break
                        }
                        h = i - 1
                    }
                if (i = h,
                r[i] === n) {
                    var u = i / (o - 1);
                    return u
                }
                var l = r[i]
                  , c = r[i + 1]
                  , p = c - l
                  , f = (n - l) / p
                  , u = (i + f) / (o - 1);
                return u
            },
            getTangent: function(t) {
                var e = 1e-4
                  , n = t - e
                  , r = t + e;
                n < 0 && (n = 0),
                r > 1 && (r = 1);
                var i = this.getPoint(n)
                  , o = this.getPoint(r)
                  , a = o.clone().sub(i);
                return a.normalize()
            },
            getTangentAt: function(t) {
                var e = this.getUtoTmapping(t);
                return this.getTangent(e)
            }
        },
        r.Curve.create = function(t, e) {
            return t.prototype = Object.create(r.Curve.prototype),
            t.prototype.constructor = t,
            t.prototype.getPoint = e,
            t
        }
        ,
        r.CurvePath = function() {
            this.curves = [],
            this.autoClose = !1
        }
        ,
        r.CurvePath.prototype = Object.create(r.Curve.prototype),
        r.CurvePath.prototype.constructor = r.CurvePath,
        r.CurvePath.prototype.add = function(t) {
            this.curves.push(t)
        }
        ,
        r.CurvePath.prototype.closePath = function() {
            var t = this.curves[0].getPoint(0)
              , e = this.curves[this.curves.length - 1].getPoint(1);
            t.equals(e) || this.curves.push(new r.LineCurve(e,t))
        }
        ,
        r.CurvePath.prototype.getPoint = function(t) {
            for (var e = t * this.getLength(), n = this.getCurveLengths(), r = 0; r < n.length; ) {
                if (n[r] >= e) {
                    var i = n[r] - e
                      , o = this.curves[r]
                      , a = 1 - i / o.getLength();
                    return o.getPointAt(a)
                }
                r++
            }
            return null
        }
        ,
        r.CurvePath.prototype.getLength = function() {
            var t = this.getCurveLengths();
            return t[t.length - 1]
        }
        ,
        r.CurvePath.prototype.getCurveLengths = function() {
            if (this.cacheLengths && this.cacheLengths.length === this.curves.length)
                return this.cacheLengths;
            for (var t = [], e = 0, n = 0, r = this.curves.length; n < r; n++)
                e += this.curves[n].getLength(),
                t.push(e);
            return this.cacheLengths = t,
            t
        }
        ,
        r.CurvePath.prototype.createPointsGeometry = function(t) {
            var e = this.getPoints(t);
            return this.createGeometry(e)
        }
        ,
        r.CurvePath.prototype.createSpacedPointsGeometry = function(t) {
            var e = this.getSpacedPoints(t);
            return this.createGeometry(e)
        }
        ,
        r.CurvePath.prototype.createGeometry = function(t) {
            for (var e = new r.Geometry, n = 0, i = t.length; n < i; n++) {
                var o = t[n];
                e.vertices.push(new r.Vector3(o.x,o.y,o.z || 0))
            }
            return e
        }
        ,
        r.Font = function(t) {
            this.data = t
        }
        ,
        r.Font.prototype = {
            constructor: r.Font,
            generateShapes: function(t, e, n) {
                function i(t) {
                    for (var n = String(t).split(""), r = e / a.resolution, i = 0, s = [], h = 0; h < n.length; h++) {
                        var u = o(n[h], r, i);
                        i += u.offset,
                        s.push(u.path)
                    }
                    return s
                }
                function o(t, e, i) {
                    var o = a.glyphs[t] || a.glyphs["?"];
                    if (o) {
                        var s, h, u, l, c, p, f, d, m, v, g, y = new r.Path, _ = [], x = r.ShapeUtils.b2, b = r.ShapeUtils.b3;
                        if (o.o)
                            for (var w = o._cachedOutline || (o._cachedOutline = o.o.split(" ")), E = 0, S = w.length; E < S; ) {
                                var T = w[E++];
                                switch (T) {
                                case "m":
                                    s = w[E++] * e + i,
                                    h = w[E++] * e,
                                    y.moveTo(s, h);
                                    break;
                                case "l":
                                    s = w[E++] * e + i,
                                    h = w[E++] * e,
                                    y.lineTo(s, h);
                                    break;
                                case "q":
                                    if (u = w[E++] * e + i,
                                    l = w[E++] * e,
                                    f = w[E++] * e + i,
                                    d = w[E++] * e,
                                    y.quadraticCurveTo(f, d, u, l),
                                    g = _[_.length - 1]) {
                                        c = g.x,
                                        p = g.y;
                                        for (var M = 1; M <= n; M++) {
                                            var C = M / n;
                                            x(C, c, f, u),
                                            x(C, p, d, l)
                                        }
                                    }
                                    break;
                                case "b":
                                    if (u = w[E++] * e + i,
                                    l = w[E++] * e,
                                    f = w[E++] * e + i,
                                    d = w[E++] * e,
                                    m = w[E++] * e + i,
                                    v = w[E++] * e,
                                    y.bezierCurveTo(f, d, m, v, u, l),
                                    g = _[_.length - 1]) {
                                        c = g.x,
                                        p = g.y;
                                        for (var M = 1; M <= n; M++) {
                                            var C = M / n;
                                            b(C, c, f, m, u),
                                            b(C, p, d, v, l)
                                        }
                                    }
                                }
                            }
                        return {
                            offset: o.ha * e,
                            path: y
                        }
                    }
                }
                void 0 === e && (e = 100),
                void 0 === n && (n = 4);
                for (var a = this.data, s = i(t), h = [], u = 0, l = s.length; u < l; u++)
                    Array.prototype.push.apply(h, s[u].toShapes());
                return h
            }
        },
        r.Path = function(t) {
            r.CurvePath.call(this),
            this.actions = [],
            t && this.fromPoints(t)
        }
        ,
        r.Path.prototype = Object.create(r.CurvePath.prototype),
        r.Path.prototype.constructor = r.Path,
        r.Path.prototype.fromPoints = function(t) {
            this.moveTo(t[0].x, t[0].y);
            for (var e = 1, n = t.length; e < n; e++)
                this.lineTo(t[e].x, t[e].y)
        }
        ,
        r.Path.prototype.moveTo = function(t, e) {
            this.actions.push({
                action: "moveTo",
                args: [t, e]
            })
        }
        ,
        r.Path.prototype.lineTo = function(t, e) {
            var n = this.actions[this.actions.length - 1].args
              , i = n[n.length - 2]
              , o = n[n.length - 1]
              , a = new r.LineCurve(new r.Vector2(i,o),new r.Vector2(t,e));
            this.curves.push(a),
            this.actions.push({
                action: "lineTo",
                args: [t, e]
            })
        }
        ,
        r.Path.prototype.quadraticCurveTo = function(t, e, n, i) {
            var o = this.actions[this.actions.length - 1].args
              , a = o[o.length - 2]
              , s = o[o.length - 1]
              , h = new r.QuadraticBezierCurve(new r.Vector2(a,s),new r.Vector2(t,e),new r.Vector2(n,i));
            this.curves.push(h),
            this.actions.push({
                action: "quadraticCurveTo",
                args: [t, e, n, i]
            })
        }
        ,
        r.Path.prototype.bezierCurveTo = function(t, e, n, i, o, a) {
            var s = this.actions[this.actions.length - 1].args
              , h = s[s.length - 2]
              , u = s[s.length - 1]
              , l = new r.CubicBezierCurve(new r.Vector2(h,u),new r.Vector2(t,e),new r.Vector2(n,i),new r.Vector2(o,a));
            this.curves.push(l),
            this.actions.push({
                action: "bezierCurveTo",
                args: [t, e, n, i, o, a]
            })
        }
        ,
        r.Path.prototype.splineThru = function(t) {
            var e = Array.prototype.slice.call(arguments)
              , n = this.actions[this.actions.length - 1].args
              , i = n[n.length - 2]
              , o = n[n.length - 1]
              , a = [new r.Vector2(i,o)];
            Array.prototype.push.apply(a, t);
            var s = new r.SplineCurve(a);
            this.curves.push(s),
            this.actions.push({
                action: "splineThru",
                args: e
            })
        }
        ,
        r.Path.prototype.arc = function(t, e, n, r, i, o) {
            var a = this.actions[this.actions.length - 1].args
              , s = a[a.length - 2]
              , h = a[a.length - 1];
            this.absarc(t + s, e + h, n, r, i, o)
        }
        ,
        r.Path.prototype.absarc = function(t, e, n, r, i, o) {
            this.absellipse(t, e, n, n, r, i, o)
        }
        ,
        r.Path.prototype.ellipse = function(t, e, n, r, i, o, a, s) {
            var h = this.actions[this.actions.length - 1].args
              , u = h[h.length - 2]
              , l = h[h.length - 1];
            this.absellipse(t + u, e + l, n, r, i, o, a, s)
        }
        ,
        r.Path.prototype.absellipse = function(t, e, n, i, o, a, s, h) {
            var u = [t, e, n, i, o, a, s, h || 0]
              , l = new r.EllipseCurve(t,e,n,i,o,a,s,h);
            this.curves.push(l);
            var c = l.getPoint(1);
            u.push(c.x),
            u.push(c.y),
            this.actions.push({
                action: "ellipse",
                args: u
            })
        }
        ,
        r.Path.prototype.getSpacedPoints = function(t) {
            t || (t = 40);
            for (var e = [], n = 0; n < t; n++)
                e.push(this.getPoint(n / t));
            return this.autoClose && e.push(e[0]),
            e
        }
        ,
        r.Path.prototype.getPoints = function(t) {
            t = t || 12;
            for (var e, n, i, o, a, s, h, u, l, c, p, f = r.ShapeUtils.b2, d = r.ShapeUtils.b3, m = [], v = 0, g = this.actions.length; v < g; v++) {
                var y = this.actions[v]
                  , _ = y.action
                  , x = y.args;
                switch (_) {
                case "moveTo":
                    m.push(new r.Vector2(x[0],x[1]));
                    break;
                case "lineTo":
                    m.push(new r.Vector2(x[0],x[1]));
                    break;
                case "quadraticCurveTo":
                    e = x[2],
                    n = x[3],
                    a = x[0],
                    s = x[1],
                    m.length > 0 ? (l = m[m.length - 1],
                    h = l.x,
                    u = l.y) : (l = this.actions[v - 1].args,
                    h = l[l.length - 2],
                    u = l[l.length - 1]);
                    for (var b = 1; b <= t; b++) {
                        var w = b / t;
                        c = f(w, h, a, e),
                        p = f(w, u, s, n),
                        m.push(new r.Vector2(c,p))
                    }
                    break;
                case "bezierCurveTo":
                    e = x[4],
                    n = x[5],
                    a = x[0],
                    s = x[1],
                    i = x[2],
                    o = x[3],
                    m.length > 0 ? (l = m[m.length - 1],
                    h = l.x,
                    u = l.y) : (l = this.actions[v - 1].args,
                    h = l[l.length - 2],
                    u = l[l.length - 1]);
                    for (var b = 1; b <= t; b++) {
                        var w = b / t;
                        c = d(w, h, a, i, e),
                        p = d(w, u, s, o, n),
                        m.push(new r.Vector2(c,p))
                    }
                    break;
                case "splineThru":
                    l = this.actions[v - 1].args;
                    var E = new r.Vector2(l[l.length - 2],l[l.length - 1])
                      , S = [E]
                      , T = t * x[0].length;
                    S = S.concat(x[0]);
                    for (var M = new r.SplineCurve(S), b = 1; b <= T; b++)
                        m.push(M.getPointAt(b / T));
                    break;
                case "arc":
                    for (var C, A = x[0], P = x[1], L = x[2], R = x[3], k = x[4], O = !!x[5], I = k - R, D = 2 * t, b = 1; b <= D; b++) {
                        var w = b / D;
                        O || (w = 1 - w),
                        C = R + w * I,
                        c = A + L * Math.cos(C),
                        p = P + L * Math.sin(C),
                        m.push(new r.Vector2(c,p))
                    }
                    break;
                case "ellipse":
                    var C, U, B, A = x[0], P = x[1], F = x[2], N = x[3], R = x[4], k = x[5], O = !!x[6], G = x[7], I = k - R, D = 2 * t;
                    0 !== G && (U = Math.cos(G),
                    B = Math.sin(G));
                    for (var b = 1; b <= D; b++) {
                        var w = b / D;
                        if (O || (w = 1 - w),
                        C = R + w * I,
                        c = A + F * Math.cos(C),
                        p = P + N * Math.sin(C),
                        0 !== G) {
                            var V = c
                              , z = p;
                            c = (V - A) * U - (z - P) * B + A,
                            p = (V - A) * B + (z - P) * U + P
                        }
                        m.push(new r.Vector2(c,p))
                    }
                }
            }
            var H = m[m.length - 1];
            return Math.abs(H.x - m[0].x) < Number.EPSILON && Math.abs(H.y - m[0].y) < Number.EPSILON && m.splice(m.length - 1, 1),
            this.autoClose && m.push(m[0]),
            m
        }
        ,
        r.Path.prototype.toShapes = function(t, e) {
            function n(t) {
                for (var e = [], n = new r.Path, i = 0, o = t.length; i < o; i++) {
                    var a = t[i]
                      , s = a.args
                      , h = a.action;
                    "moveTo" === h && 0 !== n.actions.length && (e.push(n),
                    n = new r.Path),
                    n[h].apply(n, s)
                }
                return 0 !== n.actions.length && e.push(n),
                e
            }
            function i(t) {
                for (var e = [], n = 0, i = t.length; n < i; n++) {
                    var o = t[n]
                      , a = new r.Shape;
                    a.actions = o.actions,
                    a.curves = o.curves,
                    e.push(a)
                }
                return e
            }
            function o(t, e) {
                for (var n = e.length, r = !1, i = n - 1, o = 0; o < n; i = o++) {
                    var a = e[i]
                      , s = e[o]
                      , h = s.x - a.x
                      , u = s.y - a.y;
                    if (Math.abs(u) > Number.EPSILON) {
                        if (u < 0 && (a = e[o],
                        h = -h,
                        s = e[i],
                        u = -u),
                        t.y < a.y || t.y > s.y)
                            continue;if (t.y === a.y) {
                            if (t.x === a.x)
                                return !0
                        } else {
                            var l = u * (t.x - a.x) - h * (t.y - a.y);
                            if (0 === l)
                                return !0;
                            if (l < 0)
                                continue;r = !r
                        }
                    } else {
                        if (t.y !== a.y)
                            continue;if (s.x <= t.x && t.x <= a.x || a.x <= t.x && t.x <= s.x)
                            return !0
                    }
                }
                return r
            }
            var a = r.ShapeUtils.isClockWise
              , s = n(this.actions);
            if (0 === s.length)
                return [];
            if (e === !0)
                return i(s);
            var h, u, l, c = [];
            if (1 === s.length)
                return u = s[0],
                l = new r.Shape,
                l.actions = u.actions,
                l.curves = u.curves,
                c.push(l),
                c;
            var p = !a(s[0].getPoints());
            p = t ? !p : p;
            var f, d = [], m = [], v = [], g = 0;
            m[g] = void 0,
            v[g] = [];
            for (var y = 0, _ = s.length; y < _; y++)
                u = s[y],
                f = u.getPoints(),
                h = a(f),
                h = t ? !h : h,
                h ? (!p && m[g] && g++,
                m[g] = {
                    s: new r.Shape,
                    p: f
                },
                m[g].s.actions = u.actions,
                m[g].s.curves = u.curves,
                p && g++,
                v[g] = []) : v[g].push({
                    h: u,
                    p: f[0]
                });
            if (!m[0])
                return i(s);
            if (m.length > 1) {
                for (var x = !1, b = [], w = 0, E = m.length; w < E; w++)
                    d[w] = [];
                for (var w = 0, E = m.length; w < E; w++)
                    for (var S = v[w], T = 0; T < S.length; T++) {
                        for (var M = S[T], C = !0, A = 0; A < m.length; A++)
                            o(M.p, m[A].p) && (w !== A && b.push({
                                froms: w,
                                tos: A,
                                hole: T
                            }),
                            C ? (C = !1,
                            d[A].push(M)) : x = !0);
                        C && d[w].push(M)
                    }
                b.length > 0 && (x || (v = d))
            }
            for (var P, y = 0, L = m.length; y < L; y++) {
                l = m[y].s,
                c.push(l),
                P = v[y];
                for (var R = 0, k = P.length; R < k; R++)
                    l.holes.push(P[R].h)
            }
            return c
        }
        ,
        r.Shape = function() {
            r.Path.apply(this, arguments),
            this.holes = []
        }
        ,
        r.Shape.prototype = Object.create(r.Path.prototype),
        r.Shape.prototype.constructor = r.Shape,
        r.Shape.prototype.extrude = function(t) {
            return new r.ExtrudeGeometry(this,t)
        }
        ,
        r.Shape.prototype.makeGeometry = function(t) {
            return new r.ShapeGeometry(this,t)
        }
        ,
        r.Shape.prototype.getPointsHoles = function(t) {
            for (var e = [], n = 0, r = this.holes.length; n < r; n++)
                e[n] = this.holes[n].getPoints(t);
            return e
        }
        ,
        r.Shape.prototype.extractAllPoints = function(t) {
            return {
                shape: this.getPoints(t),
                holes: this.getPointsHoles(t)
            }
        }
        ,
        r.Shape.prototype.extractPoints = function(t) {
            return this.extractAllPoints(t)
        }
        ,
        r.LineCurve = function(t, e) {
            this.v1 = t,
            this.v2 = e
        }
        ,
        r.LineCurve.prototype = Object.create(r.Curve.prototype),
        r.LineCurve.prototype.constructor = r.LineCurve,
        r.LineCurve.prototype.getPoint = function(t) {
            var e = this.v2.clone().sub(this.v1);
            return e.multiplyScalar(t).add(this.v1),
            e
        }
        ,
        r.LineCurve.prototype.getPointAt = function(t) {
            return this.getPoint(t)
        }
        ,
        r.LineCurve.prototype.getTangent = function(t) {
            var e = this.v2.clone().sub(this.v1);
            return e.normalize()
        }
        ,
        r.QuadraticBezierCurve = function(t, e, n) {
            this.v0 = t,
            this.v1 = e,
            this.v2 = n
        }
        ,
        r.QuadraticBezierCurve.prototype = Object.create(r.Curve.prototype),
        r.QuadraticBezierCurve.prototype.constructor = r.QuadraticBezierCurve,
        r.QuadraticBezierCurve.prototype.getPoint = function(t) {
            var e = r.ShapeUtils.b2;
            return new r.Vector2(e(t, this.v0.x, this.v1.x, this.v2.x),e(t, this.v0.y, this.v1.y, this.v2.y))
        }
        ,
        r.QuadraticBezierCurve.prototype.getTangent = function(t) {
            var e = r.CurveUtils.tangentQuadraticBezier;
            return new r.Vector2(e(t, this.v0.x, this.v1.x, this.v2.x),e(t, this.v0.y, this.v1.y, this.v2.y)).normalize()
        }
        ,
        r.CubicBezierCurve = function(t, e, n, r) {
            this.v0 = t,
            this.v1 = e,
            this.v2 = n,
            this.v3 = r
        }
        ,
        r.CubicBezierCurve.prototype = Object.create(r.Curve.prototype),
        r.CubicBezierCurve.prototype.constructor = r.CubicBezierCurve,
        r.CubicBezierCurve.prototype.getPoint = function(t) {
            var e = r.ShapeUtils.b3;
            return new r.Vector2(e(t, this.v0.x, this.v1.x, this.v2.x, this.v3.x),e(t, this.v0.y, this.v1.y, this.v2.y, this.v3.y))
        }
        ,
        r.CubicBezierCurve.prototype.getTangent = function(t) {
            var e = r.CurveUtils.tangentCubicBezier;
            return new r.Vector2(e(t, this.v0.x, this.v1.x, this.v2.x, this.v3.x),e(t, this.v0.y, this.v1.y, this.v2.y, this.v3.y)).normalize()
        }
        ,
        r.SplineCurve = function(t) {
            this.points = void 0 == t ? [] : t
        }
        ,
        r.SplineCurve.prototype = Object.create(r.Curve.prototype),
        r.SplineCurve.prototype.constructor = r.SplineCurve,
        r.SplineCurve.prototype.getPoint = function(t) {
            var e = this.points
              , n = (e.length - 1) * t
              , i = Math.floor(n)
              , o = n - i
              , a = e[0 === i ? i : i - 1]
              , s = e[i]
              , h = e[i > e.length - 2 ? e.length - 1 : i + 1]
              , u = e[i > e.length - 3 ? e.length - 1 : i + 2]
              , l = r.CurveUtils.interpolate;
            return new r.Vector2(l(a.x, s.x, h.x, u.x, o),l(a.y, s.y, h.y, u.y, o))
        }
        ,
        r.EllipseCurve = function(t, e, n, r, i, o, a, s) {
            this.aX = t,
            this.aY = e,
            this.xRadius = n,
            this.yRadius = r,
            this.aStartAngle = i,
            this.aEndAngle = o,
            this.aClockwise = a,
            this.aRotation = s || 0
        }
        ,
        r.EllipseCurve.prototype = Object.create(r.Curve.prototype),
        r.EllipseCurve.prototype.constructor = r.EllipseCurve,
        r.EllipseCurve.prototype.getPoint = function(t) {
            var e = this.aEndAngle - this.aStartAngle;
            e < 0 && (e += 2 * Math.PI),
            e > 2 * Math.PI && (e -= 2 * Math.PI);
            var n;
            n = this.aClockwise === !0 ? this.aEndAngle + (1 - t) * (2 * Math.PI - e) : this.aStartAngle + t * e;
            var i = this.aX + this.xRadius * Math.cos(n)
              , o = this.aY + this.yRadius * Math.sin(n);
            if (0 !== this.aRotation) {
                var a = Math.cos(this.aRotation)
                  , s = Math.sin(this.aRotation)
                  , h = i
                  , u = o;
                i = (h - this.aX) * a - (u - this.aY) * s + this.aX,
                o = (h - this.aX) * s + (u - this.aY) * a + this.aY
            }
            return new r.Vector2(i,o)
        }
        ,
        r.ArcCurve = function(t, e, n, i, o, a) {
            r.EllipseCurve.call(this, t, e, n, n, i, o, a)
        }
        ,
        r.ArcCurve.prototype = Object.create(r.EllipseCurve.prototype),
        r.ArcCurve.prototype.constructor = r.ArcCurve,
        r.LineCurve3 = r.Curve.create(function(t, e) {
            this.v1 = t,
            this.v2 = e
        }, function(t) {
            var e = new r.Vector3;
            return e.subVectors(this.v2, this.v1),
            e.multiplyScalar(t),
            e.add(this.v1),
            e
        }),
        r.QuadraticBezierCurve3 = r.Curve.create(function(t, e, n) {
            this.v0 = t,
            this.v1 = e,
            this.v2 = n
        }, function(t) {
            var e = r.ShapeUtils.b2;
            return new r.Vector3(e(t, this.v0.x, this.v1.x, this.v2.x),e(t, this.v0.y, this.v1.y, this.v2.y),e(t, this.v0.z, this.v1.z, this.v2.z))
        }),
        r.CubicBezierCurve3 = r.Curve.create(function(t, e, n, r) {
            this.v0 = t,
            this.v1 = e,
            this.v2 = n,
            this.v3 = r
        }, function(t) {
            var e = r.ShapeUtils.b3;
            return new r.Vector3(e(t, this.v0.x, this.v1.x, this.v2.x, this.v3.x),e(t, this.v0.y, this.v1.y, this.v2.y, this.v3.y),e(t, this.v0.z, this.v1.z, this.v2.z, this.v3.z))
        }),
        r.SplineCurve3 = r.Curve.create(function(t) {
            console.warn("THREE.SplineCurve3 will be deprecated. Please use THREE.CatmullRomCurve3"),
            this.points = void 0 == t ? [] : t
        }, function(t) {
            var e = this.points
              , n = (e.length - 1) * t
              , i = Math.floor(n)
              , o = n - i
              , a = e[0 == i ? i : i - 1]
              , s = e[i]
              , h = e[i > e.length - 2 ? e.length - 1 : i + 1]
              , u = e[i > e.length - 3 ? e.length - 1 : i + 2]
              , l = r.CurveUtils.interpolate;
            return new r.Vector3(l(a.x, s.x, h.x, u.x, o),l(a.y, s.y, h.y, u.y, o),l(a.z, s.z, h.z, u.z, o))
        }),
        r.CatmullRomCurve3 = function() {
            function t() {}
            var e = new r.Vector3
              , n = new t
              , i = new t
              , o = new t;
            return t.prototype.init = function(t, e, n, r) {
                this.c0 = t,
                this.c1 = n,
                this.c2 = -3 * t + 3 * e - 2 * n - r,
                this.c3 = 2 * t - 2 * e + n + r
            }
            ,
            t.prototype.initNonuniformCatmullRom = function(t, e, n, r, i, o, a) {
                var s = (e - t) / i - (n - t) / (i + o) + (n - e) / o
                  , h = (n - e) / o - (r - e) / (o + a) + (r - n) / a;
                s *= o,
                h *= o,
                this.init(e, n, s, h)
            }
            ,
            t.prototype.initCatmullRom = function(t, e, n, r, i) {
                this.init(e, n, i * (n - t), i * (r - e))
            }
            ,
            t.prototype.calc = function(t) {
                var e = t * t
                  , n = e * t;
                return this.c0 + this.c1 * t + this.c2 * e + this.c3 * n
            }
            ,
            r.Curve.create(function(t) {
                this.points = t || [],
                this.closed = !1
            }, function(t) {
                var a, s, h, u, l = this.points;
                u = l.length,
                u < 2 && console.log("duh, you need at least 2 points"),
                a = (u - (this.closed ? 0 : 1)) * t,
                s = Math.floor(a),
                h = a - s,
                this.closed ? s += s > 0 ? 0 : (Math.floor(Math.abs(s) / l.length) + 1) * l.length : 0 === h && s === u - 1 && (s = u - 2,
                h = 1);
                var c, p, f, d;
                if (this.closed || s > 0 ? c = l[(s - 1) % u] : (e.subVectors(l[0], l[1]).add(l[0]),
                c = e),
                p = l[s % u],
                f = l[(s + 1) % u],
                this.closed || s + 2 < u ? d = l[(s + 2) % u] : (e.subVectors(l[u - 1], l[u - 2]).add(l[u - 1]),
                d = e),
                void 0 === this.type || "centripetal" === this.type || "chordal" === this.type) {
                    var m = "chordal" === this.type ? .5 : .25
                      , v = Math.pow(c.distanceToSquared(p), m)
                      , g = Math.pow(p.distanceToSquared(f), m)
                      , y = Math.pow(f.distanceToSquared(d), m);
                    g < 1e-4 && (g = 1),
                    v < 1e-4 && (v = g),
                    y < 1e-4 && (y = g),
                    n.initNonuniformCatmullRom(c.x, p.x, f.x, d.x, v, g, y),
                    i.initNonuniformCatmullRom(c.y, p.y, f.y, d.y, v, g, y),
                    o.initNonuniformCatmullRom(c.z, p.z, f.z, d.z, v, g, y)
                } else if ("catmullrom" === this.type) {
                    var _ = void 0 !== this.tension ? this.tension : .5;
                    n.initCatmullRom(c.x, p.x, f.x, d.x, _),
                    i.initCatmullRom(c.y, p.y, f.y, d.y, _),
                    o.initCatmullRom(c.z, p.z, f.z, d.z, _)
                }
                var x = new r.Vector3(n.calc(h),i.calc(h),o.calc(h));
                return x
            })
        }(),
        r.ClosedSplineCurve3 = function(t) {
            console.warn("THREE.ClosedSplineCurve3 has been deprecated. Please use THREE.CatmullRomCurve3."),
            r.CatmullRomCurve3.call(this, t),
            this.type = "catmullrom",
            this.closed = !0
        }
        ,
        r.ClosedSplineCurve3.prototype = Object.create(r.CatmullRomCurve3.prototype),
        r.BoxGeometry = function(t, e, n, i, o, a) {
            function s(t, e, n, i, o, a, s, u) {
                var l, c, p, f = h.widthSegments, d = h.heightSegments, m = o / 2, v = a / 2, g = h.vertices.length;
                "x" === t && "y" === e || "y" === t && "x" === e ? l = "z" : "x" === t && "z" === e || "z" === t && "x" === e ? (l = "y",
                d = h.depthSegments) : ("z" === t && "y" === e || "y" === t && "z" === e) && (l = "x",
                f = h.depthSegments);
                var y = f + 1
                  , _ = d + 1
                  , x = o / f
                  , b = a / d
                  , w = new r.Vector3;
                for (w[l] = s > 0 ? 1 : -1,
                p = 0; p < _; p++)
                    for (c = 0; c < y; c++) {
                        var E = new r.Vector3;
                        E[t] = (c * x - m) * n,
                        E[e] = (p * b - v) * i,
                        E[l] = s,
                        h.vertices.push(E)
                    }
                for (p = 0; p < d; p++)
                    for (c = 0; c < f; c++) {
                        var S = c + y * p
                          , T = c + y * (p + 1)
                          , M = c + 1 + y * (p + 1)
                          , C = c + 1 + y * p
                          , A = new r.Vector2(c / f,1 - p / d)
                          , P = new r.Vector2(c / f,1 - (p + 1) / d)
                          , L = new r.Vector2((c + 1) / f,1 - (p + 1) / d)
                          , R = new r.Vector2((c + 1) / f,1 - p / d)
                          , k = new r.Face3(S + g,T + g,C + g);
                        k.normal.copy(w),
                        k.vertexNormals.push(w.clone(), w.clone(), w.clone()),
                        k.materialIndex = u,
                        h.faces.push(k),
                        h.faceVertexUvs[0].push([A, P, R]),
                        k = new r.Face3(T + g,M + g,C + g),
                        k.normal.copy(w),
                        k.vertexNormals.push(w.clone(), w.clone(), w.clone()),
                        k.materialIndex = u,
                        h.faces.push(k),
                        h.faceVertexUvs[0].push([P.clone(), L, R.clone()])
                    }
            }
            r.Geometry.call(this),
            this.type = "BoxGeometry",
            this.parameters = {
                width: t,
                height: e,
                depth: n,
                widthSegments: i,
                heightSegments: o,
                depthSegments: a
            },
            this.widthSegments = i || 1,
            this.heightSegments = o || 1,
            this.depthSegments = a || 1;
            var h = this
              , u = t / 2
              , l = e / 2
              , c = n / 2;
            s("z", "y", -1, -1, n, e, u, 0),
            s("z", "y", 1, -1, n, e, -u, 1),
            s("x", "z", 1, 1, t, n, l, 2),
            s("x", "z", 1, -1, t, n, -l, 3),
            s("x", "y", 1, -1, t, e, c, 4),
            s("x", "y", -1, -1, t, e, -c, 5),
            this.mergeVertices()
        }
        ,
        r.BoxGeometry.prototype = Object.create(r.Geometry.prototype),
        r.BoxGeometry.prototype.constructor = r.BoxGeometry,
        r.CubeGeometry = r.BoxGeometry,
        r.CircleGeometry = function(t, e, n, i) {
            r.Geometry.call(this),
            this.type = "CircleGeometry",
            this.parameters = {
                radius: t,
                segments: e,
                thetaStart: n,
                thetaLength: i
            },
            this.fromBufferGeometry(new r.CircleBufferGeometry(t,e,n,i))
        }
        ,
        r.CircleGeometry.prototype = Object.create(r.Geometry.prototype),
        r.CircleGeometry.prototype.constructor = r.CircleGeometry,
        r.CircleBufferGeometry = function(t, e, n, i) {
            r.BufferGeometry.call(this),
            this.type = "CircleBufferGeometry",
            this.parameters = {
                radius: t,
                segments: e,
                thetaStart: n,
                thetaLength: i
            },
            t = t || 50,
            e = void 0 !== e ? Math.max(3, e) : 8,
            n = void 0 !== n ? n : 0,
            i = void 0 !== i ? i : 2 * Math.PI;
            var o = e + 2
              , a = new Float32Array(3 * o)
              , s = new Float32Array(3 * o)
              , h = new Float32Array(2 * o);
            s[2] = 1,
            h[0] = .5,
            h[1] = .5;
            for (var u = 0, l = 3, c = 2; u <= e; u++,
            l += 3,
            c += 2) {
                var p = n + u / e * i;
                a[l] = t * Math.cos(p),
                a[l + 1] = t * Math.sin(p),
                s[l + 2] = 1,
                h[c] = (a[l] / t + 1) / 2,
                h[c + 1] = (a[l + 1] / t + 1) / 2
            }
            for (var f = [], l = 1; l <= e; l++)
                f.push(l, l + 1, 0);
            this.setIndex(new r.BufferAttribute(new Uint16Array(f),1)),
            this.addAttribute("position", new r.BufferAttribute(a,3)),
            this.addAttribute("normal", new r.BufferAttribute(s,3)),
            this.addAttribute("uv", new r.BufferAttribute(h,2)),
            this.boundingSphere = new r.Sphere(new r.Vector3,t)
        }
        ,
        r.CircleBufferGeometry.prototype = Object.create(r.BufferGeometry.prototype),
        r.CircleBufferGeometry.prototype.constructor = r.CircleBufferGeometry,
        r.CylinderGeometry = function(t, e, n, i, o, a, s, h) {
            r.Geometry.call(this),
            this.type = "CylinderGeometry",
            this.parameters = {
                radiusTop: t,
                radiusBottom: e,
                height: n,
                radialSegments: i,
                heightSegments: o,
                openEnded: a,
                thetaStart: s,
                thetaLength: h
            },
            t = void 0 !== t ? t : 20,
            e = void 0 !== e ? e : 20,
            n = void 0 !== n ? n : 100,
            i = i || 8,
            o = o || 1,
            a = void 0 !== a && a,
            s = void 0 !== s ? s : 0,
            h = void 0 !== h ? h : 2 * Math.PI;
            var u, l, c = n / 2, p = [], f = [];
            for (l = 0; l <= o; l++) {
                var d = []
                  , m = []
                  , v = l / o
                  , g = v * (e - t) + t;
                for (u = 0; u <= i; u++) {
                    var y = u / i
                      , _ = new r.Vector3;
                    _.x = g * Math.sin(y * h + s),
                    _.y = -v * n + c,
                    _.z = g * Math.cos(y * h + s),
                    this.vertices.push(_),
                    d.push(this.vertices.length - 1),
                    m.push(new r.Vector2(y,1 - v))
                }
                p.push(d),
                f.push(m)
            }
            var x, b, w = (e - t) / n;
            for (u = 0; u < i; u++)
                for (0 !== t ? (x = this.vertices[p[0][u]].clone(),
                b = this.vertices[p[0][u + 1]].clone()) : (x = this.vertices[p[1][u]].clone(),
                b = this.vertices[p[1][u + 1]].clone()),
                x.setY(Math.sqrt(x.x * x.x + x.z * x.z) * w).normalize(),
                b.setY(Math.sqrt(b.x * b.x + b.z * b.z) * w).normalize(),
                l = 0; l < o; l++) {
                    var E = p[l][u]
                      , S = p[l + 1][u]
                      , T = p[l + 1][u + 1]
                      , M = p[l][u + 1]
                      , C = x.clone()
                      , A = x.clone()
                      , P = b.clone()
                      , L = b.clone()
                      , R = f[l][u].clone()
                      , k = f[l + 1][u].clone()
                      , O = f[l + 1][u + 1].clone()
                      , I = f[l][u + 1].clone();
                    this.faces.push(new r.Face3(E,S,M,[C, A, L])),
                    this.faceVertexUvs[0].push([R, k, I]),
                    this.faces.push(new r.Face3(S,T,M,[A.clone(), P, L.clone()])),
                    this.faceVertexUvs[0].push([k.clone(), O, I.clone()])
                }
            if (a === !1 && t > 0)
                for (this.vertices.push(new r.Vector3(0,c,0)),
                u = 0; u < i; u++) {
                    var E = p[0][u]
                      , S = p[0][u + 1]
                      , T = this.vertices.length - 1
                      , C = new r.Vector3(0,1,0)
                      , A = new r.Vector3(0,1,0)
                      , P = new r.Vector3(0,1,0)
                      , R = f[0][u].clone()
                      , k = f[0][u + 1].clone()
                      , O = new r.Vector2(k.x,0);
                    this.faces.push(new r.Face3(E,S,T,[C, A, P],(void 0),1)),
                    this.faceVertexUvs[0].push([R, k, O])
                }
            if (a === !1 && e > 0)
                for (this.vertices.push(new r.Vector3(0,(-c),0)),
                u = 0; u < i; u++) {
                    var E = p[o][u + 1]
                      , S = p[o][u]
                      , T = this.vertices.length - 1
                      , C = new r.Vector3(0,(-1),0)
                      , A = new r.Vector3(0,(-1),0)
                      , P = new r.Vector3(0,(-1),0)
                      , R = f[o][u + 1].clone()
                      , k = f[o][u].clone()
                      , O = new r.Vector2(k.x,1);
                    this.faces.push(new r.Face3(E,S,T,[C, A, P],(void 0),2)),
                    this.faceVertexUvs[0].push([R, k, O])
                }
            this.computeFaceNormals()
        }
        ,
        r.CylinderGeometry.prototype = Object.create(r.Geometry.prototype),
        r.CylinderGeometry.prototype.constructor = r.CylinderGeometry,
        r.EdgesGeometry = function(t, e) {
            function n(t, e) {
                return t - e
            }
            r.BufferGeometry.call(this),
            e = void 0 !== e ? e : 1;
            var i, o = Math.cos(r.Math.degToRad(e)), a = [0, 0], s = {}, h = ["a", "b", "c"];
            t instanceof r.BufferGeometry ? (i = new r.Geometry,
            i.fromBufferGeometry(t)) : i = t.clone(),
            i.mergeVertices(),
            i.computeFaceNormals();
            for (var u = i.vertices, l = i.faces, c = 0, p = l.length; c < p; c++)
                for (var f = l[c], d = 0; d < 3; d++) {
                    a[0] = f[h[d]],
                    a[1] = f[h[(d + 1) % 3]],
                    a.sort(n);
                    var m = a.toString();
                    void 0 === s[m] ? s[m] = {
                        vert1: a[0],
                        vert2: a[1],
                        face1: c,
                        face2: void 0
                    } : s[m].face2 = c
                }
            var v = [];
            for (var m in s) {
                var g = s[m];
                if (void 0 === g.face2 || l[g.face1].normal.dot(l[g.face2].normal) <= o) {
                    var y = u[g.vert1];
                    v.push(y.x),
                    v.push(y.y),
                    v.push(y.z),
                    y = u[g.vert2],
                    v.push(y.x),
                    v.push(y.y),
                    v.push(y.z)
                }
            }
            this.addAttribute("position", new r.BufferAttribute(new Float32Array(v),3))
        }
        ,
        r.EdgesGeometry.prototype = Object.create(r.BufferGeometry.prototype),
        r.EdgesGeometry.prototype.constructor = r.EdgesGeometry,
        r.ExtrudeGeometry = function(t, e) {
            return "undefined" == typeof t ? void (t = []) : (r.Geometry.call(this),
            this.type = "ExtrudeGeometry",
            t = Array.isArray(t) ? t : [t],
            this.addShapeList(t, e),
            void this.computeFaceNormals())
        }
        ,
        r.ExtrudeGeometry.prototype = Object.create(r.Geometry.prototype),
        r.ExtrudeGeometry.prototype.constructor = r.ExtrudeGeometry,
        r.ExtrudeGeometry.prototype.addShapeList = function(t, e) {
            for (var n = t.length, r = 0; r < n; r++) {
                var i = t[r];
                this.addShape(i, e)
            }
        }
        ,
        r.ExtrudeGeometry.prototype.addShape = function(t, e) {
            function n(t, e, n) {
                return e || console.error("THREE.ExtrudeGeometry: vec does not exist"),
                e.clone().multiplyScalar(n).add(t)
            }
            function i(t, e, n) {
                var i, o, a = 1, s = t.x - e.x, h = t.y - e.y, u = n.x - t.x, l = n.y - t.y, c = s * s + h * h, p = s * l - h * u;
                if (Math.abs(p) > Number.EPSILON) {
                    var f = Math.sqrt(c)
                      , d = Math.sqrt(u * u + l * l)
                      , m = e.x - h / f
                      , v = e.y + s / f
                      , g = n.x - l / d
                      , y = n.y + u / d
                      , _ = ((g - m) * l - (y - v) * u) / (s * l - h * u);
                    i = m + s * _ - t.x,
                    o = v + h * _ - t.y;
                    var x = i * i + o * o;
                    if (x <= 2)
                        return new r.Vector2(i,o);
                    a = Math.sqrt(x / 2)
                } else {
                    var b = !1;
                    s > Number.EPSILON ? u > Number.EPSILON && (b = !0) : s < -Number.EPSILON ? u < -Number.EPSILON && (b = !0) : Math.sign(h) === Math.sign(l) && (b = !0),
                    b ? (i = -h,
                    o = s,
                    a = Math.sqrt(c)) : (i = s,
                    o = h,
                    a = Math.sqrt(c / 2))
                }
                return new r.Vector2(i / a,o / a)
            }
            function o() {
                if (x) {
                    var t = 0
                      , e = H * t;
                    for (X = 0; X < j; X++)
                        z = D[X],
                        u(z[2] + e, z[1] + e, z[0] + e);
                    for (t = w + 2 * _,
                    e = H * t,
                    X = 0; X < j; X++)
                        z = D[X],
                        u(z[0] + e, z[1] + e, z[2] + e)
                } else {
                    for (X = 0; X < j; X++)
                        z = D[X],
                        u(z[2], z[1], z[0]);
                    for (X = 0; X < j; X++)
                        z = D[X],
                        u(z[0] + H * w, z[1] + H * w, z[2] + H * w)
                }
            }
            function a() {
                var t = 0;
                for (s(U, t),
                t += U.length,
                C = 0,
                A = O.length; C < A; C++)
                    M = O[C],
                    s(M, t),
                    t += M.length
            }
            function s(t, e) {
                var n, r;
                for (X = t.length; --X >= 0; ) {
                    n = X,
                    r = X - 1,
                    r < 0 && (r = t.length - 1);
                    var i = 0
                      , o = w + 2 * _;
                    for (i = 0; i < o; i++) {
                        var a = H * i
                          , s = H * (i + 1)
                          , h = e + n + a
                          , u = e + r + a
                          , c = e + r + s
                          , p = e + n + s;
                        l(h, u, c, p, t, i, o, n, r)
                    }
                }
            }
            function h(t, e, n) {
                P.vertices.push(new r.Vector3(t,e,n))
            }
            function u(t, e, n) {
                t += L,
                e += L,
                n += L,
                P.faces.push(new r.Face3(t,e,n,null ,null ,0));
                var i = T.generateTopUV(P, t, e, n);
                P.faceVertexUvs[0].push(i)
            }
            function l(t, e, n, i, o, a, s, h, u) {
                t += L,
                e += L,
                n += L,
                i += L,
                P.faces.push(new r.Face3(t,e,i,null ,null ,1)),
                P.faces.push(new r.Face3(e,n,i,null ,null ,1));
                var l = T.generateSideWallUV(P, t, e, n, i);
                P.faceVertexUvs[0].push([l[0], l[1], l[3]]),
                P.faceVertexUvs[0].push([l[1], l[2], l[3]])
            }
            var c, p, f, d, m, v = void 0 !== e.amount ? e.amount : 100, g = void 0 !== e.bevelThickness ? e.bevelThickness : 6, y = void 0 !== e.bevelSize ? e.bevelSize : g - 2, _ = void 0 !== e.bevelSegments ? e.bevelSegments : 3, x = void 0 === e.bevelEnabled || e.bevelEnabled, b = void 0 !== e.curveSegments ? e.curveSegments : 12, w = void 0 !== e.steps ? e.steps : 1, E = e.extrudePath, S = !1, T = void 0 !== e.UVGenerator ? e.UVGenerator : r.ExtrudeGeometry.WorldUVGenerator;
            E && (c = E.getSpacedPoints(w),
            S = !0,
            x = !1,
            p = void 0 !== e.frames ? e.frames : new r.TubeGeometry.FrenetFrames(E,w,(!1)),
            f = new r.Vector3,
            d = new r.Vector3,
            m = new r.Vector3),
            x || (_ = 0,
            g = 0,
            y = 0);
            var M, C, A, P = this, L = this.vertices.length, R = t.extractPoints(b), k = R.shape, O = R.holes, I = !r.ShapeUtils.isClockWise(k);
            if (I) {
                for (k = k.reverse(),
                C = 0,
                A = O.length; C < A; C++)
                    M = O[C],
                    r.ShapeUtils.isClockWise(M) && (O[C] = M.reverse());
                I = !1
            }
            var D = r.ShapeUtils.triangulateShape(k, O)
              , U = k;
            for (C = 0,
            A = O.length; C < A; C++)
                M = O[C],
                k = k.concat(M);
            for (var B, F, N, G, V, z, H = k.length, j = D.length, W = [], X = 0, Y = U.length, q = Y - 1, Z = X + 1; X < Y; X++,
            q++,
            Z++)
                q === Y && (q = 0),
                Z === Y && (Z = 0),
                W[X] = i(U[X], U[q], U[Z]);
            var Q, K = [], J = W.concat();
            for (C = 0,
            A = O.length; C < A; C++) {
                for (M = O[C],
                Q = [],
                X = 0,
                Y = M.length,
                q = Y - 1,
                Z = X + 1; X < Y; X++,
                q++,
                Z++)
                    q === Y && (q = 0),
                    Z === Y && (Z = 0),
                    Q[X] = i(M[X], M[q], M[Z]);
                K.push(Q),
                J = J.concat(Q)
            }
            for (B = 0; B < _; B++) {
                for (N = B / _,
                G = g * (1 - N),
                F = y * Math.sin(N * Math.PI / 2),
                X = 0,
                Y = U.length; X < Y; X++)
                    V = n(U[X], W[X], F),
                    h(V.x, V.y, -G);
                for (C = 0,
                A = O.length; C < A; C++)
                    for (M = O[C],
                    Q = K[C],
                    X = 0,
                    Y = M.length; X < Y; X++)
                        V = n(M[X], Q[X], F),
                        h(V.x, V.y, -G)
            }
            for (F = y,
            X = 0; X < H; X++)
                V = x ? n(k[X], J[X], F) : k[X],
                S ? (d.copy(p.normals[0]).multiplyScalar(V.x),
                f.copy(p.binormals[0]).multiplyScalar(V.y),
                m.copy(c[0]).add(d).add(f),
                h(m.x, m.y, m.z)) : h(V.x, V.y, 0);
            var $;
            for ($ = 1; $ <= w; $++)
                for (X = 0; X < H; X++)
                    V = x ? n(k[X], J[X], F) : k[X],
                    S ? (d.copy(p.normals[$]).multiplyScalar(V.x),
                    f.copy(p.binormals[$]).multiplyScalar(V.y),
                    m.copy(c[$]).add(d).add(f),
                    h(m.x, m.y, m.z)) : h(V.x, V.y, v / w * $);
            for (B = _ - 1; B >= 0; B--) {
                for (N = B / _,
                G = g * (1 - N),
                F = y * Math.sin(N * Math.PI / 2),
                X = 0,
                Y = U.length; X < Y; X++)
                    V = n(U[X], W[X], F),
                    h(V.x, V.y, v + G);
                for (C = 0,
                A = O.length; C < A; C++)
                    for (M = O[C],
                    Q = K[C],
                    X = 0,
                    Y = M.length; X < Y; X++)
                        V = n(M[X], Q[X], F),
                        S ? h(V.x, V.y + c[w - 1].y, c[w - 1].x + G) : h(V.x, V.y, v + G)
            }
            o(),
            a()
        }
        ,
        r.ExtrudeGeometry.WorldUVGenerator = {
            generateTopUV: function(t, e, n, i) {
                var o = t.vertices
                  , a = o[e]
                  , s = o[n]
                  , h = o[i];
                return [new r.Vector2(a.x,a.y), new r.Vector2(s.x,s.y), new r.Vector2(h.x,h.y)]
            },
            generateSideWallUV: function(t, e, n, i, o) {
                var a = t.vertices
                  , s = a[e]
                  , h = a[n]
                  , u = a[i]
                  , l = a[o];
                return Math.abs(s.y - h.y) < .01 ? [new r.Vector2(s.x,1 - s.z), new r.Vector2(h.x,1 - h.z), new r.Vector2(u.x,1 - u.z), new r.Vector2(l.x,1 - l.z)] : [new r.Vector2(s.y,1 - s.z), new r.Vector2(h.y,1 - h.z), new r.Vector2(u.y,1 - u.z), new r.Vector2(l.y,1 - l.z)]
            }
        },
        r.ShapeGeometry = function(t, e) {
            r.Geometry.call(this),
            this.type = "ShapeGeometry",
            Array.isArray(t) === !1 && (t = [t]),
            this.addShapeList(t, e),
            this.computeFaceNormals()
        }
        ,
        r.ShapeGeometry.prototype = Object.create(r.Geometry.prototype),
        r.ShapeGeometry.prototype.constructor = r.ShapeGeometry,
        r.ShapeGeometry.prototype.addShapeList = function(t, e) {
            for (var n = 0, r = t.length; n < r; n++)
                this.addShape(t[n], e);
            return this
        }
        ,
        r.ShapeGeometry.prototype.addShape = function(t, e) {
            void 0 === e && (e = {});
            var n, i, o, a = void 0 !== e.curveSegments ? e.curveSegments : 12, s = e.material, h = void 0 === e.UVGenerator ? r.ExtrudeGeometry.WorldUVGenerator : e.UVGenerator, u = this.vertices.length, l = t.extractPoints(a), c = l.shape, p = l.holes, f = !r.ShapeUtils.isClockWise(c);
            if (f) {
                for (c = c.reverse(),
                n = 0,
                i = p.length; n < i; n++)
                    o = p[n],
                    r.ShapeUtils.isClockWise(o) && (p[n] = o.reverse());
                f = !1
            }
            var d = r.ShapeUtils.triangulateShape(c, p);
            for (n = 0,
            i = p.length; n < i; n++)
                o = p[n],
                c = c.concat(o);
            var m, v, g = c.length, y = d.length;
            for (n = 0; n < g; n++)
                m = c[n],
                this.vertices.push(new r.Vector3(m.x,m.y,0));
            for (n = 0; n < y; n++) {
                v = d[n];
                var _ = v[0] + u
                  , x = v[1] + u
                  , b = v[2] + u;
                this.faces.push(new r.Face3(_,x,b,null ,null ,s)),
                this.faceVertexUvs[0].push(h.generateTopUV(this, _, x, b))
            }
        }
        ,
        r.LatheGeometry = function(t, e, n, i) {
            r.Geometry.call(this),
            this.type = "LatheGeometry",
            this.parameters = {
                points: t,
                segments: e,
                phiStart: n,
                phiLength: i
            },
            e = e || 12,
            n = n || 0,
            i = i || 2 * Math.PI;
            for (var o = 1 / (t.length - 1), a = 1 / e, s = 0, h = e; s <= h; s++)
                for (var u = n + s * a * i, l = Math.sin(u), c = Math.cos(u), p = 0, f = t.length; p < f; p++) {
                    var d = t[p]
                      , m = new r.Vector3;
                    m.x = d.x * l,
                    m.y = d.y,
                    m.z = d.x * c,
                    this.vertices.push(m)
                }
            for (var v = t.length, s = 0, h = e; s < h; s++)
                for (var p = 0, f = t.length - 1; p < f; p++) {
                    var g = p + v * s
                      , y = g
                      , _ = g + v
                      , x = g + 1 + v
                      , b = g + 1
                      , w = s * a
                      , E = p * o
                      , S = w + a
                      , T = E + o;
                    this.faces.push(new r.Face3(y,_,b)),
                    this.faceVertexUvs[0].push([new r.Vector2(w,E), new r.Vector2(S,E), new r.Vector2(w,T)]),
                    this.faces.push(new r.Face3(_,x,b)),
                    this.faceVertexUvs[0].push([new r.Vector2(S,E), new r.Vector2(S,T), new r.Vector2(w,T)])
                }
            this.mergeVertices(),
            this.computeFaceNormals(),
            this.computeVertexNormals()
        }
        ,
        r.LatheGeometry.prototype = Object.create(r.Geometry.prototype),
        r.LatheGeometry.prototype.constructor = r.LatheGeometry,
        r.PlaneGeometry = function(t, e, n, i) {
            r.Geometry.call(this),
            this.type = "PlaneGeometry",
            this.parameters = {
                width: t,
                height: e,
                widthSegments: n,
                heightSegments: i
            },
            this.fromBufferGeometry(new r.PlaneBufferGeometry(t,e,n,i))
        }
        ,
        r.PlaneGeometry.prototype = Object.create(r.Geometry.prototype),
        r.PlaneGeometry.prototype.constructor = r.PlaneGeometry,
        r.PlaneBufferGeometry = function(t, e, n, i) {
            r.BufferGeometry.call(this),
            this.type = "PlaneBufferGeometry",
            this.parameters = {
                width: t,
                height: e,
                widthSegments: n,
                heightSegments: i
            };
            for (var o = t / 2, a = e / 2, s = Math.floor(n) || 1, h = Math.floor(i) || 1, u = s + 1, l = h + 1, c = t / s, p = e / h, f = new Float32Array(u * l * 3), d = new Float32Array(u * l * 3), m = new Float32Array(u * l * 2), v = 0, g = 0, y = 0; y < l; y++)
                for (var _ = y * p - a, x = 0; x < u; x++) {
                    var b = x * c - o;
                    f[v] = b,
                    f[v + 1] = -_,
                    d[v + 2] = 1,
                    m[g] = x / s,
                    m[g + 1] = 1 - y / h,
                    v += 3,
                    g += 2
                }
            v = 0;
            for (var w = new (f.length / 3 > 65535 ? Uint32Array : Uint16Array)(s * h * 6), y = 0; y < h; y++)
                for (var x = 0; x < s; x++) {
                    var E = x + u * y
                      , S = x + u * (y + 1)
                      , T = x + 1 + u * (y + 1)
                      , M = x + 1 + u * y;
                    w[v] = E,
                    w[v + 1] = S,
                    w[v + 2] = M,
                    w[v + 3] = S,
                    w[v + 4] = T,
                    w[v + 5] = M,
                    v += 6
                }
            this.setIndex(new r.BufferAttribute(w,1)),
            this.addAttribute("position", new r.BufferAttribute(f,3)),
            this.addAttribute("normal", new r.BufferAttribute(d,3)),
            this.addAttribute("uv", new r.BufferAttribute(m,2))
        }
        ,
        r.PlaneBufferGeometry.prototype = Object.create(r.BufferGeometry.prototype),
        r.PlaneBufferGeometry.prototype.constructor = r.PlaneBufferGeometry,
        r.RingGeometry = function(t, e, n, i, o, a) {
            r.Geometry.call(this),
            this.type = "RingGeometry",
            this.parameters = {
                innerRadius: t,
                outerRadius: e,
                thetaSegments: n,
                phiSegments: i,
                thetaStart: o,
                thetaLength: a
            },
            t = t || 0,
            e = e || 50,
            o = void 0 !== o ? o : 0,
            a = void 0 !== a ? a : 2 * Math.PI,
            n = void 0 !== n ? Math.max(3, n) : 8,
            i = void 0 !== i ? Math.max(1, i) : 8;
            var s, h, u = [], l = t, c = (e - t) / i;
            for (s = 0; s < i + 1; s++) {
                for (h = 0; h < n + 1; h++) {
                    var p = new r.Vector3
                      , f = o + h / n * a;
                    p.x = l * Math.cos(f),
                    p.y = l * Math.sin(f),
                    this.vertices.push(p),
                    u.push(new r.Vector2((p.x / e + 1) / 2,(p.y / e + 1) / 2))
                }
                l += c
            }
            var d = new r.Vector3(0,0,1);
            for (s = 0; s < i; s++) {
                var m = s * (n + 1);
                for (h = 0; h < n; h++) {
                    var f = h + m
                      , v = f
                      , g = f + n + 1
                      , y = f + n + 2;
                    this.faces.push(new r.Face3(v,g,y,[d.clone(), d.clone(), d.clone()])),
                    this.faceVertexUvs[0].push([u[v].clone(), u[g].clone(), u[y].clone()]),
                    v = f,
                    g = f + n + 2,
                    y = f + 1,
                    this.faces.push(new r.Face3(v,g,y,[d.clone(), d.clone(), d.clone()])),
                    this.faceVertexUvs[0].push([u[v].clone(), u[g].clone(), u[y].clone()])
                }
            }
            this.computeFaceNormals(),
            this.boundingSphere = new r.Sphere(new r.Vector3,l)
        }
        ,
        r.RingGeometry.prototype = Object.create(r.Geometry.prototype),
        r.RingGeometry.prototype.constructor = r.RingGeometry,
        r.SphereGeometry = function(t, e, n, i, o, a, s) {
            r.Geometry.call(this),
            this.type = "SphereGeometry",
            this.parameters = {
                radius: t,
                widthSegments: e,
                heightSegments: n,
                phiStart: i,
                phiLength: o,
                thetaStart: a,
                thetaLength: s
            },
            this.fromBufferGeometry(new r.SphereBufferGeometry(t,e,n,i,o,a,s))
        }
        ,
        r.SphereGeometry.prototype = Object.create(r.Geometry.prototype),
        r.SphereGeometry.prototype.constructor = r.SphereGeometry,
        r.SphereBufferGeometry = function(t, e, n, i, o, a, s) {
            r.BufferGeometry.call(this),
            this.type = "SphereBufferGeometry",
            this.parameters = {
                radius: t,
                widthSegments: e,
                heightSegments: n,
                phiStart: i,
                phiLength: o,
                thetaStart: a,
                thetaLength: s
            },
            t = t || 50,
            e = Math.max(3, Math.floor(e) || 8),
            n = Math.max(2, Math.floor(n) || 6),
            i = void 0 !== i ? i : 0,
            o = void 0 !== o ? o : 2 * Math.PI,
            a = void 0 !== a ? a : 0,
            s = void 0 !== s ? s : Math.PI;
            for (var h = a + s, u = (e + 1) * (n + 1), l = new r.BufferAttribute(new Float32Array(3 * u),3), c = new r.BufferAttribute(new Float32Array(3 * u),3), p = new r.BufferAttribute(new Float32Array(2 * u),2), f = 0, d = [], m = new r.Vector3, v = 0; v <= n; v++) {
                for (var g = [], y = v / n, _ = 0; _ <= e; _++) {
                    var x = _ / e
                      , b = -t * Math.cos(i + x * o) * Math.sin(a + y * s)
                      , w = t * Math.cos(a + y * s)
                      , E = t * Math.sin(i + x * o) * Math.sin(a + y * s);
                    m.set(b, w, E).normalize(),
                    l.setXYZ(f, b, w, E),
                    c.setXYZ(f, m.x, m.y, m.z),
                    p.setXY(f, x, 1 - y),
                    g.push(f),
                    f++
                }
                d.push(g)
            }
            for (var S = [], v = 0; v < n; v++)
                for (var _ = 0; _ < e; _++) {
                    var T = d[v][_ + 1]
                      , M = d[v][_]
                      , C = d[v + 1][_]
                      , A = d[v + 1][_ + 1];
                    (0 !== v || a > 0) && S.push(T, M, A),
                    (v !== n - 1 || h < Math.PI) && S.push(M, C, A)
                }
            this.setIndex(new (l.count > 65535 ? r.Uint32Attribute : r.Uint16Attribute)(S,1)),
            this.addAttribute("position", l),
            this.addAttribute("normal", c),
            this.addAttribute("uv", p),
            this.boundingSphere = new r.Sphere(new r.Vector3,t)
        }
        ,
        r.SphereBufferGeometry.prototype = Object.create(r.BufferGeometry.prototype),
        r.SphereBufferGeometry.prototype.constructor = r.SphereBufferGeometry,
        r.TextGeometry = function(t, e) {
            e = e || {};
            var n = e.font;
            if (n instanceof r.Font == !1)
                return console.error("THREE.TextGeometry: font parameter is not an instance of THREE.Font."),
                new r.Geometry;
            var i = n.generateShapes(t, e.size, e.curveSegments);
            e.amount = void 0 !== e.height ? e.height : 50,
            void 0 === e.bevelThickness && (e.bevelThickness = 10),
            void 0 === e.bevelSize && (e.bevelSize = 8),
            void 0 === e.bevelEnabled && (e.bevelEnabled = !1),
            r.ExtrudeGeometry.call(this, i, e),
            this.type = "TextGeometry"
        }
        ,
        r.TextGeometry.prototype = Object.create(r.ExtrudeGeometry.prototype),
        r.TextGeometry.prototype.constructor = r.TextGeometry,
        r.TorusGeometry = function(t, e, n, i, o) {
            r.Geometry.call(this),
            this.type = "TorusGeometry",
            this.parameters = {
                radius: t,
                tube: e,
                radialSegments: n,
                tubularSegments: i,
                arc: o
            },
            t = t || 100,
            e = e || 40,
            n = n || 8,
            i = i || 6,
            o = o || 2 * Math.PI;
            for (var a = new r.Vector3, s = [], h = [], u = 0; u <= n; u++)
                for (var l = 0; l <= i; l++) {
                    var c = l / i * o
                      , p = u / n * Math.PI * 2;
                    a.x = t * Math.cos(c),
                    a.y = t * Math.sin(c);
                    var f = new r.Vector3;
                    f.x = (t + e * Math.cos(p)) * Math.cos(c),
                    f.y = (t + e * Math.cos(p)) * Math.sin(c),
                    f.z = e * Math.sin(p),
                    this.vertices.push(f),
                    s.push(new r.Vector2(l / i,u / n)),
                    h.push(f.clone().sub(a).normalize())
                }
            for (var u = 1; u <= n; u++)
                for (var l = 1; l <= i; l++) {
                    var d = (i + 1) * u + l - 1
                      , m = (i + 1) * (u - 1) + l - 1
                      , v = (i + 1) * (u - 1) + l
                      , g = (i + 1) * u + l
                      , y = new r.Face3(d,m,g,[h[d].clone(), h[m].clone(), h[g].clone()]);
                    this.faces.push(y),
                    this.faceVertexUvs[0].push([s[d].clone(), s[m].clone(), s[g].clone()]),
                    y = new r.Face3(m,v,g,[h[m].clone(), h[v].clone(), h[g].clone()]),
                    this.faces.push(y),
                    this.faceVertexUvs[0].push([s[m].clone(), s[v].clone(), s[g].clone()])
                }
            this.computeFaceNormals()
        }
        ,
        r.TorusGeometry.prototype = Object.create(r.Geometry.prototype),
        r.TorusGeometry.prototype.constructor = r.TorusGeometry,
        r.TorusKnotGeometry = function(t, e, n, i, o, a, s) {
            function h(t, e, n, i, o) {
                var a = Math.cos(t)
                  , s = Math.sin(t)
                  , h = e / n * t
                  , u = Math.cos(h)
                  , l = i * (2 + u) * .5 * a
                  , c = i * (2 + u) * s * .5
                  , p = o * i * Math.sin(h) * .5;
                return new r.Vector3(l,c,p)
            }
            r.Geometry.call(this),
            this.type = "TorusKnotGeometry",
            this.parameters = {
                radius: t,
                tube: e,
                radialSegments: n,
                tubularSegments: i,
                p: o,
                q: a,
                heightScale: s
            },
            t = t || 100,
            e = e || 40,
            n = n || 64,
            i = i || 8,
            o = o || 2,
            a = a || 3,
            s = s || 1;
            for (var u = new Array(n), l = new r.Vector3, c = new r.Vector3, p = new r.Vector3, f = 0; f < n; ++f) {
                u[f] = new Array(i);
                var d = f / n * 2 * o * Math.PI
                  , m = h(d, a, o, t, s)
                  , v = h(d + .01, a, o, t, s);
                l.subVectors(v, m),
                c.addVectors(v, m),
                p.crossVectors(l, c),
                c.crossVectors(p, l),
                p.normalize(),
                c.normalize();
                for (var g = 0; g < i; ++g) {
                    var y = g / i * 2 * Math.PI
                      , _ = -e * Math.cos(y)
                      , x = e * Math.sin(y)
                      , b = new r.Vector3;
                    b.x = m.x + _ * c.x + x * p.x,
                    b.y = m.y + _ * c.y + x * p.y,
                    b.z = m.z + _ * c.z + x * p.z,
                    u[f][g] = this.vertices.push(b) - 1
                }
            }
            for (var f = 0; f < n; ++f)
                for (var g = 0; g < i; ++g) {
                    var w = (f + 1) % n
                      , E = (g + 1) % i
                      , S = u[f][g]
                      , T = u[w][g]
                      , M = u[w][E]
                      , C = u[f][E]
                      , A = new r.Vector2(f / n,g / i)
                      , P = new r.Vector2((f + 1) / n,g / i)
                      , L = new r.Vector2((f + 1) / n,(g + 1) / i)
                      , R = new r.Vector2(f / n,(g + 1) / i);
                    this.faces.push(new r.Face3(S,T,C)),
                    this.faceVertexUvs[0].push([A, P, R]),
                    this.faces.push(new r.Face3(T,M,C)),
                    this.faceVertexUvs[0].push([P.clone(), L, R.clone()])
                }
            this.computeFaceNormals(),
            this.computeVertexNormals()
        }
        ,
        r.TorusKnotGeometry.prototype = Object.create(r.Geometry.prototype),
        r.TorusKnotGeometry.prototype.constructor = r.TorusKnotGeometry,
        r.TubeGeometry = function(t, e, n, i, o, a) {
            function s(t, e, n) {
                return L.vertices.push(new r.Vector3(t,e,n)) - 1
            }
            r.Geometry.call(this),
            this.type = "TubeGeometry",
            this.parameters = {
                path: t,
                segments: e,
                radius: n,
                radialSegments: i,
                closed: o,
                taper: a
            },
            e = e || 64,
            n = n || 1,
            i = i || 8,
            o = o || !1,
            a = a || r.TubeGeometry.NoTaper;
            var h, u, l, c, p, f, d, m, v, g, y, _, x, b, w, E, S, T, M, C, A, P = [], L = this, R = e + 1, k = new r.Vector3, O = new r.TubeGeometry.FrenetFrames(t,e,o), I = O.tangents, D = O.normals, U = O.binormals;
            for (this.tangents = I,
            this.normals = D,
            this.binormals = U,
            g = 0; g < R; g++)
                for (P[g] = [],
                c = g / (R - 1),
                v = t.getPointAt(c),
                h = I[g],
                u = D[g],
                l = U[g],
                f = n * a(c),
                y = 0; y < i; y++)
                    p = y / i * 2 * Math.PI,
                    d = -f * Math.cos(p),
                    m = f * Math.sin(p),
                    k.copy(v),
                    k.x += d * u.x + m * l.x,
                    k.y += d * u.y + m * l.y,
                    k.z += d * u.z + m * l.z,
                    P[g][y] = s(k.x, k.y, k.z);
            for (g = 0; g < e; g++)
                for (y = 0; y < i; y++)
                    _ = o ? (g + 1) % e : g + 1,
                    x = (y + 1) % i,
                    b = P[g][y],
                    w = P[_][y],
                    E = P[_][x],
                    S = P[g][x],
                    T = new r.Vector2(g / e,y / i),
                    M = new r.Vector2((g + 1) / e,y / i),
                    C = new r.Vector2((g + 1) / e,(y + 1) / i),
                    A = new r.Vector2(g / e,(y + 1) / i),
                    this.faces.push(new r.Face3(b,w,S)),
                    this.faceVertexUvs[0].push([T, M, A]),
                    this.faces.push(new r.Face3(w,E,S)),
                    this.faceVertexUvs[0].push([M.clone(), C, A.clone()]);
            this.computeFaceNormals(),
            this.computeVertexNormals()
        }
        ,
        r.TubeGeometry.prototype = Object.create(r.Geometry.prototype),
        r.TubeGeometry.prototype.constructor = r.TubeGeometry,
        r.TubeGeometry.NoTaper = function(t) {
            return 1
        }
        ,
        r.TubeGeometry.SinusoidalTaper = function(t) {
            return Math.sin(Math.PI * t)
        }
        ,
        r.TubeGeometry.FrenetFrames = function(t, e, n) {
            function i() {
                d[0] = new r.Vector3,
                m[0] = new r.Vector3,
                a = Number.MAX_VALUE,
                s = Math.abs(f[0].x),
                h = Math.abs(f[0].y),
                u = Math.abs(f[0].z),
                s <= a && (a = s,
                p.set(1, 0, 0)),
                h <= a && (a = h,
                p.set(0, 1, 0)),
                u <= a && p.set(0, 0, 1),
                v.crossVectors(f[0], p).normalize(),
                d[0].crossVectors(f[0], v),
                m[0].crossVectors(f[0], d[0])
            }
            var o, a, s, h, u, l, c, p = new r.Vector3, f = [], d = [], m = [], v = new r.Vector3, g = new r.Matrix4, y = e + 1;
            for (this.tangents = f,
            this.normals = d,
            this.binormals = m,
            l = 0; l < y; l++)
                c = l / (y - 1),
                f[l] = t.getTangentAt(c),
                f[l].normalize();
            for (i(),
            l = 1; l < y; l++)
                d[l] = d[l - 1].clone(),
                m[l] = m[l - 1].clone(),
                v.crossVectors(f[l - 1], f[l]),
                v.length() > Number.EPSILON && (v.normalize(),
                o = Math.acos(r.Math.clamp(f[l - 1].dot(f[l]), -1, 1)),
                d[l].applyMatrix4(g.makeRotationAxis(v, o))),
                m[l].crossVectors(f[l], d[l]);
            if (n)
                for (o = Math.acos(r.Math.clamp(d[0].dot(d[y - 1]), -1, 1)),
                o /= y - 1,
                f[0].dot(v.crossVectors(d[0], d[y - 1])) > 0 && (o = -o),
                l = 1; l < y; l++)
                    d[l].applyMatrix4(g.makeRotationAxis(f[l], o * l)),
                    m[l].crossVectors(f[l], d[l])
        }
        ,
        r.PolyhedronGeometry = function(t, e, n, i) {
            function o(t) {
                var e = t.normalize().clone();
                e.index = c.vertices.push(e) - 1;
                var n = h(t) / 2 / Math.PI + .5
                  , i = u(t) / Math.PI + .5;
                return e.uv = new r.Vector2(n,1 - i),
                e
            }
            function a(t, e, n, i) {
                var o = new r.Face3(t.index,e.index,n.index,[t.clone(), e.clone(), n.clone()],(void 0),i);
                c.faces.push(o),
                x.copy(t).add(e).add(n).divideScalar(3);
                var a = h(x);
                c.faceVertexUvs[0].push([l(t.uv, t, a), l(e.uv, e, a), l(n.uv, n, a)])
            }
            function s(t, e) {
                for (var n = Math.pow(2, e), r = o(c.vertices[t.a]), i = o(c.vertices[t.b]), s = o(c.vertices[t.c]), h = [], u = t.materialIndex, l = 0; l <= n; l++) {
                    h[l] = [];
                    for (var p = o(r.clone().lerp(s, l / n)), f = o(i.clone().lerp(s, l / n)), d = n - l, m = 0; m <= d; m++)
                        0 === m && l === n ? h[l][m] = p : h[l][m] = o(p.clone().lerp(f, m / d))
                }
                for (var l = 0; l < n; l++)
                    for (var m = 0; m < 2 * (n - l) - 1; m++) {
                        var v = Math.floor(m / 2);
                        m % 2 === 0 ? a(h[l][v + 1], h[l + 1][v], h[l][v], u) : a(h[l][v + 1], h[l + 1][v + 1], h[l + 1][v], u)
                    }
            }
            function h(t) {
                return Math.atan2(t.z, -t.x)
            }
            function u(t) {
                return Math.atan2(-t.y, Math.sqrt(t.x * t.x + t.z * t.z))
            }
            function l(t, e, n) {
                return n < 0 && 1 === t.x && (t = new r.Vector2(t.x - 1,t.y)),
                0 === e.x && 0 === e.z && (t = new r.Vector2(n / 2 / Math.PI + .5,t.y)),
                t.clone()
            }
            r.Geometry.call(this),
            this.type = "PolyhedronGeometry",
            this.parameters = {
                vertices: t,
                indices: e,
                radius: n,
                detail: i
            },
            n = n || 1,
            i = i || 0;
            for (var c = this, p = 0, f = t.length; p < f; p += 3)
                o(new r.Vector3(t[p],t[p + 1],t[p + 2]));
            for (var d = this.vertices, m = [], p = 0, v = 0, f = e.length; p < f; p += 3,
            v++) {
                var g = d[e[p]]
                  , y = d[e[p + 1]]
                  , _ = d[e[p + 2]];
                m[v] = new r.Face3(g.index,y.index,_.index,[g.clone(), y.clone(), _.clone()],(void 0),v)
            }
            for (var x = new r.Vector3, p = 0, f = m.length; p < f; p++)
                s(m[p], i);
            for (var p = 0, f = this.faceVertexUvs[0].length; p < f; p++) {
                var b = this.faceVertexUvs[0][p]
                  , w = b[0].x
                  , E = b[1].x
                  , S = b[2].x
                  , T = Math.max(w, E, S)
                  , M = Math.min(w, E, S);
                T > .9 && M < .1 && (w < .2 && (b[0].x += 1),
                E < .2 && (b[1].x += 1),
                S < .2 && (b[2].x += 1))
            }
            for (var p = 0, f = this.vertices.length; p < f; p++)
                this.vertices[p].multiplyScalar(n);
            this.mergeVertices(),
            this.computeFaceNormals(),
            this.boundingSphere = new r.Sphere(new r.Vector3,n)
        }
        ,
        r.PolyhedronGeometry.prototype = Object.create(r.Geometry.prototype),
        r.PolyhedronGeometry.prototype.constructor = r.PolyhedronGeometry,
        r.DodecahedronGeometry = function(t, e) {
            var n = (1 + Math.sqrt(5)) / 2
              , i = 1 / n
              , o = [-1, -1, -1, -1, -1, 1, -1, 1, -1, -1, 1, 1, 1, -1, -1, 1, -1, 1, 1, 1, -1, 1, 1, 1, 0, -i, -n, 0, -i, n, 0, i, -n, 0, i, n, -i, -n, 0, -i, n, 0, i, -n, 0, i, n, 0, -n, 0, -i, n, 0, -i, -n, 0, i, n, 0, i]
              , a = [3, 11, 7, 3, 7, 15, 3, 15, 13, 7, 19, 17, 7, 17, 6, 7, 6, 15, 17, 4, 8, 17, 8, 10, 17, 10, 6, 8, 0, 16, 8, 16, 2, 8, 2, 10, 0, 12, 1, 0, 1, 18, 0, 18, 16, 6, 10, 2, 6, 2, 13, 6, 13, 15, 2, 16, 18, 2, 18, 3, 2, 3, 13, 18, 1, 9, 18, 9, 11, 18, 11, 3, 4, 14, 12, 4, 12, 0, 4, 0, 8, 11, 9, 5, 11, 5, 19, 11, 19, 7, 19, 5, 14, 19, 14, 4, 19, 4, 17, 1, 12, 14, 1, 14, 5, 1, 5, 9];
            r.PolyhedronGeometry.call(this, o, a, t, e),
            this.type = "DodecahedronGeometry",
            this.parameters = {
                radius: t,
                detail: e
            }
        }
        ,
        r.DodecahedronGeometry.prototype = Object.create(r.PolyhedronGeometry.prototype),
        r.DodecahedronGeometry.prototype.constructor = r.DodecahedronGeometry,
        r.IcosahedronGeometry = function(t, e) {
            var n = (1 + Math.sqrt(5)) / 2
              , i = [-1, n, 0, 1, n, 0, -1, -n, 0, 1, -n, 0, 0, -1, n, 0, 1, n, 0, -1, -n, 0, 1, -n, n, 0, -1, n, 0, 1, -n, 0, -1, -n, 0, 1]
              , o = [0, 11, 5, 0, 5, 1, 0, 1, 7, 0, 7, 10, 0, 10, 11, 1, 5, 9, 5, 11, 4, 11, 10, 2, 10, 7, 6, 7, 1, 8, 3, 9, 4, 3, 4, 2, 3, 2, 6, 3, 6, 8, 3, 8, 9, 4, 9, 5, 2, 4, 11, 6, 2, 10, 8, 6, 7, 9, 8, 1];
            r.PolyhedronGeometry.call(this, i, o, t, e),
            this.type = "IcosahedronGeometry",
            this.parameters = {
                radius: t,
                detail: e
            }
        }
        ,
        r.IcosahedronGeometry.prototype = Object.create(r.PolyhedronGeometry.prototype),
        r.IcosahedronGeometry.prototype.constructor = r.IcosahedronGeometry,
        r.OctahedronGeometry = function(t, e) {
            var n = [1, 0, 0, -1, 0, 0, 0, 1, 0, 0, -1, 0, 0, 0, 1, 0, 0, -1]
              , i = [0, 2, 4, 0, 4, 3, 0, 3, 5, 0, 5, 2, 1, 2, 5, 1, 5, 3, 1, 3, 4, 1, 4, 2];
            r.PolyhedronGeometry.call(this, n, i, t, e),
            this.type = "OctahedronGeometry",
            this.parameters = {
                radius: t,
                detail: e
            }
        }
        ,
        r.OctahedronGeometry.prototype = Object.create(r.PolyhedronGeometry.prototype),
        r.OctahedronGeometry.prototype.constructor = r.OctahedronGeometry,
        r.TetrahedronGeometry = function(t, e) {
            var n = [1, 1, 1, -1, -1, 1, -1, 1, -1, 1, -1, -1]
              , i = [2, 1, 0, 0, 3, 2, 1, 3, 0, 2, 3, 1];
            r.PolyhedronGeometry.call(this, n, i, t, e),
            this.type = "TetrahedronGeometry",
            this.parameters = {
                radius: t,
                detail: e
            }
        }
        ,
        r.TetrahedronGeometry.prototype = Object.create(r.PolyhedronGeometry.prototype),
        r.TetrahedronGeometry.prototype.constructor = r.TetrahedronGeometry,
        r.ParametricGeometry = function(t, e, n) {
            r.Geometry.call(this),
            this.type = "ParametricGeometry",
            this.parameters = {
                func: t,
                slices: e,
                stacks: n
            };
            var i, o, a, s, h, u = this.vertices, l = this.faces, c = this.faceVertexUvs[0], p = e + 1;
            for (i = 0; i <= n; i++)
                for (h = i / n,
                o = 0; o <= e; o++)
                    s = o / e,
                    a = t(s, h),
                    u.push(a);
            var f, d, m, v, g, y, _, x;
            for (i = 0; i < n; i++)
                for (o = 0; o < e; o++)
                    f = i * p + o,
                    d = i * p + o + 1,
                    m = (i + 1) * p + o + 1,
                    v = (i + 1) * p + o,
                    g = new r.Vector2(o / e,i / n),
                    y = new r.Vector2((o + 1) / e,i / n),
                    _ = new r.Vector2((o + 1) / e,(i + 1) / n),
                    x = new r.Vector2(o / e,(i + 1) / n),
                    l.push(new r.Face3(f,d,v)),
                    c.push([g, y, x]),
                    l.push(new r.Face3(d,m,v)),
                    c.push([y.clone(), _, x.clone()]);
            this.computeFaceNormals(),
            this.computeVertexNormals()
        }
        ,
        r.ParametricGeometry.prototype = Object.create(r.Geometry.prototype),
        r.ParametricGeometry.prototype.constructor = r.ParametricGeometry,
        r.WireframeGeometry = function(t) {
            function e(t, e) {
                return t - e
            }
            r.BufferGeometry.call(this);
            var n = [0, 0]
              , i = {}
              , o = ["a", "b", "c"];
            if (t instanceof r.Geometry) {
                for (var a = t.vertices, s = t.faces, h = 0, u = new Uint32Array(6 * s.length), l = 0, c = s.length; l < c; l++)
                    for (var p = s[l], f = 0; f < 3; f++) {
                        n[0] = p[o[f]],
                        n[1] = p[o[(f + 1) % 3]],
                        n.sort(e);
                        var d = n.toString();
                        void 0 === i[d] && (u[2 * h] = n[0],
                        u[2 * h + 1] = n[1],
                        i[d] = !0,
                        h++)
                    }
                for (var m = new Float32Array(2 * h * 3), l = 0, c = h; l < c; l++)
                    for (var f = 0; f < 2; f++) {
                        var v = a[u[2 * l + f]]
                          , g = 6 * l + 3 * f;
                        m[g + 0] = v.x,
                        m[g + 1] = v.y,
                        m[g + 2] = v.z
                    }
                this.addAttribute("position", new r.BufferAttribute(m,3))
            } else if (t instanceof r.BufferGeometry)
                if (null !== t.index) {
                    var y = t.index.array
                      , a = t.attributes.position
                      , _ = t.groups
                      , h = 0;
                    0 === _.length && t.addGroup(0, y.length);
                    for (var u = new Uint32Array(2 * y.length), x = 0, b = _.length; x < b; ++x)
                        for (var w = _[x], E = w.start, S = w.count, l = E, T = E + S; l < T; l += 3)
                            for (var f = 0; f < 3; f++) {
                                n[0] = y[l + f],
                                n[1] = y[l + (f + 1) % 3],
                                n.sort(e);
                                var d = n.toString();
                                void 0 === i[d] && (u[2 * h] = n[0],
                                u[2 * h + 1] = n[1],
                                i[d] = !0,
                                h++)
                            }
                    for (var m = new Float32Array(2 * h * 3), l = 0, c = h; l < c; l++)
                        for (var f = 0; f < 2; f++) {
                            var g = 6 * l + 3 * f
                              , M = u[2 * l + f];
                            m[g + 0] = a.getX(M),
                            m[g + 1] = a.getY(M),
                            m[g + 2] = a.getZ(M)
                        }
                    this.addAttribute("position", new r.BufferAttribute(m,3))
                } else {
                    for (var a = t.attributes.position.array, h = a.length / 3, C = h / 3, m = new Float32Array(2 * h * 3), l = 0, c = C; l < c; l++)
                        for (var f = 0; f < 3; f++) {
                            var g = 18 * l + 6 * f
                              , A = 9 * l + 3 * f;
                            m[g + 0] = a[A],
                            m[g + 1] = a[A + 1],
                            m[g + 2] = a[A + 2];
                            var M = 9 * l + 3 * ((f + 1) % 3);
                            m[g + 3] = a[M],
                            m[g + 4] = a[M + 1],
                            m[g + 5] = a[M + 2]
                        }
                    this.addAttribute("position", new r.BufferAttribute(m,3))
                }
        }
        ,
        r.WireframeGeometry.prototype = Object.create(r.BufferGeometry.prototype),
        r.WireframeGeometry.prototype.constructor = r.WireframeGeometry,
        r.AxisHelper = function(t) {
            t = t || 1;
            var e = new Float32Array([0, 0, 0, t, 0, 0, 0, 0, 0, 0, t, 0, 0, 0, 0, 0, 0, t])
              , n = new Float32Array([1, 0, 0, 1, .6, 0, 0, 1, 0, .6, 1, 0, 0, 0, 1, 0, .6, 1])
              , i = new r.BufferGeometry;
            i.addAttribute("position", new r.BufferAttribute(e,3)),
            i.addAttribute("color", new r.BufferAttribute(n,3));
            var o = new r.LineBasicMaterial({
                vertexColors: r.VertexColors
            });
            r.LineSegments.call(this, i, o)
        }
        ,
        r.AxisHelper.prototype = Object.create(r.LineSegments.prototype),
        r.AxisHelper.prototype.constructor = r.AxisHelper,
        r.ArrowHelper = function() {
            var t = new r.Geometry;
            t.vertices.push(new r.Vector3(0,0,0), new r.Vector3(0,1,0));
            var e = new r.CylinderGeometry(0,.5,1,5,1);
            return e.translate(0, -.5, 0),
            function(n, i, o, a, s, h) {
                r.Object3D.call(this),
                void 0 === a && (a = 16776960),
                void 0 === o && (o = 1),
                void 0 === s && (s = .2 * o),
                void 0 === h && (h = .2 * s),
                this.position.copy(i),
                this.line = new r.Line(t,new r.LineBasicMaterial({
                    color: a
                })),
                this.line.matrixAutoUpdate = !1,
                this.add(this.line),
                this.cone = new r.Mesh(e,new r.MeshBasicMaterial({
                    color: a
                })),
                this.cone.matrixAutoUpdate = !1,
                this.add(this.cone),
                this.setDirection(n),
                this.setLength(o, s, h)
            }
        }(),
        r.ArrowHelper.prototype = Object.create(r.Object3D.prototype),
        r.ArrowHelper.prototype.constructor = r.ArrowHelper,
        r.ArrowHelper.prototype.setDirection = function() {
            var t, e = new r.Vector3;
            return function(n) {
                n.y > .99999 ? this.quaternion.set(0, 0, 0, 1) : n.y < -.99999 ? this.quaternion.set(1, 0, 0, 0) : (e.set(n.z, 0, -n.x).normalize(),
                t = Math.acos(n.y),
                this.quaternion.setFromAxisAngle(e, t))
            }
        }(),
        r.ArrowHelper.prototype.setLength = function(t, e, n) {
            void 0 === e && (e = .2 * t),
            void 0 === n && (n = .2 * e),
            this.line.scale.set(1, Math.max(0, t - e), 1),
            this.line.updateMatrix(),
            this.cone.scale.set(n, e, n),
            this.cone.position.y = t,
            this.cone.updateMatrix()
        }
        ,
        r.ArrowHelper.prototype.setColor = function(t) {
            this.line.material.color.set(t),
            this.cone.material.color.set(t)
        }
        ,
        r.BoxHelper = function(t) {
            var e = new Uint16Array([0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7])
              , n = new Float32Array(24)
              , i = new r.BufferGeometry;
            i.setIndex(new r.BufferAttribute(e,1)),
            i.addAttribute("position", new r.BufferAttribute(n,3)),
            r.LineSegments.call(this, i, new r.LineBasicMaterial({
                color: 16776960
            })),
            void 0 !== t && this.update(t)
        }
        ,
        r.BoxHelper.prototype = Object.create(r.LineSegments.prototype),
        r.BoxHelper.prototype.constructor = r.BoxHelper,
        r.BoxHelper.prototype.update = function() {
            var t = new r.Box3;
            return function(e) {
                if (t.setFromObject(e),
                !t.isEmpty()) {
                    var n = t.min
                      , r = t.max
                      , i = this.geometry.attributes.position
                      , o = i.array;
                    o[0] = r.x,
                    o[1] = r.y,
                    o[2] = r.z,
                    o[3] = n.x,
                    o[4] = r.y,
                    o[5] = r.z,
                    o[6] = n.x,
                    o[7] = n.y,
                    o[8] = r.z,
                    o[9] = r.x,
                    o[10] = n.y,
                    o[11] = r.z,
                    o[12] = r.x,
                    o[13] = r.y,
                    o[14] = n.z,
                    o[15] = n.x,
                    o[16] = r.y,
                    o[17] = n.z,
                    o[18] = n.x,
                    o[19] = n.y,
                    o[20] = n.z,
                    o[21] = r.x,
                    o[22] = n.y,
                    o[23] = n.z,
                    i.needsUpdate = !0,
                    this.geometry.computeBoundingSphere()
                }
            }
        }(),
        r.BoundingBoxHelper = function(t, e) {
            var n = void 0 !== e ? e : 8947848;
            this.object = t,
            this.box = new r.Box3,
            r.Mesh.call(this, new r.BoxGeometry(1,1,1), new r.MeshBasicMaterial({
                color: n,
                wireframe: !0
            }))
        }
        ,
        r.BoundingBoxHelper.prototype = Object.create(r.Mesh.prototype),
        r.BoundingBoxHelper.prototype.constructor = r.BoundingBoxHelper,
        r.BoundingBoxHelper.prototype.update = function() {
            this.box.setFromObject(this.object),
            this.box.size(this.scale),
            this.box.center(this.position)
        }
        ,
        r.CameraHelper = function(t) {
            function e(t, e, r) {
                n(t, r),
                n(e, r)
            }
            function n(t, e) {
                i.vertices.push(new r.Vector3),
                i.colors.push(new r.Color(e)),
                void 0 === a[t] && (a[t] = []),
                a[t].push(i.vertices.length - 1)
            }
            var i = new r.Geometry
              , o = new r.LineBasicMaterial({
                color: 16777215,
                vertexColors: r.FaceColors
            })
              , a = {}
              , s = 16755200
              , h = 16711680
              , u = 43775
              , l = 16777215
              , c = 3355443;
            e("n1", "n2", s),
            e("n2", "n4", s),
            e("n4", "n3", s),
            e("n3", "n1", s),
            e("f1", "f2", s),
            e("f2", "f4", s),
            e("f4", "f3", s),
            e("f3", "f1", s),
            e("n1", "f1", s),
            e("n2", "f2", s),
            e("n3", "f3", s),
            e("n4", "f4", s),
            e("p", "n1", h),
            e("p", "n2", h),
            e("p", "n3", h),
            e("p", "n4", h),
            e("u1", "u2", u),
            e("u2", "u3", u),
            e("u3", "u1", u),
            e("c", "t", l),
            e("p", "c", c),
            e("cn1", "cn2", c),
            e("cn3", "cn4", c),
            e("cf1", "cf2", c),
            e("cf3", "cf4", c),
            r.LineSegments.call(this, i, o),
            this.camera = t,
            this.camera.updateProjectionMatrix(),
            this.matrix = t.matrixWorld,
            this.matrixAutoUpdate = !1,
            this.pointMap = a,
            this.update()
        }
        ,
        r.CameraHelper.prototype = Object.create(r.LineSegments.prototype),
        r.CameraHelper.prototype.constructor = r.CameraHelper,
        r.CameraHelper.prototype.update = function() {
            function t(t, r, a, s) {
                i.set(r, a, s).unproject(o);
                var h = n[t];
                if (void 0 !== h)
                    for (var u = 0, l = h.length; u < l; u++)
                        e.vertices[h[u]].copy(i)
            }
            var e, n, i = new r.Vector3, o = new r.Camera;
            return function() {
                e = this.geometry,
                n = this.pointMap;
                var r = 1
                  , i = 1;
                o.projectionMatrix.copy(this.camera.projectionMatrix),
                t("c", 0, 0, -1),
                t("t", 0, 0, 1),
                t("n1", -r, -i, -1),
                t("n2", r, -i, -1),
                t("n3", -r, i, -1),
                t("n4", r, i, -1),
                t("f1", -r, -i, 1),
                t("f2", r, -i, 1),
                t("f3", -r, i, 1),
                t("f4", r, i, 1),
                t("u1", .7 * r, 1.1 * i, -1),
                t("u2", .7 * -r, 1.1 * i, -1),
                t("u3", 0, 2 * i, -1),
                t("cf1", -r, 0, 1),
                t("cf2", r, 0, 1),
                t("cf3", 0, -i, 1),
                t("cf4", 0, i, 1),
                t("cn1", -r, 0, -1),
                t("cn2", r, 0, -1),
                t("cn3", 0, -i, -1),
                t("cn4", 0, i, -1),
                e.verticesNeedUpdate = !0
            }
        }(),
        r.DirectionalLightHelper = function(t, e) {
            r.Object3D.call(this),
            this.light = t,
            this.light.updateMatrixWorld(),
            this.matrix = t.matrixWorld,
            this.matrixAutoUpdate = !1,
            e = e || 1;
            var n = new r.Geometry;
            n.vertices.push(new r.Vector3((-e),e,0), new r.Vector3(e,e,0), new r.Vector3(e,(-e),0), new r.Vector3((-e),(-e),0), new r.Vector3((-e),e,0));
            var i = new r.LineBasicMaterial({
                fog: !1
            });
            i.color.copy(this.light.color).multiplyScalar(this.light.intensity),
            this.lightPlane = new r.Line(n,i),
            this.add(this.lightPlane),
            n = new r.Geometry,
            n.vertices.push(new r.Vector3, new r.Vector3),
            i = new r.LineBasicMaterial({
                fog: !1
            }),
            i.color.copy(this.light.color).multiplyScalar(this.light.intensity),
            this.targetLine = new r.Line(n,i),
            this.add(this.targetLine),
            this.update()
        }
        ,
        r.DirectionalLightHelper.prototype = Object.create(r.Object3D.prototype),
        r.DirectionalLightHelper.prototype.constructor = r.DirectionalLightHelper,
        r.DirectionalLightHelper.prototype.dispose = function() {
            this.lightPlane.geometry.dispose(),
            this.lightPlane.material.dispose(),
            this.targetLine.geometry.dispose(),
            this.targetLine.material.dispose()
        }
        ,
        r.DirectionalLightHelper.prototype.update = function() {
            var t = new r.Vector3
              , e = new r.Vector3
              , n = new r.Vector3;
            return function() {
                t.setFromMatrixPosition(this.light.matrixWorld),
                e.setFromMatrixPosition(this.light.target.matrixWorld),
                n.subVectors(e, t),
                this.lightPlane.lookAt(n),
                this.lightPlane.material.color.copy(this.light.color).multiplyScalar(this.light.intensity),
                this.targetLine.geometry.vertices[1].copy(n),
                this.targetLine.geometry.verticesNeedUpdate = !0,
                this.targetLine.material.color.copy(this.lightPlane.material.color)
            }
        }(),
        r.EdgesHelper = function(t, e, n) {
            var i = void 0 !== e ? e : 16777215;
            r.LineSegments.call(this, new r.EdgesGeometry(t.geometry,n), new r.LineBasicMaterial({
                color: i
            })),
            this.matrix = t.matrixWorld,
            this.matrixAutoUpdate = !1
        }
        ,
        r.EdgesHelper.prototype = Object.create(r.LineSegments.prototype),
        r.EdgesHelper.prototype.constructor = r.EdgesHelper,
        r.FaceNormalsHelper = function(t, e, n, i) {
            this.object = t,
            this.size = void 0 !== e ? e : 1;
            var o = void 0 !== n ? n : 16776960
              , a = void 0 !== i ? i : 1
              , s = 0
              , h = this.object.geometry;
            h instanceof r.Geometry ? s = h.faces.length : console.warn("THREE.FaceNormalsHelper: only THREE.Geometry is supported. Use THREE.VertexNormalsHelper, instead.");
            var u = new r.BufferGeometry
              , l = new r.Float32Attribute(2 * s * 3,3);
            u.addAttribute("position", l),
            r.LineSegments.call(this, u, new r.LineBasicMaterial({
                color: o,
                linewidth: a
            })),
            this.matrixAutoUpdate = !1,
            this.update()
        }
        ,
        r.FaceNormalsHelper.prototype = Object.create(r.LineSegments.prototype),
        r.FaceNormalsHelper.prototype.constructor = r.FaceNormalsHelper,
        r.FaceNormalsHelper.prototype.update = function() {
            var t = new r.Vector3
              , e = new r.Vector3
              , n = new r.Matrix3;
            return function() {
                this.object.updateMatrixWorld(!0),
                n.getNormalMatrix(this.object.matrixWorld);
                for (var r = this.object.matrixWorld, i = this.geometry.attributes.position, o = this.object.geometry, a = o.vertices, s = o.faces, h = 0, u = 0, l = s.length; u < l; u++) {
                    var c = s[u]
                      , p = c.normal;
                    t.copy(a[c.a]).add(a[c.b]).add(a[c.c]).divideScalar(3).applyMatrix4(r),
                    e.copy(p).applyMatrix3(n).normalize().multiplyScalar(this.size).add(t),
                    i.setXYZ(h, t.x, t.y, t.z),
                    h += 1,
                    i.setXYZ(h, e.x, e.y, e.z),
                    h += 1
                }
                return i.needsUpdate = !0,
                this
            }
        }(),
        r.GridHelper = function(t, e) {
            var n = new r.Geometry
              , i = new r.LineBasicMaterial({
                vertexColors: r.VertexColors
            });
            this.color1 = new r.Color(4473924),
            this.color2 = new r.Color(8947848);
            for (var o = -t; o <= t; o += e) {
                n.vertices.push(new r.Vector3((-t),0,o), new r.Vector3(t,0,o), new r.Vector3(o,0,(-t)), new r.Vector3(o,0,t));
                var a = 0 === o ? this.color1 : this.color2;
                n.colors.push(a, a, a, a)
            }
            r.LineSegments.call(this, n, i)
        }
        ,
        r.GridHelper.prototype = Object.create(r.LineSegments.prototype),
        r.GridHelper.prototype.constructor = r.GridHelper,
        r.GridHelper.prototype.setColors = function(t, e) {
            this.color1.set(t),
            this.color2.set(e),
            this.geometry.colorsNeedUpdate = !0
        }
        ,
        r.HemisphereLightHelper = function(t, e) {
            r.Object3D.call(this),
            this.light = t,
            this.light.updateMatrixWorld(),
            this.matrix = t.matrixWorld,
            this.matrixAutoUpdate = !1,
            this.colors = [new r.Color, new r.Color];
            var n = new r.SphereGeometry(e,4,2);
            n.rotateX(-Math.PI / 2);
            for (var i = 0, o = 8; i < o; i++)
                n.faces[i].color = this.colors[i < 4 ? 0 : 1];
            var a = new r.MeshBasicMaterial({
                vertexColors: r.FaceColors,
                wireframe: !0
            });
            this.lightSphere = new r.Mesh(n,a),
            this.add(this.lightSphere),
            this.update()
        }
        ,
        r.HemisphereLightHelper.prototype = Object.create(r.Object3D.prototype),
        r.HemisphereLightHelper.prototype.constructor = r.HemisphereLightHelper,
        r.HemisphereLightHelper.prototype.dispose = function() {
            this.lightSphere.geometry.dispose(),
            this.lightSphere.material.dispose()
        }
        ,
        r.HemisphereLightHelper.prototype.update = function() {
            var t = new r.Vector3;
            return function() {
                this.colors[0].copy(this.light.color).multiplyScalar(this.light.intensity),
                this.colors[1].copy(this.light.groundColor).multiplyScalar(this.light.intensity),
                this.lightSphere.lookAt(t.setFromMatrixPosition(this.light.matrixWorld).negate()),
                this.lightSphere.geometry.colorsNeedUpdate = !0
            }
        }(),
        r.PointLightHelper = function(t, e) {
            this.light = t,
            this.light.updateMatrixWorld();
            var n = new r.SphereGeometry(e,4,2)
              , i = new r.MeshBasicMaterial({
                wireframe: !0,
                fog: !1
            });
            i.color.copy(this.light.color).multiplyScalar(this.light.intensity),
            r.Mesh.call(this, n, i),
            this.matrix = this.light.matrixWorld,
            this.matrixAutoUpdate = !1
        }
        ,
        r.PointLightHelper.prototype = Object.create(r.Mesh.prototype),
        r.PointLightHelper.prototype.constructor = r.PointLightHelper,
        r.PointLightHelper.prototype.dispose = function() {
            this.geometry.dispose(),
            this.material.dispose()
        }
        ,
        r.PointLightHelper.prototype.update = function() {
            this.material.color.copy(this.light.color).multiplyScalar(this.light.intensity)
        }
        ,
        r.SkeletonHelper = function(t) {
            this.bones = this.getBoneList(t);
            for (var e = new r.Geometry, n = 0; n < this.bones.length; n++) {
                var i = this.bones[n];
                i.parent instanceof r.Bone && (e.vertices.push(new r.Vector3),
                e.vertices.push(new r.Vector3),
                e.colors.push(new r.Color(0,0,1)),
                e.colors.push(new r.Color(0,1,0)))
            }
            e.dynamic = !0;
            var o = new r.LineBasicMaterial({
                vertexColors: r.VertexColors,
                depthTest: !1,
                depthWrite: !1,
                transparent: !0
            });
            r.LineSegments.call(this, e, o),
            this.root = t,
            this.matrix = t.matrixWorld,
            this.matrixAutoUpdate = !1,
            this.update()
        }
        ,
        r.SkeletonHelper.prototype = Object.create(r.LineSegments.prototype),
        r.SkeletonHelper.prototype.constructor = r.SkeletonHelper,
        r.SkeletonHelper.prototype.getBoneList = function(t) {
            var e = [];
            t instanceof r.Bone && e.push(t);
            for (var n = 0; n < t.children.length; n++)
                e.push.apply(e, this.getBoneList(t.children[n]));
            return e
        }
        ,
        r.SkeletonHelper.prototype.update = function() {
            for (var t = this.geometry, e = (new r.Matrix4).getInverse(this.root.matrixWorld), n = new r.Matrix4, i = 0, o = 0; o < this.bones.length; o++) {
                var a = this.bones[o];
                a.parent instanceof r.Bone && (n.multiplyMatrices(e, a.matrixWorld),
                t.vertices[i].setFromMatrixPosition(n),
                n.multiplyMatrices(e, a.parent.matrixWorld),
                t.vertices[i + 1].setFromMatrixPosition(n),
                i += 2)
            }
            t.verticesNeedUpdate = !0,
            t.computeBoundingSphere()
        }
        ,
        r.SpotLightHelper = function(t) {
            r.Object3D.call(this),
            this.light = t,
            this.light.updateMatrixWorld(),
            this.matrix = t.matrixWorld,
            this.matrixAutoUpdate = !1;
            var e = new r.CylinderGeometry(0,1,1,8,1,(!0));
            e.translate(0, -.5, 0),
            e.rotateX(-Math.PI / 2);
            var n = new r.MeshBasicMaterial({
                wireframe: !0,
                fog: !1
            });
            this.cone = new r.Mesh(e,n),
            this.add(this.cone),
            this.update()
        }
        ,
        r.SpotLightHelper.prototype = Object.create(r.Object3D.prototype),
        r.SpotLightHelper.prototype.constructor = r.SpotLightHelper,
        r.SpotLightHelper.prototype.dispose = function() {
            this.cone.geometry.dispose(),
            this.cone.material.dispose()
        }
        ,
        r.SpotLightHelper.prototype.update = function() {
            var t = new r.Vector3
              , e = new r.Vector3;
            return function() {
                var n = this.light.distance ? this.light.distance : 1e4
                  , r = n * Math.tan(this.light.angle);
                this.cone.scale.set(r, r, n),
                t.setFromMatrixPosition(this.light.matrixWorld),
                e.setFromMatrixPosition(this.light.target.matrixWorld),
                this.cone.lookAt(e.sub(t)),
                this.cone.material.color.copy(this.light.color).multiplyScalar(this.light.intensity)
            }
        }(),
        r.VertexNormalsHelper = function(t, e, n, i) {
            this.object = t,
            this.size = void 0 !== e ? e : 1;
            var o = void 0 !== n ? n : 16711680
              , a = void 0 !== i ? i : 1
              , s = 0
              , h = this.object.geometry;
            h instanceof r.Geometry ? s = 3 * h.faces.length : h instanceof r.BufferGeometry && (s = h.attributes.normal.count);
            var u = new r.BufferGeometry
              , l = new r.Float32Attribute(2 * s * 3,3);
            u.addAttribute("position", l),
            r.LineSegments.call(this, u, new r.LineBasicMaterial({
                color: o,
                linewidth: a
            })),
            this.matrixAutoUpdate = !1,
            this.update()
        }
        ,
        r.VertexNormalsHelper.prototype = Object.create(r.LineSegments.prototype),
        r.VertexNormalsHelper.prototype.constructor = r.VertexNormalsHelper,
        r.VertexNormalsHelper.prototype.update = function() {
            var t = new r.Vector3
              , e = new r.Vector3
              , n = new r.Matrix3;
            return function() {
                var i = ["a", "b", "c"];
                this.object.updateMatrixWorld(!0),
                n.getNormalMatrix(this.object.matrixWorld);
                var o = this.object.matrixWorld
                  , a = this.geometry.attributes.position
                  , s = this.object.geometry;
                if (s instanceof r.Geometry)
                    for (var h = s.vertices, u = s.faces, l = 0, c = 0, p = u.length; c < p; c++)
                        for (var f = u[c], d = 0, m = f.vertexNormals.length; d < m; d++) {
                            var v = h[f[i[d]]]
                              , g = f.vertexNormals[d];
                            t.copy(v).applyMatrix4(o),
                            e.copy(g).applyMatrix3(n).normalize().multiplyScalar(this.size).add(t),
                            a.setXYZ(l, t.x, t.y, t.z),
                            l += 1,
                            a.setXYZ(l, e.x, e.y, e.z),
                            l += 1
                        }
                else if (s instanceof r.BufferGeometry)
                    for (var y = s.attributes.position, _ = s.attributes.normal, l = 0, d = 0, m = y.count; d < m; d++)
                        t.set(y.getX(d), y.getY(d), y.getZ(d)).applyMatrix4(o),
                        e.set(_.getX(d), _.getY(d), _.getZ(d)),
                        e.applyMatrix3(n).normalize().multiplyScalar(this.size).add(t),
                        a.setXYZ(l, t.x, t.y, t.z),
                        l += 1,
                        a.setXYZ(l, e.x, e.y, e.z),
                        l += 1;
                return a.needsUpdate = !0,
                this
            }
        }(),
        r.WireframeHelper = function(t, e) {
            var n = void 0 !== e ? e : 16777215;
            r.LineSegments.call(this, new r.WireframeGeometry(t.geometry), new r.LineBasicMaterial({
                color: n
            })),
            this.matrix = t.matrixWorld,
            this.matrixAutoUpdate = !1
        }
        ,
        r.WireframeHelper.prototype = Object.create(r.LineSegments.prototype),
        r.WireframeHelper.prototype.constructor = r.WireframeHelper,
        r.ImmediateRenderObject = function(t) {
            r.Object3D.call(this),
            this.material = t,
            this.render = function(t) {}
        }
        ,
        r.ImmediateRenderObject.prototype = Object.create(r.Object3D.prototype),
        r.ImmediateRenderObject.prototype.constructor = r.ImmediateRenderObject,
        r.MorphBlendMesh = function(t, e) {
            r.Mesh.call(this, t, e),
            this.animationsMap = {},
            this.animationsList = [];
            var n = this.geometry.morphTargets.length
              , i = "__default"
              , o = 0
              , a = n - 1
              , s = n / 1;
            this.createAnimation(i, o, a, s),
            this.setAnimationWeight(i, 1)
        }
        ,
        r.MorphBlendMesh.prototype = Object.create(r.Mesh.prototype),
        r.MorphBlendMesh.prototype.constructor = r.MorphBlendMesh,
        r.MorphBlendMesh.prototype.createAnimation = function(t, e, n, r) {
            var i = {
                start: e,
                end: n,
                length: n - e + 1,
                fps: r,
                duration: (n - e) / r,
                lastFrame: 0,
                currentFrame: 0,
                active: !1,
                time: 0,
                direction: 1,
                weight: 1,
                directionBackwards: !1,
                mirroredLoop: !1
            };
            this.animationsMap[t] = i,
            this.animationsList.push(i)
        }
        ,
        r.MorphBlendMesh.prototype.autoCreateAnimations = function(t) {
            for (var e, n = /([a-z]+)_?(\d+)/i, r = {}, i = this.geometry, o = 0, a = i.morphTargets.length; o < a; o++) {
                var s = i.morphTargets[o]
                  , h = s.name.match(n);
                if (h && h.length > 1) {
                    var u = h[1];
                    r[u] || (r[u] = {
                        start: 1 / 0,
                        end: -(1 / 0)
                    });
                    var l = r[u];
                    o < l.start && (l.start = o),
                    o > l.end && (l.end = o),
                    e || (e = u)
                }
            }
            for (var u in r) {
                var l = r[u];
                this.createAnimation(u, l.start, l.end, t)
            }
            this.firstAnimation = e
        }
        ,
        r.MorphBlendMesh.prototype.setAnimationDirectionForward = function(t) {
            var e = this.animationsMap[t];
            e && (e.direction = 1,
            e.directionBackwards = !1)
        }
        ,
        r.MorphBlendMesh.prototype.setAnimationDirectionBackward = function(t) {
            var e = this.animationsMap[t];
            e && (e.direction = -1,
            e.directionBackwards = !0)
        }
        ,
        r.MorphBlendMesh.prototype.setAnimationFPS = function(t, e) {
            var n = this.animationsMap[t];
            n && (n.fps = e,
            n.duration = (n.end - n.start) / n.fps)
        }
        ,
        r.MorphBlendMesh.prototype.setAnimationDuration = function(t, e) {
            var n = this.animationsMap[t];
            n && (n.duration = e,
            n.fps = (n.end - n.start) / n.duration)
        }
        ,
        r.MorphBlendMesh.prototype.setAnimationWeight = function(t, e) {
            var n = this.animationsMap[t];
            n && (n.weight = e)
        }
        ,
        r.MorphBlendMesh.prototype.setAnimationTime = function(t, e) {
            var n = this.animationsMap[t];
            n && (n.time = e)
        }
        ,
        r.MorphBlendMesh.prototype.getAnimationTime = function(t) {
            var e = 0
              , n = this.animationsMap[t];
            return n && (e = n.time),
            e
        }
        ,
        r.MorphBlendMesh.prototype.getAnimationDuration = function(t) {
            var e = -1
              , n = this.animationsMap[t];
            return n && (e = n.duration),
            e
        }
        ,
        r.MorphBlendMesh.prototype.playAnimation = function(t) {
            var e = this.animationsMap[t];
            e ? (e.time = 0,
            e.active = !0) : console.warn("THREE.MorphBlendMesh: animation[" + t + "] undefined in .playAnimation()")
        }
        ,
        r.MorphBlendMesh.prototype.stopAnimation = function(t) {
            var e = this.animationsMap[t];
            e && (e.active = !1)
        }
        ,
        r.MorphBlendMesh.prototype.update = function(t) {
            for (var e = 0, n = this.animationsList.length; e < n; e++) {
                var i = this.animationsList[e];
                if (i.active) {
                    var o = i.duration / i.length;
                    i.time += i.direction * t,
                    i.mirroredLoop ? (i.time > i.duration || i.time < 0) && (i.direction *= -1,
                    i.time > i.duration && (i.time = i.duration,
                    i.directionBackwards = !0),
                    i.time < 0 && (i.time = 0,
                    i.directionBackwards = !1)) : (i.time = i.time % i.duration,
                    i.time < 0 && (i.time += i.duration));
                    var a = i.start + r.Math.clamp(Math.floor(i.time / o), 0, i.length - 1)
                      , s = i.weight;
                    a !== i.currentFrame && (this.morphTargetInfluences[i.lastFrame] = 0,
                    this.morphTargetInfluences[i.currentFrame] = 1 * s,
                    this.morphTargetInfluences[a] = 0,
                    i.lastFrame = i.currentFrame,
                    i.currentFrame = a);
                    var h = i.time % o / o;
                    i.directionBackwards && (h = 1 - h),
                    i.currentFrame !== i.lastFrame ? (this.morphTargetInfluences[i.currentFrame] = h * s,
                    this.morphTargetInfluences[i.lastFrame] = (1 - h) * s) : this.morphTargetInfluences[i.currentFrame] = s
                }
            }
        }
    }
    , {}],
    20: [function(t, e, n) {
        function r() {
            this.protocol = null ,
            this.slashes = null ,
            this.auth = null ,
            this.host = null ,
            this.port = null ,
            this.hostname = null ,
            this.hash = null ,
            this.search = null ,
            this.query = null ,
            this.pathname = null ,
            this.path = null ,
            this.href = null
        }
        function i(t, e, n) {
            if (t && u(t) && t instanceof r)
                return t;
            var i = new r;
            return i.parse(t, e, n),
            i
        }
        function o(t) {
            return h(t) && (t = i(t)),
            t instanceof r ? t.format() : r.prototype.format.call(t)
        }
        function a(t, e) {
            return i(t, !1, !0).resolve(e)
        }
        function s(t, e) {
            return t ? i(t, !1, !0).resolveObject(e) : e
        }
        function h(t) {
            return "string" == typeof t
        }
        function u(t) {
            return "object" == typeof t && null !== t
        }
        function l(t) {
            return null === t
        }
        function c(t) {
            return null == t
        }
        var p = t("punycode");
        n.parse = i,
        n.resolve = a,
        n.resolveObject = s,
        n.format = o,
        n.Url = r;
        var f = /^([a-z0-9.+-]+:)/i
          , d = /:[0-9]*$/
          , m = ["<", ">", '"', "`", " ", "\r", "\n", "\t"]
          , v = ["{", "}", "|", "\\", "^", "`"].concat(m)
          , g = ["'"].concat(v)
          , y = ["%", "/", "?", ";", "#"].concat(g)
          , _ = ["/", "?", "#"]
          , x = 255
          , b = /^[a-z0-9A-Z_-]{0,63}$/
          , w = /^([a-z0-9A-Z_-]{0,63})(.*)$/
          , E = {
            javascript: !0,
            "javascript:": !0
        }
          , S = {
            javascript: !0,
            "javascript:": !0
        }
          , T = {
            http: !0,
            https: !0,
            ftp: !0,
            gopher: !0,
            file: !0,
            "http:": !0,
            "https:": !0,
            "ftp:": !0,
            "gopher:": !0,
            "file:": !0
        }
          , M = t("querystring");
        r.prototype.parse = function(t, e, n) {
            if (!h(t))
                throw new TypeError("Parameter 'url' must be a string, not " + typeof t);
            var r = t;
            r = r.trim();
            var i = f.exec(r);
            if (i) {
                i = i[0];
                var o = i.toLowerCase();
                this.protocol = o,
                r = r.substr(i.length)
            }
            if (n || i || r.match(/^\/\/[^@\/]+@[^@\/]+/)) {
                var a = "//" === r.substr(0, 2);
                !a || i && S[i] || (r = r.substr(2),
                this.slashes = !0)
            }
            if (!S[i] && (a || i && !T[i])) {
                for (var s = -1, u = 0; u < _.length; u++) {
                    var l = r.indexOf(_[u]);
                    l !== -1 && (s === -1 || l < s) && (s = l)
                }
                var c, d;
                d = s === -1 ? r.lastIndexOf("@") : r.lastIndexOf("@", s),
                d !== -1 && (c = r.slice(0, d),
                r = r.slice(d + 1),
                this.auth = decodeURIComponent(c)),
                s = -1;
                for (var u = 0; u < y.length; u++) {
                    var l = r.indexOf(y[u]);
                    l !== -1 && (s === -1 || l < s) && (s = l)
                }
                s === -1 && (s = r.length),
                this.host = r.slice(0, s),
                r = r.slice(s),
                this.parseHost(),
                this.hostname = this.hostname || "";
                var m = "[" === this.hostname[0] && "]" === this.hostname[this.hostname.length - 1];
                if (!m)
                    for (var v = this.hostname.split(/\./), u = 0, C = v.length; u < C; u++) {
                        var A = v[u];
                        if (A && !A.match(b)) {
                            for (var P = "", L = 0, R = A.length; L < R; L++)
                                P += A.charCodeAt(L) > 127 ? "x" : A[L];
                            if (!P.match(b)) {
                                var k = v.slice(0, u)
                                  , O = v.slice(u + 1)
                                  , I = A.match(w);
                                I && (k.push(I[1]),
                                O.unshift(I[2])),
                                O.length && (r = "/" + O.join(".") + r),
                                this.hostname = k.join(".");
                                break
                            }
                        }
                    }
                if (this.hostname.length > x ? this.hostname = "" : this.hostname = this.hostname.toLowerCase(),
                !m) {
                    for (var D = this.hostname.split("."), U = [], u = 0; u < D.length; ++u) {
                        var B = D[u];
                        U.push(B.match(/[^A-Za-z0-9_-]/) ? "xn--" + p.encode(B) : B)
                    }
                    this.hostname = U.join(".")
                }
                var F = this.port ? ":" + this.port : ""
                  , N = this.hostname || "";
                this.host = N + F,
                this.href += this.host,
                m && (this.hostname = this.hostname.substr(1, this.hostname.length - 2),
                "/" !== r[0] && (r = "/" + r))
            }
            if (!E[o])
                for (var u = 0, C = g.length; u < C; u++) {
                    var G = g[u]
                      , V = encodeURIComponent(G);
                    V === G && (V = escape(G)),
                    r = r.split(G).join(V)
                }
            var z = r.indexOf("#");
            z !== -1 && (this.hash = r.substr(z),
            r = r.slice(0, z));
            var H = r.indexOf("?");
            if (H !== -1 ? (this.search = r.substr(H),
            this.query = r.substr(H + 1),
            e && (this.query = M.parse(this.query)),
            r = r.slice(0, H)) : e && (this.search = "",
            this.query = {}),
            r && (this.pathname = r),
            T[o] && this.hostname && !this.pathname && (this.pathname = "/"),
            this.pathname || this.search) {
                var F = this.pathname || ""
                  , B = this.search || "";
                this.path = F + B
            }
            return this.href = this.format(),
            this
        }
        ,
        r.prototype.format = function() {
            var t = this.auth || "";
            t && (t = encodeURIComponent(t),
            t = t.replace(/%3A/i, ":"),
            t += "@");
            var e = this.protocol || ""
              , n = this.pathname || ""
              , r = this.hash || ""
              , i = !1
              , o = "";
            this.host ? i = t + this.host : this.hostname && (i = t + (this.hostname.indexOf(":") === -1 ? this.hostname : "[" + this.hostname + "]"),
            this.port && (i += ":" + this.port)),
            this.query && u(this.query) && Object.keys(this.query).length && (o = M.stringify(this.query));
            var a = this.search || o && "?" + o || "";
            return e && ":" !== e.substr(-1) && (e += ":"),
            this.slashes || (!e || T[e]) && i !== !1 ? (i = "//" + (i || ""),
            n && "/" !== n.charAt(0) && (n = "/" + n)) : i || (i = ""),
            r && "#" !== r.charAt(0) && (r = "#" + r),
            a && "?" !== a.charAt(0) && (a = "?" + a),
            n = n.replace(/[?#]/g, function(t) {
                return encodeURIComponent(t)
            }),
            a = a.replace("#", "%23"),
            e + i + n + a + r
        }
        ,
        r.prototype.resolve = function(t) {
            return this.resolveObject(i(t, !1, !0)).format()
        }
        ,
        r.prototype.resolveObject = function(t) {
            if (h(t)) {
                var e = new r;
                e.parse(t, !1, !0),
                t = e
            }
            var n = new r;
            if (Object.keys(this).forEach(function(t) {
                n[t] = this[t]
            }, this),
            n.hash = t.hash,
            "" === t.href)
                return n.href = n.format(),
                n;
            if (t.slashes && !t.protocol)
                return Object.keys(t).forEach(function(e) {
                    "protocol" !== e && (n[e] = t[e])
                }),
                T[n.protocol] && n.hostname && !n.pathname && (n.path = n.pathname = "/"),
                n.href = n.format(),
                n;
            if (t.protocol && t.protocol !== n.protocol) {
                if (!T[t.protocol])
                    return Object.keys(t).forEach(function(e) {
                        n[e] = t[e]
                    }),
                    n.href = n.format(),
                    n;
                if (n.protocol = t.protocol,
                t.host || S[t.protocol])
                    n.pathname = t.pathname;
                else {
                    for (var i = (t.pathname || "").split("/"); i.length && !(t.host = i.shift()); )
                        ;
                    t.host || (t.host = ""),
                    t.hostname || (t.hostname = ""),
                    "" !== i[0] && i.unshift(""),
                    i.length < 2 && i.unshift(""),
                    n.pathname = i.join("/")
                }
                if (n.search = t.search,
                n.query = t.query,
                n.host = t.host || "",
                n.auth = t.auth,
                n.hostname = t.hostname || t.host,
                n.port = t.port,
                n.pathname || n.search) {
                    var o = n.pathname || ""
                      , a = n.search || "";
                    n.path = o + a
                }
                return n.slashes = n.slashes || t.slashes,
                n.href = n.format(),
                n
            }
            var s = n.pathname && "/" === n.pathname.charAt(0)
              , u = t.host || t.pathname && "/" === t.pathname.charAt(0)
              , p = u || s || n.host && t.pathname
              , f = p
              , d = n.pathname && n.pathname.split("/") || []
              , i = t.pathname && t.pathname.split("/") || []
              , m = n.protocol && !T[n.protocol];
            if (m && (n.hostname = "",
            n.port = null ,
            n.host && ("" === d[0] ? d[0] = n.host : d.unshift(n.host)),
            n.host = "",
            t.protocol && (t.hostname = null ,
            t.port = null ,
            t.host && ("" === i[0] ? i[0] = t.host : i.unshift(t.host)),
            t.host = null ),
            p = p && ("" === i[0] || "" === d[0])),
            u)
                n.host = t.host || "" === t.host ? t.host : n.host,
                n.hostname = t.hostname || "" === t.hostname ? t.hostname : n.hostname,
                n.search = t.search,
                n.query = t.query,
                d = i;
            else if (i.length)
                d || (d = []),
                d.pop(),
                d = d.concat(i),
                n.search = t.search,
                n.query = t.query;
            else if (!c(t.search)) {
                if (m) {
                    n.hostname = n.host = d.shift();
                    var v = !!(n.host && n.host.indexOf("@") > 0) && n.host.split("@");
                    v && (n.auth = v.shift(),
                    n.host = n.hostname = v.shift())
                }
                return n.search = t.search,
                n.query = t.query,
                l(n.pathname) && l(n.search) || (n.path = (n.pathname ? n.pathname : "") + (n.search ? n.search : "")),
                n.href = n.format(),
                n
            }
            if (!d.length)
                return n.pathname = null ,
                n.search ? n.path = "/" + n.search : n.path = null ,
                n.href = n.format(),
                n;
            for (var g = d.slice(-1)[0], y = (n.host || t.host) && ("." === g || ".." === g) || "" === g, _ = 0, x = d.length; x >= 0; x--)
                g = d[x],
                "." == g ? d.splice(x, 1) : ".." === g ? (d.splice(x, 1),
                _++) : _ && (d.splice(x, 1),
                _--);
            if (!p && !f)
                for (; _--; _)
                    d.unshift("..");
            !p || "" === d[0] || d[0] && "/" === d[0].charAt(0) || d.unshift(""),
            y && "/" !== d.join("/").substr(-1) && d.push("");
            var b = "" === d[0] || d[0] && "/" === d[0].charAt(0);
            if (m) {
                n.hostname = n.host = b ? "" : d.length ? d.shift() : "";
                var v = !!(n.host && n.host.indexOf("@") > 0) && n.host.split("@");
                v && (n.auth = v.shift(),
                n.host = n.hostname = v.shift())
            }
            return p = p || n.host && d.length,
            p && !b && d.unshift(""),
            d.length ? n.pathname = d.join("/") : (n.pathname = null ,
            n.path = null ),
            l(n.pathname) && l(n.search) || (n.path = (n.pathname ? n.pathname : "") + (n.search ? n.search : "")),
            n.auth = t.auth || n.auth,
            n.slashes = n.slashes || t.slashes,
            n.href = n.format(),
            n
        }
        ,
        r.prototype.parseHost = function() {
            var t = this.host
              , e = d.exec(t);
            e && (e = e[0],
            ":" !== e && (this.port = e.substr(1)),
            t = t.substr(0, t.length - e.length)),
            t && (this.hostname = t)
        }
    }
    , {
        punycode: 8,
        querystring: 11
    }],
    21: [function(t, e, n) {
        !function() {
            function t(t, e, n) {
                return t.call.apply(t.bind, arguments)
            }
            function n(t, e, n) {
                if (!t)
                    throw Error();
                if (2 < arguments.length) {
                    var r = Array.prototype.slice.call(arguments, 2);
                    return function() {
                        var n = Array.prototype.slice.call(arguments);
                        return Array.prototype.unshift.apply(n, r),
                        t.apply(e, n)
                    }
                }
                return function() {
                    return t.apply(e, arguments)
                }
            }
            function r(e, i, o) {
                return r = Function.prototype.bind && -1 != Function.prototype.bind.toString().indexOf("native code") ? t : n,
                r.apply(null , arguments)
            }
            function i(t, e) {
                this.a = t,
                this.m = e || t,
                this.c = this.m.document
            }
            function o(t, e, n, r) {
                if (e = t.c.createElement(e),
                n)
                    for (var i in n)
                        n.hasOwnProperty(i) && ("style" == i ? e.style.cssText = n[i] : e.setAttribute(i, n[i]));
                return r && e.appendChild(t.c.createTextNode(r)),
                e
            }
            function a(t, e, n) {
                t = t.c.getElementsByTagName(e)[0],
                t || (t = document.documentElement),
                t.insertBefore(n, t.lastChild)
            }
            function s(t) {
                t.parentNode && t.parentNode.removeChild(t)
            }
            function h(t, e, n) {
                e = e || [],
                n = n || [];
                for (var r = t.className.split(/\s+/), i = 0; i < e.length; i += 1) {
                    for (var o = !1, a = 0; a < r.length; a += 1)
                        if (e[i] === r[a]) {
                            o = !0;
                            break
                        }
                    o || r.push(e[i])
                }
                for (e = [],
                i = 0; i < r.length; i += 1) {
                    for (o = !1,
                    a = 0; a < n.length; a += 1)
                        if (r[i] === n[a]) {
                            o = !0;
                            break
                        }
                    o || e.push(r[i])
                }
                t.className = e.join(" ").replace(/\s+/g, " ").replace(/^\s+|\s+$/, "")
            }
            function u(t, e) {
                for (var n = t.className.split(/\s+/), r = 0, i = n.length; r < i; r++)
                    if (n[r] == e)
                        return !0;
                return !1
            }
            function l(t) {
                if ("string" == typeof t.f)
                    return t.f;
                var e = t.m.location.protocol;
                return "about:" == e && (e = t.a.location.protocol),
                "https:" == e ? "https:" : "http:"
            }
            function c(t) {
                return t.m.location.hostname || t.a.location.hostname
            }
            function p(t, e, n) {
                function r() {
                    u && i && s && (u(h),
                    u = null )
                }
                e = o(t, "link", {
                    rel: "stylesheet",
                    href: e,
                    media: "all"
                });
                var i = !1
                  , s = !0
                  , h = null
                  , u = n || null ;
                it ? (e.onload = function() {
                    i = !0,
                    r()
                }
                ,
                e.onerror = function() {
                    i = !0,
                    h = Error("Stylesheet failed to load"),
                    r()
                }
                ) : setTimeout(function() {
                    i = !0,
                    r()
                }, 0),
                a(t, "head", e)
            }
            function f(t, e, n, r) {
                var i = t.c.getElementsByTagName("head")[0];
                if (i) {
                    var a = o(t, "script", {
                        src: e
                    })
                      , s = !1;
                    return a.onload = a.onreadystatechange = function() {
                        s || this.readyState && "loaded" != this.readyState && "complete" != this.readyState || (s = !0,
                        n && n(null ),
                        a.onload = a.onreadystatechange = null ,
                        "HEAD" == a.parentNode.tagName && i.removeChild(a))
                    }
                    ,
                    i.appendChild(a),
                    setTimeout(function() {
                        s || (s = !0,
                        n && n(Error("Script load timeout")))
                    }, r || 5e3),
                    a
                }
                return null
            }
            function d() {
                this.a = 0,
                this.c = null
            }
            function m(t) {
                return t.a++,
                function() {
                    t.a--,
                    g(t)
                }
            }
            function v(t, e) {
                t.c = e,
                g(t)
            }
            function g(t) {
                0 == t.a && t.c && (t.c(),
                t.c = null )
            }
            function y(t) {
                this.a = t || "-"
            }
            function _(t, e) {
                this.c = t,
                this.f = 4,
                this.a = "n";
                var n = (e || "n4").match(/^([nio])([1-9])$/i);
                n && (this.a = n[1],
                this.f = parseInt(n[2], 10))
            }
            function x(t) {
                return E(t) + " " + (t.f + "00") + " 300px " + b(t.c)
            }
            function b(t) {
                var e = [];
                t = t.split(/,\s*/);
                for (var n = 0; n < t.length; n++) {
                    var r = t[n].replace(/['"]/g, "");
                    -1 != r.indexOf(" ") || /^\d/.test(r) ? e.push("'" + r + "'") : e.push(r)
                }
                return e.join(",")
            }
            function w(t) {
                return t.a + t.f
            }
            function E(t) {
                var e = "normal";
                return "o" === t.a ? e = "oblique" : "i" === t.a && (e = "italic"),
                e
            }
            function S(t) {
                var e = 4
                  , n = "n"
                  , r = null ;
                return t && ((r = t.match(/(normal|oblique|italic)/i)) && r[1] && (n = r[1].substr(0, 1).toLowerCase()),
                (r = t.match(/([1-9]00|normal|bold)/i)) && r[1] && (/bold/i.test(r[1]) ? e = 7 : /[1-9]00/.test(r[1]) && (e = parseInt(r[1].substr(0, 1), 10)))),
                n + e
            }
            function T(t, e) {
                this.c = t,
                this.f = t.m.document.documentElement,
                this.h = e,
                this.a = new y("-"),
                this.j = !1 !== e.events,
                this.g = !1 !== e.classes
            }
            function M(t) {
                t.g && h(t.f, [t.a.c("wf", "loading")]),
                A(t, "loading")
            }
            function C(t) {
                if (t.g) {
                    var e = u(t.f, t.a.c("wf", "active"))
                      , n = []
                      , r = [t.a.c("wf", "loading")];
                    e || n.push(t.a.c("wf", "inactive")),
                    h(t.f, n, r)
                }
                A(t, "inactive")
            }
            function A(t, e, n) {
                t.j && t.h[e] && (n ? t.h[e](n.c, w(n)) : t.h[e]())
            }
            function P() {
                this.c = {}
            }
            function L(t, e, n) {
                var r, i = [];
                for (r in e)
                    if (e.hasOwnProperty(r)) {
                        var o = t.c[r];
                        o && i.push(o(e[r], n))
                    }
                return i
            }
            function R(t, e) {
                this.c = t,
                this.f = e,
                this.a = o(this.c, "span", {
                    "aria-hidden": "true"
                }, this.f)
            }
            function k(t) {
                a(t.c, "body", t.a)
            }
            function O(t) {
                return "display:block;position:absolute;top:-9999px;left:-9999px;font-size:300px;width:auto;height:auto;line-height:normal;margin:0;padding:0;font-variant:normal;white-space:nowrap;font-family:" + b(t.c) + ";" + ("font-style:" + E(t) + ";font-weight:" + (t.f + "00") + ";")
            }
            function I(t, e, n, r, i, o) {
                this.g = t,
                this.j = e,
                this.a = r,
                this.c = n,
                this.f = i || 3e3,
                this.h = o || void 0
            }
            function D(t, e, n, r, i, o, a) {
                this.v = t,
                this.B = e,
                this.c = n,
                this.a = r,
                this.s = a || "BESbswy",
                this.f = {},
                this.w = i || 3e3,
                this.u = o || null ,
                this.o = this.j = this.h = this.g = null ,
                this.g = new R(this.c,this.s),
                this.h = new R(this.c,this.s),
                this.j = new R(this.c,this.s),
                this.o = new R(this.c,this.s),
                t = new _(this.a.c + ",serif",w(this.a)),
                t = O(t),
                this.g.a.style.cssText = t,
                t = new _(this.a.c + ",sans-serif",w(this.a)),
                t = O(t),
                this.h.a.style.cssText = t,
                t = new _("serif",w(this.a)),
                t = O(t),
                this.j.a.style.cssText = t,
                t = new _("sans-serif",w(this.a)),
                t = O(t),
                this.o.a.style.cssText = t,
                k(this.g),
                k(this.h),
                k(this.j),
                k(this.o)
            }
            function U() {
                if (null === at) {
                    var t = /AppleWebKit\/([0-9]+)(?:\.([0-9]+))/.exec(window.navigator.userAgent);
                    at = !!t && (536 > parseInt(t[1], 10) || 536 === parseInt(t[1], 10) && 11 >= parseInt(t[2], 10))
                }
                return at
            }
            function B(t, e, n) {
                for (var r in ot)
                    if (ot.hasOwnProperty(r) && e === t.f[ot[r]] && n === t.f[ot[r]])
                        return !0;
                return !1
            }
            function F(t) {
                var e, n = t.g.a.offsetWidth, r = t.h.a.offsetWidth;
                (e = n === t.f.serif && r === t.f["sans-serif"]) || (e = U() && B(t, n, r)),
                e ? rt() - t.A >= t.w ? U() && B(t, n, r) && (null === t.u || t.u.hasOwnProperty(t.a.c)) ? G(t, t.v) : G(t, t.B) : N(t) : G(t, t.v)
            }
            function N(t) {
                setTimeout(r(function() {
                    F(this)
                }, t), 50)
            }
            function G(t, e) {
                setTimeout(r(function() {
                    s(this.g.a),
                    s(this.h.a),
                    s(this.j.a),
                    s(this.o.a),
                    e(this.a)
                }, t), 0)
            }
            function V(t, e, n) {
                this.c = t,
                this.a = e,
                this.f = 0,
                this.o = this.j = !1,
                this.s = n
            }
            function z(t) {
                0 == --t.f && t.j && (t.o ? (t = t.a,
                t.g && h(t.f, [t.a.c("wf", "active")], [t.a.c("wf", "loading"), t.a.c("wf", "inactive")]),
                A(t, "active")) : C(t.a))
            }
            function H(t) {
                this.j = t,
                this.a = new P,
                this.h = 0,
                this.f = this.g = !0
            }
            function j(t, e, n, i, o) {
                var a = 0 == --t.h;
                (t.f || t.g) && setTimeout(function() {
                    var t = o || null
                      , s = i || null || {};
                    if (0 === n.length && a)
                        C(e.a);
                    else {
                        e.f += n.length,
                        a && (e.j = a);
                        var u, l = [];
                        for (u = 0; u < n.length; u++) {
                            var c = n[u]
                              , p = s[c.c]
                              , f = e.a
                              , d = c;
                            f.g && h(f.f, [f.a.c("wf", d.c, w(d).toString(), "loading")]),
                            A(f, "fontloading", d),
                            f = null ,
                            null === st && (st = !!window.FontFace && (!(d = /Gecko.*Firefox\/(\d+)/.exec(window.navigator.userAgent)) || 42 < parseInt(d[1], 10))),
                            f = st ? new I(r(e.g, e),r(e.h, e),e.c,c,e.s,p) : new D(r(e.g, e),r(e.h, e),e.c,c,e.s,t,p),
                            l.push(f)
                        }
                        for (u = 0; u < l.length; u++)
                            l[u].start()
                    }
                }, 0)
            }
            function W(t, e, n) {
                var r = []
                  , i = n.timeout;
                M(e);
                var r = L(t.a, n, t.c)
                  , o = new V(t.c,e,i);
                for (t.h = r.length,
                e = 0,
                n = r.length; e < n; e++)
                    r[e].load(function(e, n, r) {
                        j(t, o, e, n, r)
                    })
            }
            function X(t, e) {
                this.c = t,
                this.a = e
            }
            function Y(t, e, n) {
                var r = l(t.c);
                return t = (t.a.api || "fast.fonts.net/jsapi").replace(/^.*http(s?):(\/\/)?/, ""),
                r + "//" + t + "/" + e + ".js" + (n ? "?v=" + n : "")
            }
            function q(t, e) {
                this.c = t,
                this.a = e
            }
            function Z(t, e, n) {
                t ? this.c = t : this.c = e + ht,
                this.a = [],
                this.f = [],
                this.g = n || ""
            }
            function Q(t, e) {
                for (var n = e.length, r = 0; r < n; r++) {
                    var i = e[r].split(":");
                    3 == i.length && t.f.push(i.pop());
                    var o = "";
                    2 == i.length && "" != i[1] && (o = ":"),
                    t.a.push(i.join(o))
                }
            }
            function K(t) {
                if (0 == t.a.length)
                    throw Error("No fonts to load!");
                if (-1 != t.c.indexOf("kit="))
                    return t.c;
                for (var e = t.a.length, n = [], r = 0; r < e; r++)
                    n.push(t.a[r].replace(/ /g, "+"));
                return e = t.c + "?family=" + n.join("%7C"),
                0 < t.f.length && (e += "&subset=" + t.f.join(",")),
                0 < t.g.length && (e += "&text=" + encodeURIComponent(t.g)),
                e
            }
            function J(t) {
                this.f = t,
                this.a = [],
                this.c = {}
            }
            function $(t) {
                for (var e = t.f.length, n = 0; n < e; n++) {
                    var r = t.f[n].split(":")
                      , i = r[0].replace(/\+/g, " ")
                      , o = ["n4"];
                    if (2 <= r.length) {
                        var a, s = r[1];
                        if (a = [],
                        s)
                            for (var s = s.split(","), h = s.length, u = 0; u < h; u++) {
                                var l;
                                if (l = s[u],
                                l.match(/^[\w-]+$/)) {
                                    var c = pt.exec(l.toLowerCase());
                                    if (null == c)
                                        l = "";
                                    else {
                                        if (l = c[2],
                                        l = null == l || "" == l ? "n" : ct[l],
                                        c = c[1],
                                        null == c || "" == c)
                                            c = "4";
                                        else
                                            var p = lt[c]
                                              , c = p ? p : isNaN(c) ? "4" : c.substr(0, 1);
                                        l = [l, c].join("")
                                    }
                                } else
                                    l = "";
                                l && a.push(l)
                            }
                        0 < a.length && (o = a),
                        3 == r.length && (r = r[2],
                        a = [],
                        r = r ? r.split(",") : a,
                        0 < r.length && (r = ut[r[0]]) && (t.c[i] = r))
                    }
                    for (t.c[i] || (r = ut[i]) && (t.c[i] = r),
                    r = 0; r < o.length; r += 1)
                        t.a.push(new _(i,o[r]))
                }
            }
            function tt(t, e) {
                this.c = t,
                this.a = e
            }
            function et(t, e) {
                this.c = t,
                this.a = e
            }
            function nt(t, e) {
                this.c = t,
                this.f = e,
                this.a = []
            }
            var rt = Date.now || function() {
                return +new Date
            }
              , it = !!window.FontFace;
            y.prototype.c = function(t) {
                for (var e = [], n = 0; n < arguments.length; n++)
                    e.push(arguments[n].replace(/[\W_]+/g, "").toLowerCase());
                return e.join(this.a)
            }
            ,
            I.prototype.start = function() {
                var t = this.c.m.document
                  , e = this
                  , n = rt()
                  , r = new Promise(function(r, i) {
                    function o() {
                        rt() - n >= e.f ? i() : t.fonts.load(x(e.a), e.h).then(function(t) {
                            1 <= t.length ? r() : setTimeout(o, 25)
                        }, function() {
                            i()
                        })
                    }
                    o()
                }
                )
                  , i = new Promise(function(t, n) {
                    setTimeout(n, e.f)
                }
                );
                Promise.race([i, r]).then(function() {
                    e.g(e.a)
                }, function() {
                    e.j(e.a)
                })
            }
            ;
            var ot = {
                D: "serif",
                C: "sans-serif"
            }
              , at = null ;
            D.prototype.start = function() {
                this.f.serif = this.j.a.offsetWidth,
                this.f["sans-serif"] = this.o.a.offsetWidth,
                this.A = rt(),
                F(this)
            }
            ;
            var st = null ;
            V.prototype.g = function(t) {
                var e = this.a;
                e.g && h(e.f, [e.a.c("wf", t.c, w(t).toString(), "active")], [e.a.c("wf", t.c, w(t).toString(), "loading"), e.a.c("wf", t.c, w(t).toString(), "inactive")]),
                A(e, "fontactive", t),
                this.o = !0,
                z(this)
            }
            ,
            V.prototype.h = function(t) {
                var e = this.a;
                if (e.g) {
                    var n = u(e.f, e.a.c("wf", t.c, w(t).toString(), "active"))
                      , r = []
                      , i = [e.a.c("wf", t.c, w(t).toString(), "loading")];
                    n || r.push(e.a.c("wf", t.c, w(t).toString(), "inactive")),
                    h(e.f, r, i)
                }
                A(e, "fontinactive", t),
                z(this)
            }
            ,
            H.prototype.load = function(t) {
                this.c = new i(this.j,t.context || this.j),
                this.g = !1 !== t.events,
                this.f = !1 !== t.classes,
                W(this, new T(this.c,t), t)
            }
            ,
            X.prototype.load = function(t) {
                function e() {
                    if (i["__mti_fntLst" + n]) {
                        var r, o = i["__mti_fntLst" + n](), a = [];
                        if (o)
                            for (var s = 0; s < o.length; s++) {
                                var h = o[s].fontfamily;
                                void 0 != o[s].fontStyle && void 0 != o[s].fontWeight ? (r = o[s].fontStyle + o[s].fontWeight,
                                a.push(new _(h,r))) : a.push(new _(h))
                            }
                        t(a)
                    } else
                        setTimeout(function() {
                            e()
                        }, 50)
                }
                var n = this.a.projectId
                  , r = this.a.version;
                if (n) {
                    var i = this.c.m;
                    f(this.c, Y(this, n, r), function(n) {
                        n ? t([]) : e()
                    }).id = "__MonotypeAPIScript__" + n
                } else
                    t([])
            }
            ,
            q.prototype.load = function(t) {
                var e, n, r = this.a.urls || [], i = this.a.families || [], o = this.a.testStrings || {}, a = new d;
                for (e = 0,
                n = r.length; e < n; e++)
                    p(this.c, r[e], m(a));
                var s = [];
                for (e = 0,
                n = i.length; e < n; e++)
                    if (r = i[e].split(":"),
                    r[1])
                        for (var h = r[1].split(","), u = 0; u < h.length; u += 1)
                            s.push(new _(r[0],h[u]));
                    else
                        s.push(new _(r[0]));
                v(a, function() {
                    t(s, o)
                })
            }
            ;
            var ht = "//fonts.googleapis.com/css"
              , ut = {
                latin: "BESbswy",
                cyrillic: "йяЖ",
                greek: "αβΣ",
                khmer: "កខគ",
                Hanuman: "កខគ"
            }
              , lt = {
                thin: "1",
                extralight: "2",
                "extra-light": "2",
                ultralight: "2",
                "ultra-light": "2",
                light: "3",
                regular: "4",
                book: "4",
                medium: "5",
                "semi-bold": "6",
                semibold: "6",
                "demi-bold": "6",
                demibold: "6",
                bold: "7",
                "extra-bold": "8",
                extrabold: "8",
                "ultra-bold": "8",
                ultrabold: "8",
                black: "9",
                heavy: "9",
                l: "3",
                r: "4",
                b: "7"
            }
              , ct = {
                i: "i",
                italic: "i",
                n: "n",
                normal: "n"
            }
              , pt = /^(thin|(?:(?:extra|ultra)-?)?light|regular|book|medium|(?:(?:semi|demi|extra|ultra)-?)?bold|black|heavy|l|r|b|[1-9]00)?(n|i|normal|italic)?$/
              , ft = {
                Arimo: !0,
                Cousine: !0,
                Tinos: !0
            };
            tt.prototype.load = function(t) {
                var e = new d
                  , n = this.c
                  , r = new Z(this.a.api,l(n),this.a.text)
                  , i = this.a.families;
                Q(r, i);
                var o = new J(i);
                $(o),
                p(n, K(r), m(e)),
                v(e, function() {
                    t(o.a, o.c, ft)
                })
            }
            ,
            et.prototype.load = function(t) {
                var e = this.a.id
                  , n = this.c.m;
                e ? f(this.c, (this.a.api || "https://use.typekit.net") + "/" + e + ".js", function(e) {
                    if (e)
                        t([]);
                    else if (n.Typekit && n.Typekit.config && n.Typekit.config.fn) {
                        e = n.Typekit.config.fn;
                        for (var r = [], i = 0; i < e.length; i += 2)
                            for (var o = e[i], a = e[i + 1], s = 0; s < a.length; s++)
                                r.push(new _(o,a[s]));
                        try {
                            n.Typekit.load({
                                events: !1,
                                classes: !1,
                                async: !0
                            })
                        } catch (h) {}
                        t(r)
                    }
                }, 2e3) : t([])
            }
            ,
            nt.prototype.load = function(t) {
                var e = this.f.id
                  , n = this.c.m
                  , r = this;
                e ? (n.__webfontfontdeckmodule__ || (n.__webfontfontdeckmodule__ = {}),
                n.__webfontfontdeckmodule__[e] = function(e, n) {
                    for (var i = 0, o = n.fonts.length; i < o; ++i) {
                        var a = n.fonts[i];
                        r.a.push(new _(a.name,S("font-weight:" + a.weight + ";font-style:" + a.style)))
                    }
                    t(r.a)
                }
                ,
                f(this.c, l(this.c) + (this.f.api || "//f.fontdeck.com/s/css/js/") + c(this.c) + "/" + e + ".js", function(e) {
                    e && t([])
                })) : t([])
            }
            ;
            var dt = new H(window);
            dt.a.c.custom = function(t, e) {
                return new q(e,t)
            }
            ,
            dt.a.c.fontdeck = function(t, e) {
                return new nt(e,t)
            }
            ,
            dt.a.c.monotype = function(t, e) {
                return new X(e,t)
            }
            ,
            dt.a.c.typekit = function(t, e) {
                return new et(e,t)
            }
            ,
            dt.a.c.google = function(t, e) {
                return new tt(e,t)
            }
            ;
            var mt = {
                load: r(dt.load, dt)
            };
            "function" == typeof define && define.amd ? define(function() {
                return mt
            }) : "undefined" != typeof e && e.exports ? e.exports = mt : (window.WebFont = mt,
            window.WebFontConfig && dt.load(window.WebFontConfig))
        }()
    }
    , {}],
    22: [function(t, e, n) {
        "use strict";
        function r(t, e) {
            if (!(t instanceof e))
                throw new TypeError("Cannot call a class as a function")
        }
        var i = function() {
            function t(t, e) {
                for (var n = 0; n < e.length; n++) {
                    var r = e[n];
                    r.enumerable = r.enumerable || !1,
                    r.configurable = !0,
                    "value"in r && (r.writable = !0),
                    Object.defineProperty(t, r.key, r)
                }
            }
            return function(e, n, r) {
                return n && t(e.prototype, n),
                r && t(e, r),
                e
            }
        }()
          , o = t("lodash")
          , a = function() {
            function t() {
                r(this, t);
                var e = document.createElement("audio");
                if (this.audioExt = e.canPlayType("audio/ogg") ? ".ogg" : ".mp3",
                this.types = {
                    AUDIO: "AUDIO",
                    IMAGE: "IMAGE"
                },
                this.instruments = {
                    AUDIO_TYPE_BASS: "AUDIO_TYPE_BASS",
                    AUDIO_TYPE_DRUM: "AUDIO_TYPE_DRUM",
                    AUDIO_TYPE_EXTRA: "AUDIO_TYPE_EXTRA",
                    AUDIO_TYPE_FX: "AUDIO_TYPE_FX",
                    AUDIO_TYPE_GUITAR: "AUDIO_TYPE_GUITAR",
                    AUDIO_TYPE_SYNTH: "AUDIO_TYPE_SYNTH",
                    AUDIO_TYPE_VOCAL: "AUDIO_TYPE_VOCAL"
                },
                this.effects = {
                    LOWPASS: "LOWPASS",
                    HIGHPASS: "HIGHPASS",
                    BANDPASS: "BANDPASS",
                    LOWSHELF: "LOWSHELF",
                    HIGHSHELF: "HIGHSHELF",
                    PEAKING: "PEAKING",
                    NOTCH: "NOTCH",
                    ALLPASS: "ALLPASS",
                    TUNA_CHORUS: "TUNA_CHORUS",
                    TUNA_DELAY: "TUNA_DELAY",
                    TUNA_PHASER: "TUNA_PHASER",
                    TUNA_COMPRESSOR: "TUNA_COMPRESSOR",
                    TUNA_TREMOLO: "TUNA_TREMOLO",
                    TUNA_WAHWAH: "TUNA_WAHWAH",
                    TUNA_BITCRUSHER: "TUNA_BITCRUSHER",
                    TUNA_MOOGFILTER: "TUNA_MOOGFILTER",
                    TUNA_PINGPONGDELAY: "TUNA_PINGPONGDELAY"
                },
                this.assets = [{
                    type: this.types.AUDIO,
                    category: this.instruments.AUDIO_TYPE_BASS,
                    url: this.getAudioExt("audio/bass/01_01_Original_Bass")
                }, {
                    type: this.types.AUDIO,
                    category: this.instruments.AUDIO_TYPE_BASS,
                    url: this.getAudioExt("audio/bass/01_02_Bass_selfmade")
                }, {
                    type: this.types.AUDIO,
                    category: this.instruments.AUDIO_TYPE_BASS,
                    url: this.getAudioExt("audio/bass/01_03_Bass_selfmade")
                }, {
                    type: this.types.AUDIO,
                    category: this.instruments.AUDIO_TYPE_DRUM,
                    url: this.getAudioExt("audio/drum/02_01_Drums")
                }, {
                    type: this.types.AUDIO,
                    category: this.instruments.AUDIO_TYPE_DRUM,
                    url: this.getAudioExt("audio/drum/02_02_Drums_High_02")
                }, {
                    type: this.types.AUDIO,
                    category: this.instruments.AUDIO_TYPE_DRUM,
                    url: this.getAudioExt("audio/drum/02_02_Drums_Low_01")
                }, {
                    type: this.types.AUDIO,
                    category: this.instruments.AUDIO_TYPE_DRUM,
                    url: this.getAudioExt("audio/drum/02_02_Drums")
                }, {
                    type: this.types.AUDIO,
                    category: this.instruments.AUDIO_TYPE_DRUM,
                    url: this.getAudioExt("audio/drum/02_03_Drums_High_02")
                }, {
                    type: this.types.AUDIO,
                    category: this.instruments.AUDIO_TYPE_DRUM,
                    url: this.getAudioExt("audio/drum/02_03_Drums_Low_01")
                }, {
                    type: this.types.AUDIO,
                    category: this.instruments.AUDIO_TYPE_EXTRA,
                    url: this.getAudioExt("audio/extra/07_01_Extra_Selfmade")
                }, {
                    type: this.types.AUDIO,
                    category: this.instruments.AUDIO_TYPE_EXTRA,
                    url: this.getAudioExt("audio/extra/07_02_Extra_Selfmade")
                }, {
                    type: this.types.AUDIO,
                    category: this.instruments.AUDIO_TYPE_EXTRA,
                    url: this.getAudioExt("audio/extra/07_03_Extra_Selfmade")
                }, {
                    type: this.types.AUDIO,
                    category: this.instruments.AUDIO_TYPE_EXTRA,
                    url: this.getAudioExt("audio/extra/07_04_Extra_Selfmade")
                }, {
                    type: this.types.AUDIO,
                    category: this.instruments.AUDIO_TYPE_FX,
                    url: this.getAudioExt("audio/fx/05_01_FX")
                }, {
                    type: this.types.AUDIO,
                    category: this.instruments.AUDIO_TYPE_FX,
                    url: this.getAudioExt("audio/fx/05_02_FX_selfmade")
                }, {
                    type: this.types.AUDIO,
                    category: this.instruments.AUDIO_TYPE_FX,
                    url: this.getAudioExt("audio/fx/05_03_FX_selfmade")
                }, {
                    type: this.types.AUDIO,
                    category: this.instruments.AUDIO_TYPE_GUITAR,
                    url: this.getAudioExt("audio/guitar/03_01_Guitars")
                }, {
                    type: this.types.AUDIO,
                    category: this.instruments.AUDIO_TYPE_GUITAR,
                    url: this.getAudioExt("audio/guitar/03_02_Guitars_selfmade")
                }, {
                    type: this.types.AUDIO,
                    category: this.instruments.AUDIO_TYPE_GUITAR,
                    url: this.getAudioExt("audio/guitar/03_03_Guitars_selfmade")
                }, {
                    type: this.types.AUDIO,
                    category: this.instruments.AUDIO_TYPE_SYNTH,
                    url: this.getAudioExt("audio/synth/04_01_Synth")
                }, {
                    type: this.types.AUDIO,
                    category: this.instruments.AUDIO_TYPE_SYNTH,
                    url: this.getAudioExt("audio/synth/04_02_Synth_selfmade")
                }, {
                    type: this.types.AUDIO,
                    category: this.instruments.AUDIO_TYPE_SYNTH,
                    url: this.getAudioExt("audio/synth/04_03_Synth_selfmade")
                }, {
                    type: this.types.AUDIO,
                    category: this.instruments.AUDIO_TYPE_SYNTH,
                    url: this.getAudioExt("audio/synth/04_04_Synth_selfmade")
                }, {
                    type: this.types.AUDIO,
                    category: this.instruments.AUDIO_TYPE_VOCAL,
                    url: this.getAudioExt("audio/vocal/06_01_Vocals")
                }, {
                    type: this.types.AUDIO,
                    category: this.instruments.AUDIO_TYPE_VOCAL,
                    url: this.getAudioExt("audio/vocal/06_02_Vocals")
                }, {
                    type: this.types.AUDIO,
                    id: "BACKGROUND_LOOP",
                    url: this.getAudioExt("audio/drum/02_03_Drums")
                }, {
                    type: this.types.AUDIO,
                    id: "MALUS_COLLISION",
                    url: this.getAudioExt("audio/onetime/malus_fx_001")
                }, {
                    type: this.types.AUDIO,
                    id: "MALUS_COLLISION2",
                    url: this.getAudioExt("audio/onetime/malus_fx_002")
                }, {
                    type: this.types.AUDIO,
                    id: "POWERUP_COLLISION",
                    url: this.getAudioExt("audio/onetime/powerup-crowd")
                }, {
                    type: this.types.AUDIO,
                    id: "FX_BASS_DROP",
                    url: this.getAudioExt("audio/onetime/intro-guitar")
                }, {
                    type: this.types.AUDIO,
                    id: "HOVER",
                    url: this.getAudioExt("audio/onetime/hover_big")
                }],
                !Modernizr.desktop) {
                    var n = [{
                        type: this.types.IMAGE,
                        id: "HUD_HEART",
                        url: BASEURL + "images/hud/heart-a18a43aa03.png"
                    }, {
                        type: this.types.IMAGE,
                        id: "HUD_PROTECTED",
                        url: BASEURL + "images/hud/protected-48112f024d.png"
                    }, {
                        type: this.types.IMAGE,
                        id: "HUD_STRIPE",
                        url: BASEURL + "images/hud/game-stripe-5ccf691594.png"
                    }, {
                        type: this.types.IMAGE,
                        id: "EMTPY_SLOT",
                        url: BASEURL + "images/hud/emptyslot-502c4f614d.png"
                    }, {
                        type: this.types.IMAGE,
                        id: "AUDIO_TYPE_BASS",
                        url: BASEURL + "images/hud/audio-type-bass-81a162ea39.png"
                    }, {
                        type: this.types.IMAGE,
                        id: "AUDIO_TYPE_DRUM",
                        url: BASEURL + "images/hud/audio-type-drum-6e9608c62d.png"
                    }, {
                        type: this.types.IMAGE,
                        id: "AUDIO_TYPE_EXTRA",
                        url: BASEURL + "images/hud/audio-type-extra-c27d9b3e41.png"
                    }, {
                        type: this.types.IMAGE,
                        id: "AUDIO_TYPE_FX",
                        url: BASEURL + "images/hud/audio-type-fx-7cad9c1b73.png"
                    }, {
                        type: this.types.IMAGE,
                        id: "AUDIO_TYPE_GUITAR",
                        url: BASEURL + "images/hud/audio-type-guitar-92f8917dbb.png"
                    }, {
                        type: this.types.IMAGE,
                        id: "AUDIO_TYPE_SYNTH",
                        url: BASEURL + "images/hud/audio-type-synth-a595420b17.png"
                    }, {
                        type: this.types.IMAGE,
                        id: "AUDIO_TYPE_VOCAL",
                        url: BASEURL + "images/hud/audio-type-vocal-6feadf4807.png"
                    }];
                    this.assets = this.assets.concat(n)
                }
                return this
            }
            return i(t, [{
                key: "getAudioExt",
                value: function(t) {
                    return BASEURL + t + this.audioExt
                }
            }, {
                key: "getAssetByUrl",
                value: function(t) {
                    return o.find(this.assets, {
                        url: t
                    })
                }
            }, {
                key: "getAssetById",
                value: function(t) {
                    return o.find(this.assets, {
                        id: t
                    });
                }
            }, {
                key: "getAssetsByType",
                value: function(t) {
                    return o.where(this.assets, {
                        type: t
                    })
                }
            }, {
                key: "getAssetsByCategory",
                value: function(t) {
                    return o.where(this.assets, {
                        category: t
                    })
                }
            }]),
            t
        }();
        e.exports = new a
    }
    , {
        lodash: 5
    }],
    23: [function(t, e, n) {
        "use strict";
        var r = t("eventemitter3");
        e.exports = new r
    }
    , {
        eventemitter3: 2
    }],
    24: [function(t, e, n) {
        "use strict";
        function r(t, e) {
            if (!(t instanceof e))
                throw new TypeError("Cannot call a class as a function")
        }
        var i = function() {
            function t(t, e) {
                for (var n = 0; n < e.length; n++) {
                    var r = e[n];
                    r.enumerable = r.enumerable || !1,
                    r.configurable = !0,
                    "value"in r && (r.writable = !0),
                    Object.defineProperty(t, r.key, r)
                }
            }
            return function(e, n, r) {
                return n && t(e.prototype, n),
                r && t(e, r),
                e
            }
        }()
          , o = t("screenfull")
          , a = function() {
            function t() {
                r(this, t)
            }
            return i(t, [{
                key: "request",
                value: function() {
                    return o.enabled && o.request()
                }
            }, {
                key: "exit",
                value: function() {
                    return o.enabled && o.exit()
                }
            }, {
                key: "isFullScreen",
                value: function() {
                    return o.isFullscreen
                }
            }, {
                key: "onChange",
                value: function(t) {
                    document.addEventListener(o.raw.fullscreenchange, t)
                }
            }, {
                key: "isEnabled",
                get: function() {
                    return o.enabled
                }
            }]),
            t
        }();
        e.exports = new a
    }
    , {
        screenfull: 18
    }],
    25: [function(t, e, n) {
        "use strict";
        function r(t, e) {
            if (!(t instanceof e))
                throw new TypeError("Cannot call a class as a function")
        }
        var i = function() {
            function t(t, e) {
                for (var n = 0; n < e.length; n++) {
                    var r = e[n];
                    r.enumerable = r.enumerable || !1,
                    r.configurable = !0,
                    "value"in r && (r.writable = !0),
                    Object.defineProperty(t, r.key, r)
                }
            }
            return function(e, n, r) {
                return n && t(e.prototype, n),
                r && t(e, r),
                e
            }
        }()
          , o = t("lodash")
          , a = t("../Dispatcher/Dispatcher")
          , s = t("./BranchingOptions")
          , h = function() {
            function t(e) {
                r(this, t),
                this.gameCtx = e,
                this.initVars(),
                this.bind()
            }
            return i(t, [{
                key: "initVars",
                value: function() {
                    this.CHANCE = .5,
                    this.enabled = !0,
                    this.waitForNext = 2,
                    this.ramification = !1,
                    this.active = !1,
                    this.currentStructure = null ,
                    this.isCursorAnimating = !1
                }
            }, {
                key: "reset",
                value: function() {
                    this.initVars()
                }
            }, {
                key: "bind",
                value: function() {
                    var t = this;
                    a.on("LANEMANAGER:onCursorAnimationStart", function() {
                        t.isCursorAnimating = !0
                    }),
                    a.on("LANEMANAGER:onCursorAnimationEnd", function() {
                        t.isCursorAnimating = !1
                    })
                }
            }, {
                key: "branch",
                value: function(t, e) {
                    var n = t || this.randomRamification
                      , r = this.gameCtx.segments
                      , i = (e || o.random(2, 3)) * r
                      , a = this.gameCtx.Spawner;
                    this.ramification = n.branch,
                    this.currentStructure = n,
                    this.active = !0,
                    this.waitForNext = o.random(8, 20),
                    a.tmpVars.forceOnlyBonus = !0,
                    this.gameCtx.addDeferred(this.activate, 2 * r + 6, this),
                    this.gameCtx.addDeferred(this.merge, i, this),
                    this.gameCtx.addDeferred(this.deactivate, 2 * r + i + 3, this)
                }
            }, {
                key: "merge",
                value: function() {
                    this.ramification = this.currentStructure.merge
                }
            }, {
                key: "activate",
                value: function() {
                    for (var t = this, e = this.gameCtx.cursorIndex, n = this.currentStructure.branch, r = n[e].group, i = 0; i < 3; i++) {
                        var o = n[i]
                          , a = this.gameCtx.getLaneByIndex(i);
                        o.group === r ? a.params.active = !0 : a.params.active = !1
                    }
                    this.gameCtx.addDeferred(function() {
                        t.gameCtx.Spawner.tmpVars.forceOnlyBonus = !1
                    }, 4, this)
                }
            }, {
                key: "deactivate",
                value: function() {
                    for (var t = this.currentStructure.newIndex, e = 0; e < 3; e++)
                        this.gameCtx.lanes[e].params.active = !0;
                    t && this.switchLanesTo(t),
                    this.active = !1
                }
            }, {
                key: "switchLanesTo",
                value: function() {
                    for (var t = arguments.length <= 0 || void 0 === arguments[0] ? [0, 1, 2] : arguments[0], e = [], n = 0; n < 3; n++)
                        e[e.length] = this.gameCtx.getLaneByIndex(n);
                    for (var r = 0; r < 3; r++)
                        e[r].params.index = t[r];
                    return this.gameCtx.setCursorIndex(t[this.gameCtx.cursorIndex])
                }
            }, {
                key: "update",
                value: function() {
                    this.waitForNext--,
                    this.canStartBranching && this.branch()
                }
            }, {
                key: "canStartBranching",
                get: function() {
                    return this.enabled && !this.active && Math.random() < this.CHANCE && this.waitForNext <= 0
                }
            }, {
                key: "randomRamification",
                get: function() {
                    return o.sample(s)
                }
            }]),
            t
        }();
        e.exports = h
    }
    , {
        "../Dispatcher/Dispatcher": 23,
        "./BranchingOptions": 26,
        lodash: 5
    }],
    26: [function(t, e, n) {
        "use strict";
        e.exports = [{
            branch: [{
                x: 20,
                y: -20,
                group: 1
            }, {
                x: 0,
                y: 0,
                group: 2
            }, {
                x: -20,
                y: 20,
                group: 3
            }],
            merge: [{
                x: -20,
                y: 20
            }, {
                x: 0,
                y: 0
            }, {
                x: 20,
                y: -20
            }]
        }, {
            branch: [{
                x: 20,
                y: 0,
                group: 1
            }, {
                x: 20,
                y: 0,
                group: 1
            }, {
                x: -40,
                y: 10,
                group: 2
            }],
            merge: [{
                x: -20,
                y: 0
            }, {
                x: -20,
                y: 0
            }, {
                x: 40,
                y: -10
            }]
        }, {
            branch: [{
                x: 0,
                y: -30,
                group: 1
            }, {
                x: 0,
                y: 0,
                group: 2
            }, {
                x: 0,
                y: 0,
                group: 2
            }],
            merge: [{
                x: -20,
                y: 30
            }, {
                x: 0,
                y: 0
            }, {
                x: 0,
                y: 0
            }],
            newIndex: [2, 0, 1]
        }, {
            branch: [{
                x: -3.338,
                y: 5,
                group: 1
            }, {
                x: 0,
                y: -20,
                group: 2
            }, {
                x: 3.338,
                y: 5,
                group: 1
            }],
            merge: [{
                x: 0,
                y: 0
            }, {
                x: 10,
                y: 25
            }, {
                x: 0,
                y: 0
            }],
            newIndex: [1, 0, 2]
        }, {
            branch: [{
                x: -40,
                y: 50,
                group: 1
            }, {
                x: 0,
                y: 0,
                group: 2
            }, {
                x: 40,
                y: -50,
                group: 3
            }],
            merge: [{
                x: 26.69,
                y: -50
            }, {
                x: 0,
                y: 0
            }, {
                x: -26.69,
                y: 50
            }],
            newIndex: [2, 1, 0]
        }, {
            branch: [{
                x: 0,
                y: 0,
                group: 1
            }, {
                x: -20,
                y: 30,
                group: 2
            }, {
                x: -20,
                y: 30,
                group: 2
            }],
            merge: [{
                x: -40,
                y: 30
            }, {
                x: 0,
                y: 0
            }, {
                x: 0,
                y: 0
            }],
            newIndex: [2, 0, 1]
        }, {
            branch: [{
                x: 0,
                y: 30,
                group: 1
            }, {
                x: 0,
                y: 0,
                group: 2
            }, {
                x: 0,
                y: 0,
                group: 2
            }],
            merge: [{
                x: 0,
                y: -30
            }, {
                x: 0,
                y: 0
            }, {
                x: 0,
                y: 0
            }]
        }, {
            branch: [{
                x: 0,
                y: 0,
                group: 1
            }, {
                x: 0,
                y: 0,
                group: 1
            }, {
                x: 0,
                y: -20,
                group: 2
            }],
            merge: [{
                x: 0,
                y: 0
            }, {
                x: 0,
                y: 0
            }, {
                x: 0,
                y: 20
            }]
        }]
    }
    , {}],
    27: [function(t, e, n) {
        "use strict";
        var r = function(t) {
            this.autoStart = void 0 === t || t,
            this.startTime = 0,
            this.oldTime = 0,
            this.elapsedTime = 0,
            this.running = !1
        }
        ;
        r.prototype = {
            constructor: r,
            start: function() {
                this.startTime = self.performance.now(),
                this.oldTime = this.startTime,
                this.running = !0
            },
            stop: function() {
                this.getElapsedTime(),
                this.running = !1
            },
            getElapsedTime: function() {
                return this.getDelta(),
                this.elapsedTime
            },
            getDelta: function() {
                var t = 0;
                if (this.autoStart && !this.running && this.start(),
                this.running) {
                    var e = self.performance.now();
                    t = .001 * (e - this.oldTime),
                    this.oldTime = e,
                    this.elapsedTime += t
                }
                return t
            }
        },
        e.exports = r
    }
    , {}],
    28: [function(t, e, n) {
        "use strict";
        function r(t, e) {
            if (!(t instanceof e))
                throw new TypeError("Cannot call a class as a function")
        }
        var i = function() {
            function t(t, e) {
                for (var n = 0; n < e.length; n++) {
                    var r = e[n];
                    r.enumerable = r.enumerable || !1,
                    r.configurable = !0,
                    "value"in r && (r.writable = !0),
                    Object.defineProperty(t, r.key, r)
                }
            }
            return function(e, n, r) {
                return n && t(e.prototype, n),
                r && t(e, r),
                e
            }
        }()
          , o = t("../Helpers/Normalize")
          , a = t("../Dispatcher/Dispatcher")
          , s = function() {
            function t(e) {
                r(this, t),
                this.gameCtx = e,
                this.initVars()
            }
            return i(t, [{
                key: "initVars",
                value: function() {
                    this.delta = 1,
                    this.playbackRate = 1,
                    this.multiplier = 1,
                    this.enabled = !0,
                    this.baseAcceleration = .5,
                    this.speedAcceleration = 1,
                    this.audioAcceleration = 1,
                    this.acceleration = this.baseAcceleration
                }
            }, {
                key: "reset",
                value: function() {
                    this.initVars()
                }
            }, {
                key: "getVal",
                value: function() {
                    var t = arguments.length <= 0 || void 0 === arguments[0] ? 0 : arguments[0]
                      , e = arguments.length <= 1 || void 0 === arguments[1] ? 1 : arguments[1];
                    return o(this.multiplier, 1, 100, t, e)
                }
            }, {
                key: "twoDigitRound",
                value: function(t) {
                    return Math.round(100 * t) / 100
                }
            }, {
                key: "easeInQuad",
                value: function(t, e, n, r) {
                    return n * (t /= r) * t + e
                }
            }, {
                key: "updateDifficulty",
                value: function() {
                    if (this.enabled && !this.isPaused) {
                        var t = this.gameCtx.Spawner;
                        this.delta += this.gameCtx.clockDelta * this.acceleration,
                        this.multiplier = this.easeInQuad(this.delta, 1, 100, 100),
                        this.gameCtx.spm = this.getVal(this.gameCtx.defaultSpm, 1600) * this.speedAcceleration,
                        t.rates.bonusDrop = this.getVal(t.originalRates.bonusDrop, 1),
                        t.rates.malusDrop = this.getVal(t.originalRates.malusDrop, 12),
                        t.rates.delayAfterBonus = this.getVal(t.originalRates.delayAfterBonus, 20),
                        t.rates.delayAfterMalus = this.getVal(t.originalRates.delayAfterMalus, -4);
                        var e = this.twoDigitRound(this.getVal(1, 1.18) * this.audioAcceleration);
                        this.playbackRate !== e && a.emit("GAME:setPlaybackRate", e),
                        this.playbackRate = e,
                        this.gameCtx.emitScore()
                    }
                }
            }, {
                key: "update",
                value: function() {
                    this.updateDifficulty()
                }
            }]),
            t
        }();
        e.exports = s
    }
    , {
        "../Dispatcher/Dispatcher": 23,
        "../Helpers/Normalize": 57
    }],
    29: [function(t, e, n) {
        "use strict";
        function r(t, e) {
            if (!(t instanceof e))
                throw new TypeError("Cannot call a class as a function")
        }
        var i = function() {
            function t(t, e) {
                for (var n = 0; n < e.length; n++) {
                    var r = e[n];
                    r.enumerable = r.enumerable || !1,
                    r.configurable = !0,
                    "value"in r && (r.writable = !0),
                    Object.defineProperty(t, r.key, r)
                }
            }
            return function(e, n, r) {
                return n && t(e.prototype, n),
                r && t(e, r),
                e
            }
        }()
          , o = t("lodash")
          , a = t("../Helpers/Normalize")
          , s = t("../Helpers/Tracking")
          , h = t("../Dispatcher/Dispatcher")
          , u = t("./Input/Keyboard")
          , l = t("./Input/Mouse")
          , c = t("./Input/Touch")
          , p = t("./Items/EmptyItem")
          , f = t("./Clock")
          , d = t("./Lane")
          , m = t("./Spawner")
          , v = t("./DifficultyManager")
          , g = t("./BranchesManager")
          , y = t("./Tutorial")
          , _ = function() {
            function t() {
                return r(this, t),
                this.WebGLRender = null ,
                this.defaultSpm = 550,
                this.segments = 16,
                this.segmentsDelta = 1,
                Modernizr.desktop || (this.segmentsDelta = 2),
                1 !== this.segmentsDelta && (this.defaultSpm /= this.segmentsDelta,
                this.segments /= this.segmentsDelta),
                this.globalSpeed = 1,
                this.isPaused = !1,
                this.spm = this.defaultSpm,
                this.cursorIndex = 1,
                this.currentInstruments = {},
                this.protection = !1,
                this.isGameOver = !1,
                this.deferredPool = [],
                this.DifficultyManager = new v(this),
                this.BranchesManager = new g(this),
                this.Tutorial = new y(this),
                this.Clock = new f,
                this.clockDelta = 0,
                this._segmentsAdded = 0,
                this._segmentsToAdd = 0,
                this._renderSegmentsToAdd = 0,
                this._curveProgress = 0,
                this._oldScore = null ,
                this._frameBinded = this.frame.bind(this),
                this.lanes = [new d({
                    index: 0,
                    active: !0,
                    item: p,
                    numberOfSegments: this.segments
                }), new d({
                    index: 1,
                    active: !0,
                    item: p,
                    numberOfSegments: this.segments
                }), new d({
                    index: 2,
                    active: !0,
                    item: p,
                    numberOfSegments: this.segments
                })],
                this.Spawner = new m(this),
                this.bind(),
                this
            }
            return i(t, [{
                key: "bind",
                value: function() {
                    var t = this;
                    h.on("GAME:replay", this.reset.bind(this)),
                    h.on("GAME:pause", this.pause.bind(this)),
                    h.on("GAME:resume", this.resume.bind(this)),
                    h.on("GAME:play", this.init.bind(this)),
                    h.on("GAME:gameover", this.sendStats.bind(this)),
                    h.on("GAME:gameover", function() {
                        t.isGameOver = !0
                    })
                }
            }, {
                key: "pause",
                value: function() {
                    this.isPaused = !0,
                    this.Clock.stop()
                }
            }, {
                key: "resume",
                value: function() {
                    this.isGameOver || (this.Clock.start(),
                    this.isPaused = !1)
                }
            }, {
                key: "reset",
                value: function() {
                    var t = this;
                    this.isGameOver = !1,
                    this.spm = this.defaultSpm,
                    this.cursorIndex = 1,
                    this.clockDelta = 0,
                    this._segmentsToAdd = 0,
                    this._renderSegmentsToAdd = 0,
                    this._curveProgress = 0,
                    this._segmentsAdded = 0,
                    this.deferredPool = [],
                    this.Spawner.reset(),
                    this.Spawner.enabled = !1,
                    this.DifficultyManager.reset(),
                    this.BranchesManager.reset();
                    for (var e = 0; e < this.lanes.length; e++)
                        this.lanes[e].reset(),
                        this.lanes[e].params.index = e,
                        this.lanes[e].params.active = !0;
                    this.resume(),
                    this.setCursorIndex(1),
                    this.initStatsVars(),
                    s.nOfPlays++,
                    s.send("Gameplay", "GameSession", "Started"),
                    window.setTimeout(function() {
                        t.Keyboard.active = !0,
                        t.Mouse.active = !0,
                        t.Touch.active = !0
                    }, 800),
                    window.setTimeout(function() {
                        t.Spawner.enabled = !0
                    }, 3e3)
                }
            }, {
                key: "init",
                value: function() {
                    this.isInit || (this.isInit = !0,
                    this.Keyboard = new u(this),
                    this.Mouse = new l(this),
                    this.Touch = new c(this),
                    this.Tutorial.init(),
                    this.initStatsVars(),
                    this.Clock.start(),
                    this.frame(),
                    this.emitScore(),
                    s.nOfPlays++,
                    s.send("Gameplay", "GameSession", "Started"))
                }
            }, {
                key: "frame",
                value: function() {
                    if (window.requestAnimationFrame(this._frameBinded),
                    this.isPaused)
                        return !1;
                    this.clockDelta = this.Clock.getDelta() * this.globalSpeed,
                    this.DifficultyManager.update();
                    var t = this.spm / 60
                      , e = a(this.clockDelta, 0, 1, 0, t);
                    for (this._segmentsToAdd += e,
                    this._curveProgress += e / this.segments; this._segmentsToAdd > 1; )
                        this.newSegments(),
                        this._segmentsToAdd--,
                        this._segmentsAdded++ % this.segments === 0 && (this._curveProgress--,
                        this._curveProgress = Math.min(1, Math.max(0, this._curveProgress)),
                        this._segmentsAdded >= this.segments && (this.nextSegmentsSet(),
                        h.emit("GAME:nextSegmentsSet")))
                }
            }, {
                key: "initStatsVars",
                value: function() {
                    this.statsVars = {
                        startTime: (new Date).getTime(),
                        instruments: 0,
                        malus: 0,
                        bonus: 0,
                        fallInHole: !1,
                        outOfInstruments: !1
                    }
                }
            }, {
                key: "sendStats",
                value: function(t) {
                    var e = (new Date).getTime() - this.statsVars.startTime;
                    e = Math.round(e / 1e3),
                    s.send("Gameplay", "GameSession", "Length", e),
                    s.send("Gameplay", "GameRun", "Instruments", this.statsVars.instruments),
                    s.send("Gameplay", "GameRun", "Malus", this.statsVars.malus),
                    s.send("Gameplay", "GameRun", "Bonus", this.statsVars.bonus),
                    s.send("Gameplay", "GameRun", "Score", t),
                    this.statsVars.fallInHole && s.send("Gameplay", "GameEnd", "Fall in a hole"),
                    this.statsVars.outOfInstruments && s.send("Gameplay", "GameEnd", "Out of instruments")
                }
            }, {
                key: "addDeferred",
                value: function(t, e) {
                    var n = arguments.length <= 2 || void 0 === arguments[2] ? this : arguments[2];
                    return e <= 0 ? t.call(n) : void (this.deferredPool[this.deferredPool.length] = {
                        callback: t,
                        segmentsCountdown: e,
                        context: n
                    })
                }
            }, {
                key: "deferredCheck",
                value: function() {
                    for (var t = this.deferredPool.length, e = 0; e < t; e++) {
                        var n = this.deferredPool[e];
                        --n.segmentsCountdown <= 0 && (n.callback.call(n.context),
                        n.fired = !0)
                    }
                    o.remove(this.deferredPool, function(t) {
                        return t.fired
                    })
                }
            }, {
                key: "nextSegmentsSet",
                value: function() {
                    this.BranchesManager.update()
                }
            }, {
                key: "newSegments",
                value: function() {
                    this.deferredCheck();
                    var t = this.collidedSegment;
                    t.onCollision && (t.onCollision(this),
                    h.emit("GAME:collision", t));
                    for (var e = o.shuffle(this.lanes), n = 0, r = this.lanes.length; n < r; n++) {
                        var i = e[n]
                          , a = this.Spawner.getNextSegment(i.params.index);
                        h.emit("GAME:newSegment", a, i.params.index),
                        i.removeLastSegment(),
                        i.appendNewSegment(a)
                    }
                    this.Spawner.nextSegmentRound()
                }
            }, {
                key: "addPowerUp",
                value: function(t) {
                    this.protectionTimeout && window.clearTimeout(this.protectionTimeout),
                    this.statsVars.bonus++,
                    this.protection = !0,
                    this.protectionTimeout = window.setTimeout(this.removePowerUp.bind(this), 5e3),
                    this.DifficultyManager.acceleration = 1.5 * this.DifficultyManager.baseAcceleration,
                    TweenLite.to(this.DifficultyManager, .5, {
                        speedAcceleration: 2,
                        audioAcceleration: 1
                    }),
                    h.emit("GAME:enableEffect", t),
                    h.emit("SOUND:playAssetByID", "POWERUP_COLLISION"),
                    h.emit("SOUND:setMixerOutput", .8, 0)
                }
            }, {
                key: "removePowerUp",
                value: function() {
                    this.protection = !1,
                    this.protectionTimeout = !1,
                    this.DifficultyManager.acceleration = this.DifficultyManager.baseAcceleration,
                    TweenLite.to(this.DifficultyManager, .5, {
                        speedAcceleration: 1,
                        audioAcceleration: 1
                    }),
                    h.emit("GAME:disableEffects"),
                    h.emit("SOUND:setMixerOutput", 1, 0)
                }
            }, {
                key: "addInstrument",
                value: function(t) {
                    this.currentInstruments[t] = t,
                    h.emit("GAME:nextInstrumentLoop", t),
                    this.statsVars.instruments++
                }
            }, {
                key: "removeInstrument",
                value: function() {
                    if (!this.protection) {
                        this.statsVars.malus++;
                        var t = o.sample(this.currentInstruments);
                        delete this.currentInstruments[t],
                        h.emit("GAME:disableInstrument", t);
                        var e = ["MALUS_COLLISION", "MALUS_COLLISION2"];
                        h.emit("SOUND:playAssetByID", o.sample(e));
                        var n = Object.keys(this.currentInstruments).length;
                        if (n <= 0)
                            return this.gameOver();
                        h.emit("POSTPROCESS:enableGlitch"),
                        window.setTimeout(function() {
                            h.emit("POSTPROCESS:disableGlitch")
                        }, 200)
                    }
                }
            }, {
                key: "gameOver",
                value: function() {
                    var t = !(arguments.length <= 0 || void 0 === arguments[0]) && arguments[0];
                    this.protection || (this.spm = 0,
                    this.pause(),
                    this.currentInstruments = {},
                    this.Keyboard.active = !1,
                    this.Mouse.active = !1,
                    this.Touch.active = !1,
                    h.emit("GAME:disableAllInstruments"),
                    t ? (this.statsVars.fallInHole = !0,
                    h.emit("GAME:fatal", 1)) : (this.statsVars.outOfInstruments = !0,
                    h.emit("GAME:fatal", 2)))
                }
            }, {
                key: "emitScore",
                value: function() {
                    this.currentScore !== this._oldScore && h.emit("GAME:updateScore", this.currentScore),
                    this._oldScore = this.currentScore
                }
            }, {
                key: "setCursorIndex",
                value: function(t) {
                    var e = !(arguments.length <= 1 || void 0 === arguments[1]) && arguments[1]
                      , n = this.getLaneByIndex(t);
                    this.isPaused || n && n.params.active && (e && this.BranchesManager.active && this.WebGLRender && !this.WebGLRender.LaneManager.canSwitchToLane(t) || (this.cursorIndex = t,
                    h.emit("GAME:newCursorIndex", t),
                    n.lastSegment.fatal && n.oldSegment.fatal && n.lastSegment.onCollision(this)))
                }
            }, {
                key: "moveCursorRight",
                value: function() {
                    var t = this.cursorIndex
                      , e = void 0;
                    do
                        if (e = this.getLaneByIndex(++t),
                        e && e.params.active)
                            break;
                    while (e);return this.setCursorIndex(t, !0)
                }
            }, {
                key: "moveCursorLeft",
                value: function() {
                    var t = this.cursorIndex
                      , e = void 0;
                    do
                        if (e = this.getLaneByIndex(--t),
                        e && e.params.active)
                            break;
                    while (e);return this.setCursorIndex(t, !0)
                }
            }, {
                key: "getActiveLanesIndexes",
                value: function() {
                    for (var t = [], e = 0, n = this.lanes.length; e < n; e++) {
                        var r = this.lanes[e];
                        r.params.active && (t[t.length] = r.params.index)
                    }
                    return t
                }
            }, {
                key: "getLaneByIndex",
                value: function(t) {
                    for (var e = 0, n = this.lanes.length; e < n; e++)
                        if (this.lanes[e].params.index === t)
                            return this.lanes[e]
                }
            }, {
                key: "currentScore",
                get: function() {
                    var t = a(this.DifficultyManager.multiplier, 1, 100, 100, 500);
                    return Math.round(t)
                }
            }, {
                key: "collidedSegment",
                get: function() {
                    var t = this.getLaneByIndex(this.cursorIndex);
                    return t.lastSegment
                }
            }, {
                key: "currentLane",
                get: function() {
                    return this.getLaneByIndex(this.cursorIndex)
                }
            }]),
            t
        }();
        e.exports = new _
    }
    , {
        "../Dispatcher/Dispatcher": 23,
        "../Helpers/Normalize": 57,
        "../Helpers/Tracking": 60,
        "./BranchesManager": 25,
        "./Clock": 27,
        "./DifficultyManager": 28,
        "./Input/Keyboard": 30,
        "./Input/Mouse": 31,
        "./Input/Touch": 32,
        "./Items/EmptyItem": 44,
        "./Lane": 48,
        "./Spawner": 50,
        "./Tutorial": 51,
        lodash: 5
    }],
    30: [function(t, e, n) {
        "use strict";
        function r(t, e) {
            if (!(t instanceof e))
                throw new TypeError("Cannot call a class as a function")
        }
        var i = function() {
            function t(t, e) {
                for (var n = 0; n < e.length; n++) {
                    var r = e[n];
                    r.enumerable = r.enumerable || !1,
                    r.configurable = !0,
                    "value"in r && (r.writable = !0),
                    Object.defineProperty(t, r.key, r)
                }
            }
            return function(e, n, r) {
                return n && t(e.prototype, n),
                r && t(e, r),
                e
            }
        }()
          , o = function() {
            function t(e) {
                r(this, t),
                this.gameCtx = e,
                this.active = !0,
                document.addEventListener("keydown", this.onKeyDown.bind(this))
            }
            return i(t, [{
                key: "onKeyDown",
                value: function(t) {
                    var e = t.which || t.keyCode;
                    if (!this.gameCtx.isPaused && this.active)
                        return 37 === e || 65 === e ? (t.preventDefault(),
                        this.gameCtx.moveCursorLeft()) : 39 === e || 68 === e ? (t.preventDefault(),
                        this.gameCtx.moveCursorRight()) : void 0
                }
            }]),
            t
        }();
        e.exports = o
    }
    , {}],
    31: [function(t, e, n) {
        "use strict";
        function r(t, e) {
            if (!(t instanceof e))
                throw new TypeError("Cannot call a class as a function")
        }
        var i = function() {
            function t(t, e) {
                for (var n = 0; n < e.length; n++) {
                    var r = e[n];
                    r.enumerable = r.enumerable || !1,
                    r.configurable = !0,
                    "value"in r && (r.writable = !0),
                    Object.defineProperty(t, r.key, r)
                }
            }
            return function(e, n, r) {
                return n && t(e.prototype, n),
                r && t(e, r),
                e
            }
        }()
          , o = function() {
            function t(e) {
                r(this, t),
                this.gameCtx = e,
                this.active = !0,
                document.addEventListener("mousedown", this.onMouseDown.bind(this))
            }
            return i(t, [{
                key: "needToStop",
                value: function(t) {
                    for (; t && t.classList && !t.classList.contains("prevent-game"); )
                        t = t.parentNode;
                    return !!(t && t.classList && t.classList.contains("prevent-game"))
                }
            }, {
                key: "onMouseDown",
                value: function(t) {
                    if (!this.gameCtx.isPaused && this.active && !this.needToStop(t.target)) {
                        t.preventDefault();
                        var e = t.clientX / window.innerWidth;
                        return e < .5 ? this.gameCtx.moveCursorLeft() : this.gameCtx.moveCursorRight()
                    }
                }
            }]),
            t
        }();
        e.exports = o
    }
    , {}],
    32: [function(t, e, n) {
        "use strict";
        function r(t, e) {
            if (!(t instanceof e))
                throw new TypeError("Cannot call a class as a function")
        }
        var i = function() {
            function t(t, e) {
                for (var n = 0; n < e.length; n++) {
                    var r = e[n];
                    r.enumerable = r.enumerable || !1,
                    r.configurable = !0,
                    "value"in r && (r.writable = !0),
                    Object.defineProperty(t, r.key, r)
                }
            }
            return function(e, n, r) {
                return n && t(e.prototype, n),
                r && t(e, r),
                e
            }
        }()
          , o = function() {
            function t(e) {
                r(this, t),
                this.gameCtx = e,
                this.active = !0,
                document.addEventListener("touchstart", this.onTouchStart.bind(this))
            }
            return i(t, [{
                key: "onTouchStart",
                value: function(t) {
                    if (!this.gameCtx.isPaused && this.active) {
                        t.preventDefault();
                        var e = t.touches[0].clientX / window.innerWidth;
                        return e < .5 ? this.gameCtx.moveCursorLeft() : this.gameCtx.moveCursorRight()
                    }
                }
            }]),
            t
        }();
        e.exports = o
    }
    , {}],
    33: [function(t, e, n) {
        "use strict";
        function r(t, e) {
            if (!(t instanceof e))
                throw new TypeError("Cannot call a class as a function")
        }
        var i = function() {
            function t(t, e) {
                for (var n = 0; n < e.length; n++) {
                    var r = e[n];
                    r.enumerable = r.enumerable || !1,
                    r.configurable = !0,
                    "value"in r && (r.writable = !0),
                    Object.defineProperty(t, r.key, r)
                }
            }
            return function(e, n, r) {
                return n && t(e.prototype, n),
                r && t(e, r),
                e
            }
        }()
          , o = function() {
            function t() {
                r(this, t),
                this.name = void 0
            }
            return i(t, [{
                key: "onCollision",
                value: function() {}
            }]),
            t
        }();
        e.exports = o
    }
    , {}],
    34: [function(t, e, n) {
        "use strict";
        function r(t, e) {
            if (!(t instanceof e))
                throw new TypeError("Cannot call a class as a function")
        }
        function i(t, e) {
            if (!t)
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return !e || "object" != typeof e && "function" != typeof e ? t : e
        }
        function o(t, e) {
            if ("function" != typeof e && null !== e)
                throw new TypeError("Super expression must either be null or a function, not " + typeof e);
            t.prototype = Object.create(e && e.prototype, {
                constructor: {
                    value: t,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                }
            }),
            e && (Object.setPrototypeOf ? Object.setPrototypeOf(t, e) : t.__proto__ = e)
        }
        var a = function() {
            function t(t, e) {
                for (var n = 0; n < e.length; n++) {
                    var r = e[n];
                    r.enumerable = r.enumerable || !1,
                    r.configurable = !0,
                    "value"in r && (r.writable = !0),
                    Object.defineProperty(t, r.key, r)
                }
            }
            return function(e, n, r) {
                return n && t(e.prototype, n),
                r && t(e, r),
                e
            }
        }()
          , s = t("../BaseItem")
          , h = function(t) {
            function e() {
                r(this, e);
                var t = i(this, Object.getPrototypeOf(e).call(this));
                return t.instrument = null ,
                t.bonus = !0,
                t
            }
            return o(e, t),
            a(e, [{
                key: "onCollision",
                value: function(t) {
                    t.addInstrument(this.instrument)
                }
            }]),
            e
        }(s);
        e.exports = h
    }
    , {
        "../BaseItem": 33
    }],
    35: [function(t, e, n) {
        "use strict";
        function r(t, e) {
            if (!(t instanceof e))
                throw new TypeError("Cannot call a class as a function")
        }
        function i(t, e) {
            if (!t)
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return !e || "object" != typeof e && "function" != typeof e ? t : e
        }
        function o(t, e) {
            if ("function" != typeof e && null !== e)
                throw new TypeError("Super expression must either be null or a function, not " + typeof e);
            t.prototype = Object.create(e && e.prototype, {
                constructor: {
                    value: t,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                }
            }),
            e && (Object.setPrototypeOf ? Object.setPrototypeOf(t, e) : t.__proto__ = e)
        }
        var a = (t("../../../Dispatcher/Dispatcher"),
        t("../../../AssetsManager"))
          , s = t("./BaseBonus")
          , h = function(t) {
            function e() {
                r(this, e);
                var t = i(this, Object.getPrototypeOf(e).call(this));
                return t.instrument = a.instruments.AUDIO_TYPE_BASS,
                t
            }
            return o(e, t),
            e
        }(s);
        e.exports = new h
    }
    , {
        "../../../AssetsManager": 22,
        "../../../Dispatcher/Dispatcher": 23,
        "./BaseBonus": 34
    }],
    36: [function(t, e, n) {
        "use strict";
        function r(t, e) {
            if (!(t instanceof e))
                throw new TypeError("Cannot call a class as a function")
        }
        function i(t, e) {
            if (!t)
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return !e || "object" != typeof e && "function" != typeof e ? t : e
        }
        function o(t, e) {
            if ("function" != typeof e && null !== e)
                throw new TypeError("Super expression must either be null or a function, not " + typeof e);
            t.prototype = Object.create(e && e.prototype, {
                constructor: {
                    value: t,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                }
            }),
            e && (Object.setPrototypeOf ? Object.setPrototypeOf(t, e) : t.__proto__ = e)
        }
        var a = (t("../../../Dispatcher/Dispatcher"),
        t("../../../AssetsManager"))
          , s = t("./BaseBonus")
          , h = function(t) {
            function e() {
                r(this, e);
                var t = i(this, Object.getPrototypeOf(e).call(this));
                return t.instrument = a.instruments.AUDIO_TYPE_DRUM,
                t
            }
            return o(e, t),
            e
        }(s);
        e.exports = new h
    }
    , {
        "../../../AssetsManager": 22,
        "../../../Dispatcher/Dispatcher": 23,
        "./BaseBonus": 34
    }],
    37: [function(t, e, n) {
        "use strict";
        function r(t, e) {
            if (!(t instanceof e))
                throw new TypeError("Cannot call a class as a function")
        }
        function i(t, e) {
            if (!t)
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return !e || "object" != typeof e && "function" != typeof e ? t : e
        }
        function o(t, e) {
            if ("function" != typeof e && null !== e)
                throw new TypeError("Super expression must either be null or a function, not " + typeof e);
            t.prototype = Object.create(e && e.prototype, {
                constructor: {
                    value: t,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                }
            }),
            e && (Object.setPrototypeOf ? Object.setPrototypeOf(t, e) : t.__proto__ = e)
        }
        var a = (t("../../../Dispatcher/Dispatcher"),
        t("../../../AssetsManager"))
          , s = t("./BaseBonus")
          , h = function(t) {
            function e() {
                r(this, e);
                var t = i(this, Object.getPrototypeOf(e).call(this));
                return t.instrument = a.instruments.AUDIO_TYPE_EXTRA,
                t
            }
            return o(e, t),
            e
        }(s);
        e.exports = new h
    }
    , {
        "../../../AssetsManager": 22,
        "../../../Dispatcher/Dispatcher": 23,
        "./BaseBonus": 34
    }],
    38: [function(t, e, n) {
        "use strict";
        function r(t, e) {
            if (!(t instanceof e))
                throw new TypeError("Cannot call a class as a function")
        }
        function i(t, e) {
            if (!t)
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return !e || "object" != typeof e && "function" != typeof e ? t : e
        }
        function o(t, e) {
            if ("function" != typeof e && null !== e)
                throw new TypeError("Super expression must either be null or a function, not " + typeof e);
            t.prototype = Object.create(e && e.prototype, {
                constructor: {
                    value: t,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                }
            }),
            e && (Object.setPrototypeOf ? Object.setPrototypeOf(t, e) : t.__proto__ = e)
        }
        var a = (t("../../../Dispatcher/Dispatcher"),
        t("../../../AssetsManager"))
          , s = t("./BaseBonus")
          , h = function(t) {
            function e() {
                r(this, e);
                var t = i(this, Object.getPrototypeOf(e).call(this));
                return t.instrument = a.instruments.AUDIO_TYPE_FX,
                t
            }
            return o(e, t),
            e
        }(s);
        e.exports = new h
    }
    , {
        "../../../AssetsManager": 22,
        "../../../Dispatcher/Dispatcher": 23,
        "./BaseBonus": 34
    }],
    39: [function(t, e, n) {
        "use strict";
        function r(t, e) {
            if (!(t instanceof e))
                throw new TypeError("Cannot call a class as a function")
        }
        function i(t, e) {
            if (!t)
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return !e || "object" != typeof e && "function" != typeof e ? t : e
        }
        function o(t, e) {
            if ("function" != typeof e && null !== e)
                throw new TypeError("Super expression must either be null or a function, not " + typeof e);
            t.prototype = Object.create(e && e.prototype, {
                constructor: {
                    value: t,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                }
            }),
            e && (Object.setPrototypeOf ? Object.setPrototypeOf(t, e) : t.__proto__ = e)
        }
        var a = (t("../../../Dispatcher/Dispatcher"),
        t("../../../AssetsManager"))
          , s = t("./BaseBonus")
          , h = function(t) {
            function e() {
                r(this, e);
                var t = i(this, Object.getPrototypeOf(e).call(this));
                return t.instrument = a.instruments.AUDIO_TYPE_GUITAR,
                t
            }
            return o(e, t),
            e
        }(s);
        e.exports = new h
    }
    , {
        "../../../AssetsManager": 22,
        "../../../Dispatcher/Dispatcher": 23,
        "./BaseBonus": 34
    }],
    40: [function(t, e, n) {
        "use strict";
        function r(t, e) {
            if (!(t instanceof e))
                throw new TypeError("Cannot call a class as a function")
        }
        function i(t, e) {
            if (!t)
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return !e || "object" != typeof e && "function" != typeof e ? t : e
        }
        function o(t, e) {
            if ("function" != typeof e && null !== e)
                throw new TypeError("Super expression must either be null or a function, not " + typeof e);
            t.prototype = Object.create(e && e.prototype, {
                constructor: {
                    value: t,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                }
            }),
            e && (Object.setPrototypeOf ? Object.setPrototypeOf(t, e) : t.__proto__ = e)
        }
        var a = (t("../../../Dispatcher/Dispatcher"),
        t("../../../AssetsManager"))
          , s = t("./BaseBonus")
          , h = function(t) {
            function e() {
                r(this, e);
                var t = i(this, Object.getPrototypeOf(e).call(this));
                return t.instrument = a.instruments.AUDIO_TYPE_SYNTH,
                t
            }
            return o(e, t),
            e
        }(s);
        e.exports = new h
    }
    , {
        "../../../AssetsManager": 22,
        "../../../Dispatcher/Dispatcher": 23,
        "./BaseBonus": 34
    }],
    41: [function(t, e, n) {
        "use strict";
        function r(t, e) {
            if (!(t instanceof e))
                throw new TypeError("Cannot call a class as a function")
        }
        function i(t, e) {
            if (!t)
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return !e || "object" != typeof e && "function" != typeof e ? t : e
        }
        function o(t, e) {
            if ("function" != typeof e && null !== e)
                throw new TypeError("Super expression must either be null or a function, not " + typeof e);
            t.prototype = Object.create(e && e.prototype, {
                constructor: {
                    value: t,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                }
            }),
            e && (Object.setPrototypeOf ? Object.setPrototypeOf(t, e) : t.__proto__ = e)
        }
        var a = (t("../../../Dispatcher/Dispatcher"),
        t("../../../AssetsManager"))
          , s = t("./BaseBonus")
          , h = function(t) {
            function e() {
                r(this, e);
                var t = i(this, Object.getPrototypeOf(e).call(this));
                return t.instrument = a.instruments.AUDIO_TYPE_VOCAL,
                t
            }
            return o(e, t),
            e
        }(s);
        e.exports = new h
    }
    , {
        "../../../AssetsManager": 22,
        "../../../Dispatcher/Dispatcher": 23,
        "./BaseBonus": 34
    }],
    42: [function(t, e, n) {
        "use strict";
        function r(t, e) {
            if (!(t instanceof e))
                throw new TypeError("Cannot call a class as a function")
        }
        function i(t, e) {
            if (!t)
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return !e || "object" != typeof e && "function" != typeof e ? t : e
        }
        function o(t, e) {
            if ("function" != typeof e && null !== e)
                throw new TypeError("Super expression must either be null or a function, not " + typeof e);
            t.prototype = Object.create(e && e.prototype, {
                constructor: {
                    value: t,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                }
            }),
            e && (Object.setPrototypeOf ? Object.setPrototypeOf(t, e) : t.__proto__ = e)
        }
        var a = t("../BaseItem")
          , s = function(t) {
            function e() {
                r(this, e);
                var t = i(this, Object.getPrototypeOf(e).call(this));
                return t.bonus = !0,
                t.powerUp = !0,
                t
            }
            return o(e, t),
            e
        }(a);
        e.exports = s
    }
    , {
        "../BaseItem": 33
    }],
    43: [function(t, e, n) {
        "use strict";
        function r(t, e) {
            if (!(t instanceof e))
                throw new TypeError("Cannot call a class as a function")
        }
        function i(t, e) {
            if (!t)
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return !e || "object" != typeof e && "function" != typeof e ? t : e
        }
        function o(t, e) {
            if ("function" != typeof e && null !== e)
                throw new TypeError("Super expression must either be null or a function, not " + typeof e);
            t.prototype = Object.create(e && e.prototype, {
                constructor: {
                    value: t,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                }
            }),
            e && (Object.setPrototypeOf ? Object.setPrototypeOf(t, e) : t.__proto__ = e)
        }
        var a = function() {
            function t(t, e) {
                for (var n = 0; n < e.length; n++) {
                    var r = e[n];
                    r.enumerable = r.enumerable || !1,
                    r.configurable = !0,
                    "value"in r && (r.writable = !0),
                    Object.defineProperty(t, r.key, r)
                }
            }
            return function(e, n, r) {
                return n && t(e.prototype, n),
                r && t(e, r),
                e
            }
        }()
          , s = (t("../../../Dispatcher/Dispatcher"),
        t("../../../AssetsManager"))
          , h = t("./BaseEffect")
          , u = function(t) {
            function e() {
                r(this, e);
                var t = i(this, Object.getPrototypeOf(e).call(this));
                return t.effect = s.effects.HIGHPASS,
                t
            }
            return o(e, t),
            a(e, [{
                key: "onCollision",
                value: function(t) {
                    t.addPowerUp(this.effect)
                }
            }]),
            e
        }(h);
        e.exports = new u
    }
    , {
        "../../../AssetsManager": 22,
        "../../../Dispatcher/Dispatcher": 23,
        "./BaseEffect": 42
    }],
    44: [function(t, e, n) {
        "use strict";
        function r(t, e) {
            if (!(t instanceof e))
                throw new TypeError("Cannot call a class as a function")
        }
        function i(t, e) {
            if (!t)
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return !e || "object" != typeof e && "function" != typeof e ? t : e
        }
        function o(t, e) {
            if ("function" != typeof e && null !== e)
                throw new TypeError("Super expression must either be null or a function, not " + typeof e);
            t.prototype = Object.create(e && e.prototype, {
                constructor: {
                    value: t,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                }
            }),
            e && (Object.setPrototypeOf ? Object.setPrototypeOf(t, e) : t.__proto__ = e)
        }
        var a = t("./BaseItem")
          , s = function(t) {
            function e() {
                r(this, e);
                var t = i(this, Object.getPrototypeOf(e).call(this));
                return t.onCollision = !1,
                t
            }
            return o(e, t),
            e
        }(a);
        e.exports = new s
    }
    , {
        "./BaseItem": 33
    }],
    45: [function(t, e, n) {
        "use strict";
        function r(t, e) {
            if (!(t instanceof e))
                throw new TypeError("Cannot call a class as a function")
        }
        function i(t, e) {
            if (!t)
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return !e || "object" != typeof e && "function" != typeof e ? t : e
        }
        function o(t, e) {
            if ("function" != typeof e && null !== e)
                throw new TypeError("Super expression must either be null or a function, not " + typeof e);
            t.prototype = Object.create(e && e.prototype, {
                constructor: {
                    value: t,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                }
            }),
            e && (Object.setPrototypeOf ? Object.setPrototypeOf(t, e) : t.__proto__ = e)
        }
        var a = t("../BaseItem")
          , s = function(t) {
            function e() {
                r(this, e);
                var t = i(this, Object.getPrototypeOf(e).call(this));
                return t.malus = !0,
                t
            }
            return o(e, t),
            e
        }(a);
        e.exports = s
    }
    , {
        "../BaseItem": 33
    }],
    46: [function(t, e, n) {
        "use strict";
        function r(t, e) {
            if (!(t instanceof e))
                throw new TypeError("Cannot call a class as a function")
        }
        function i(t, e) {
            if (!t)
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return !e || "object" != typeof e && "function" != typeof e ? t : e
        }
        function o(t, e) {
            if ("function" != typeof e && null !== e)
                throw new TypeError("Super expression must either be null or a function, not " + typeof e);
            t.prototype = Object.create(e && e.prototype, {
                constructor: {
                    value: t,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                }
            }),
            e && (Object.setPrototypeOf ? Object.setPrototypeOf(t, e) : t.__proto__ = e)
        }
        var a = function() {
            function t(t, e) {
                for (var n = 0; n < e.length; n++) {
                    var r = e[n];
                    r.enumerable = r.enumerable || !1,
                    r.configurable = !0,
                    "value"in r && (r.writable = !0),
                    Object.defineProperty(t, r.key, r)
                }
            }
            return function(e, n, r) {
                return n && t(e.prototype, n),
                r && t(e, r),
                e
            }
        }()
          , s = t("./BaseMalus")
          , h = function(t) {
            function e() {
                return r(this, e),
                i(this, Object.getPrototypeOf(e).call(this))
            }
            return o(e, t),
            a(e, [{
                key: "onCollision",
                value: function(t) {
                    t.removeInstrument()
                }
            }]),
            e
        }(s);
        e.exports = new h
    }
    , {
        "./BaseMalus": 45
    }],
    47: [function(t, e, n) {
        "use strict";
        function r(t, e) {
            if (!(t instanceof e))
                throw new TypeError("Cannot call a class as a function")
        }
        function i(t, e) {
            if (!t)
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return !e || "object" != typeof e && "function" != typeof e ? t : e
        }
        function o(t, e) {
            if ("function" != typeof e && null !== e)
                throw new TypeError("Super expression must either be null or a function, not " + typeof e);
            t.prototype = Object.create(e && e.prototype, {
                constructor: {
                    value: t,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                }
            }),
            e && (Object.setPrototypeOf ? Object.setPrototypeOf(t, e) : t.__proto__ = e)
        }
        var a = function() {
            function t(t, e) {
                for (var n = 0; n < e.length; n++) {
                    var r = e[n];
                    r.enumerable = r.enumerable || !1,
                    r.configurable = !0,
                    "value"in r && (r.writable = !0),
                    Object.defineProperty(t, r.key, r)
                }
            }
            return function(e, n, r) {
                return n && t(e.prototype, n),
                r && t(e, r),
                e
            }
        }()
          , s = t("./BaseMalus")
          , h = function(t) {
            function e() {
                r(this, e);
                var t = i(this, Object.getPrototypeOf(e).call(this));
                return t.fatal = !0,
                t
            }
            return o(e, t),
            a(e, [{
                key: "onCollision",
                value: function(t) {
                    t.gameOver(!0)
                }
            }]),
            e
        }(s);
        e.exports = new h
    }
    , {
        "./BaseMalus": 45
    }],
    48: [function(t, e, n) {
        "use strict";
        function r(t, e) {
            if (!(t instanceof e))
                throw new TypeError("Cannot call a class as a function")
        }
        var i = function() {
            function t(t, e) {
                for (var n = 0; n < e.length; n++) {
                    var r = e[n];
                    r.enumerable = r.enumerable || !1,
                    r.configurable = !0,
                    "value"in r && (r.writable = !0),
                    Object.defineProperty(t, r.key, r)
                }
            }
            return function(e, n, r) {
                return n && t(e.prototype, n),
                r && t(e, r),
                e
            }
        }()
          , o = t("lodash")
          , a = function() {
            function t(e) {
                return r(this, t),
                this.params = o.assign({
                    index: 0,
                    item: null ,
                    numberOfSegments: 100,
                    active: !0
                }, e),
                this.init(),
                this
            }
            return i(t, [{
                key: "init",
                value: function() {
                    this.oldSegment = null ,
                    this.segments = new Array(this.params.numberOfSegments),
                    this.segments.fill(this.params.item)
                }
            }, {
                key: "reset",
                value: function() {
                    this.init()
                }
            }, {
                key: "setNumberOfSegments",
                value: function(t) {
                    var e = new Array(t);
                    e.fill(this.params.item);
                    for (var n = 0; n < t; n++)
                        this.segments[n] && (e[n] = this.segments[n]);
                    this.segments = e
                }
            }, {
                key: "removeLastSegment",
                value: function() {
                    return this.oldSegment = this.segments.pop(),
                    !0
                }
            }, {
                key: "appendNewSegment",
                value: function(t) {
                    return this.segments.unshift(t)
                }
            }, {
                key: "lastSegment",
                get: function() {
                    return this.segments[this.segments.length - 1]
                }
            }]),
            t
        }();
        e.exports = a
    }
    , {
        lodash: 5
    }],
    49: [function(t, e, n) {
        "use strict";
        function r(t, e) {
            if (!(t instanceof e))
                throw new TypeError("Cannot call a class as a function")
        }
        var i = function() {
            function t(t, e) {
                for (var n = 0; n < e.length; n++) {
                    var r = e[n];
                    r.enumerable = r.enumerable || !1,
                    r.configurable = !0,
                    "value"in r && (r.writable = !0),
                    Object.defineProperty(t, r.key, r)
                }
            }
            return function(e, n, r) {
                return n && t(e.prototype, n),
                r && t(e, r),
                e
            }
        }()
          , o = t("lodash")
          , a = function() {
            function t() {
                r(this, t),
                this.verdicts = [{
                    min: 100,
                    text: "Future Star"
                }, {
                    min: 200,
                    text: "In the flow"
                }, {
                    min: 300,
                    text: "You rock"
                }, {
                    min: 400,
                    text: "Triple Platinum"
                }, {
                    min: 500,
                    text: "Rock God"
                }]
            }
            return i(t, [{
                key: "getVerdictByScore",
                value: function(t) {
                    var e = this.verdicts[0];
                    return o.forEach(this.verdicts, function(n) {
                        t >= n.min && (e = n)
                    }),
                    e
                }
            }]),
            t
        }();
        e.exports = new a
    }
    , {
        lodash: 5
    }],
    50: [function(t, e, n) {
        "use strict";
        function r(t, e) {
            if (!(t instanceof e))
                throw new TypeError("Cannot call a class as a function")
        }
        var i = function() {
            function t(t, e) {
                for (var n = 0; n < e.length; n++) {
                    var r = e[n];
                    r.enumerable = r.enumerable || !1,
                    r.configurable = !0,
                    "value"in r && (r.writable = !0),
                    Object.defineProperty(t, r.key, r)
                }
            }
            return function(e, n, r) {
                return n && t(e.prototype, n),
                r && t(e, r),
                e
            }
        }()
          , o = t("lodash")
          , a = t("../Helpers/Simple1DNoise")
          , s = t("../Helpers/Normalize")
          , h = t("./Items/Bonus/BassItem")
          , u = t("./Items/Bonus/DrumItem")
          , l = t("./Items/Bonus/ExtraItem")
          , c = t("./Items/Bonus/FxItem")
          , p = t("./Items/Bonus/GuitarItem")
          , f = t("./Items/Bonus/VocalItem")
          , d = t("./Items/Bonus/SynthItem")
          , m = t("./Items/Effects/DelayItem")
          , v = t("./Items/Malus/FatalItem")
          , g = t("./Items/Malus/BrokenVinylItem")
          , y = t("./Items/EmptyItem")
          , _ = [h, u, l, c, p, f, d]
          , x = [m]
          , b = [g]
          , w = function() {
            function t(e) {
                return r(this, t),
                this.generator = new a,
                this.generatorAmplitude = 1,
                this.generator.setAmplitude(this.generatorAmplitude),
                this.generator.setScale(.13),
                this.gameCtx = e,
                this.enabled = !0,
                this.forceNextSegment = [!1, !1, !1],
                this.rates = {
                    bonusDrop: 6,
                    malusDrop: 8,
                    wallDrop: 3,
                    powerUpDrop: 7,
                    delayAfterBonus: 15,
                    delayAfterMalus: 5,
                    delayAfterFatal: 4
                },
                this.originalRates = o.clone(this.rates),
                this.tmpVars = {
                    x: 0,
                    delayMalus: 0,
                    delayBonus: 0,
                    delayAfterFatal: 0,
                    bonusPoolIndex: 0,
                    fatalLane: !1,
                    oldSafeLane: void 0,
                    forceOnlyBonus: !1,
                    forceNoHole: !1,
                    oldSafeIndex: void 0
                },
                this.originalTmpVars = o.clone(this.tmpVars),
                this.nextSegmentRound(),
                this
            }
            return i(t, [{
                key: "reset",
                value: function() {
                    this.rates = o.clone(this.originalRates),
                    this.tmpVars = o.clone(this.originalTmpVars),
                    this.enabled = !0
                }
            }, {
                key: "nextSegmentRound",
                value: function() {
                    this.tmpVars.x++,
                    this.tmpVars.delayBonus--,
                    this.tmpVars.delayMalus--,
                    this.calculateSafeLane()
                }
            }, {
                key: "calculateSafeLane",
                value: function() {
                    var t = this.generator.getVal(this.tmpVars.x);
                    this.activeLanes = this.gameCtx.getActiveLanesIndexes();
                    var e = Math.round(s(t, 0, this.generatorAmplitude, 0, this.activeLanes.length - 1))
                      , n = this.activeLanes[e];
                    this.tmpVars.safeLane = n
                }
            }, {
                key: "getRandomItemFromArray",
                value: function(t) {
                    return t[o.random(t.length - 1)]
                }
            }, {
                key: "isValueInsideArray",
                value: function(t, e) {
                    return e.indexOf(t) > -1
                }
            }, {
                key: "percentageSuccess",
                value: function() {
                    var t = arguments.length <= 0 || void 0 === arguments[0] ? 50 : arguments[0];
                    return Math.random() < t / 100
                }
            }, {
                key: "getBonus",
                value: function(t) {
                    if (this.tmpVars.delayBonus = this.rates.delayAfterBonus,
                    this.percentageSuccess(this.rates.powerUpDrop))
                        return this.getRandomItemFromArray(x);
                    var e = _[this.tmpVars.bonusPoolIndex % _.length];
                    return this.tmpVars.bonusPoolIndex++,
                    e
                }
            }, {
                key: "getMalus",
                value: function(t) {
                    return this.tmpVars.delayMalus = this.rates.delayAfterMalus,
                    this.percentageSuccess(this.rates.wallDrop) && !this.forceNoHole ? (this.tmpVars.fatalLane = t,
                    v) : this.getRandomItemFromArray(b)
                }
            }, {
                key: "getNextSegment",
                value: function(t) {
                    var e = this.forceNextSegment[t];
                    if (e) {
                        var n = e.item;
                        return this.forceNextSegment[t] = !1,
                        n
                    }
                    if (!this.enabled)
                        return y;
                    var r = this.activeLanes
                      , i = this.tmpVars.safeLane;
                    if (this.tmpVars.fatalLane === t) {
                        if (!(this.tmpVars.forceOnlyBonus || this.forceNoHole || this.tmpVars.fatalLane === i || this.tmpVars.oldSafeLane && this.tmpVars.oldSafeLane !== i))
                            return v;
                        this.tmpVars.fatalLane = !1
                    }
                    if (this.tmpVars.oldSafeLane = i,
                    this.percentageSuccess(this.rates.bonusDrop) && this.isValueInsideArray(t, r) && this.tmpVars.delayBonus < 0)
                        return this.getBonus(t);
                    var a = o.without(r, i);
                    return 3 === r.length && 1 === this.tmpVars.fatalLane ? y : !this.tmpVars.forceOnlyBonus && this.percentageSuccess(this.rates.malusDrop) && this.isValueInsideArray(t, a) && this.tmpVars.delayMalus < 0 ? this.getMalus(t) : y
                }
            }]),
            t
        }();
        e.exports = w
    }
    , {
        "../Helpers/Normalize": 57,
        "../Helpers/Simple1DNoise": 59,
        "./Items/Bonus/BassItem": 35,
        "./Items/Bonus/DrumItem": 36,
        "./Items/Bonus/ExtraItem": 37,
        "./Items/Bonus/FxItem": 38,
        "./Items/Bonus/GuitarItem": 39,
        "./Items/Bonus/SynthItem": 40,
        "./Items/Bonus/VocalItem": 41,
        "./Items/Effects/DelayItem": 43,
        "./Items/EmptyItem": 44,
        "./Items/Malus/BrokenVinylItem": 46,
        "./Items/Malus/FatalItem": 47,
        lodash: 5
    }],
    51: [function(t, e, n) {
        "use strict";
        function r(t, e) {
            if (!(t instanceof e))
                throw new TypeError("Cannot call a class as a function")
        }
        var i = function() {
            function t(t, e) {
                for (var n = 0; n < e.length; n++) {
                    var r = e[n];
                    r.enumerable = r.enumerable || !1,
                    r.configurable = !0,
                    "value"in r && (r.writable = !0),
                    Object.defineProperty(t, r.key, r)
                }
            }
            return function(e, n, r) {
                return n && t(e.prototype, n),
                r && t(e, r),
                e
            }
        }()
          , o = t("lodash")
          , a = t("../Dispatcher/Dispatcher")
          , s = t("./Items/Effects/DelayItem.js")
          , h = t("./Items/Bonus/BassItem")
          , u = t("./Items/Bonus/DrumItem")
          , l = t("./Items/Malus/BrokenVinylItem.js")
          , c = (t("./BranchingOptions"),
        function() {
            function t() {
                r(this, t),
                this.elements = {
                    keyboard: this.getByClass("tutorial--keyboard"),
                    touch: this.getByClass("tutorial--touch"),
                    instrument: this.getByClass("tutorial--instrument"),
                    malus: this.getByClass("tutorial--malus"),
                    powerup: this.getByClass("tutorial--powerup"),
                    survive: this.getByClass("tutorial--survive")
                }
            }
            return i(t, [{
                key: "getByClass",
                value: function(t) {
                    return document.getElementsByClassName(t)
                }
            }, {
                key: "show",
                value: function(t) {
                    var e = this.elements[t];
                    if (e) {
                        var n = e[0].querySelector("img");
                        TweenLite.set(e, {
                            force3D: !0,
                            display: "block",
                            y: -400
                        }),
                        n && TweenLite.set(n, {
                            opacity: 0
                        }),
                        TweenLite.to(e, .4, {
                            y: "10vh"
                        }),
                        n && TweenLite.to(n, .4, {
                            opacity: 1
                        })
                    }
                }
            }, {
                key: "hide",
                value: function(t) {
                    var e = this.elements[t];
                    if (e) {
                        var n = e[0].querySelector("img");
                        TweenLite.to(e, .4, {
                            y: -400,
                            display: "none"
                        }),
                        n && TweenLite.to(n, .4, {
                            opacity: 0
                        })
                    }
                }
            }]),
            t
        }())
          , p = function() {
            function t(e) {
                return r(this, t),
                this.gameCtx = e,
                this.active = !1,
                this.Tips = new c,
                this
            }
            return i(t, [{
                key: "init",
                value: function() {
                    this.active = !0;
                    var t = this.gameCtx;
                    t.lanes[0].params.active = !1,
                    t.lanes[1].params.active = !0,
                    t.lanes[2].params.active = !1,
                    t.cursorIndex = 1,
                    t.BranchesManager.enabled = !1,
                    t.Spawner.enabled = !1,
                    t.DifficultyManager.acceleration = 0,
                    t.DifficultyManager.speedAcceleration = .6,
                    t.DifficultyManager.audioAcceleration = .9,
                    this.gotPowerUp = !1,
                    a.emit("LANE:tweenLane", 0, {
                        y: -50
                    }),
                    a.emit("LANE:tweenLane", 2, {
                        y: -50
                    }),
                    a.emit("GAME:tutorialStart"),
                    this.bind(),
                    this.addEvents()
                }
            }, {
                key: "bind",
                value: function() {
                    var t = this;
                    a.on("GAME:enableEffect", function() {
                        t.gotPowerUp = !0
                    })
                }
            }, {
                key: "finish",
                value: function() {
                    var t = this.gameCtx;
                    t.lanes[0].params.active = !0,
                    t.lanes[1].params.active = !0,
                    t.lanes[2].params.active = !0,
                    t.BranchesManager.enabled = !0,
                    t.Spawner.enabled = !0,
                    TweenLite.to(t.DifficultyManager, 2, {
                        acceleration: t.DifficultyManager.baseAcceleration,
                        speedAcceleration: 1,
                        audioAcceleration: 1
                    }),
                    t.initStatsVars(),
                    a.emit("GAME:tutorialEnd")
                }
            }, {
                key: "startInstrumentLoop",
                value: function() {
                    this.instrumentLoopActive = !0,
                    this.instrumentsPool = [h, u],
                    this.instrumentsIndex = 0,
                    this.instrumentRemaining = 3,
                    this.addInstrument(),
                    this.addInstrumentInterval = window.setInterval(this.addInstrument.bind(this), 3400),
                    a.on("GAME:nextInstrumentLoop", this.instrumentCheck.bind(this))
                }
            }, {
                key: "endInstrumentLoop",
                value: function() {
                    this.instrumentLoopActive = !1,
                    window.clearInterval(this.addInstrumentInterval),
                    this.afterInstrumentLoop()
                }
            }, {
                key: "addInstrument",
                value: function() {
                    var t = this.gameCtx.Spawner
                      , e = this.instrumentsPool.length
                      , n = this.instrumentsPool[this.instrumentsIndex % e];
                    this.instrumentsIndex++,
                    t.forceNextSegment[o.random(0, 2)] = {
                        item: n
                    }
                }
            }, {
                key: "instrumentCheck",
                value: function() {
                    if (this.instrumentLoopActive) {
                        this.Tips.hide("instrument");
                        var t = Object.keys(this.gameCtx.currentInstruments).length;
                        this.instrumentRemaining = 2 - t,
                        this.instrumentRemaining || this.endInstrumentLoop()
                    }
                }
            }, {
                key: "showSurvivePart",
                value: function() {
                    var t = this
                      , e = this.gameCtx
                      , n = e.addDeferred.bind(e);
                    this.Tips.show("survive"),
                    n(function() {
                        t.Tips.hide("survive"),
                        t.finish()
                    }, 30 * this.s)
                }
            }, {
                key: "powerupPart",
                value: function() {
                    var t = this
                      , e = this.gameCtx
                      , n = e.addDeferred.bind(e)
                      , r = e.Spawner;
                    n(function() {
                        r.forceNextSegment[0] = {
                            item: l
                        },
                        r.forceNextSegment[1] = {
                            item: l
                        },
                        r.forceNextSegment[2] = {
                            item: l
                        }
                    }, 30 * this.s),
                    window.setTimeout(function() {
                        t.showSurvivePart()
                    }, 5e3)
                }
            }, {
                key: "addEvents",
                value: function() {
                    var t = this
                      , e = this.gameCtx
                      , n = e.addDeferred.bind(e)
                      , r = e.Spawner
                      , i = Modernizr.desktop ? "keyboard" : "touch"
                      , o = .7;
                    o -= .2 * o,
                    o /= e.segmentsDelta,
                    this.s = o,
                    n(function() {
                        a.emit("LANE:tweenLane", 0, {
                            y: 0
                        }, 2),
                        window.setTimeout(function() {
                            e.lanes[0].params.active = !0
                        }, 2e3)
                    }, 10 * o),
                    n(function() {
                        a.emit("LANE:tweenLane", 2, {
                            y: 0
                        }, 2),
                        window.setTimeout(function() {
                            e.lanes[2].params.active = !0
                        }, 2e3)
                    }, 13 * o),
                    n(function() {
                        t.Tips.show(i)
                    }, 25 * o),
                    n(function() {
                        t.Tips.hide(i)
                    }, 60 * o),
                    n(function() {
                        t.Tips.show("instrument"),
                        t.startInstrumentLoop()
                    }, 70 * o),
                    this.afterInstrumentLoop = function() {
                        n(function() {
                            t.Tips.show("malus")
                        }, 10 * o),
                        n(function() {
                            r.forceNextSegment[e.cursorIndex] = {
                                item: l
                            }
                        }, 20 * o),
                        n(function() {
                            t.Tips.hide("malus")
                        }, 40 * o),
                        n(function() {
                            t.Tips.show("powerup"),
                            r.forceNextSegment[e.cursorIndex] = {
                                item: s
                            }
                        }, 60 * o),
                        n(function() {
                            t.Tips.hide("powerup")
                        }, 90 * o),
                        n(function() {
                            return t.gotPowerUp ? t.powerupPart() : void t.showSurvivePart()
                        }, 110 * o)
                    }
                }
            }]),
            t
        }();
        e.exports = p
    }
    , {
        "../Dispatcher/Dispatcher": 23,
        "./BranchingOptions": 26,
        "./Items/Bonus/BassItem": 35,
        "./Items/Bonus/DrumItem": 36,
        "./Items/Effects/DelayItem.js": 43,
        "./Items/Malus/BrokenVinylItem.js": 46,
        lodash: 5
    }],
    52: [function(t, e, n) {
        "use strict";
        function r() {
            try {
                var t = document.createElement("canvas");
                return !!window.WebGLRenderingContext && (t.getContext("webgl") || t.getContext("experimental-webgl"))
            } catch (e) {
                return !1
            }
        }
        e.exports = function() {
            return r() && Modernizr.webaudio
        }()
    }
    , {}],
    53: [function(t, e, n) {
        "use strict";
        function r(t, e, n, r, i, o, a, s) {
            2 === arguments.length && (n = r = 0,
            i = t.canvas.width,
            o = t.canvas.height),
            a = "number" == typeof a ? a : .5,
            s = "number" == typeof s ? s : .5,
            a < 0 && (a = 0),
            s < 0 && (s = 0),
            a > 1 && (a = 1),
            s > 1 && (s = 1);
            var h, u, l, c, p = e.width, f = e.height, d = Math.min(i / p, o / f), m = p * d, v = f * d, g = 1;
            m < i && (g = i / m),
            Math.abs(g - 1) < 1e-14 && v < o && (g = o / v),
            m *= g,
            v *= g,
            l = p / (m / i),
            c = f / (v / o),
            h = (p - l) * a,
            u = (f - c) * s,
            h < 0 && (h = 0),
            u < 0 && (u = 0),
            l > p && (l = p),
            c > f && (c = f),
            t.drawImage(e, h, u, l, c, n, r, i, o)
        }
        e.exports = r
    }
    , {}],
    54: [function(t, e, n) {
        "use strict";
        e.exports = function() {
            return new function() {
                this.resolve = null ,
                this.reject = null ,
                this.promise = new Promise(function(t, e) {
                    this.resolve = t,
                    this.reject = e
                }
                .bind(this))
            }
        }
    }
    , {}],
    55: [function(t, e, n) {
        "use strict";
        e.exports = function() {
            try {
                return window.self !== window.top
            } catch (t) {
                return !0
            }
        }()
    }
    , {}],
    56: [function(t, e, n) {
        "use strict";
        function r(t, e) {
            if (!(t instanceof e))
                throw new TypeError("Cannot call a class as a function")
        }
        var i = function() {
            function t(t, e) {
                for (var n = 0; n < e.length; n++) {
                    var r = e[n];
                    r.enumerable = r.enumerable || !1,
                    r.configurable = !0,
                    "value"in r && (r.writable = !0),
                    Object.defineProperty(t, r.key, r)
                }
            }
            return function(e, n, r) {
                return n && t(e.prototype, n),
                r && t(e, r),
                e
            }
        }()
          , o = t("lodash")
          , a = function() {
            function t(e) {
                r(this, t),
                this.element = e,
                this.parent = this.element.parentElement,
                this.oSize = {
                    width: 1920,
                    height: 1080
                },
                this.setSize(),
                this.fit(),
                window.addEventListener("resize", o.debounce(this.onResize.bind(this), 150))
            }
            return i(t, [{
                key: "setSize",
                value: function() {
                    this.fSize = {
                        width: this.parent.clientWidth,
                        height: this.parent.clientHeight
                    }
                }
            }, {
                key: "onResize",
                value: function() {
                    this.setSize(),
                    this.fit()
                }
            }, {
                key: "fit",
                value: function() {
                    var t = this.fSize
                      , e = this.oSize
                      , n = void 0
                      , r = void 0;
                    t.width / t.height > e.width / e.height ? (r = Math.floor(e.height * t.width / e.width) + 1,
                    n = Math.floor(r * e.width / e.height) + 1) : (n = Math.floor(this.windowHeight * e.width / e.height) + 1,
                    r = Math.floor(e.height * n / e.width) + 1),
                    this.applyStyle({
                        width: n + "px",
                        height: r + "px",
                        marginTop: -r / 2 + "px",
                        marginLeft: -n / 2 + "px",
                        left: "50%",
                        top: "50%",
                        position: "absolute",
                        zIndex: 0
                    })
                }
            }, {
                key: "applyStyle",
                value: function(t) {
                    for (var e in t)
                        this.element.style[e] = t[e]
                }
            }]),
            t
        }();
        e.exports = a
    }
    , {
        lodash: 5
    }],
    57: [function(t, e, n) {
        "use strict";
        e.exports = function(t, e, n, r, i) {
            return r + (i - r) * ((t - e) / (n - e))
        }
    }
    , {}],
    58: [function(t, e, n) {
        "use strict";
        function r(t, e) {
            if (!(t instanceof e))
                throw new TypeError("Cannot call a class as a function")
        }
        var i = function() {
            function t(t, e) {
                for (var n = 0; n < e.length; n++) {
                    var r = e[n];
                    r.enumerable = r.enumerable || !1,
                    r.configurable = !0,
                    "value"in r && (r.writable = !0),
                    Object.defineProperty(t, r.key, r)
                }
            }
            return function(e, n, r) {
                return n && t(e.prototype, n),
                r && t(e, r),
                e
            }
        }()
          , o = function() {
            function t() {
                return r(this, t),
                this.FB_APP_ID = FB_APP_ID || 0x5e4add960ff47,
                this
            }
            return i(t, [{
                key: "getWhatsAppLink",
                value: function(t) {
                    return t = encodeURIComponent(t),
                    "whatsapp://send?text=" + t
                }
            }, {
                key: "getFacebook",
                value: function() {
                    var t = arguments.length <= 0 || void 0 === arguments[0] ? window.location.href : arguments[0]
                      , e = encodeURIComponent(t)
                      , n = "https://www.facebook.com/dialog/share?app_id=" + this.FB_APP_ID + "&display=popup&href=" + e;
                    return n
                }
            }, {
                key: "getTwitter",
                value: function() {
                    var t = arguments.length <= 0 || void 0 === arguments[0] ? window.location.href : arguments[0]
                      , e = arguments[1];
                    e = encodeURIComponent(e);
                    var n = (encodeURIComponent(t),
                    "https://twitter.com/intent/tweet?url=" + t + "&text=" + e);
                    return n
                }
            }, {
                key: "openPopup",
                value: function(t, e, n, r) {
                    var i = (window.screen.width - n) / 2
                      , o = (window.screen.height - r) / 2;
                    return window.open(t, e, "status=no,resizable=yes,height=" + r + ",width=" + n + ",top=" + o + ",left=" + i + ",toolbar=no,menubar=no,scrollbars=no,location=no,directories=no")
                }
            }]),
            t
        }();
        e.exports = new o
    }
    , {}],
    59: [function(t, e, n) {
        "use strict";
        var r = function() {
            for (var t = 256, e = t - 1, n = 1, r = 1, i = [], o = 0; o < t; ++o)
                i.push(Math.random());
            var a = function(t) {
                var o = t * r
                  , a = Math.floor(o)
                  , h = o - a
                  , u = h * h * (3 - 2 * h)
                  , l = a & e
                  , c = l + 1 & e
                  , p = s(i[l], i[c], u);
                return p * n
            }
              , s = function(t, e, n) {
                return t * (1 - n) + e * n
            }
            ;
            return {
                getVal: a,
                setAmplitude: function(t) {
                    n = t
                },
                setScale: function(t) {
                    r = t
                }
            }
        }
        ;
        e.exports = r
    }
    , {}],
    60: [function(t, e, n) {
        "use strict";
        function r(t, e) {
            if (!(t instanceof e))
                throw new TypeError("Cannot call a class as a function")
        }
        var i = function() {
            function t(t, e) {
                for (var n = 0; n < e.length; n++) {
                    var r = e[n];
                    r.enumerable = r.enumerable || !1,
                    r.configurable = !0,
                    "value"in r && (r.writable = !0),
                    Object.defineProperty(t, r.key, r)
                }
            }
            return function(e, n, r) {
                return n && t(e.prototype, n),
                r && t(e, r),
                e
            }
        }()
          , o = function() {
            function t() {
                return r(this, t),
                this.namespace = "rbmh1",
                this.nOfPlays = 0,
                this.bind(),
                this
            }
            return i(t, [{
                key: "bind",
                value: function() {
                    return "onbeforeunload"in window ? void window.addEventListener("beforeunload", this.sendPlays.bind(this)) : void ("onunload"in window && window.addEventListener("unload", this.sendPlays.bind(this)))
                }
            }, {
                key: "sendPlays",
                value: function() {
                    this.send("Gameplay", "GameSession", "PlaysPerSession", this.nOfPlays)
                }
            }, {
                key: "send",
                value: function(t, e) {
                    var n = !(arguments.length <= 2 || void 0 === arguments[2]) && arguments[2]
                      , r = !(arguments.length <= 3 || void 0 === arguments[3]) && arguments[3];
                    if ("function" == typeof ga) {
                        var i = {
                            eventCategory: t,
                            eventAction: e
                        };
                        n !== !1 && (i.eventLabel = n),
                        r !== !1 && (i.eventValue = r),
                        ga(this.namespace + ".send", "event", i)
                    }
                }
            }]),
            t
        }();
        e.exports = new o
    }
    , {}],
    61: [function(t, e, n) {
        "use strict";
        function r(t, e) {
            if (!(t instanceof e))
                throw new TypeError("Cannot call a class as a function")
        }
        var i = function() {
            function t(t, e) {
                for (var n = 0; n < e.length; n++) {
                    var r = e[n];
                    r.enumerable = r.enumerable || !1,
                    r.configurable = !0,
                    "value"in r && (r.writable = !0),
                    Object.defineProperty(t, r.key, r)
                }
            }
            return function(e, n, r) {
                return n && t(e.prototype, n),
                r && t(e, r),
                e
            }
        }()
          , o = t("lodash")
          , a = t("resource-loader")
          , s = t("../AssetsManager")
          , h = t("../Dispatcher/Dispatcher")
          , u = t("../Sound/Sound")
          , l = a.Resource
          , c = ["wav", "mp3", "ogg"];
        o.forEach(c, function(t) {
            l.setExtensionLoadType(t, l.LOAD_TYPE.XHR),
            l.setExtensionXhrType(t, l.XHR_RESPONSE_TYPE.BUFFER)
        });
        var p = function() {
            function t() {
                r(this, t),
                this.progress = 0
            }
            return i(t, [{
                key: "updateProgress",
                value: function() {
                    this.progress += this.RL._progressChunk,
                    h.emit("LOADER:assetProcessed", this.progress)
                }
            }, {
                key: "afterMiddleware",
                value: function(t, e) {
                    var n = this
                      , r = s.getAssetByUrl(t.url);
                    return r.type === s.types.AUDIO ? void u.decodeAudioAsset(r, t.data).then(function() {
                        e(),
                        n.updateProgress()
                    }) : (r.source = t.data,
                    e(),
                    void this.updateProgress())
                }
            }, {
                key: "init",
                value: function(t) {
                    return this.RL = new a,
                    this.RL.add(t),
                    this.RL.after(this.afterMiddleware.bind(this)),
                    this.RL.load(),
                    this.RL.on("complete", function() {
                        h.emit("LOADER:complete")
                    }),
                    this.RL.on("error", function() {
                        console.error("Error loading.")
                    }),
                    this.RL
                }
            }]),
            t
        }();
        e.exports = new p
    }
    , {
        "../AssetsManager": 22,
        "../Dispatcher/Dispatcher": 23,
        "../Sound/Sound": 105,
        lodash: 5,
        "resource-loader": 15
    }],
    62: [function(t, e, n) {
        "use strict";
        function r(t, e) {
            if (!(t instanceof e))
                throw new TypeError("Cannot call a class as a function")
        }
        var i = function() {
            function t(t, e) {
                for (var n = 0; n < e.length; n++) {
                    var r = e[n];
                    r.enumerable = r.enumerable || !1,
                    r.configurable = !0,
                    "value"in r && (r.writable = !0),
                    Object.defineProperty(t, r.key, r)
                }
            }
            return function(e, n, r) {
                return n && t(e.prototype, n),
                r && t(e, r),
                e
            }
        }()
          , o = t("./Dispatcher/Dispatcher")
          , a = t("./Helpers/DetectIframe")
          , s = function() {
            function t() {
                return r(this, t),
                this.setNames(),
                this.isPageHidden = document[this._hidden],
                this.isFromIframe = a,
                this
            }
            return i(t, [{
                key: "setNames",
                value: function() {
                    "undefined" != typeof document.hidden ? (this._hidden = "hidden",
                    this._visibilityChange = "visibilitychange") : "undefined" != typeof document.mozHidden ? (this._hidden = "mozHidden",
                    this._visibilityChange = "mozvisibilitychange") : "undefined" != typeof document.msHidden ? (this._hidden = "msHidden",
                    this._visibilityChange = "msvisibilitychange") : "undefined" != typeof document.webkitHidden && (this._hidden = "webkitHidden",
                    this._visibilityChange = "webkitvisibilitychange")
                }
            }, {
                key: "init",
                value: function() {
                    return this.isFromIframe ? (window.addEventListener("focus", this.resume.bind(this)),
                    void window.addEventListener("blur", this.pause.bind(this))) : void document.addEventListener(this._visibilityChange, this.onVisibilityChange.bind(this))
                }
            }, {
                key: "onVisibilityChange",
                value: function() {
                    this.isPageHidden = document[this._hidden],
                    this[this.isPageHidden ? "pause" : "resume"]()
                }
            }, {
                key: "pause",
                value: function() {
                    o.emit("GAME:pause")
                }
            }, {
                key: "resume",
                value: function() {
                    var t = this;
                    this.resumeTimer && window.clearTimeout(this.resumeTimer),
                    this.resumeTimer = window.setTimeout(function() {
                        return !t.isPageHidden && void o.emit("GAME:resume")
                    }, 350)
                }
            }]),
            t
        }();
        e.exports = new s
    }
    , {
        "./Dispatcher/Dispatcher": 23,
        "./Helpers/DetectIframe": 55
    }],
    63: [function(t, e, n) {
        "use strict";
        function r(t, e) {
            if (!(t instanceof e))
                throw new TypeError("Cannot call a class as a function")
        }
        var i = function() {
            function t(t, e) {
                for (var n = 0; n < e.length; n++) {
                    var r = e[n];
                    r.enumerable = r.enumerable || !1,
                    r.configurable = !0,
                    "value"in r && (r.writable = !0),
                    Object.defineProperty(t, r.key, r)
                }
            }
            return function(e, n, r) {
                return n && t(e.prototype, n),
                r && t(e, r),
                e
            }
        }()
          , o = t("lodash")
          , a = function() {
            function t() {
                return r(this, t),
                this.colors = {
                    white: 16777215,
                    givry: 16375505,
                    shakespeare: 4369867,
                    bayofmany: 2709123,
                    maroonflush: 12920672,
                    fleshLight: 15649207,
                    fleshMedium: 13141889,
                    fleshDark: 10112331,
                    beige: 16776668,
                    pink: 13990553,
                    redLight: 14589360,
                    redMedium: 13192302,
                    redDark: 9123931,
                    blueLight: 3848425,
                    blueMedium: 2264246,
                    blueDark: 271712
                },
                this
            }
            return i(t, [{
                key: "getColor",
                value: function(t) {
                    return this.colors[t]
                }
            }, {
                key: "getRandomColor",
                value: function() {
                    return o.sample(this.colors)
                }
            }, {
                key: "getRandomColorName",
                value: function() {
                    return o.sample(Object.keys(this.colors))
                }
            }]),
            t
        }();
        e.exports = new a
    }
    , {
        lodash: 5
    }],
    64: [function(t, e, n) {
        "use strict";
        function r(t, e) {
            if (!(t instanceof e))
                throw new TypeError("Cannot call a class as a function")
        }
        var i = function() {
            function t(t, e) {
                for (var n = 0; n < e.length; n++) {
                    var r = e[n];
                    r.enumerable = r.enumerable || !1,
                    r.configurable = !0,
                    "value"in r && (r.writable = !0),
                    Object.defineProperty(t, r.key, r)
                }
            }
            return function(e, n, r) {
                return n && t(e.prototype, n),
                r && t(e, r),
                e
            }
        }()
          , o = t("lodash")
          , a = Math.PI
          , s = t("./decor/elements/LightColumn")
          , h = t("./decor/elements/LinedShape")
          , u = t("./decor/elements/DotsVisualizer")
          , l = t("./decor/elements/FlippingTriangle")
          , c = t("./decor/elements/PyramidSolo")
          , p = t("./decor/elements/PyramidStar")
          , f = t("./decor/elements/SpeakerHalfSphere")
          , d = t("./decor/elements/SpeedTunnel")
          , m = function() {
            function t(e) {
                r(this, t),
                this._posZ = 300,
                this._isDesktop = !!Modernizr.desktop,
                this.renderCtx = e,
                this.game = this.renderCtx.Game,
                this.decor = new THREE.Group,
                this.decor.name = "decor"
            }
            return i(t, [{
                key: "init",
                value: function() {
                    this.createPoolElements(),
                    this._isDesktop && (this.lightCol1 = this.createLightColumns(-150, -100, 300, "moving", {
                        rotationY: -2 * a / 3,
                        position: "right",
                        rangeX: [-350, -0]
                    }),
                    this.lightCol2 = this.createLightColumns(100, -100, 350, "moving", {
                        rotationY: -a / 3,
                        position: "left",
                        rangeX: [0, 350]
                    }),
                    this.linedShape1 = this.createLinedShapes(0, 100, 350, "moving", {
                        radius: 20,
                        depth: 20,
                        segments: 4,
                        linesCount: 10,
                        acuteness: 1,
                        color: "beige",
                        speed: .01
                    }),
                    this.linedShape2 = this.createLinedShapes(50, 100, 350, "moving", {
                        radius: 10,
                        depth: 20,
                        segments: 16,
                        linesCount: 8,
                        acuteness: 4,
                        color: "redMedium",
                        speed: .02
                    }),
                    this.dotsViz1 = this.createDotsVisualizers(-80, 70, 250, "moving", {
                        rows: 5,
                        columns: 5,
                        radius: 1,
                        spacing: 5,
                        color: "blueMedium",
                        rotationX: -Math.PI / 4,
                        rotationY: -Math.PI / 3,
                        power: .1
                    }),
                    this.dotsViz2 = this.createDotsVisualizers(-80, 70, 250, "moving", {
                        rows: 5,
                        columns: 5,
                        radius: 1,
                        spacing: 5,
                        color: "redLight",
                        rotationX: -Math.PI / 4,
                        rotationY: -Math.PI / 3,
                        power: -.1
                    }),
                    this.dotsViz3 = this.createDotsVisualizers(150, -80, 350, "moving", {
                        rows: 7,
                        columns: 7,
                        radius: 7,
                        spacing: 7,
                        color: "blueDark",
                        rotationX: Math.PI / 4,
                        rotationY: Math.PI / 4,
                        power: .5
                    }),
                    this.flipTri1 = this.createFlippingTriangle(100, 80, 280, "moving"),
                    this.pyramid1 = this.createPyramidSolo(-80, 50, 300, "moving", {
                        size: 10,
                        color: "blueDark",
                        stroked: !1
                    }),
                    this._pyramid2 = this.createPyramidSolo(-30, 80, 400, "moving", {
                        size: 8,
                        color: "redLight",
                        stroked: !1
                    }),
                    this._pyramid3 = this.createPyramidSolo(60, 30, 600, "moving", {
                        size: 7,
                        color: "blueMedium",
                        stroked: !1
                    }),
                    this.pyramid2 = this.createPyramidStar(80, 30, 250, "moving", {
                        stroked: !0
                    }),
                    this.speaker1 = this.createSpeakerHalfSphere(-50, 50, 250, "moving", {
                        radius: 20,
                        segment: 6
                    })),
                    this.initSpeedTunnel(),
                    this.renderCtx.scene.add(this.decor)
                }
            }, {
                key: "reset",
                value: function() {
                    for (var t = 0; t < this.poolElements.moving.objects.length; t++) {
                        var e = this.poolElements.moving.objects[t]
                          , n = e.getNewPosition();
                        e.posX = n.x,
                        e.posY = n.y,
                        e.mesh.position.x = this.decor.position.x + e.posX,
                        e.mesh.position.y = this.decor.position.y + e.posY,
                        e.mesh.position.z = 400 + 300 * Math.random()
                    }
                }
            }, {
                key: "createPoolElements",
                value: function() {
                    this.poolElements = {
                        fixed: {
                            index: 0,
                            objects: []
                        },
                        moving: {
                            index: 0,
                            objects: []
                        }
                    }
                }
            }, {
                key: "initElement",
                value: function(t, e) {
                    this.poolElements[e].objects.push(t),
                    "fixed" === e ? this.decor.add(t.mesh) : this.renderCtx.scene.add(t.mesh)
                }
            }, {
                key: "positionateItem",
                value: function(t, e) {
                    var n = this.renderCtx.LaneManager
                      , r = n.getLaneByIndex(this.renderCtx.Game.cursorIndex)
                      , i = r.nextDataSet.curve.getPoint(this.renderCtx.Game._curveProgress)
                      , o = t.getNewPosition(e);
                    return t.posX = o.x,
                    t.posY = o.y,
                    t.lastPoint = i,
                    t.mesh.position.x = i.x + t.posX,
                    t.mesh.position.y = i.y + t.posY,
                    t.mesh.position.z = i.z,
                    o
                }
            }, {
                key: "loopElements",
                value: function() {
                    for (var t = this.poolElements.moving.objects, e = 0, n = t.length; e < n; e++) {
                        var r = t[e];
                        if (r.zDiff || (r.zDiff = o.random(0, this.renderCtx.LaneManager.LANEHEIGHT)),
                        r.mesh.position.z + r.zDiff < this.renderCtx.sphereCamera.position.z) {
                            var i = 0
                              , a = void 0;
                            do
                                a = this.positionateItem(r, i),
                                i++;
                            while (r.collideWithLanes());r.zDiff = null ,
                            r.mutateObject(a)
                        }
                    }
                }
            }, {
                key: "toggleAllElements",
                value: function() {
                    o.each(this.getElements(), function(t) {
                        t.toggle()
                    })
                }
            }, {
                key: "createLightColumns",
                value: function(t, e, n, r, i) {
                    var o = new s(t,e,n,i,this.renderCtx);
                    return this.initElement(o, r),
                    o
                }
            }, {
                key: "createLinedShapes",
                value: function(t, e, n, r, i) {
                    var o = new h(t,e,n,i,this.renderCtx);
                    return this.initElement(o, r),
                    o
                }
            }, {
                key: "createDotsVisualizers",
                value: function(t, e, n, r, i) {
                    var o = new u(t,e,n,i,this.renderCtx);
                    return this.initElement(o, r),
                    o
                }
            }, {
                key: "createFlippingTriangle",
                value: function(t, e, n, r, i) {
                    var o = new l(t,e,n,i,this.renderCtx);
                    return this.initElement(o, r),
                    o
                }
            }, {
                key: "createPyramidSolo",
                value: function(t, e, n, r, i) {
                    var o = new c(t,e,n,i,this.renderCtx);
                    return this.initElement(o, r),
                    o
                }
            }, {
                key: "createPyramidStar",
                value: function(t, e, n, r, i) {
                    var o = new p(t,e,n,i,this.renderCtx);
                    return this.initElement(o, r),
                    o
                }
            }, {
                key: "createSpeakerHalfSphere",
                value: function(t, e, n, r, i) {
                    var o = new f(t,e,n,i,this.renderCtx);
                    return this.initElement(o, r),
                    o
                }
            }, {
                key: "initSpeedTunnel",
                value: function() {
                    this.speedTunnel = new d,
                    this.speedTunnel.mesh.position.z = 300,
                    this.renderCtx.sphereCamera.add(this.speedTunnel.mesh)
                }
            }, {
                key: "setSpeedTunnel",
                value: function() {
                    var t = arguments.length <= 0 || void 0 === arguments[0] || arguments[0];
                    this.speedTunnel.isAnimated = t,
                    this.speedTunnel.mesh.visible = t
                }
            }, {
                key: "update",
                value: function() {
                    if (!this.game.isPaused) {
                        if (this._isDesktop) {
                            var t = this.renderCtx.t;
                            this.lightCol1.animate(t),
                            this.lightCol2.animate(t),
                            this.linedShape1.animate(t),
                            this.linedShape2.animate(t),
                            this.dotsViz1.animate(t),
                            this.dotsViz2.animate(t),
                            this.dotsViz3.animate(t),
                            this.flipTri1.animate(t),
                            this.pyramid1.animate(t),
                            this._pyramid2.animate(t),
                            this._pyramid3.animate(t),
                            this.pyramid2.animate(t),
                            this.speaker1.animate(t),
                            this.loopElements()
                        }
                        this.speedTunnel.pulse(1.5)
                    }
                }
            }]),
            t
        }();
        e.exports = m
    }
    , {
        "./decor/elements/DotsVisualizer": 92,
        "./decor/elements/FlippingTriangle": 93,
        "./decor/elements/LightColumn": 94,
        "./decor/elements/LinedShape": 95,
        "./decor/elements/PyramidSolo": 97,
        "./decor/elements/PyramidStar": 98,
        "./decor/elements/SpeakerHalfSphere": 100,
        "./decor/elements/SpeedTunnel": 102,
        lodash: 5
    }],
    65: [function(t, e, n) {
        "use strict";
        function r(t, e) {
            if (!(t instanceof e))
                throw new TypeError("Cannot call a class as a function")
        }
        var i = function() {
            function t(t, e) {
                for (var n = 0; n < e.length; n++) {
                    var r = e[n];
                    r.enumerable = r.enumerable || !1,
                    r.configurable = !0,
                    "value"in r && (r.writable = !0),
                    Object.defineProperty(t, r.key, r)
                }
            }
            return function(e, n, r) {
                return n && t(e.prototype, n),
                r && t(e, r),
                e
            }
        }()
          , o = t("../../AssetsManager")
          , a = t("../../Dispatcher/Dispatcher")
          , s = t("../../Helpers/CanvasImageCover")
          , h = (t("./Colors"),
        function() {
            function t(e) {
                r(this, t),
                this.renderCtx = e,
                this.score = 100,
                this.ready = !1,
                this.opacityScore = 1,
                this.isVisible = !1,
                this.isProtected = !1,
                document.getElementById("gameui").style.display = "none"
            }
            return i(t, [{
                key: "bind",
                value: function() {
                    var t = this;
                    a.on("GAME:play", this.show.bind(this)),
                    a.on("GAME:replay", this.show.bind(this)),
                    a.on("GAME:gameover", this.hide.bind(this)),
                    a.on("GAME:updateScore", this.onScoreUpdate.bind(this)),
                    a.on("GAME:enableEffect", function() {
                        t.isProtected = !0,
                        t.draw()
                    }),
                    a.on("GAME:disableEffects", function() {
                        t.isProtected = !1,
                        t.draw()
                    }),
                    a.on("GAME:nextInstrumentLoop", this.enableSlot.bind(this)),
                    a.on("GAME:disableInstrument", this.disableSlot.bind(this)),
                    a.on("GAME:disableAllInstruments", this.disableAllSlot.bind(this)),
                    a.on("GAME:tutorialStart", function() {
                        t.opacityScore = 0
                    }),
                    a.on("GAME:tutorialEnd", function() {
                        TweenLite.to(t, 2, {
                            opacityScore: 1,
                            onUpdate: function() {
                                t.draw()
                            }
                        })
                    })
                }
            }, {
                key: "init",
                value: function() {
                    this.heartImage = o.getAssetById("HUD_HEART"),
                    this.protectedImage = o.getAssetById("HUD_PROTECTED"),
                    this.stripeImage = o.getAssetById("HUD_STRIPE"),
                    this.initSlots(),
                    this.initCanvas(),
                    this.bind(),
                    this.ready = !0
                }
            }, {
                key: "initCanvas",
                value: function() {
                    this.canvas = document.createElement("canvas"),
                    this.ctx = this.canvas.getContext("2d"),
                    this.setSize(),
                    this.initScene(),
                    this.draw()
                }
            }, {
                key: "initScene",
                value: function() {
                    var t = this.width
                      , e = this.height;
                    this.camera = new THREE.OrthographicCamera(-t / 2,t / 2,e / 2,-e / 2,0,30),
                    this.scene = new THREE.Scene,
                    this.texture = new THREE.Texture(this.canvas),
                    this.texture.minFilter = THREE.NearestFilter,
                    this.texture.magFilter = THREE.NearestFilter,
                    this.texture.needsUpdate = !0,
                    this.material = new THREE.MeshBasicMaterial({
                        map: this.texture
                    }),
                    this.material.transparent = !0,
                    this.material.opacity = 1,
                    this.geometry = new THREE.PlaneGeometry(this.width,this.height),
                    this.mesh = new THREE.Mesh(this.geometry,this.material),
                    this.scene.add(this.mesh),
                    this.draw()
                }
            }, {
                key: "append",
                value: function() {
                    this.canvas.style.cssText = "position: absolute; left: 0px; top: 0px; visibility: hidden; z-index: 99;",
                    this.renderCtx.canvasContainer.appendChild(this.canvas)
                }
            }, {
                key: "setSize",
                value: function() {
                    this.width = this.renderCtx.width,
                    this.height = this.renderCtx.height,
                    this.canvas.width = this.width,
                    this.canvas.height = this.height
                }
            }, {
                key: "onResize",
                value: function() {
                    this.setSize(),
                    this.draw()
                }
            }, {
                key: "draw",
                value: function() {
                    var t = this.renderCtx.deltaViewport
                      , e = this.width
                      , n = window.innerHeight / t
                      , r = e / 2
                      , i = 1 / t
                      , o = 15 * i;
                    if (this.clear(),
                    this.isVisible) {
                        this.ctx.font = 35 * i + 'px "Jamoer", sans-serif',
                        this.ctx.fillStyle = "rgba(78, 135, 179, " + this.opacityScore + ")",
                        this.ctx.fillText("" + this.score, r, 43 * i),
                        this.ctx.font = 25 * i + 'px "Jamoer", sans-serif',
                        this.ctx.fillStyle = "rgba(176, 33, 90, " + this.opacityScore + ")",
                        this.ctx.fillText("Chords", r, 60 * i),
                        this.ctx.globalAlpha = this.opacityScore,
                        this.ctx.drawImage(this.heartImage.source, r - 45 * i, o, 45 * i, 45 * i),
                        this.ctx.globalAlpha = 1,
                        this.isProtected && this.ctx.drawImage(this.protectedImage.source, e - 55 * i, o, 35 * i, 35 * i);
                        var a = 70 * i;
                        s(this.ctx, this.stripeImage.source, 0, n - a, e, a, .5, .2);
                        var h = Object.keys(this.slots).length
                          , u = 25 * i
                          , l = 10 * i;
                        window.innerWidth > 550 && (u = 35 * i,
                        l = 15 * i),
                        window.innerWidth > 800 && (u = 45 * i,
                        l = 20 * i);
                        var c = h * (u + l)
                          , p = (e - c) / 2;
                        p += l;
                        for (var f in this.slots) {
                            var d = this.slots[f]
                              , m = d.active ? d.image : this.emptySlotImage;
                            this.ctx.drawImage(m.source, p, n - (o + u), u, u),
                            p += u + l
                        }
                        this.texture.needsUpdate = !0
                    }
                }
            }, {
                key: "initSlots",
                value: function() {
                    this.emptySlotImage = o.getAssetById("EMTPY_SLOT"),
                    this.instruments = o.instruments,
                    this.slots = {};
                    for (var t in this.instruments)
                        this.slots[t] = {
                            image: o.getAssetById(t),
                            active: !1
                        }
                }
            }, {
                key: "enableSlot",
                value: function(t) {
                    var e = this.slots[t];
                    e && (e.active = !0,
                    this.draw())
                }
            }, {
                key: "disableSlot",
                value: function(t) {
                    var e = this.slots[t];
                    e && (e.active = !1,
                    this.draw())
                }
            }, {
                key: "disableAllSlot",
                value: function() {
                    for (var t in this.instruments)
                        this.disableSlot(t)
                }
            }, {
                key: "clear",
                value: function() {
                    this.ctx.clearRect(0, 0, this.width, this.height)
                }
            }, {
                key: "show",
                value: function() {
                    this.isVisible = !0,
                    this.draw()
                }
            }, {
                key: "hide",
                value: function() {
                    this.isVisible = !1,
                    this.draw()
                }
            }, {
                key: "onScoreUpdate",
                value: function(t) {
                    t !== this.oldScore && (this.score = t,
                    this.draw(),
                    this.oldScore = this.score)
                }
            }]),
            t
        }());
        e.exports = h
    }
    , {
        "../../AssetsManager": 22,
        "../../Dispatcher/Dispatcher": 23,
        "../../Helpers/CanvasImageCover": 53,
        "./Colors": 63
    }],
    66: [function(t, e, n) {
        "use strict";
        function r(t, e) {
            if (!(t instanceof e))
                throw new TypeError("Cannot call a class as a function")
        }
        var i = function() {
            function t(t, e) {
                for (var n = 0; n < e.length; n++) {
                    var r = e[n];
                    r.enumerable = r.enumerable || !1,
                    r.configurable = !0,
                    "value"in r && (r.writable = !0),
                    Object.defineProperty(t, r.key, r)
                }
            }
            return function(e, n, r) {
                return n && t(e.prototype, n),
                r && t(e, r),
                e
            }
        }()
          , o = t("../addons/CustomMeshFlat")(THREE)
          , a = t("../Colors")
          , s = function() {
            function t(e) {
                if (r(this, t),
                e)
                    return void (this.mesh = e.mesh.clone());
                this.mesh = new THREE.Group;
                var n = new o.CubeMesh(.5,2,2,a.getColor("blueDark"),(!0),(!1));
                n.position.x = -2;
                var i = new o.CubeMesh(3,5,5,a.getColor("blueMedium"),(!0),(!1))
                  , s = new o.CubeMesh(2,5.5,5.5,a.getColor("blueDark"),(!0),(!1))
                  , h = new o.CylinderMesh(4,7,5,4,1,a.getColor("blueMedium"),(!1));
                h.geometry.applyMatrix((new THREE.Matrix4).makeRotationZ(Math.PI / 2)),
                h.geometry.applyMatrix((new THREE.Matrix4).makeRotationX(Math.PI / 4)),
                h.position.x = 7,
                h.geometry.vertices[11].x = -5;
                for (var u = 0; u < h.geometry.faces.length; u++) {
                    var l = h.geometry.faces[u];
                    12 == u || 13 == u || 14 == u || 15 == u ? (l.vertexColors[0] = new THREE.Color(a.getColor("blueDark")),
                    l.vertexColors[1] = new THREE.Color(a.getColor("blueDark")),
                    l.vertexColors[2] = new THREE.Color(a.getColor("blueDark"))) : (l.vertexColors[0] = new THREE.Color(a.getColor("blueMedium")),
                    l.vertexColors[1] = new THREE.Color(a.getColor("blueMedium")),
                    l.vertexColors[2] = new THREE.Color(a.getColor("blueMedium")))
                }
                h.material = new THREE.MeshPhongMaterial({
                    vertexColors: THREE.FaceColors,
                    shading: THREE.FlatShading
                }),
                this.innerMesh = new o.CubeMesh(.5,4,4,a.getColor("blueLight"),(!0),(!1)),
                this.innerMesh.position.x = 5,
                this.innerMesh2 = new o.CubeMesh(.5,2,2,a.getColor("blueDark"),(!0),(!1)),
                this.innerMesh2.position.x = 5.5,
                this.mesh.add(n),
                this.mesh.add(i),
                this.mesh.add(s),
                this.mesh.add(h),
                this.mesh.add(this.innerMesh),
                this.mesh.add(this.innerMesh2),
                this.mesh.rotation.y = Math.PI / 2,
                this.mesh.scale.set(.56, .56, .56)
            }
            return i(t, [{
                key: "animate",
                value: function(t) {
                    this.mesh.rotation.y += 3 * t
                }
            }, {
                key: "pulse",
                value: function() {
                    TweenLite.from(this.mesh.scale, .2, {
                        x: 1.1,
                        y: 1.1,
                        z: 1.1
                    }),
                    TweenLite.from(this.innerMesh.position, .2, {
                        x: 6
                    }),
                    TweenLite.from(this.innerMesh.scale, .2, {
                        x: 1.1,
                        y: 1.1,
                        z: 1.1
                    }),
                    TweenLite.from(this.innerMesh2.position, .2, {
                        x: 6.5
                    }),
                    TweenLite.from(this.innerMesh2.scale, .2, {
                        x: 1.1,
                        y: 1.1,
                        z: 1.1
                    })
                }
            }]),
            t
        }();
        e.exports = s
    }
    , {
        "../Colors": 63,
        "../addons/CustomMeshFlat": 86
    }],
    67: [function(t, e, n) {
        "use strict";
        function r(t, e) {
            if (!(t instanceof e))
                throw new TypeError("Cannot call a class as a function")
        }
        var i = function() {
            function t(t, e) {
                for (var n = 0; n < e.length; n++) {
                    var r = e[n];
                    r.enumerable = r.enumerable || !1,
                    r.configurable = !0,
                    "value"in r && (r.writable = !0),
                    Object.defineProperty(t, r.key, r)
                }
            }
            return function(e, n, r) {
                return n && t(e.prototype, n),
                r && t(e, r),
                e
            }
        }()
          , o = t("../addons/CustomMeshFlat")(THREE)
          , a = t("../Colors")
          , s = function() {
            function t(e) {
                if (r(this, t),
                e)
                    return void (this.mesh = e.mesh.clone());
                var n = 8
                  , i = 7
                  , s = 10;
                this.mesh = new THREE.Group;
                var h = {
                    amount: s,
                    steps: 1,
                    bevelEnabled: !1,
                    curveSegments: n / 2
                }
                  , u = new THREE.Shape;
                u.absarc(0, 0, 7, 0, 2 * Math.PI, 0, !1);
                var l = new THREE.Path;
                l.absarc(0, 0, 6.8, 0, 2 * Math.PI, !0),
                u.holes.push(l);
                var c = new THREE.ExtrudeGeometry(u,h);
                c.applyMatrix((new THREE.Matrix4).makeRotationX(Math.PI / 2)),
                c.applyMatrix((new THREE.Matrix4).makeTranslation(0, s / 2, 0));
                var p = new THREE.MeshLambertMaterial({
                    color: a.getColor("blueMedium")
                });
                this.body = new THREE.Mesh(c,p),
                this.cover1 = new o.CylinderMesh(0,i - .2,.5,n,1,a.getColor("blueMedium"),(!0)),
                this.cover1.geometry.vertices[2 * (n + 1)].y += 1;
                for (var f = [], d = 0; d < this.cover1.geometry.vertices.length; d++)
                    d == 2 * (n + 1) ? f.push(a.getColor("blueLight")) : f.push(a.getColor("blueMedium"));
                for (var d = 0; d < this.cover1.geometry.faces.length; d++) {
                    var m = this.cover1.geometry.faces[d];
                    m.vertexColors[0] = new THREE.Color(f[m.a]),
                    m.vertexColors[1] = new THREE.Color(f[m.b]),
                    m.vertexColors[2] = new THREE.Color(f[m.c])
                }
                var v = new THREE.MeshLambertMaterial({
                    vertexColors: THREE.FaceColors,
                    side: THREE.DoubleSide
                });
                this.cover1.material = v,
                this.cover1.rotation.y = Math.PI / 2,
                this.cover2 = this.cover1.clone(),
                this.cover1.position.y = s / 2 - 1,
                this.cover2.position.y = -this.cover1.position.y,
                this.mesh.add(this.body),
                this.mesh.add(this.cover1),
                this.mesh.add(this.cover2);
                for (var g = 2 * Math.PI / n, d = 0; d < n; d++) {
                    var y = new o.CylinderMesh(.2,.2,s,4,1,a.getColor("blueLight"),(!0));
                    y.position.x = Math.cos(Math.PI / 2 + g * d) * i,
                    y.position.z = Math.sin(Math.PI / 2 + g * d) * i,
                    this.mesh.add(y)
                }
                this.mesh.rotation.set(-.55, 3.83, .73),
                this.mesh.scale.set(.3, .3, .3)
            }
            return i(t, [{
                key: "setPosition",
                value: function(t) {
                    this.mesh.position.copy(t),
                    this.mesh.position.y += 3
                }
            }, {
                key: "animate",
                value: function(t) {
                    this.mesh.rotation.y += t,
                    this.mesh.rotation.x += t
                }
            }]),
            t
        }();
        e.exports = s
    }
    , {
        "../Colors": 63,
        "../addons/CustomMeshFlat": 86
    }],
    68: [function(t, e, n) {
        "use strict";
        function r(t, e) {
            if (!(t instanceof e))
                throw new TypeError("Cannot call a class as a function")
        }
        var i = function() {
            function t(t, e) {
                for (var n = 0; n < e.length; n++) {
                    var r = e[n];
                    r.enumerable = r.enumerable || !1,
                    r.configurable = !0,
                    "value"in r && (r.writable = !0),
                    Object.defineProperty(t, r.key, r)
                }
            }
            return function(e, n, r) {
                return n && t(e.prototype, n),
                r && t(e, r),
                e
            }
        }()
          , o = (t("../addons/CustomMeshFlat")(THREE),
        t("../Colors"))
          , a = function() {
            function t(e) {
                if (r(this, t),
                e)
                    return void (this.mesh = e.mesh.clone());
                for (var n = {
                    amount: 1.5,
                    bevelEnabled: !1
                }, i = {
                    amount: .5,
                    bevelEnabled: !1
                }, a = {
                    amount: .6,
                    bevelEnabled: !1
                }, s = new THREE.MeshLambertMaterial({
                    color: o.getColor("blueMedium")
                }), h = "107.19,35.18 115.44,33.15 121.95,38.89 125.09,56.99 118.54,78.04 115.07,95.78 119.15,112.62 128.61,129.44 135.75,149.95 134.6,171.57 122.49,189.8 100.03,202.71 68.25,208.68 38.23,203.49 17.31,192.69 4.21,176.08 0,155.28 6.54,131.94 17.98,111.68 21.41,94.27 18.16,72.76 11.65,50.62 8.69,24.09 13.69,3.32 22.63,0 30.29,6.23 35.29,31.76 46.47,39.56 69.17,33 79.28,57.04 89.81,60.99 101.14,53.88", u = "23.82,0 33.35,268.38 0,268.38 5.82,0", l = "40.23,4.76 42.36,21.53 32.02,31.03 43.67,73.15 22.3,90.05 0,82.4 17.73,5.82 28.59,0", c = new THREE.Shape, p = h.split(" "), f = p.length, d = 0; d < f; d++) {
                    var m = p[d].split(",");
                    0 == d ? c.moveTo(m[0], m[1]) : c.lineTo(m[0], m[1])
                }
                var v = p[0].split(",");
                c.lineTo(v[0], v[1]);
                var g = new THREE.ExtrudeGeometry(c,n);
                g.applyMatrix((new THREE.Matrix4).makeRotationZ(Math.PI)),
                g.applyMatrix((new THREE.Matrix4).makeScale(.06, .06, 1)),
                g.applyMatrix((new THREE.Matrix4).makeTranslation(0, 0, -n.amount / 2)),
                this.body = new THREE.Mesh(g,s),
                this.body.position.y = 4,
                this.body.position.x = 3,
                this.body.castShadow = !0,
                this.body.receiveShadow = !0;
                for (var y = new THREE.Shape, _ = u.split(" "), f = _.length, d = 0; d < f; d++) {
                    var m = _[d].split(",");
                    0 == d ? y.moveTo(m[0], m[1]) : y.lineTo(m[0], m[1])
                }
                var v = _[0].split(",");
                y.lineTo(v[0], v[1]);
                var x = new THREE.ExtrudeGeometry(y,i);
                x.applyMatrix((new THREE.Matrix4).makeRotationZ(Math.PI)),
                x.applyMatrix((new THREE.Matrix4).makeScale(.06, .06, 1)),
                x.applyMatrix((new THREE.Matrix4).makeTranslation(0, 0, -i.amount / 2)),
                this.neck = new THREE.Mesh(x,s),
                this.neck.position.y = 15,
                this.neck.position.x = 0,
                this.neck.position.z = .8,
                this.neck.castShadow = !0,
                this.neck.receiveShadow = !0;
                for (var b = new THREE.Shape, w = l.split(" "), f = w.length, d = 0; d < f; d++) {
                    var m = w[d].split(",");
                    0 == d ? b.moveTo(m[0], m[1]) : b.lineTo(m[0], m[1])
                }
                var v = w[0].split(",");
                b.lineTo(v[0], v[1]);
                var E = new THREE.ExtrudeGeometry(b,a);
                E.applyMatrix((new THREE.Matrix4).makeRotationZ(Math.PI)),
                E.applyMatrix((new THREE.Matrix4).makeScale(.06, .06, 1)),
                E.applyMatrix((new THREE.Matrix4).makeTranslation(0, 0, -a.amount / 2)),
                this.top = new THREE.Mesh(E,s),
                this.top.position.y = 20,
                this.top.position.x = .4,
                this.top.position.z = .55,
                this.top.castShadow = !0,
                this.top.receiveShadow = !0;
                var S = new THREE.BoxGeometry(2,1,.5);
                this.baseChord = new THREE.Mesh(S,s),
                this.baseChord.position.z = .8,
                this.baseChord.position.y = -5,
                this.baseChord.position.x = -1;
                var T = new THREE.BoxGeometry(.1,22,.1)
                  , M = new THREE.Mesh(T,s);
                M.position.z = 1.2,
                M.position.y = 5.5,
                M.position.x = -.7;
                var C = M.clone();
                C.position.x = -1;
                var A = M.clone();
                A.position.x = -1.3;
                var P = new THREE.BoxGeometry(.5,.5,.5)
                  , L = new THREE.Mesh(P,s);
                L.position.x = .7,
                L.position.z = .5,
                L.position.y = 16.5;
                var R = L.clone();
                R.position.x = .45,
                R.position.y = 17.5;
                var k = L.clone();
                k.position.x = .1,
                k.position.y = 18.5,
                this.mesh = new THREE.Group,
                this.mesh.add(this.body),
                this.mesh.add(this.neck),
                this.mesh.add(this.top),
                this.mesh.add(this.baseChord),
                this.mesh.add(M),
                this.mesh.add(C),
                this.mesh.add(A),
                this.mesh.add(L),
                this.mesh.add(R),
                this.mesh.add(k),
                this.mesh.scale.set(.38, .38, .38)
            }
            return i(t, [{
                key: "setPosition",
                value: function(t) {
                    this.mesh.position.copy(t),
                    this.mesh.position.y += 3.5
                }
            }, {
                key: "animate",
                value: function(t) {
                    this.mesh.rotation.y += 3 * t
                }
            }]),
            t
        }();
        e.exports = a
    }
    , {
        "../Colors": 63,
        "../addons/CustomMeshFlat": 86
    }],
    69: [function(t, e, n) {
        "use strict";
        function r(t, e) {
            if (!(t instanceof e))
                throw new TypeError("Cannot call a class as a function")
        }
        var i = function() {
            function t(t, e) {
                for (var n = 0; n < e.length; n++) {
                    var r = e[n];
                    r.enumerable = r.enumerable || !1,
                    r.configurable = !0,
                    "value"in r && (r.writable = !0),
                    Object.defineProperty(t, r.key, r)
                }
            }
            return function(e, n, r) {
                return n && t(e.prototype, n),
                r && t(e, r),
                e
            }
        }()
          , o = t("../Colors")
          , a = function() {
            function t(e) {
                if (r(this, t),
                e)
                    return void (this.mesh = e.mesh.clone());
                var n = {
                    amount: 2,
                    bevelEnabled: !1
                };
                this.mesh = new THREE.Group;
                for (var i = "2.9,6.2 2.9,-3.1 5.6,-3.1 5.6,-6.2 2.1,-6.2 2.1,2.1 -4.8,2.1 -4.8,-1.4 -2.4,-1.4 -2.4,-4.5 -5.6,-4.5 -5.6,6.2", a = new THREE.Shape, s = i.split(" "), h = s.length, u = 0; u < h; u++) {
                    var l = s[u].split(",");
                    0 == u ? a.moveTo(l[0], l[1]) : a.lineTo(l[0], l[1])
                }
                var c = s[0].split(",");
                a.lineTo(c[0], c[1]);
                var p = new THREE.ExtrudeGeometry(a,n)
                  , f = new THREE.MeshLambertMaterial({
                    color: o.getColor("blueMedium"),
                    side: THREE.DoubleSide
                });
                this.mesh = new THREE.Mesh(p,f),
                this.mesh.rotation.y = Math.PI,
                this.mesh.scale.set(.44, .44, .44)
            }
            return i(t, [{
                key: "setPosition",
                value: function(t) {
                    this.mesh.position.copy(t),
                    this.mesh.position.y += 2.5
                }
            }, {
                key: "animate",
                value: function(t) {
                    this.mesh.rotation.y += 2 * t
                }
            }]),
            t
        }();
        e.exports = a
    }
    , {
        "../Colors": 63
    }],
    70: [function(t, e, n) {
        "use strict";
        function r(t, e) {
            if (!(t instanceof e))
                throw new TypeError("Cannot call a class as a function")
        }
        var i = function() {
            function t(t, e) {
                for (var n = 0; n < e.length; n++) {
                    var r = e[n];
                    r.enumerable = r.enumerable || !1,
                    r.configurable = !0,
                    "value"in r && (r.writable = !0),
                    Object.defineProperty(t, r.key, r)
                }
            }
            return function(e, n, r) {
                return n && t(e.prototype, n),
                r && t(e, r),
                e
            }
        }()
          , o = t("../addons/CustomMeshFlat")(THREE)
          , a = t("../Colors")
          , s = function() {
            function t(e) {
                if (r(this, t),
                e)
                    return void (this.mesh = e.mesh.clone());
                this.mesh = new THREE.Group,
                this.holder = new THREE.Group,
                this.mousse1 = new o.CubeMesh(6,6,6,a.getColor("blueMedium"),(!0),(!1)),
                this.mousse1.position.y = 23,
                this.holder.add(this.mousse1);
                var n = new o.CubeMesh(6.4,1,6.4,a.getColor("blueDark"),(!0),(!1));
                n.position.y = 23,
                this.holder.add(n);
                var i = new o.CubeMesh(3,2,3,a.getColor("blueDark"),(!0),(!1));
                i.position.y = 19.5,
                this.holder.add(i);
                var s = new o.CubeMesh(2.5,13,2.5,a.getColor("blueMedium"),(!0),(!1));
                s.position.y = 12,
                this.holder.add(s);
                var h = new o.CubeMesh(2,3,2,a.getColor("blueDark"),(!0),(!1));
                h.position.y = 4,
                this.holder.add(h),
                this.holder.scale.set(.7, .7, .7),
                this.holder.rotation.z = Math.PI / 14,
                this.mesh.add(this.holder),
                this.mesh.scale.set(.38, .38, .38)
            }
            return i(t, [{
                key: "animate",
                value: function(t) {
                    this.mesh.rotation.y += 3 * t
                }
            }]),
            t
        }();
        e.exports = s
    }
    , {
        "../Colors": 63,
        "../addons/CustomMeshFlat": 86
    }],
    71: [function(t, e, n) {
        "use strict";
        function r(t, e) {
            if (!(t instanceof e))
                throw new TypeError("Cannot call a class as a function")
        }
        var i = function() {
            function t(t, e) {
                for (var n = 0; n < e.length; n++) {
                    var r = e[n];
                    r.enumerable = r.enumerable || !1,
                    r.configurable = !0,
                    "value"in r && (r.writable = !0),
                    Object.defineProperty(t, r.key, r)
                }
            }
            return function(e, n, r) {
                return n && t(e.prototype, n),
                r && t(e, r),
                e
            }
        }()
          , o = t("../Colors")
          , a = function() {
            function t(e) {
                if (r(this, t),
                e)
                    return void (this.mesh = e.mesh.clone());
                var n = {
                    amount: 2,
                    bevelEnabled: !1
                }
                  , i = {
                    amount: 1,
                    bevelEnabled: !1
                }
                  , a = new THREE.MeshLambertMaterial({
                    color: o.getColor("redDark")
                })
                  , s = new THREE.MeshLambertMaterial({
                    color: o.getColor("beige")
                });
                this.mesh = new THREE.Group;
                for (var h = "-6.6,-6.8 -6.6,3.3 -3.4,3.3 -3.4,5.3 -1.7,5.3 -1.7,3.3 -0.8,3.3 -0.8,5.3 0.9,5.3 0.9,3.3 1.7,3.3 1.7,5.3 3.4,5.3 3.4,3.3 6.6,3.3 6.6,-6.8", u = "8.2,5.3 6.7,3.8 4,3.8 6.9,6.6 6.9,9 8.7,9 8.7,7.2 10.6,7.2 10.6,5.3", l = "12.5,-7.2 10.7,-7.2 10.7,-9 8.8,-9 8.8,-6.6 7.3,-5.1 7.3,-2.4 10.1,-5.3 12.5,-5.3", c = "-5.4,1.6 -4.4,0.7 -3.4,1.6", p = new THREE.Shape, f = h.split(" "), d = [], m = f.length, v = 0; v < m; v++) {
                    var g = f[v].split(",");
                    0 == v ? p.moveTo(g[0], g[1]) : p.lineTo(g[0], g[1])
                }
                var y = f[0].split(",");
                p.lineTo(y[0], y[1]);
                var _ = new THREE.ExtrudeGeometry(p,n);
                _.applyMatrix((new THREE.Matrix4).makeRotationZ(Math.PI)),
                _.applyMatrix((new THREE.Matrix4).makeTranslation(0, 0, -n.amount / 2));
                for (var x = [], v = 0; v < _.vertices.length; v++) {
                    var b = _.vertices[v];
                    b.y > 6 ? x.push(o.getColor("redLight")) : x.push(o.getColor("redDark"))
                }
                for (var v = 0; v < _.faces.length; v++) {
                    var w = _.faces[v];
                    w.vertexColors[0] = new THREE.Color(x[w.a]),
                    w.vertexColors[1] = new THREE.Color(x[w.b]),
                    w.vertexColors[2] = new THREE.Color(x[w.c])
                }
                var E = new THREE.MeshLambertMaterial({
                    vertexColors: THREE.FaceColors,
                    side: THREE.DoubleSide
                });
                this.head = new THREE.Mesh(_,E);
                var S = new THREE.Shape
                  , T = l.split(" ");
                d = [],
                m = T.length;
                for (var v = 0; v < m; v++) {
                    var g = T[v].split(",");
                    0 == v ? S.moveTo(g[0], g[1]) : S.lineTo(g[0], g[1])
                }
                var y = T[0].split(",");
                S.lineTo(y[0], y[1]);
                var M = new THREE.ExtrudeGeometry(S,n);
                M.applyMatrix((new THREE.Matrix4).makeRotationZ(Math.PI)),
                M.applyMatrix((new THREE.Matrix4).makeTranslation(0, 0, -n.amount / 2)),
                this.bone1 = new THREE.Mesh(M,a),
                this.bone2 = this.bone1.clone(),
                this.bone2.rotation.y = Math.PI;
                var C = new THREE.Shape
                  , A = u.split(" ");
                d = [],
                m = A.length;
                for (var v = 0; v < m; v++) {
                    var g = A[v].split(",");
                    0 == v ? C.moveTo(g[0], g[1]) : C.lineTo(g[0], g[1])
                }
                var y = A[0].split(",");
                C.lineTo(y[0], y[1]);
                var P = new THREE.ExtrudeGeometry(C,n);
                P.applyMatrix((new THREE.Matrix4).makeRotationZ(Math.PI)),
                P.applyMatrix((new THREE.Matrix4).makeTranslation(0, 0, -n.amount / 2)),
                this.bone3 = new THREE.Mesh(P,a),
                this.bone4 = this.bone3.clone(),
                this.bone4.rotation.y = Math.PI;
                var L = new THREE.Shape
                  , R = c.split(" ");
                d = [],
                m = R.length;
                for (var v = 0; v < m; v++) {
                    var g = R[v].split(",");
                    0 == v ? L.moveTo(g[0], g[1]) : L.lineTo(g[0], g[1])
                }
                var y = R[0].split(",");
                L.lineTo(y[0], y[1]);
                var k = new THREE.ExtrudeGeometry(L,i);
                k.applyMatrix((new THREE.Matrix4).makeRotationZ(Math.PI)),
                k.applyMatrix((new THREE.Matrix4).makeTranslation(0, 0, -i.amount / 2)),
                this.eye1 = new THREE.Mesh(k,s),
                this.eye1.position.z += 2,
                this.eye2 = this.eye1.clone(),
                this.eye2.rotation.y = Math.PI,
                this.mesh.add(this.head),
                this.mesh.add(this.bone1),
                this.mesh.add(this.bone2),
                this.mesh.add(this.bone3),
                this.mesh.add(this.bone4),
                this.mesh.add(this.eye1),
                this.mesh.add(this.eye2),
                this.mesh.scale.set(.4, .4, .4),
                this.mesh.rotation.y = Math.PI
            }
            return i(t, [{
                key: "setPosition",
                value: function(t) {
                    this.mesh.position.copy(t),
                    this.mesh.position.y += 5
                }
            }, {
                key: "animate",
                value: function(t) {
                    this.mesh.rotation.y += 2 * t
                }
            }]),
            t
        }();
        e.exports = a
    }
    , {
        "../Colors": 63
    }],
    72: [function(t, e, n) {
        "use strict";
        function r(t, e) {
            if (!(t instanceof e))
                throw new TypeError("Cannot call a class as a function")
        }
        var i = function() {
            function t(t, e) {
                for (var n = 0; n < e.length; n++) {
                    var r = e[n];
                    r.enumerable = r.enumerable || !1,
                    r.configurable = !0,
                    "value"in r && (r.writable = !0),
                    Object.defineProperty(t, r.key, r)
                }
            }
            return function(e, n, r) {
                return n && t(e.prototype, n),
                r && t(e, r),
                e
            }
        }()
          , o = t("../addons/CustomMeshFlat")(THREE)
          , a = t("../Colors")
          , s = function() {
            function t(e) {
                if (r(this, t),
                this.accumulator = 0,
                e)
                    return this.mesh = e.mesh.clone(),
                    void (this.handler = this.mesh.getObjectByName("handler"));
                var n = 10
                  , i = 1;
                this.handler = new o.CylinderMesh(1.5,.5,6,n,i,a.getColor("blueDark"),(!1)),
                this.handler.name = "handler",
                this.handler.geometry.vertices[2 * (n + 1)].y += 1;
                for (var s = [], h = 0; h < this.handler.geometry.vertices.length; h++)
                    h == 2 * (n + 1) ? s.push(a.getColor("blueLight")) : h <= n ? s.push(a.getColor("blueLight")) : s.push(a.getColor("blueLight"));
                for (var h = 0; h < this.handler.geometry.faces.length; h++) {
                    var u = this.handler.geometry.faces[h];
                    u.vertexColors[0] = new THREE.Color(s[u.a]),
                    u.vertexColors[1] = new THREE.Color(s[u.b]),
                    u.vertexColors[2] = new THREE.Color(s[u.c])
                }
                var l = new THREE.MeshLambertMaterial({
                    vertexColors: THREE.FaceColors,
                    side: THREE.DoubleSide
                });
                return this.handler.material = l,
                this.mesh = new THREE.Group,
                this.base = new o.CylinderMesh(3,3,1,8,1,a.getColor("blueDark"),(!0)),
                this.ball = new o.SphereMesh(1,6,6,a.getColor("blueMedium"),(!0)),
                this.ball.position.y = .5,
                this.mesh.add(this.base),
                this.mesh.add(this.handler),
                this.mesh.add(this.ball),
                this.switched = !1,
                this["switch"](),
                this.mesh.position.y = 15,
                this.mesh.scale.set(.6, .6, .6),
                this
            }
            return i(t, [{
                key: "switch",
                value: function() {
                    this.switched = !this.switched,
                    this.handler.rotation.x = this.switched ? -Math.PI / 9 : Math.PI / 9
                }
            }, {
                key: "setPosition",
                value: function(t) {
                    this.mesh.position.copy(t),
                    this.mesh.position.y += 1.2
                }
            }, {
                key: "animate",
                value: function(t) {
                    this.accumulator += t,
                    this.accumulator > .4 && (this["switch"](),
                    this.accumulator = 0)
                }
            }]),
            t
        }();
        e.exports = s
    }
    , {
        "../Colors": 63,
        "../addons/CustomMeshFlat": 86
    }],
    73: [function(t, e, n) {
        "use strict";
        function r(t, e) {
            if (!(t instanceof e))
                throw new TypeError("Cannot call a class as a function")
        }
        var i = function() {
            function t(t, e) {
                for (var n = 0; n < e.length; n++) {
                    var r = e[n];
                    r.enumerable = r.enumerable || !1,
                    r.configurable = !0,
                    "value"in r && (r.writable = !0),
                    Object.defineProperty(t, r.key, r)
                }
            }
            return function(e, n, r) {
                return n && t(e.prototype, n),
                r && t(e, r),
                e
            }
        }()
          , o = t("../addons/CustomMeshFlat")(THREE)
          , a = t("../Colors")
          , s = function() {
            function t(e) {
                if (r(this, t),
                e)
                    return void (this.mesh = e.mesh.clone());
                this.mesh = new THREE.Group;
                for (var n = 0; n < 4; n++) {
                    var i = new o.CubeMesh(2,1,8,a.getColor("beige"),(!0));
                    i.geometry.applyMatrix((new THREE.Matrix4).makeTranslation(1, .5, 4)),
                    i.position.x = -4.4 + 2.2 * n,
                    i.position.z = 2,
                    this.mesh.add(i)
                }
                for (var s = 0; s < 3; s++) {
                    var h = new o.CubeMesh(1.6,1,6,a.getColor("blueDark"),(!0));
                    h.geometry.applyMatrix((new THREE.Matrix4).makeTranslation(.8, .5, 3)),
                    h.position.x = -3.2 + 2.2 * s,
                    h.position.y = .5,
                    h.position.z = 2,
                    this.mesh.add(h)
                }
                var u = new o.CubeMesh(12,1,10,a.getColor("blueDark"),(!0));
                u.geometry.applyMatrix((new THREE.Matrix4).makeTranslation(6, .5, 5)),
                u.position.y = -1,
                u.position.x = -6,
                u.position.z = 0;
                var l = new o.CubeMesh(12,1,2,a.getColor("blueDark"),(!0));
                l.geometry.applyMatrix((new THREE.Matrix4).makeTranslation(6, .5, 1)),
                l.position.x = -6,
                l.position.z = 0;
                var c = new o.CubeMesh(1.6,1,8,a.getColor("blueDark"),(!0));
                c.geometry.applyMatrix((new THREE.Matrix4).makeTranslation(.8, .5, 4)),
                c.position.x = -6,
                c.position.z = 2;
                var p = c.clone();
                return p.position.x = 4.4,
                this.mesh.add(u),
                this.mesh.add(l),
                this.mesh.add(c),
                this.mesh.add(p),
                this.mesh.rotation.y = 4.37,
                this.mesh.rotation.z = 1.09,
                this.mesh.scale.set(.32, .32, .32),
                this
            }
            return i(t, [{
                key: "setPosition",
                value: function(t) {
                    this.mesh.position.copy(t),
                    this.mesh.position.x += 1.2,
                    this.mesh.position.y += 3
                }
            }]),
            t
        }();
        e.exports = s
    }
    , {
        "../Colors": 63,
        "../addons/CustomMeshFlat": 86
    }],
    74: [function(t, e, n) {
        "use strict";
        function r(t, e) {
            if (!(t instanceof e))
                throw new TypeError("Cannot call a class as a function")
        }
        var i = function() {
            function t(t, e) {
                for (var n = 0; n < e.length; n++) {
                    var r = e[n];
                    r.enumerable = r.enumerable || !1,
                    r.configurable = !0,
                    "value"in r && (r.writable = !0),
                    Object.defineProperty(t, r.key, r)
                }
            }
            return function(e, n, r) {
                return n && t(e.prototype, n),
                r && t(e, r),
                e
            }
        }()
          , o = t("../Colors")
          , a = function() {
            function t(e) {
                if (r(this, t),
                e)
                    return void (this.mesh = e.mesh.clone());
                for (var n = {
                    amount: 2,
                    bevelEnabled: !1
                }, i = "-2.5,-12.4 4.3,-12.4 0.4,-1.8 6.2,-1.8 -3.6,12.4 -0.7,0.5 -6.2,0.5", a = new THREE.Shape, s = i.split(" "), h = s.length, u = 0; u < h; u++) {
                    var l = s[u].split(",");
                    0 == u ? a.moveTo(l[0], l[1]) : a.lineTo(l[0], l[1])
                }
                var c = s[0].split(",");
                a.lineTo(c[0], c[1]);
                var p = new THREE.ExtrudeGeometry(a,n);
                p.applyMatrix((new THREE.Matrix4).makeRotationZ(Math.PI)),
                p.applyMatrix((new THREE.Matrix4).makeScale(.8, .8, .8));
                var f = new THREE.MeshLambertMaterial({
                    color: o.getColor("beige"),
                    side: THREE.DoubleSide
                })
                  , d = new THREE.SphereGeometry(13,5,5)
                  , m = new THREE.ShaderMaterial({
                    uniforms: {
                        c: {
                            type: "f",
                            value: .5
                        },
                        p: {
                            type: "f",
                            value: 1.5
                        },
                        glowColor: {
                            type: "c",
                            value: new THREE.Color(o.getColor("beige"))
                        },
                        viewVector: {
                            type: "v3",
                            value: new THREE.Vector3(1,0,0)
                        }
                    },
                    vertexShader: "#define GLSLIFY 1\nuniform vec3 viewVector;\nuniform float c;\nuniform float p;\nvarying float intensity;\n\nvoid main()\n{\n  vec3 vNormal = normalize( normalMatrix * normal );\n  vec3 vNormel = normalize( normalMatrix * viewVector );\n\n  intensity = pow( c - dot(vNormal, vNormel), p );\n\n  gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}\n",
                    fragmentShader: "#define GLSLIFY 1\nuniform vec3 glowColor;\nvarying float intensity;\n\nvoid main()\n{\n  vec3 glow = glowColor * clamp(intensity, 0.3, 1.0);\n\n  gl_FragColor = vec4( glow, 0.3 );\n}\n",
                    side: THREE.BackSide,
                    blending: THREE.AdditiveBlending,
                    transparent: !0
                });
                this.thunder = new THREE.Mesh(p,f),
                this.halo = new THREE.Mesh(d,m),
                this.halo.renderOrder = 100,
                this.mesh = new THREE.Group,
                this.mesh.add(this.thunder),
                this.mesh.add(this.halo),
                this.mesh.renderOrder = 5,
                this.mesh.scale.set(.3, .3, .3)
            }
            return i(t, [{
                key: "setPosition",
                value: function(t) {
                    this.mesh.position.copy(t),
                    this.mesh.position.y += 4
                }
            }, {
                key: "animate",
                value: function(t) {
                    this.mesh.rotation.y += 3 * t
                }
            }]),
            t
        }();
        e.exports = a
    }
    , {
        "../Colors": 63
    }],
    75: [function(t, e, n) {
        "use strict";
        function r(t, e) {
            if (!(t instanceof e))
                throw new TypeError("Cannot call a class as a function")
        }
        var i = function() {
            function t(t, e) {
                for (var n = 0; n < e.length; n++) {
                    var r = e[n];
                    r.enumerable = r.enumerable || !1,
                    r.configurable = !0,
                    "value"in r && (r.writable = !0),
                    Object.defineProperty(t, r.key, r)
                }
            }
            return function(e, n, r) {
                return n && t(e.prototype, n),
                r && t(e, r),
                e
            }
        }()
          , o = t("lodash")
          , a = function() {
            function t(e) {
                var n = arguments.length <= 1 || void 0 === arguments[1] ? 16711680 : arguments[1]
                  , i = arguments[2];
                return r(this, t),
                this.gameLane = i,
                this.laneManager = e,
                this.mesh = new THREE.Group,
                this.color = n,
                this.curveAdditional = new THREE.Vector3(0,0,0),
                this.segments = this.initSegments(),
                this._vl1 = new THREE.Vector3(0,0,0),
                this._vr1 = new THREE.Vector3(0,0,0),
                this._vl2 = new THREE.Vector3(0,0,0),
                this._vr2 = new THREE.Vector3(0,0,0),
                this._tan1 = new THREE.Vector3(0,0,0),
                this._tan2 = new THREE.Vector3(0,0,0),
                this._pos1 = new THREE.Vector3(0,0,0),
                this._pos2 = new THREE.Vector3(0,0,0),
                this._axis = new THREE.Vector3(0,0,1),
                this._quat1 = new THREE.Quaternion,
                this._quat2 = new THREE.Quaternion,
                this._lastPoint = new THREE.Vector3(0,0,0),
                this._secondLastPoint = new THREE.Vector3(0,0,0),
                this._diff = new THREE.Vector3(0,0,0),
                this.initDataSets(),
                this
            }
            return i(t, [{
                key: "initDataSets",
                value: function() {
                    this.dataset = [{
                        curve: this.createCurve(),
                        segments: this.segments
                    }],
                    this.dataset.push({
                        curve: this.createCurve(this.dataset[0].curve),
                        segments: []
                    })
                }
            }, {
                key: "reset",
                value: function() {
                    this.segments = this.dataset[0].segments.concat(this.dataset[1].segments);
                    for (var t = 0, e = this.segments.length; t < e; t++) {
                        var n = this.segments[t];
                        n.visible = !0,
                        n.geometry.verticesCalculated = !1
                    }
                    this.curveAdditional.set(0, 0, 0),
                    this.initDataSets()
                }
            }, {
                key: "updateCurve",
                value: function(t, e) {
                    return this.createCurve(e, t)
                }
            }, {
                key: "createCurve",
                value: function() {
                    var t = !(arguments.length <= 0 || void 0 === arguments[0]) && arguments[0]
                      , e = arguments.length <= 1 || void 0 === arguments[1] ? new THREE.CatmullRomCurve3 : arguments[1]
                      , n = []
                      , r = void 0;
                    if (t) {
                        var i = t.points;
                        this._lastPoint.copy(i[i.length - 1]),
                        this._secondLastPoint.copy(i[i.length - 2]),
                        this._diff.subVectors(this._lastPoint, this._secondLastPoint),
                        r = this._lastPoint
                    }
                    r || (r = new THREE.Vector3(0,0,0));
                    for (var o = 0, a = this.laneManager.CURVE_POINTS; o < a; o++)
                        n[n.length] = r.clone(),
                        0 === o && t ? r.add(this._diff) : (r.z += this.laneManager.LANEHEIGHT / this.laneManager.CURVE_POINTS,
                        r.add(this.laneManager.commonCurveAdditional),
                        r.add(this.curveAdditional));
                    return e.points = n,
                    e.elementShifted = 0,
                    e
                }
            }, {
                key: "curveHelper",
                value: function(t) {
                    var e = new THREE.Geometry;
                    e.vertices = t.getPoints(SEGMENTS);
                    var n = new THREE.LineBasicMaterial({
                        color: new THREE.Color(16777215 * Math.random()),
                        linewidth: 4
                    });
                    return new THREE.Line(e,n)
                }
            }, {
                key: "initSegments",
                value: function() {
                    for (var t = [], e = this.laneManager.LANEHEIGHT / this.laneManager.N_SEGMENTS, n = new THREE.PlaneGeometry(this.laneManager.LANEWIDTH,e,1,1), r = new THREE.Color(this.color), i = [], a = 0; a < this.laneManager.textures.length; a++) {
                        var s = this.laneManager.laneMaterial.clone();
                        s.uniforms.color.value = new THREE.Vector4(r.r,r.g,r.b,1),
                        s.uniforms.splat.value = this.laneManager.textures[a],
                        i.push(s)
                    }
                    var h = new THREE.Mesh(n,i[0]);
                    h.renderOrder = 10,
                    h.frustumCulled = !1,
                    h.geometry.applyMatrix((new THREE.Matrix4).makeRotationX(-Math.PI / 2)),
                    h.geometry.applyMatrix((new THREE.Matrix4).makeRotationY(Math.PI)),
                    h.matrixAutoUpdate = !1;
                    for (var u = o.random(0, this.laneManager.textures.length - 1), l = 0; l < this.laneManager.N_SEGMENTS; l++) {
                        var c = h.clone();
                        c.geometry = n.clone(),
                        c.geometry.verticesCalculated = !1,
                        c.updateMatrix(),
                        c.material = i[u % this.laneManager.textures.length],
                        t[t.length] = c,
                        this.mesh.add(c),
                        u++
                    }
                    return t
                }
            }, {
                key: "updateSegments",
                value: function(t, e) {
                    if (e.length)
                        for (var n = this.laneManager.LANEWIDTH, r = (4 * e.length,
                        void 0), i = void 0, o = void 0, a = void 0, s = void 0, h = void 0, u = void 0, l = void 0, c = 0, p = e.length; c < p; c++)
                            r = e[c].geometry,
                            r.verticesCalculated || (s ? (i = s,
                            o = h,
                            a = u) : (i = (t.elementShifted + c) / this.laneManager.N_SEGMENTS,
                            o = t.getPoint(i),
                            a = t.getTangent(i)),
                            this._vl1.set(-n / 2, 0, 0),
                            this._vr1.set(n / 2, 0, 0),
                            this._tan1.copy(a),
                            this._quat1.setFromUnitVectors(this._axis, this._tan1),
                            this._vl1.applyQuaternion(this._quat1),
                            this._vr1.applyQuaternion(this._quat1),
                            this._pos1.copy(o),
                            e[c].position.copy(this._pos1),
                            r.vertices[0].copy(this._vl1),
                            r.vertices[1].copy(this._vr1),
                            s = (t.elementShifted + c + 1) / this.laneManager.N_SEGMENTS,
                            h = t.getPoint(s),
                            u = t.getTangent(s),
                            this._vl2.set(-n / 2, 0, 0),
                            this._vr2.set(+n / 2, 0, 0),
                            this._tan2.copy(u),
                            this._quat2.setFromUnitVectors(this._axis, this._tan2),
                            this._vl2.applyQuaternion(this._quat2),
                            this._vr2.applyQuaternion(this._quat2),
                            this._pos2.copy(h),
                            l = this._pos2.sub(this._pos1),
                            this._vl2.add(l),
                            this._vr2.add(l),
                            r.vertices[2].copy(this._vl2),
                            r.vertices[3].copy(this._vr2),
                            r.verticesCalculated = !0,
                            r.verticesNeedUpdate = !0,
                            e[c].updateMatrix())
                }
            }, {
                key: "moveToNextDataSet",
                value: function() {
                    var t = arguments.length <= 0 || void 0 === arguments[0] ? this.currentDataSet.curve : arguments[0]
                      , e = this.nextDataSet;
                    this.updateCurve(e.curve, t),
                    e.curve.elementShifted = 0
                }
            }, {
                key: "shiftSegment",
                value: function() {
                    var t = this.currentDataSet
                      , e = this.nextDataSet;
                    if (!t.segments.length)
                        return console.warn("NOTHING TO SHIFT");
                    var n = t.segments.shift();
                    n.geometry.verticesCalculated = !1,
                    n.visible = !0,
                    e.segments[e.segments.length] = n,
                    t.curve.elementShifted++
                }
            }, {
                key: "update",
                value: function() {
                    var t = this.currentDataSet
                      , e = this.nextDataSet;
                    this.updateSegments(t.curve, t.segments),
                    this.updateSegments(e.curve, e.segments)
                }
            }, {
                key: "currentDataSet",
                get: function() {
                    var t = this.laneManager._dataSetIndex;
                    return this.dataset[t % 2]
                }
            }, {
                key: "nextDataSet",
                get: function() {
                    var t = this.laneManager._dataSetIndex;
                    return this.dataset[(t + 1) % 2]
                }
            }]),
            t
        }();
        e.exports = a
    }
    , {
        lodash: 5
    }],
    76: [function(t, e, n) {
        "use strict";
        function r(t, e) {
            if (!(t instanceof e))
                throw new TypeError("Cannot call a class as a function")
        }
        var i = function() {
            function t(t, e) {
                for (var n = 0; n < e.length; n++) {
                    var r = e[n];
                    r.enumerable = r.enumerable || !1,
                    r.configurable = !0,
                    "value"in r && (r.writable = !0),
                    Object.defineProperty(t, r.key, r)
                }
            }
            return function(e, n, r) {
                return n && t(e.prototype, n),
                r && t(e, r),
                e
            }
        }()
          , o = t("lodash")
          , a = t("../../Dispatcher/Dispatcher")
          , s = (t("../../Helpers/Normalize"),
        t("../../AssetsManager"))
          , h = t("./Items/Skull")
          , u = t("./Items/Thunderbolt")
          , l = t("./Items/Synth")
          , c = t("./Items/Melody")
          , p = t("./Items/Bass")
          , f = t("./Items/Switcher")
          , d = t("./Items/Guitar")
          , m = t("./Items/Microphone")
          , v = t("./Items/Drum")
          , g = t("./Colors")
          , y = t("./Lane")
          , _ = function() {
            function t(e) {
                r(this, t),
                this.renderCtx = e,
                this.LANEHEIGHT = 1e3,
                this.GAME = this.renderCtx.Game,
                this.CURVE_POINTS = 4,
                this.N_SEGMENTS = this.renderCtx.Game.segments,
                this.LANEWIDTH = 15,
                this.SINGLESEGMENTPERCENTAGE = 1 / this.N_SEGMENTS,
                this.camera = this.renderCtx.sphereCamera,
                this._dataSetIndex = 0,
                this.commonCurveAdditional = new THREE.Vector3(0,0,0),
                this.randomCommonCurveAdditional = !0,
                this._skull = new h,
                this._thunderbolt = new u,
                this._synth = new l,
                this._melody = new c,
                this._bass = new p,
                this._switcher = new f,
                this._guitar = new d,
                this._microphone = new m,
                this._drum = new v,
                this._cameraTargetAdd = new THREE.Vector3(0,10,0),
                this._cameraTargetPosVec = new THREE.Vector3(0,0,0),
                this._cameraTargetTanVec = new THREE.Vector3(0,0,0),
                this._cameraTarget = new THREE.Vector3(0,0,0),
                this._oldPoint = new THREE.Vector3,
                this._newPoint = new THREE.Vector3,
                this._helperObj = new THREE.Group
            }
            return i(t, [{
                key: "init",
                value: function() {
                    var t = this;
                    this.textures = [(new THREE.TextureLoader).load("images/textures/8textures/tex1-5956b02606.png"), (new THREE.TextureLoader).load("images/textures/8textures/tex2-5e1515e87c.png"), (new THREE.TextureLoader).load("images/textures/8textures/tex3-7503df0653.png"), (new THREE.TextureLoader).load("images/textures/8textures/tex4-471a2d9c4b.png"), (new THREE.TextureLoader).load("images/textures/8textures/tex5-7531f7d084.png"), (new THREE.TextureLoader).load("images/textures/8textures/tex6-258f0018ad.png"), (new THREE.TextureLoader).load("images/textures/8textures/tex7-781bdab48b.png"), (new THREE.TextureLoader).load("images/textures/8textures/tex8-02fd1651a3.png")];
                    for (var e = 0; e < this.textures.length; e++)
                        this.textures[e].anisotropy = 15,
                        this.textures[e].name = "" + e;
                    this.laneMaterial = new THREE.RawShaderMaterial({
                        vertexShader: "precision highp float;\nprecision highp int;\n#define GLSLIFY 1\n\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\n\nattribute vec3 position;\nattribute vec2 uv;\n\nvarying vec3 worldPosition;\nvarying vec2 vUv;\n\nvoid main() {\n  vUv = uv;\n\n  vec4 cs_position = modelViewMatrix * vec4( position, 1.0 );\n  worldPosition = cs_position.xyz;\n\n  gl_Position = projectionMatrix * cs_position;\n}\n",
                        fragmentShader: "precision highp float;\nprecision highp int;\n#define GLSLIFY 1\n\nuniform sampler2D splat;\nuniform vec4 color;\n\nuniform float fogDensity;\nuniform vec3 fogColor;\n\nvarying vec3 worldPosition;\nvarying vec2 vUv;\n\nvoid main() {\n  vec4 c = color;\n\n  float dist = distance(vec3(0.0, 0.0, 0.0), worldPosition);\n  // gradient\n  c *= 1.0 + (dist / 800.0);\n\n  vec4 transparent = c;\n  transparent.a = 0.0;\n\n  vec4 t = texture2D(splat, 1.0 - vUv);\n\n  gl_FragColor = mix(c, transparent, 1.0 - t.a);\n\n  // FOG\n  float fogDensity = 0.0032;\n  float depth = gl_FragCoord.z / gl_FragCoord.w;\n\n  const float LOG2 = 1.442695;\n  float fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\n  fogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\n\n  gl_FragColor = mix( gl_FragColor, vec4(fogColor, gl_FragColor.w), fogFactor );\n\n}\n",
                        transparent: !0,
                        side: THREE.DoubleSide,
                        uniforms: {
                            color: {
                                type: "v4",
                                value: new THREE.Vector4(1,0,0,1)
                            },
                            splat: {
                                type: "t",
                                value: this.textures[0]
                            },
                            fogDensity: {
                                type: "f",
                                value: this.renderCtx.scene.fog.density
                            },
                            fogColor: {
                                type: "c",
                                value: this.renderCtx.scene.fog.color
                            }
                        }
                    }),
                    this.laneMaterial.map = !0,
                    this.lanes = [new y(this,g.getColor("shakespeare"),this.renderCtx.Game.lanes[0]), new y(this,g.getColor("bayofmany"),this.renderCtx.Game.lanes[1]), new y(this,g.getColor("maroonflush"),this.renderCtx.Game.lanes[2])],
                    this.meshPositionX = [20, 0, -20];
                    for (var n = 0, r = this.lanes.length; n < r; n++)
                        this.lanes[n].mesh.position.x = this.meshPositionX[n],
                        this.lanes[n].originalIndex = n;
                    o.forEach(this.lanes, function(e) {
                        t.renderCtx.scene.add(e.mesh)
                    }),
                    this.createPoolItems(),
                    this.bind()
                }
            }, {
                key: "getLaneByIndex",
                value: function(t) {
                    for (var e = 0; e < 3; e++) {
                        var n = this.lanes[e];
                        if (n.gameLane.params.index === t)
                            return n
                    }
                }
            }, {
                key: "bind",
                value: function() {
                    var t = this;
                    a.on("GAME:newSegment", this.addNewSegment.bind(this)),
                    a.on("GAME:newCursorIndex", this.onCursorChange.bind(this)),
                    a.on("GAME:collision", this.collisionItem.bind(this)),
                    a.on("LANE:tweenLane", this.tweenLane.bind(this)),
                    a.on("GAME:nextSegmentsSet", function() {
                        t.nextDataSet()
                    })
                }
            }, {
                key: "tweenLane",
                value: function(t, e) {
                    var n = arguments.length <= 2 || void 0 === arguments[2] ? 0 : arguments[2]
                      , r = this.getLaneByIndex(t);
                    r && TweenLite.to(r.mesh.position, n, e)
                }
            }, {
                key: "reset",
                value: function() {
                    this.commonCurveAdditional.set(0, 0, 0),
                    this.randomCommonCurveAdditional = !0,
                    this._cameraTween = !1,
                    this._dataSetIndex = 0;
                    for (var t = 0; t < this.lanes.length; t++)
                        this.lanes[t].reset();
                    for (var e in this.poolItem)
                        for (var n = this.poolItem[e], r = n.objects.length, i = 0; i < r; i++)
                            n.objects[i].mesh.visible = !1,
                            n.objects[i].collided = !1
                }
            }, {
                key: "createPoolItems",
                value: function() {
                    var t = this.lanes.length * this.N_SEGMENTS;
                    this.poolItem = {
                        malus: {
                            index: 0,
                            objects: []
                        },
                        powerUp: {
                            index: 0,
                            objects: []
                        }
                    },
                    this.poolItem[s.instruments.AUDIO_TYPE_BASS] = {
                        index: 0,
                        objects: []
                    },
                    this.poolItem[s.instruments.AUDIO_TYPE_DRUM] = {
                        index: 0,
                        objects: []
                    },
                    this.poolItem[s.instruments.AUDIO_TYPE_EXTRA] = {
                        index: 0,
                        objects: []
                    },
                    this.poolItem[s.instruments.AUDIO_TYPE_FX] = {
                        index: 0,
                        objects: []
                    },
                    this.poolItem[s.instruments.AUDIO_TYPE_GUITAR] = {
                        index: 0,
                        objects: []
                    },
                    this.poolItem[s.instruments.AUDIO_TYPE_SYNTH] = {
                        index: 0,
                        objects: []
                    },
                    this.poolItem[s.instruments.AUDIO_TYPE_VOCAL] = {
                        index: 0,
                        objects: []
                    };
                    for (var e = 0; e < t; e++)
                        this.poolItem[s.instruments.AUDIO_TYPE_BASS].objects.push(new p(this._bass)),
                        this.poolItem[s.instruments.AUDIO_TYPE_DRUM].objects.push(new v(this._drum)),
                        this.poolItem[s.instruments.AUDIO_TYPE_EXTRA].objects.push(new c(this._melody)),
                        this.poolItem[s.instruments.AUDIO_TYPE_FX].objects.push(new f(this._switcher)),
                        this.poolItem[s.instruments.AUDIO_TYPE_GUITAR].objects.push(new d(this._guitar)),
                        this.poolItem[s.instruments.AUDIO_TYPE_SYNTH].objects.push(new l(this._synth)),
                        this.poolItem[s.instruments.AUDIO_TYPE_VOCAL].objects.push(new m(this._microphone)),
                        this.poolItem.powerUp.objects.push(new u(this._thunderbolt)),
                        this.poolItem.malus.objects.push(new h(this._skull))
                }
            }, {
                key: "getObjectByItem",
                value: function(t) {
                    var e = t.bonus ? this.poolItem.bonus : this.poolItem.malus;
                    t.powerUp && (e = this.poolItem.powerUp),
                    t.instrument && this.poolItem[t.instrument] && (e = this.poolItem[t.instrument]);
                    var n = e.objects[e.index++ % (e.objects.length - 1)];
                    return n.collided = !1,
                    n
                }
            }, {
                key: "getLastObjectOnLane",
                value: function(t, e) {
                    e = e || this.getLaneByIndex(this.renderCtx.Game.cursorIndex);
                    for (var n = this.poolItem[t].objects, r = null , i = 0, o = n.length; i < o; i++) {
                        var a = n[i]
                          , s = a.mesh;
                        !a.collided && s.visible && s.parent && s.position.z - 1 > this.camera.position.z && s.parent.uuid === e.mesh.uuid && (!r || s.position.z < r.mesh.position.z) && (r = a)
                    }
                    return r
                }
            }, {
                key: "collisionItem",
                value: function(t) {
                    var e = (this.getLaneByIndex(this.renderCtx.Game.cursorIndex),
                    "bonus");
                    t.powerUp && (e = "powerUp"),
                    t.malus && (e = "malus"),
                    t.instrument && this.poolItem[t.instrument] && (e = t.instrument);
                    var n = this.getLastObjectOnLane(e);
                    if (n)
                        return this.collideObject(n, t.malus)
                }
            }, {
                key: "collideObject",
                value: function(t) {
                    var e = !(arguments.length <= 1 || void 0 === arguments[1]) && arguments[1];
                    if (t.collided = !0,
                    e && this.renderCtx.Game.protection)
                        !function() {
                            TweenLite.to(t.mesh.position, .6, {
                                z: "+=550",
                                x: "+=" + o.random(-10, 60),
                                y: "+=" + o.random(200, 240),
                                onComplete: function() {
                                    t.mesh.position.z = -900
                                }
                            });
                            var e = [t.mesh.rotation.x, t.mesh.rotation.y, t.mesh.rotation.z];
                            TweenLite.to(t.mesh.rotation, .6, {
                                x: "+=100",
                                y: "+=100",
                                z: "+=100",
                                onComplete: function() {
                                    t.mesh.rotation.set(e[0], e[1], e[2])
                                }
                            })
                        }();
                    else {
                        var n = 210 / this.renderCtx.Game.spm;
                        n /= this.renderCtx.Game.segmentsDelta,
                        TweenLite.to(t.mesh.position, n, {
                            y: "+=14"
                        })
                    }
                }
            }, {
                key: "addNewSegment",
                value: function(t, e) {
                    var n = this
                      , r = this.getLaneByIndex(e);
                    if (0 !== this.renderCtx.Game._segmentsAdded && r.shiftSegment(),
                    t.onCollision) {
                        var i = this.getObjectByItem(t)
                          , o = i.mesh;
                        o.parent && o.parent.remove(o),
                        r.mesh.add(o);
                        var a = 2;
                        return t.fatal ? void this.renderCtx.Game.addDeferred(function(t) {
                            return function() {
                                var e = t.nextDataSet.segments;
                                e.length || (e = t.currentDataSet.segments),
                                e[e.length - 1].visible = !1
                            }
                        }(r), a + 1) : void this.renderCtx.Game.addDeferred(function(t, e) {
                            return function() {
                                var r = t.nextDataSet.curve
                                  , i = e.mesh
                                  , o = n.GAME._curveProgress - n.SINGLESEGMENTPERCENTAGE;
                                o < 0 && (r = t.currentDataSet.curve,
                                o = 1 - o);
                                var a = r.getPoint(o);
                                TweenLite.killTweensOf(i.position),
                                i.visible = !0,
                                e.setPosition ? e.setPosition(a) : (i.position.copy(a),
                                i.position.y += 3)
                            }
                        }(r, i), a)
                    }
                }
            }, {
                key: "nextDataSet",
                value: function() {
                    this.randomCommonCurveAdditional && (this.commonCurveAdditional.x = 20 * Math.random(),
                    this.commonCurveAdditional.y = 30 * Math.random());
                    var t = this.renderCtx.Game.BranchesManager.ramification;
                    if (t.length) {
                        for (var e = 0; e < 3; e++) {
                            var n = this.getLaneByIndex(e);
                            n.curveAdditional.x = t[e].x,
                            n.curveAdditional.y = t[e].y
                        }
                        this.renderCtx.Game.BranchesManager.ramification = !1
                    } else
                        for (var r = 0; r < 3; r++)
                            this.lanes[r].curveAdditional.set(0, 0, 0);
                    this._dataSetIndex++,
                    this.lanes[0].moveToNextDataSet(),
                    this.lanes[1].moveToNextDataSet(),
                    this.lanes[2].moveToNextDataSet()
                }
            }, {
                key: "updateCamera",
                value: function() {
                    if (!this._cameraTween) {
                        var t = this.renderCtx.Game.cursorIndex
                          , e = this.getLaneByIndex(t)
                          , n = e.currentDataSet.curve
                          , r = n.getPoint(this.GAME._curveProgress)
                          , i = +e.mesh.position.x
                          , o = n.getTangent(this.GAME._curveProgress)
                          , a = this._cameraTargetPosVec.copy(r)
                          , s = this._cameraTargetTanVec.copy(o);
                        a.add(s),
                        a.add(this._cameraTargetAdd),
                        a.x += i,
                        this._cameraTarget.copy(a),
                        this.camera.position.set(r.x + i, r.y + 10, r.z),
                        this.camera.lookAt(a)
                    }
                }
            }, {
                key: "onCursorChange",
                value: function(t) {
                    var e = this;
                    this._cameraTween = !0,
                    a.emit("LANEMANAGER:onCursorAnimationStart");
                    var n = .08
                      , r = this.N_SEGMENTS / (this.renderCtx.Game.spm / 60)
                      , i = r * n
                      , o = this.getLaneByIndex(t)
                      , s = this.GAME._curveProgress + n
                      , h = o.currentDataSet.curve;
                    s > 1 && (s -= 1,
                    h = o.nextDataSet.curve);
                    var u = h.getPoint(s)
                      , l = +o.mesh.position.x
                      , c = {
                        x: u.x + l,
                        y: u.y + 10,
                        z: u.z
                    }
                      , p = h.getTangent(s)
                      , f = this._cameraTargetPosVec.copy(u)
                      , d = this._cameraTargetTanVec.copy(p);
                    f.add(d),
                    f.add(this._cameraTargetAdd),
                    f.x += l,
                    this._helperObj.position.set(c.x, c.y, c.z),
                    this._helperObj.lookAt(f),
                    TweenLite.killTweensOf(this.camera.position),
                    TweenLite.killTweensOf(this.camera.rotation),
                    TweenLite.to(this.camera.rotation, i, {
                        ease: Power0.easeNone,
                        x: this._helperObj.rotation.x,
                        y: this._helperObj.rotation.y,
                        z: this._helperObj.rotation.z
                    }),
                    TweenLite.to(this.camera.position, i, {
                        ease: Power0.easeNone,
                        x: c.x,
                        y: c.y,
                        z: c.z,
                        onComplete: function() {
                            e._cameraTween = !1,
                            a.emit("LANEMANAGER:onCursorAnimationEnd")
                        }
                    })
                }
            }, {
                key: "animateItems",
                value: function() {
                    for (var t = Object.keys(this.poolItem), e = this.poolItem[t[0]].objects.length, n = 0, r = t.length; n < r; n++)
                        for (var i = 0; i < e; i++) {
                            var o = this.poolItem[t[n]].objects[i];
                            o.animate && o.animate(this.renderCtx.Game.clockDelta)
                        }
                }
            }, {
                key: "canSwitchToLane",
                value: function(t) {
                    var e = 25
                      , n = this.renderCtx.Game.cursorIndex
                      , r = this.getLaneByIndex(t)
                      , i = this.getLaneByIndex(n)
                      , o = "currentDataSet"
                      , a = this.GAME._curveProgress + .1;
                    a > 1 && (o = "nextDataSet",
                    a -= 1),
                    this._oldPoint.copy(i[o].curve.getPoint(a)),
                    this._newPoint.copy(r[o].curve.getPoint(a)),
                    this._oldPoint.x -= this.meshPositionX[n],
                    this._newPoint.x -= this.meshPositionX[t],
                    this._oldPoint.x += this.meshPositionX[i.originalIndex],
                    this._newPoint.x += this.meshPositionX[r.originalIndex];
                    var s = this._oldPoint.distanceTo(this._newPoint);
                    return s < e
                }
            }, {
                key: "update",
                value: function() {
                    this.animateItems(),
                    this.lanes[0].update(),
                    this.lanes[1].update(),
                    this.lanes[2].update(),
                    this.updateCamera()
                }
            }]),
            t
        }();
        e.exports = _
    }
    , {
        "../../AssetsManager": 22,
        "../../Dispatcher/Dispatcher": 23,
        "../../Helpers/Normalize": 57,
        "./Colors": 63,
        "./Items/Bass": 66,
        "./Items/Drum": 67,
        "./Items/Guitar": 68,
        "./Items/Melody": 69,
        "./Items/Microphone": 70,
        "./Items/Skull": 71,
        "./Items/Switcher": 72,
        "./Items/Synth": 73,
        "./Items/Thunderbolt": 74,
        "./Lane": 75,
        lodash: 5
    }],
    77: [function(t, e, n) {
        "use strict";
        function r(t, e) {
            if (!(t instanceof e))
                throw new TypeError("Cannot call a class as a function")
        }
        var i = function() {
            function t(t, e) {
                for (var n = 0; n < e.length; n++) {
                    var r = e[n];
                    r.enumerable = r.enumerable || !1,
                    r.configurable = !0,
                    "value"in r && (r.writable = !0),
                    Object.defineProperty(t, r.key, r)
                }
            }
            return function(e, n, r) {
                return n && t(e.prototype, n),
                r && t(e, r),
                e
            }
        }()
          , o = t("../../Helpers/Deferred")
          , a = function() {
            function t(e, n) {
                return r(this, t),
                this.camera = e,
                this.points = n,
                this.curve = this.createPath(),
                this
            }
            return i(t, [{
                key: "createPath",
                value: function() {
                    arguments.length <= 0 || void 0 === arguments[0] ? this.points : arguments[0];
                    return new THREE.CatmullRomCurve3(this.points)
                }
            }, {
                key: "animate",
                value: function() {
                    var t = this
                      , e = arguments.length <= 0 || void 0 === arguments[0] ? 2 : arguments[0]
                      , n = arguments.length <= 1 || void 0 === arguments[1] ? Power0.easeNone : arguments[1];
                    this.deferred = new o;
                    var r = this;
                    return TweenLite.to({}, e, {
                        ease: n,
                        onUpdate: function() {
                            r.onUpdate(this.progress())
                        },
                        onComplete: function() {
                            t.deferred.resolve()
                        }
                    }),
                    this.deferred.promise
                }
            }, {
                key: "onUpdate",
                value: function(t) {
                    var e = this.curve.getPoint(t)
                      , n = this.curve.getTangent(t);
                    this.setCamera(e, n)
                }
            }, {
                key: "setCamera",
                value: function(t, e) {
                    this.camera.position.copy(t)
                }
            }]),
            t
        }();
        e.exports = a
    }
    , {
        "../../Helpers/Deferred": 54
    }],
    78: [function(t, e, n) {
        "use strict";
        function r(t, e) {
            if (!(t instanceof e))
                throw new TypeError("Cannot call a class as a function")
        }
        var i = function() {
            function t(t, e) {
                for (var n = 0; n < e.length; n++) {
                    var r = e[n];
                    r.enumerable = r.enumerable || !1,
                    r.configurable = !0,
                    "value"in r && (r.writable = !0),
                    Object.defineProperty(t, r.key, r)
                }
            }
            return function(e, n, r) {
                return n && t(e.prototype, n),
                r && t(e, r),
                e
            }
        }()
          , o = t("./addons/CustomMeshFlat")(THREE)
          , a = t("../../Helpers/Normalize")
          , s = t("./Colors")
          , h = function() {
            function t(e) {
                r(this, t),
                this.renderCtx = e,
                this.mesh = new THREE.Group,
                this.isAnimated = !0,
                this.planesCount = 10,
                this.planeWidth = .3,
                this.planeLength = 3,
                this.planesGap = .7,
                this.steepness = 2,
                this.waveAngle = 0,
                this.waveAmp = .03;
                var n = this.planesCount * this.planeWidth + this.planesGap * (this.planesCount - 1)
                  , i = -n / 2 + this.planeWidth / 2;
                this.stepAngle = Math.PI / (this.planesCount - 1),
                this.planes = [];
                for (var a = s.getColor("white"), h = 0; h < this.planesCount; h++) {
                    var u = new o.PlaneMesh(this.planeWidth,this.planeLength,1,a);
                    u.geometry.applyMatrix((new THREE.Matrix4).makeRotationX(-Math.PI / 2)),
                    u.geometry.applyMatrix((new THREE.Matrix4).makeTranslation(0, 0, this.planeLength)),
                    u.position.x = i + (this.planeWidth + this.planesGap) * h,
                    this.planes.push(u),
                    this.mesh.add(u)
                }
                return this.mesh.name = "Player",
                this
            }
            return i(t, [{
                key: "update",
                value: function() {
                    if (this.isAnimated && !this.renderCtx.Game.isPaused) {
                        var t = 0
                          , e = this.renderCtx.Game.DifficultyManager.multiplier
                          , n = a(e, 1, 100, .3, .9);
                        n = Math.min(n, .9),
                        t = n,
                        this.steepness = 20 * t,
                        this.planeScale = t / 2,
                        this.waveAngle += t,
                        this.waveAmp = t / 10;
                        for (var r = 0; r < this.planesCount; r++) {
                            var i = this.planes[r];
                            i.rotation.x = Math.cos(this.waveAngle + r * this.stepAngle) * this.waveAmp,
                            i.position.y = -Math.cos(this.waveAngle + Math.PI / 2 + r * this.stepAngle) * this.waveAmp * 5,
                            i.position.z = (1 - Math.sin(this.stepAngle * r)) * this.steepness
                        }
                    }
                }
            }]),
            t
        }();
        e.exports = h
    }
    , {
        "../../Helpers/Normalize": 57,
        "./Colors": 63,
        "./addons/CustomMeshFlat": 86
    }],
    79: [function(t, e, n) {
        "use strict";
        function r(t, e) {
            if (!(t instanceof e))
                throw new TypeError("Cannot call a class as a function")
        }
        var i = function() {
            function t(t, e) {
                for (var n = 0; n < e.length; n++) {
                    var r = e[n];
                    r.enumerable = r.enumerable || !1,
                    r.configurable = !0,
                    "value"in r && (r.writable = !0),
                    Object.defineProperty(t, r.key, r)
                }
            }
            return function(e, n, r) {
                return n && t(e.prototype, n),
                r && t(e, r),
                e
            }
        }()
          , o = t("../../Dispatcher/Dispatcher")
          , a = t("../../Helpers/Deferred");
        t("./addons/CopyShader")(THREE),
        t("./addons/EffectComposer")(THREE),
        t("./addons/MaskPass")(THREE),
        t("./addons/RenderPass")(THREE),
        t("./addons/ShaderPass")(THREE),
        t("./PostProcessingPass")(THREE);
        var s = function() {
            function t(e) {
                r(this, t),
                this.renderCtx = e,
                this.init(),
                this.bind()
            }
            return i(t, [{
                key: "bind",
                value: function() {
                    var t = this;
                    o.on("POSTPROCESS:vignette", this.tweenVignette.bind(this)),
                    o.on("POSTPROCESS:colorify", this.tweenColorify.bind(this)),
                    o.on("POSTPROCESS:blinkColor", this.blinkColor.bind(this)),
                    o.on("POSTPROCESS:enableGlitch", this.enableGlitch.bind(this)),
                    o.on("POSTPROCESS:disableGlitch", this.disableGlitch.bind(this)),
                    o.on("GAME:play", this.tweenVignette.bind(this)),
                    o.on("GAME:nextInstrumentLoop", this.blinkBrightness.bind(this)),
                    o.on("GAME:enableEffect", this.blinkBrightness.bind(this)),
                    o.on("GAME:replay", function() {
                        t.tweenVignette(),
                        t.tweenColorify(0),
                        t.disableGlitch()
                    }),
                    o.on("GAME:enableEffect", function() {
                        t.tweenRGBShift(.006, 2)
                    }),
                    o.on("GAME:disableEffects", this.tweenRGBShift.bind(this))
                }
            }, {
                key: "init",
                value: function() {
                    this.composer = new THREE.EffectComposer(this.renderCtx.renderer),
                    this.composer.addPass(new THREE.RenderPass(this.renderCtx.scene,this.renderCtx.camera)),
                    this.postProcessingShader = new THREE.PostProcessingPass(this.globalShader),
                    this.postProcessingShader.uniforms.vignette_offset.value = 1,
                    this.postProcessingShader.renderToScreen = !0,
                    this.setAntialiasingResolution(),
                    this.composer.addPass(this.postProcessingShader)
                }
            }, {
                key: "setAntialiasingResolution",
                value: function() {
                    var t = this.renderCtx.dpr
                      , e = this.renderCtx.width * t
                      , n = this.renderCtx.height * t;
                    this.postProcessingShader.uniforms.fxaa_resolution.value.set(e, n),
                    this.composer.setSize(e, n)
                }
            }, {
                key: "tweenVignette",
                value: function() {
                    var t = arguments.length <= 0 || void 0 === arguments[0] ? 1 : arguments[0]
                      , e = arguments.length <= 1 || void 0 === arguments[1] ? 1.3 : arguments[1]
                      , n = arguments.length <= 2 || void 0 === arguments[2] ? 1 : arguments[2];
                    if (this.renderCtx.postProcessingEnabled) {
                        this.tweenVignetteProgress && this.tweenVignetteProgress.kill();
                        var r = this.postProcessingShader.uniforms
                          , i = {
                            offset: r.vignette_offset.value
                        };
                        this.tweenVignetteProgress = TweenLite.to(i, t, {
                            offset: e,
                            darkness: n,
                            onUpdate: function() {
                                r.vignette_offset.value = i.offset
                            }
                        })
                    }
                }
            }, {
                key: "tweenColorify",
                value: function() {
                    var t = arguments.length <= 0 || void 0 === arguments[0] ? .8 : arguments[0]
                      , e = arguments.length <= 1 || void 0 === arguments[1] ? 16711680 : arguments[1]
                      , n = arguments.length <= 2 || void 0 === arguments[2] ? .25 : arguments[2];
                    if (this.renderCtx.postProcessingEnabled) {
                        this.tweenColorProgress && this.tweenColorProgress.kill();
                        var r = new a
                          , i = this.postProcessingShader.uniforms;
                        i.colorify_color.value.set(e);
                        var o = {
                            opacity: i.colorify_opacity.value
                        };
                        return this.tweenColorProgress = TweenLite.to(o, n, {
                            opacity: t,
                            onUpdate: function() {
                                i.colorify_opacity.value = o.opacity
                            },
                            onComplete: function() {
                                r.resolve()
                            }
                        }),
                        r.promise
                    }
                }
            }, {
                key: "tweenBrightnessContrast",
                value: function() {
                    var t = arguments.length <= 0 || void 0 === arguments[0] ? 0 : arguments[0]
                      , e = arguments.length <= 1 || void 0 === arguments[1] ? 1 : arguments[1]
                      , n = arguments.length <= 2 || void 0 === arguments[2] ? .25 : arguments[2];
                    if (this.renderCtx.postProcessingEnabled) {
                        var r = new a
                          , i = this.postProcessingShader.uniforms
                          , o = {
                            brightness: i.brightness.value,
                            contrast: i.contrast.value
                        };
                        return TweenLite.to(o, n, {
                            brightness: t,
                            contrast: e,
                            onUpdate: function() {
                                i.brightness.value = o.brightness,
                                i.contrast.value = o.contrast
                            },
                            onComplete: function() {
                                r.resolve()
                            }
                        }),
                        r.promise
                    }
                }
            }, {
                key: "tweenRGBShift",
                value: function() {
                    var t = arguments.length <= 0 || void 0 === arguments[0] ? 0 : arguments[0]
                      , e = arguments.length <= 1 || void 0 === arguments[1] ? 0 : arguments[1]
                      , n = arguments.length <= 2 || void 0 === arguments[2] ? 2 : arguments[2];
                    if (this.renderCtx.postProcessingEnabled) {
                        var r = new a
                          , i = this.postProcessingShader.uniforms
                          , o = {
                            amount: i.shift_amount.value,
                            angle: i.shift_angle.value
                        };
                        return TweenLite.to(o, n, {
                            amount: t,
                            angle: e,
                            onUpdate: function() {
                                i.shift_amount.value = o.amount,
                                i.shift_angle.value = o.angle
                            },
                            onComplete: function() {
                                r.resolve()
                            }
                        }),
                        r.promise
                    }
                }
            }, {
                key: "blinkColor",
                value: function(t) {
                    var e = this;
                    this.renderCtx.postProcessingEnabled && this.tweenColorify(.25, t).then(function() {
                        e.tweenColorify(0)
                    })
                }
            }, {
                key: "blinkBrightness",
                value: function() {
                    var t = this;
                    this.renderCtx.postProcessingEnabled && this.tweenBrightnessContrast(.22, 1.15).then(function() {
                        t.tweenBrightnessContrast()
                    })
                }
            }, {
                key: "enableGlitch",
                value: function() {
                    this.renderCtx.postProcessingEnabled && (this.postProcessingShader.uniforms.byp.value = 0)
                }
            }, {
                key: "disableGlitch",
                value: function() {
                    this.renderCtx.postProcessingEnabled && (this.postProcessingShader.uniforms.byp.value = 1)
                }
            }, {
                key: "update",
                value: function() {
                    this.renderCtx.postProcessingEnabled && this.composer.render()
                }
            }, {
                key: "globalShader",
                get: function() {
                    return {
                        uniforms: {
                            tDiffuse: {
                                type: "t",
                                value: null
                            },
                            fxaa_resolution: {
                                type: "v2",
                                value: new THREE.Vector2(1024,512)
                            },
                            vignette_offset: {
                                type: "f",
                                value: 1
                            },
                            colorify_color: {
                                type: "c",
                                value: new THREE.Color(16777215)
                            },
                            colorify_opacity: {
                                type: "f",
                                value: 0
                            },
                            brightness: {
                                type: "f",
                                value: 0
                            },
                            contrast: {
                                type: "f",
                                value: 1
                            },
                            shift_amount: {
                                type: "f",
                                value: 0
                            },
                            shift_angle: {
                                type: "f",
                                value: 0
                            },
                            tDisp: {
                                type: "t",
                                value: null
                            },
                            byp: {
                                type: "i",
                                value: 1
                            },
                            amount: {
                                type: "f",
                                value: .08
                            },
                            angle: {
                                type: "f",
                                value: .02
                            },
                            seed: {
                                type: "f",
                                value: .02
                            },
                            seed_x: {
                                type: "f",
                                value: .02
                            },
                            seed_y: {
                                type: "f",
                                value: .02
                            },
                            distortion_x: {
                                type: "f",
                                value: .5
                            },
                            distortion_y: {
                                type: "f",
                                value: .6
                            },
                            col_s: {
                                type: "f",
                                value: .05
                            }
                        },
                        vertexShader: "#define GLSLIFY 1\nvarying vec2 vUv;\n\nvarying vec2 v_rgbNW;\nvarying vec2 v_rgbNE;\nvarying vec2 v_rgbSW;\nvarying vec2 v_rgbSE;\nvarying vec2 v_rgbM;\n\nuniform vec2 fxaa_resolution;\n\nvoid main() {\n  vUv = uv;\n  vec2 fragCoord = uv * fxaa_resolution;\n  vec2 inverseVP = 1.0 / fxaa_resolution.xy;\n  v_rgbNW = (fragCoord + vec2(-1.0, -1.0)) * inverseVP;\n  v_rgbNE = (fragCoord + vec2(1.0, -1.0)) * inverseVP;\n  v_rgbSW = (fragCoord + vec2(-1.0, 1.0)) * inverseVP;\n  v_rgbSE = (fragCoord + vec2(1.0, 1.0)) * inverseVP;\n  v_rgbM = vec2(fragCoord * inverseVP);\n\n  gl_Position = projectionMatrix *\n              modelViewMatrix *\n              vec4(position,1.0);\n}\n",
                        fragmentShader: "#define GLSLIFY 1\n// precision lowp float;\nuniform sampler2D tDiffuse;\n\n// uniform sampler2D tHud;\nvarying vec2 vUv;\n\n// fxaa\nuniform vec2 fxaa_resolution;\n//texcoords computed in vertex step\n//to avoid dependent texture reads\nvarying vec2 v_rgbNW;\nvarying vec2 v_rgbNE;\nvarying vec2 v_rgbSW;\nvarying vec2 v_rgbSE;\nvarying vec2 v_rgbM;\n/**\nBasic FXAA implementation based on the code on geeks3d.com with the\nmodification that the texture2DLod stuff was removed since it's\nunsupported by WebGL.\n\n--\n\nFrom:\nhttps://github.com/mitsuhiko/webgl-meincraft\n\nCopyright (c) 2011 by Armin Ronacher.\n\nSome rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are\nmet:\n\n    * Redistributions of source code must retain the above copyright\n      notice, this list of conditions and the following disclaimer.\n\n    * Redistributions in binary form must reproduce the above\n      copyright notice, this list of conditions and the following\n      disclaimer in the documentation and/or other materials provided\n      with the distribution.\n\n    * The names of the contributors may not be used to endorse or\n      promote products derived from this software without specific\n      prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\nLIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\nA PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\nOWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\nSPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\nLIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\nDATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\nTHEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\n\n#ifndef FXAA_REDUCE_MIN\n    #define FXAA_REDUCE_MIN   (1.0/ 128.0)\n#endif\n#ifndef FXAA_REDUCE_MUL\n    #define FXAA_REDUCE_MUL   (1.0 / 8.0)\n#endif\n#ifndef FXAA_SPAN_MAX\n    #define FXAA_SPAN_MAX     8.0\n#endif\n\n//optimized version for mobile, where dependent \n//texture reads can be a bottleneck\nvec4 fxaa(sampler2D tex, vec2 fragCoord, vec2 resolution,\n            vec2 v_rgbNW, vec2 v_rgbNE, \n            vec2 v_rgbSW, vec2 v_rgbSE, \n            vec2 v_rgbM) {\n    vec4 color;\n    mediump vec2 inverseVP = vec2(1.0 / resolution.x, 1.0 / resolution.y);\n    vec3 rgbNW = texture2D(tex, v_rgbNW).xyz;\n    vec3 rgbNE = texture2D(tex, v_rgbNE).xyz;\n    vec3 rgbSW = texture2D(tex, v_rgbSW).xyz;\n    vec3 rgbSE = texture2D(tex, v_rgbSE).xyz;\n    vec4 texColor = texture2D(tex, v_rgbM);\n    vec3 rgbM  = texColor.xyz;\n    vec3 luma = vec3(0.299, 0.587, 0.114);\n    float lumaNW = dot(rgbNW, luma);\n    float lumaNE = dot(rgbNE, luma);\n    float lumaSW = dot(rgbSW, luma);\n    float lumaSE = dot(rgbSE, luma);\n    float lumaM  = dot(rgbM,  luma);\n    float lumaMin = min(lumaM, min(min(lumaNW, lumaNE), min(lumaSW, lumaSE)));\n    float lumaMax = max(lumaM, max(max(lumaNW, lumaNE), max(lumaSW, lumaSE)));\n    \n    mediump vec2 dir;\n    dir.x = -((lumaNW + lumaNE) - (lumaSW + lumaSE));\n    dir.y =  ((lumaNW + lumaSW) - (lumaNE + lumaSE));\n    \n    float dirReduce = max((lumaNW + lumaNE + lumaSW + lumaSE) *\n                          (0.25 * FXAA_REDUCE_MUL), FXAA_REDUCE_MIN);\n    \n    float rcpDirMin = 1.0 / (min(abs(dir.x), abs(dir.y)) + dirReduce);\n    dir = min(vec2(FXAA_SPAN_MAX, FXAA_SPAN_MAX),\n              max(vec2(-FXAA_SPAN_MAX, -FXAA_SPAN_MAX),\n              dir * rcpDirMin)) * inverseVP;\n    \n    vec3 rgbA = 0.5 * (\n        texture2D(tex, fragCoord * inverseVP + dir * (1.0 / 3.0 - 0.5)).xyz +\n        texture2D(tex, fragCoord * inverseVP + dir * (2.0 / 3.0 - 0.5)).xyz);\n    vec3 rgbB = rgbA * 0.5 + 0.25 * (\n        texture2D(tex, fragCoord * inverseVP + dir * -0.5).xyz +\n        texture2D(tex, fragCoord * inverseVP + dir * 0.5).xyz);\n\n    float lumaB = dot(rgbB, luma);\n    if ((lumaB < lumaMin) || (lumaB > lumaMax))\n        color = vec4(rgbA, texColor.a);\n    else\n        color = vec4(rgbB, texColor.a);\n    return color;\n}\n\n// vignette\nuniform float vignette_offset;\n// uniform float vignette_darkness;\n\n// colorify\nuniform float colorify_opacity;\nuniform vec3 colorify_color;\n\nuniform float brightness;\nuniform float contrast;\n\n// rgb shift\nuniform float shift_amount;\nuniform float shift_angle;\n\n// glitch\nuniform int byp;//should we apply the glitch ?\nuniform sampler2D tDisp;\nuniform float amount;\nuniform float angle;\nuniform float seed;\nuniform float seed_x;\nuniform float seed_y;\nuniform float distortion_x;\nuniform float distortion_y;\nuniform float col_s;\n\n// grunge\nuniform sampler2D tGrunge;\n\nfloat blendColorBurn(float base, float blend) {\n  return (blend==0.0)?blend:max((1.0-((1.0-base)/blend)),0.0);\n}\n\nvec3 blendColorBurn(vec3 base, vec3 blend) {\n  return vec3(blendColorBurn(base.r,blend.r),blendColorBurn(base.g,blend.g),blendColorBurn(base.b,blend.b));\n}\n\nvec3 blendColorBurn(vec3 base, vec3 blend, float opacity) {\n  return (blendColorBurn(base, blend) * opacity + blend * (1.0 - opacity));\n}\n\nfloat rand(vec2 co){\n  return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}\n\nvoid main() {\n  vec4 col;\n  vec3 luma = vec3( 0.299, 0.587, 0.114 );\n\n  vec2 fragCoord = vUv * fxaa_resolution;\n  col = fxaa(tDiffuse, fragCoord, fxaa_resolution, v_rgbNW, v_rgbNE, v_rgbSW, v_rgbSE, v_rgbM);\n\n  // Brightness + Constrast\n  vec3 colorContrasted = (col.rgb) * contrast;\n  vec3 bright = colorContrasted + vec3(brightness, brightness, brightness);\n\n  col = vec4(bright, 1.0);\n\n  // RGB Shift\n  if (shift_amount > 0.0) {\n    vec2 offset = shift_amount * vec2( cos(shift_angle), sin(shift_angle));\n    vec4 cr = texture2D(tDiffuse, vUv + offset);\n    vec4 cga = texture2D(tDiffuse, vUv);\n    vec4 cb = texture2D(tDiffuse, vUv - offset);\n\n    col = vec4(cr.r, cga.g, cb.b, cga.a);\n  }\n\n  if(byp<1) {\n    vec2 p = vUv;\n    float xs = floor(gl_FragCoord.x / 0.5);\n    float ys = floor(gl_FragCoord.y / 0.5);\n    //based on staffantans glitch shader for unity https://github.com/staffantan/unityglitch\n    vec4 normal = texture2D (tDisp, p*seed*seed);\n    if(p.y<distortion_x+col_s && p.y>distortion_x-col_s*seed) {\n      if(seed_x>0.){\n        p.y = 1. - (p.y + distortion_y);\n      }\n      else {\n        p.y = distortion_y;\n      }\n    }\n    if(p.x<distortion_y+col_s && p.x>distortion_y-col_s*seed) {\n      if(seed_y>0.){\n        p.x=distortion_x;\n      }\n      else {\n        p.x = 1. - (p.x + distortion_x);\n      }\n    }\n    p.x+=normal.x*seed_x*(seed/5.);\n    p.y+=normal.y*seed_y*(seed/5.);\n    //base from RGB shift shader\n    vec2 offset = amount * vec2( cos(angle), sin(angle));\n    vec4 cr = texture2D(tDiffuse, p + offset);\n    vec4 cga = texture2D(tDiffuse, p);\n    vec4 cb = texture2D(tDiffuse, p - offset);\n    col = vec4(cr.r, cga.g, cb.b, cga.a);\n    //add noise\n    vec4 snow = 200.*amount*vec4(rand(vec2(xs * seed,ys * seed*50.))*0.2);\n    col = col+ snow;\n  }\n\n  // Eskil's vignette\n  //col = texture2D( base, vUv ); //tmp\n  vec2 uv = ( vUv - vec2( 0.5 ) ) * vec2( vignette_offset );\n  // col = vec4( mix( col.rgb, vec3( 1.0 - vignette_darkness ), dot( uv, uv ) ), col.a );\n  col = vec4( mix( col.rgb, vec3( 1.0 ), dot( uv, uv ) ), col.a );\n\n  // Colorify\n  //vec3 luma = vec3( 0.299, 0.587, 0.114 ); //luma is already declared by fxaa\n  float v = dot( col.xyz, luma );\n\n  vec3 finalColor = vec3(\n      (colorify_opacity * v * colorify_color.x) + ((1.0 - colorify_opacity) * col.x),\n      (colorify_opacity * v * colorify_color.y) + ((1.0 - colorify_opacity) * col.y),\n      (colorify_opacity * v * colorify_color.z) + ((1.0 - colorify_opacity) * col.z)\n  );\n\n  col = vec4( finalColor, col.w );\n\n  vec2 tLookup = vUv;\n\n  if (fxaa_resolution.x < 600.0) {\n    tLookup.x /= 2.0;\n  }\n\n  vec4 texture_g = texture2D(tGrunge, tLookup);\n  gl_FragColor = vec4(blendColorBurn(texture_g.rgb, col.rgb, 0.15), 1.0);\n}\n"
                    }
                }
            }]),
            t
        }();
        e.exports = s
    }
    , {
        "../../Dispatcher/Dispatcher": 23,
        "../../Helpers/Deferred": 54,
        "./PostProcessingPass": 80,
        "./addons/CopyShader": 85,
        "./addons/EffectComposer": 87,
        "./addons/MaskPass": 88,
        "./addons/RenderPass": 89,
        "./addons/ShaderPass": 90
    }],
    80: [function(t, e, n) {
        "use strict";
        e.exports = function(t) {
            t.PostProcessingPass = function(e, n) {
                this.uniforms = t.UniformsUtils.clone(e.uniforms),
                void 0 == n && (n = 64),
                this.uniforms.tDisp.value = this.generateHeightmap(n),
                this.uniforms.byp.value = 1,
                this.material = new t.ShaderMaterial({
                    uniforms: this.uniforms,
                    vertexShader: e.vertexShader,
                    fragmentShader: e.fragmentShader
                }),
                this.material.uniforms.tGrunge = {
                    type: "t",
                    value: (new t.TextureLoader).load("images/textures/grunge-a094ace9bf.jpg")
                },
                this.material.needsUpdate = !0,
                this.enabled = !0,
                this.renderToScreen = !1,
                this.needsSwap = !0,
                this.camera = new t.OrthographicCamera((-1),1,1,(-1),0,1),
                this.scene = new t.Scene,
                this.quad = new t.Mesh(new t.PlaneBufferGeometry(2,2),null ),
                this.scene.add(this.quad),
                this.goWild = !1,
                this.curF = 0,
                this.generateTrigger()
            }
            ,
            t.PostProcessingPass.prototype = {
                render: function(e, n, r, i) {
                    this.uniforms.tDiffuse.value = r,
                    0 === this.uniforms.byp.value && (this.uniforms.seed.value = Math.random(),
                    this.curF % this.randX == 0 || 1 == this.goWild ? (this.uniforms.amount.value = Math.random() / 30,
                    this.uniforms.angle.value = t.Math.randFloat(-Math.PI, Math.PI),
                    this.uniforms.seed_x.value = t.Math.randFloat(-1, 1),
                    this.uniforms.seed_y.value = t.Math.randFloat(-1, 1),
                    this.uniforms.distortion_x.value = t.Math.randFloat(0, 1),
                    this.uniforms.distortion_y.value = t.Math.randFloat(0, 1),
                    this.curF = 0,
                    this.generateTrigger()) : (this.uniforms.amount.value = Math.random() / 90,
                    this.uniforms.angle.value = t.Math.randFloat(-Math.PI, Math.PI),
                    this.uniforms.distortion_x.value = t.Math.randFloat(0, 1),
                    this.uniforms.distortion_y.value = t.Math.randFloat(0, 1),
                    this.uniforms.seed_x.value = t.Math.randFloat(-.3, .3),
                    this.uniforms.seed_y.value = t.Math.randFloat(-.3, .3)),
                    this.curF++),
                    this.quad.material = this.material,
                    this.renderToScreen ? e.render(this.scene, this.camera) : e.render(this.scene, this.camera, n, !1)
                },
                generateTrigger: function() {
                    this.randX = t.Math.randInt(120, 240)
                },
                generateHeightmap: function(e) {
                    for (var n = new Float32Array(e * e * 3), r = e * e, i = 0; i < r; i++) {
                        var o = t.Math.randFloat(0, 1);
                        n[3 * i + 0] = o,
                        n[3 * i + 1] = o,
                        n[3 * i + 2] = o
                    }
                    var a = new t.DataTexture(n,e,e,t.RGBFormat,t.FloatType);
                    return a.needsUpdate = !0,
                    a
                }
            }
        }
    }
    , {}],
    81: [function(t, e, n) {
        "use strict";
        function r(t, e) {
            if (!(t instanceof e))
                throw new TypeError("Cannot call a class as a function")
        }
        var i = function() {
            function t(t, e) {
                for (var n = 0; n < e.length; n++) {
                    var r = e[n];
                    r.enumerable = r.enumerable || !1,
                    r.configurable = !0,
                    "value"in r && (r.writable = !0),
                    Object.defineProperty(t, r.key, r)
                }
            }
            return function(e, n, r) {
                return n && t(e.prototype, n),
                r && t(e, r),
                e
            }
        }()
          , o = t("../../Dispatcher/Dispatcher")
          , a = t("../../Helpers/Tracking")
          , s = function() {
            function t(e) {
                var n = this;
                return r(this, t),
                this.renderCtx = e,
                this.active = !1,
                this.isPaused = !1,
                this.filterStrength = 1.5,
                this.fps = 0,
                this.frameTime = 0,
                this.lastLoop = this.now,
                this.bind(),
                window.setTimeout(function() {
                    n.active = !0
                }, 3500),
                this
            }
            return i(t, [{
                key: "bind",
                value: function() {
                    var t = this;
                    o.on("GAME:play", this.adjust.bind(this)),
                    o.on("GAME:pause", function() {
                        t.isPaused = !0
                    }),
                    o.on("GAME:resume", function() {
                        window.setTimeout(function() {
                            t.isPaused = !1
                        }, 3e3)
                    })
                }
            }, {
                key: "frame",
                value: function() {
                    if (this.active && !this.isPaused) {
                        var t = this.now
                          , e = t - this.lastLoop;
                        this.frameTime += (e - this.frameTime) / this.filterStrength,
                        this.lastLoop = t,
                        this.fps = 1e3 / this.frameTime
                    }
                }
            }, {
                key: "adjust",
                value: function() {
                    if (this.active = !1,
                    a.send("IntroScreen", "GameSession", "FPS", Math.round(this.fps)),
                    !Modernizr.desktop)
                        return this.fps < 5 ? (this.lowPhone(),
                        void this.setPostprocess(!1)) : this.fps < 15 ? (this.setPlayerAnimation(!1),
                        this.lowPhone()) : this.fps < 20 ? this.lowPhone() : this.fps < 30 ? this.mediumPhone() : void 0
                }
            }, {
                key: "mediumPhone",
                value: function() {
                    this.setViewport(1.1)
                }
            }, {
                key: "lowPhone",
                value: function() {
                    this.setViewport(1.8),
                    this.setSpeedTunnel(!1)
                }
            }, {
                key: "setPlayerAnimation",
                value: function() {
                    var t = arguments.length <= 0 || void 0 === arguments[0] || arguments[0];
                    this.renderCtx.Player.isAnimated = t
                }
            }, {
                key: "setSpeedTunnel",
                value: function() {
                    var t = arguments.length <= 0 || void 0 === arguments[0] || arguments[0];
                    this.renderCtx.DecorManager.setSpeedTunnel(t)
                }
            }, {
                key: "setPostprocess",
                value: function() {
                    var t = arguments.length <= 0 || void 0 === arguments[0] || arguments[0];
                    this.renderCtx.postProcessingEnabled = t
                }
            }, {
                key: "setViewport",
                value: function() {
                    var t = arguments.length <= 0 || void 0 === arguments[0] ? 1.5 : arguments[0];
                    this.renderCtx.deltaViewport = t,
                    this.renderCtx.setContainerSize(),
                    this.renderCtx.onResize()
                }
            }, {
                key: "disableTommie",
                value: function() {}
            }, {
                key: "now",
                get: function() {
                    return window.performance.now()
                }
            }]),
            t
        }();
        e.exports = s
    }
    , {
        "../../Dispatcher/Dispatcher": 23,
        "../../Helpers/Tracking": 60
    }],
    82: [function(t, e, n) {
        "use strict";
        function r(t, e) {
            if (!(t instanceof e))
                throw new TypeError("Cannot call a class as a function")
        }
        var i = function() {
            function t(t, e) {
                for (var n = 0; n < e.length; n++) {
                    var r = e[n];
                    r.enumerable = r.enumerable || !1,
                    r.configurable = !0,
                    "value"in r && (r.writable = !0),
                    Object.defineProperty(t, r.key, r)
                }
            }
            return function(e, n, r) {
                return n && t(e.prototype, n),
                r && t(e, r),
                e
            }
        }()
          , o = t("../../Dispatcher/Dispatcher")
          , a = function() {
            function t(e) {
                return r(this, t),
                this.renderCtx = e,
                this.texture = (new THREE.TextureLoader).load("images/textures/stage-5ddfccfec9.png"),
                this.geometry = new THREE.PlaneGeometry(201,108.5),
                this.material = new THREE.RawShaderMaterial({
                    vertexShader: "precision mediump float;\nprecision mediump int;\n#define GLSLIFY 1\n\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform sampler2D tDisplacement;\n\nattribute vec3 position;\nattribute vec2 uv;\nattribute vec3 normal;\n\nvarying vec2 vUv;\n\nvoid main() {\n  vUv = uv;\n\n  //vec3 transformed = vec3( position );\n  //transformed += normal * ( texture2D( tDisplacement, uv ).x * 200.0 + 0.4 );\n\n  gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}\n",
                    fragmentShader: "precision mediump float;\nprecision mediump int;\n#define GLSLIFY 1\n\nuniform sampler2D tTexture;\nuniform float opacity;\n\nvarying vec3 worldPosition;\nvarying vec2 vUv;\n\nvoid main() {\n  vec4 t = texture2D(tTexture, vUv);\n\n  t.a *= opacity;\n\n  gl_FragColor = t;\n}\n",
                    transparent: !0,
                    uniforms: {
                        tTexture: {
                            type: "t",
                            value: this.texture
                        },
                        opacity: {
                            type: "f",
                            value: 0
                        }
                    }
                }),
                this.material.fog = !1,
                this.mesh = new THREE.Mesh(this.geometry,this.material),
                this.mesh.scale.set(1.35, 1.35, 1.35),
                this.mesh.position.y = 30,
                this.mesh.position.z = 700,
                this.mesh.rotation.y = -Math.PI,
                this.mesh.name = "Stage",
                this.mesh.renderOrder = 0,
                this._updateBind = this.update.bind(this),
                this.renderCtx.sphereCamera.add(this.mesh),
                this.bind(),
                this.update(),
                this
            }
            return i(t, [{
                key: "bind",
                value: function() {
                    o.on("GAME:tutorialEnd", this.onTutorialEnd.bind(this))
                }
            }, {
                key: "update",
                value: function() {
                    window.requestAnimationFrame(this._updateBind),
                    this.setPosition()
                }
            }, {
                key: "onTutorialEnd",
                value: function() {
                    TweenLite.to(this.material.uniforms.opacity, 2, {
                        value: 1
                    })
                }
            }, {
                key: "setPosition",
                value: function() {
                    var t = this.mesh.position.z / 749
                      , e = this.renderCtx.LaneManager
                      , n = this.renderCtx.Game._curveProgress + t
                      , r = "currentDataSet"
                      , i = e.lanes.length
                      , o = -(1 / 0);
                    n > 1 && (n -= 1,
                    r = "nextDataSet");
                    for (var a = 0; a < i; a++) {
                        var s = e.lanes[a]
                          , h = s[r].curve
                          , u = h.getPoint(n);
                        u.y > o && (o = u.y)
                    }
                    var l = 50 + (o - this.renderCtx.sphereCamera.position.y);
                    this.mesh.position.y = Math.max(50, l)
                }
            }]),
            t
        }();
        e.exports = a
    }
    , {
        "../../Dispatcher/Dispatcher": 23
    }],
    83: [function(t, e, n) {
        "use strict";
        var r = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
            return typeof t
        }
        : function(t) {
            return t && "function" == typeof Symbol && t.constructor === Symbol ? "symbol" : typeof t;
        }
          , i = function() {
            function t(t, e, n) {
                var r = document.createElement(t);
                return r.id = e,
                r.style.cssText = n,
                r
            }
            function e(e, n, r) {
                var i = t("div", e, "padding:0 0 3px 3px;text-align:left;background:" + r)
                  , o = t("div", e + "Text", "font-family:Helvetica,Arial,sans-serif;font-size:9px;font-weight:bold;line-height:15px;color:" + n);
                o.innerHTML = e.toUpperCase(),
                i.appendChild(o);
                var a = t("div", e + "Graph", "width:74px;height:30px;background:" + n);
                i.appendChild(a);
                for (var s = 0; s < 74; s++)
                    a.appendChild(t("span", "", "width:1px;height:30px;float:left;opacity:0.9;background:" + r));
                return i
            }
            function n(t) {
                for (var e = u.children, n = 0; n < e.length; n++)
                    e[n].style.display = n === t ? "block" : "none";
                h = t
            }
            function r(t, e) {
                var n = t.appendChild(t.firstChild);
                n.style.height = Math.min(30, 30 - 30 * e) + "px"
            }
            var i = self.performance && self.performance.now ? self.performance.now.bind(performance) : Date.now
              , o = i()
              , a = o
              , s = 0
              , h = 0
              , u = t("div", "stats", "width:80px;opacity:0.9;cursor:pointer");
            u.addEventListener("mousedown", function(t) {
                t.preventDefault(),
                n(++h % u.children.length)
            }, !1);
            var l = 0
              , c = 1 / 0
              , p = 0
              , f = e("fps", "#0ff", "#002")
              , d = f.children[0]
              , m = f.children[1];
            u.appendChild(f);
            var v = 0
              , g = 1 / 0
              , y = 0
              , _ = e("ms", "#0f0", "#020")
              , x = _.children[0]
              , b = _.children[1];
            if (u.appendChild(_),
            self.performance && self.performance.memory) {
                var w = 0
                  , E = 1 / 0
                  , S = 0
                  , T = e("mb", "#f08", "#201")
                  , M = T.children[0]
                  , C = T.children[1];
                u.appendChild(T)
            }
            return n(h),
            {
                REVISION: 14,
                domElement: u,
                setMode: n,
                begin: function() {
                    o = i()
                },
                end: function() {
                    var t = i();
                    if (v = t - o,
                    g = Math.min(g, v),
                    y = Math.max(y, v),
                    x.textContent = (0 | v) + " MS (" + (0 | g) + "-" + (0 | y) + ")",
                    r(b, v / 200),
                    s++,
                    t > a + 1e3 && (l = Math.round(1e3 * s / (t - a)),
                    c = Math.min(c, l),
                    p = Math.max(p, l),
                    d.textContent = l + " FPS (" + c + "-" + p + ")",
                    r(m, l / 100),
                    a = t,
                    s = 0,
                    void 0 !== w)) {
                        var e = performance.memory.usedJSHeapSize
                          , n = performance.memory.jsHeapSizeLimit;
                        w = Math.round(9.54e-7 * e),
                        E = Math.min(E, w),
                        S = Math.max(S, w),
                        M.textContent = w + " MB (" + E + "-" + S + ")",
                        r(C, e / n)
                    }
                    return t
                },
                update: function() {
                    o = this.end()
                }
            }
        }
        ;
        "object" === ("undefined" == typeof e ? "undefined" : r(e)) && (e.exports = i)
    }
    , {}],
    84: [function(t, e, n) {
        (function(n) {
            "use strict";
            function r(t, e) {
                if (!(t instanceof e))
                    throw new TypeError("Cannot call a class as a function")
            }
            var i = function() {
                function t(t, e) {
                    for (var n = 0; n < e.length; n++) {
                        var r = e[n];
                        r.enumerable = r.enumerable || !1,
                        r.configurable = !0,
                        "value"in r && (r.writable = !0),
                        Object.defineProperty(t, r.key, r)
                    }
                }
                return function(e, n, r) {
                    return n && t(e.prototype, n),
                    r && t(e, r),
                    e
                }
            }();
            n.THREE = t("three.js");
            var o = t("lodash")
              , a = t("../../Game/Game")
              , s = t("../../Dispatcher/Dispatcher")
              , h = t("./QualityAdjust")
              , u = t("./Colors")
              , l = t("./LaneManager")
              , c = t("./DecorManager")
              , p = t("./PostProcess")
              , f = t("./MoveCamera")
              , d = t("./Player")
              , m = t("./Hud")
              , v = t("./Stage")
              , g = Math.PI
              , y = t("./Stats")
              , _ = function() {
                function t() {
                    r(this, t),
                    this.Game = a,
                    this.canvasContainer = document.getElementById("canvas"),
                    this.deltaViewport = 1,
                    this.dpr = window.devicePixelRatio || 1,
                    this.postProcessingEnabled = !0,
                    this.setContainerSize(),
                    this.t = 0,
                    this._renderBind = this.render.bind(this),
                    this.scene = new THREE.Scene,
                    this.scene.fog = new THREE.FogExp2(u.getColor("givry"),.0025),
                    this.initCamera(),
                    this.initRenderer(),
                    this.initLight(),
                    this.initPlayer(),
                    Modernizr.desktop || (this.Hud = new m(this)),
                    this.QualityAdjust = new h(this),
                    this.PostProcess = new p(this),
                    this.LaneManager = new l(this),
                    this.LaneManager.init(),
                    this.DecorManager = new c(this),
                    this.DecorManager.init(),
                    this.Stage = new v(this),
                    this.showStats = !1,
                    this.showStats && this.initStats()
                }
                return i(t, [{
                    key: "init",
                    value: function() {
                        this.bind(),
                        this.render(),
                        this.onResize(),
                        this.canvasContainer.appendChild(this.renderer.domElement);
                        var t = this.onResize.bind(this)
                          , e = navigator.userAgent.match(/FxiOS/);
                        Modernizr.ios && (Modernizr.chrome || e) && (t = o.debounce(this.onResize.bind(this), 200)),
                        window.addEventListener("resize", t)
                    }
                }, {
                    key: "bind",
                    value: function() {
                        s.on("GAME:play", this.onPlay.bind(this)),
                        s.on("GAME:fatal", this.onGameOver.bind(this)),
                        s.on("GAME:replay", this.reset.bind(this))
                    }
                }, {
                    key: "reset",
                    value: function() {
                        this.LaneManager.reset(),
                        this.DecorManager.reset(),
                        this.resetCameraPosition()
                    }
                }, {
                    key: "render",
                    value: function() {
                        return window.requestAnimationFrame(this._renderBind),
                        this.showStats && this.stats.begin(),
                        this.t++,
                        !Modernizr.desktop && this.Game.isGameOver ? void (this.showStats && this.stats.end()) : (this.Game.isInit && !this.Game.isPaused && this.LaneManager.update(),
                        this.Game.isGameOver || this.DecorManager && this.DecorManager.update(),
                        this.Player.update(),
                        this.postProcessingEnabled ? this.PostProcess.update() : this.renderer.render(this.scene, this.camera),
                        this.Hud && this.Hud.ready && this.renderer.render(this.Hud.scene, this.Hud.camera),
                        this.Game.isInit || (this.sphereCamera.position.z += 2),
                        this.QualityAdjust.frame(),
                        void (this.showStats && this.stats.end()))
                    }
                }, {
                    key: "setContainerSize",
                    value: function() {
                        if (this.width = this.canvasContainer.clientWidth,
                        this.height = this.canvasContainer.clientHeight,
                        1 !== this.deltaViewport) {
                            var t = this.deltaViewport;
                            this.width /= t,
                            this.height /= t,
                            TweenLite.set(this.canvasContainer, {
                                force3D: !0,
                                scale: t,
                                transformOrigin: "0 0"
                            })
                        }
                    }
                }, {
                    key: "onResize",
                    value: function() {
                        this.setContainerSize();
                        var t = this.width / this.height;
                        this.renderer.setSize(this.width, this.height),
                        this.camera.aspect = t,
                        this.camera.updateProjectionMatrix(),
                        this.PostProcess.setAntialiasingResolution(),
                        this.Hud && this.Hud.ready && this.Hud.onResize()
                    }
                }, {
                    key: "resetCameraPosition",
                    value: function() {
                        this.camera.position.set(0, 0, 0),
                        this.camera.lookAt(new THREE.Vector3(0,0,10)),
                        Modernizr.desktop || (this.camera.position.set(0, 0, 50),
                        this.camera.lookAt(new THREE.Vector3(0,0,60)))
                    }
                }, {
                    key: "initCamera",
                    value: function() {
                        var t = 50
                          , e = 1
                          , n = 2e3;
                        this.camera = new THREE.PerspectiveCamera(t,this.width / this.height,e,n),
                        this.resetCameraPosition(),
                        this.camera.rotation.x = -(1.5 * g),
                        this.sphereCamera = new THREE.Group,
                        this.sphereCamera.name = "sphere",
                        this.sphereCamera.add(this.camera),
                        this.scene.add(this.sphereCamera)
                    }
                }, {
                    key: "initRenderer",
                    value: function() {
                        this.renderer = new THREE.WebGLRenderer({
                            alpha: !1,
                            antialias: !1
                        }),
                        this.renderer.autoClear = !1,
                        this.renderer.setSize(this.width, this.height),
                        this.renderer.setClearColor(u.getColor("givry")),
                        this.renderer.shadowMap.enabled = !0
                    }
                }, {
                    key: "initDebug",
                    value: function() {
                        this.output = document.createElement("div"),
                        this.output.style.position = "absolute",
                        this.output.style.top = "48px",
                        this.output.style.left = "0px",
                        this.output.style.width = "80px",
                        this.output.style.padding = ".5em 1em",
                        this.output.style.backgroundColor = "green",
                        this.output.style.color = "white",
                        this.output.style.fontSize = ".6em",
                        this.output.innerHTML = this.renderer.getPrecision(),
                        document.body.appendChild(this.output)
                    }
                }, {
                    key: "initStats",
                    value: function() {
                        this.stats = new y,
                        this.stats.setMode(0),
                        this.stats.domElement.style.position = "absolute",
                        this.stats.domElement.style.left = "0px",
                        this.stats.domElement.style.top = "0px",
                        document.body.appendChild(this.stats.domElement)
                    }
                }, {
                    key: "initLight",
                    value: function() {
                        return this.desktopLights()
                    }
                }, {
                    key: "desktopLights",
                    value: function() {
                        var t = new THREE.HemisphereLight(16777215,16777215,1);
                        this.scene.add(t);
                        var e = new THREE.DirectionalLight(16777215,.4);
                        e.position.set(20, 100, -5),
                        e.castShadow = !0,
                        e.shadow.mapSize.width = e.shadow.mapSize.height = 2048,
                        this.scene.add(e)
                    }
                }, {
                    key: "initPlayer",
                    value: function() {
                        this.Player = new d(this);
                        var t = this.Player.mesh;
                        t.position.z = 10,
                        t.position.y = -2.2,
                        t.rotation.y = -g,
                        t.scale.x = t.scale.y = t.scale.z = .18,
                        Modernizr.desktop || (t.position.z = 60),
                        this.sphereCamera.add(t)
                    }
                }, {
                    key: "updateShadows",
                    value: function() {
                        this.scene.traverse(function(t) {
                            t instanceof THREE.Mesh
                        })
                    }
                }, {
                    key: "onPlay",
                    value: function() {
                        TweenLite.to(this.camera.rotation, 2, {
                            x: -g
                        })
                    }
                }, {
                    key: "onGameOver",
                    value: function() {
                        var t = arguments.length <= 0 || void 0 === arguments[0] ? 1 : arguments[0];
                        return 1 === t ? this.onFatalHole() : this.onFatalInstrument()
                    }
                }, {
                    key: "onFatalHole",
                    value: function() {
                        var t = this
                          , e = 2
                          , n = Power3.easeIn
                          , r = this.camera.position
                          , i = new f(this.camera,[new THREE.Vector3(r.x,r.y + 0,r.z + 0), new THREE.Vector3(r.x,r.y + 1,r.z + 50), new THREE.Vector3(r.x,r.y + -60,r.z + 60), new THREE.Vector3(r.x,r.y + -300,r.z + 60)])
                          , a = this.camera.rotation.z;
                        TweenLite.to(this.camera.rotation, e, {
                            ease: n,
                            x: -(1.25 * g),
                            z: o.random(a - .3, a + .3)
                        }),
                        i.animate(e, n).then(function() {
                            s.emit("GAME:gameover", t.Game.currentScore)
                        }),
                        s.emit("POSTPROCESS:vignette", 2, 1, 2),
                        s.emit("POSTPROCESS:colorify", .8, 16777215, 2)
                    }
                }, {
                    key: "onFatalInstrument",
                    value: function() {
                        var t = this
                          , e = this.camera.position
                          , n = new TimelineLite({
                            onComplete: function() {
                                s.emit("GAME:gameover", t.Game.currentScore)
                            }
                        });
                        n.add("start"),
                        n.to(e, 1, {
                            z: "-=35"
                        }, "start"),
                        s.emit("POSTPROCESS:enableGlitch"),
                        s.emit("POSTPROCESS:colorify", .8, 16777215, 2),
                        s.emit("POSTPROCESS:vignette", 3.5, 1, 2)
                    }
                }]),
                t
            }()
              , x = new _;
            a.WebGLRender = x,
            e.exports = x
        }
        ).call(this, "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {})
    }
    , {
        "../../Dispatcher/Dispatcher": 23,
        "../../Game/Game": 29,
        "./Colors": 63,
        "./DecorManager": 64,
        "./Hud": 65,
        "./LaneManager": 76,
        "./MoveCamera": 77,
        "./Player": 78,
        "./PostProcess": 79,
        "./QualityAdjust": 81,
        "./Stage": 82,
        "./Stats": 83,
        lodash: 5,
        "three.js": 19
    }],
    85: [function(t, e, n) {
        "use strict";
        e.exports = function(t) {
            t.CopyShader = {
                uniforms: {
                    tDiffuse: {
                        type: "t",
                        value: null
                    },
                    opacity: {
                        type: "f",
                        value: 1
                    }
                },
                vertexShader: ["varying vec2 vUv;", "void main() {", "vUv = uv;", "gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );", "}"].join("\n"),
                fragmentShader: ["uniform float opacity;", "uniform sampler2D tDiffuse;", "varying vec2 vUv;", "void main() {", "vec4 texel = texture2D( tDiffuse, vUv );", "gl_FragColor = opacity * texel;", "}"].join("\n")
            }
        }
    }
    , {}],
    86: [function(t, e, n) {
        "use strict";
        e.exports = function(t) {
            var e = {
                matShininess: 0,
                matSpecular: 0,
                flatshadeGeometry: function(e) {
                    e.computeFaceNormals();
                    for (var n = 0; n < e.faces.length; n++)
                        e.faces[n].vertexNormals = [];
                    e = (new t.BufferGeometry).fromGeometry(e)
                },
                RandomClosedMesh: function(n, r, i, o, a) {
                    for (var s = new t.Shape, h = 2 * Math.PI / n, u = {}, l = 0; l < n; l++) {
                        var c = h * l + .1 * Math.random()
                          , p = r + Math.random() * (i - r)
                          , f = Math.cos(c) * p
                          , d = Math.sin(c) * p;
                        0 == l ? (u = {
                            x: f,
                            z: d
                        },
                        s.moveTo(f, d)) : s.lineTo(f, d)
                    }
                    s.lineTo(u.x, u.z);
                    var m = {
                        amount: o,
                        bevelEnabled: !1
                    }
                      , v = new t.ExtrudeGeometry(s,m);
                    return e.flatshadeGeometry(v),
                    mesh = new t.Mesh(v,new t.MeshLambertMaterial({
                        color: a
                    })),
                    mesh
                },
                TriMesh: function(n, r, i, o, a) {
                    var s = new t.Shape;
                    s.moveTo(-n / 2, 0),
                    s.lineTo(0, r),
                    s.lineTo(n / 2, 0),
                    s.lineTo(-n / 2, 0);
                    var h, u = new t.MeshLambertMaterial({
                        color: o
                    });
                    if (0 === i)
                        h = new t.ShapeGeometry(s),
                        u.side = t.DoubleSide;
                    else {
                        var l = {
                            amount: i,
                            bevelEnabled: !1
                        };
                        h = new t.ExtrudeGeometry(s,l)
                    }
                    "down" == a && (h.applyMatrix((new t.Matrix4).makeRotationZ(Math.PI)),
                    h.applyMatrix((new t.Matrix4).makeTranslation(0, r, 0))),
                    e.flatshadeGeometry(h);
                    var c = new t.Mesh(h,u);
                    return c
                },
                PlaneMesh: function(n, r, i, o) {
                    var a = new t.MeshLambertMaterial({
                        color: o
                    })
                      , s = new t.PlaneGeometry(n,r,i,i);
                    e.flatshadeGeometry(s);
                    var h = new t.Mesh(s,a);
                    return h
                },
                DiamondMesh: function(n, r, i, o, a) {
                    var s = new t.Shape
                      , h = r * i;
                    s.moveTo(0, 0),
                    s.lineTo(-n / 2, h),
                    s.lineTo(0, r),
                    s.lineTo(n / 2, h),
                    s.lineTo(0, 0);
                    var u, l = new t.MeshLambertMaterial({
                        color: a
                    });
                    if (0 === o)
                        u = new t.ShapeGeometry(s),
                        l.side = t.DoubleSide;
                    else {
                        var c = {
                            amount: o,
                            bevelEnabled: !1
                        };
                        u = new t.ExtrudeGeometry(s,c)
                    }
                    e.flatshadeGeometry(u);
                    var p = new t.Mesh(u,l);
                    return p
                },
                RegPolyMesh: function(n, r, i, o, a) {
                    for (var s = new t.Shape, h = 2 * Math.PI / r, u = {}, l = 0; l < r; l++) {
                        var c = h * l
                          , p = Math.cos(c) * n
                          , f = Math.sin(c) * n;
                        0 == l ? (u = {
                            x: p,
                            y: f
                        },
                        s.moveTo(p, f)) : s.lineTo(p, f)
                    }
                    s.lineTo(u.x, u.y);
                    var d, m = new t.MeshLambertMaterial({
                        color: o
                    });
                    if (0 === i)
                        d = new t.ShapeGeometry(s),
                        m.side = t.DoubleSide;
                    else {
                        var v = {
                            amount: i,
                            bevelEnabled: !1
                        };
                        d = new t.ExtrudeGeometry(s,v)
                    }
                    d.applyMatrix((new t.Matrix4).makeRotationZ(-Math.PI / 2)),
                    a || d.applyMatrix((new t.Matrix4).makeTranslation(0, n, 0)),
                    e.flatshadeGeometry(d);
                    var g = new t.Mesh(d,m);
                    return g
                },
                RectMesh: function(n, r, i, o) {
                    var a = new t.Shape;
                    a.moveTo(-n / 2, 0),
                    a.lineTo(-n / 2, r),
                    a.lineTo(n / 2, r),
                    a.lineTo(n / 2, 0),
                    a.lineTo(-n / 2, 0);
                    var s, h = new t.MeshLambertMaterial({
                        color: o
                    });
                    if (0 === i)
                        s = new t.ShapeGeometry(a),
                        h.side = t.DoubleSide;
                    else {
                        var u = {
                            amount: i,
                            bevelEnabled: !1
                        };
                        s = new t.ExtrudeGeometry(a,u)
                    }
                    e.flatshadeGeometry(s);
                    var l = new t.Mesh(s,h);
                    return l
                },
                SphereMesh: function(n, r, i, o, a) {
                    var s = new t.SphereGeometry(n,r,i)
                      , h = new t.MeshLambertMaterial({
                        color: o
                    });
                    a || s.applyMatrix((new t.Matrix4).makeTranslation(0, n, 0)),
                    e.flatshadeGeometry(s);
                    var u = new t.Mesh(s,h);
                    return u
                },
                CubeMesh: function(n, r, i, o, a, s) {
                    var i, h = new t.CubeGeometry(n,r,i,1,1,1), u = new t.MeshLambertMaterial({
                        color: o
                    });
                    if (s) {
                        var l = new t.Vector3(n / 2,0,i / 2);
                        i = l.length(),
                        h.applyMatrix((new t.Matrix4).makeRotationZ(Math.PI / 4)),
                        h.applyMatrix((new t.Matrix4).makeRotationX(Math.PI / 4))
                    } else
                        i = r / 2;
                    a || h.applyMatrix((new t.Matrix4).makeTranslation(0, i, 0)),
                    e.flatshadeGeometry(h);
                    var c = new t.Mesh(h,u);
                    return c
                },
                CylinderMesh: function(n, r, i, o, a, s, h) {
                    var u = new t.CylinderGeometry(n,r,i,o,a)
                      , l = new t.MeshLambertMaterial({
                        color: s
                    });
                    h || u.applyMatrix((new t.Matrix4).makeTranslation(0, i / 2, 0)),
                    e.flatshadeGeometry(u);
                    var c = new t.Mesh(u,l);
                    return c
                },
                QuarterTorusMesh: function(n, r, i, o, a, s) {
                    var h, u, l = [], c = a / i;
                    for (h = 0; h < i + 1; h++) {
                        var p = Math.cos(-Math.PI / 2 - h * c) * n
                          , f = Math.sin(-Math.PI / 2 - h * c) * n;
                        l.push(new t.Vector3(p,f,0))
                    }
                    var d = new t.Shape;
                    c = 2 * Math.PI / o;
                    var m = {};
                    for (h = 0; h < o; h++) {
                        u = c * h;
                        var v = Math.cos(u) * r
                          , g = Math.sin(u) * r;
                        0 == h ? (m = {
                            x: v,
                            y: g
                        },
                        d.moveTo(v, g)) : d.lineTo(v, g)
                    }
                    d.lineTo(m.x, m.y);
                    var y = new t.CatmullRomCurve3(l)
                      , _ = {
                        steps: i,
                        bevelEnabled: !1,
                        extrudePath: y
                    }
                      , x = new t.ExtrudeGeometry(d,_);
                    x.applyMatrix((new t.Matrix4).makeTranslation(0, n, 0));
                    var b = new t.MeshLambertMaterial({
                        color: s
                    });
                    e.flatshadeGeometry(x);
                    var w = new t.Mesh(x,b);
                    return w
                },
                Lathe: function(n, r, i) {
                    var o, a, s, h, u = [];
                    for (o = 0; o < n.length; o++)
                        a = n[o].x,
                        s = n[o].z,
                        h = n[o].y,
                        u.push(new t.Vector3(a,s,h));
                    var l = new t.LatheGeometry(u,r);
                    l.applyMatrix((new t.Matrix4).makeRotationX(-Math.PI / 2));
                    var c = new t.MeshLambertMaterial({
                        color: i
                    });
                    e.flatshadeGeometry(l);
                    var p = new t.Mesh(l,c);
                    return p
                },
                Line: function(e, n, r, i) {
                    var i = i
                      , o = new t.Geometry;
                    if (i) {
                        var a = new t.SplineCurve3(e);
                        o.vertices = a.getPoints(20)
                    } else
                        for (var s = 0; s < e.length; s++) {
                            var h = e[s];
                            o.vertices.push(h)
                        }
                    var u = new t.LineBasicMaterial({
                        color: r,
                        linewidth: n
                    })
                      , l = new t.Line(o,u);
                    return l
                },
                CurvedPath: function(n, r, i) {
                    var o, a, s = new t.Geometry, h = new t.CatmullRomCurve3(n), u = new t.LineBasicMaterial({
                        color: i,
                        linewidth: r
                    }), l = 5, c = 2 * Math.PI / l, p = new t.Shape, f = {};
                    for (o = 0; o < l; o++) {
                        a = c * o;
                        var d = Math.cos(a) * r
                          , m = Math.sin(a) * r;
                        0 == o ? (f = {
                            x: d,
                            y: m
                        },
                        p.moveTo(d, m)) : p.lineTo(d, m)
                    }
                    p.lineTo(f.x, f.y);
                    var v = {
                        steps: 3,
                        bevelEnabled: !1,
                        extrudePath: h
                    }
                      , s = new t.ExtrudeGeometry(p,v)
                      , u = new t.MeshLambertMaterial({
                        color: i
                    });
                    e.flatshadeGeometry(s);
                    var g = new t.Mesh(s,u);
                    return g
                }
            };
            return e
        }
    }
    , {}],
    87: [function(t, e, n) {
        "use strict";
        e.exports = function(t) {
            t.EffectComposer = function(e, n) {
                if (this.renderer = e,
                void 0 === n) {
                    var r = e.getPixelRatio()
                      , i = Math.floor(e.context.canvas.width / r) || 1
                      , o = Math.floor(e.context.canvas.height / r) || 1
                      , a = {
                        minFilter: t.LinearFilter,
                        magFilter: t.LinearFilter,
                        format: t.RGBFormat,
                        stencilBuffer: !1
                    };
                    n = new t.WebGLRenderTarget(i,o,a)
                }
                this.renderTarget1 = n,
                this.renderTarget2 = n.clone(),
                this.writeBuffer = this.renderTarget1,
                this.readBuffer = this.renderTarget2,
                this.passes = [],
                void 0 === t.CopyShader && console.error("THREE.EffectComposer relies on THREE.CopyShader"),
                this.copyPass = new t.ShaderPass(t.CopyShader)
            }
            ,
            t.EffectComposer.prototype = {
                swapBuffers: function() {
                    var t = this.readBuffer;
                    this.readBuffer = this.writeBuffer,
                    this.writeBuffer = t
                },
                addPass: function(t) {
                    this.passes.push(t)
                },
                insertPass: function(t, e) {
                    this.passes.splice(e, 0, t)
                },
                render: function(e) {
                    this.writeBuffer = this.renderTarget1,
                    this.readBuffer = this.renderTarget2;
                    var n, r, i = !1, o = this.passes.length;
                    for (r = 0; r < o; r++)
                        if (n = this.passes[r],
                        n.enabled) {
                            if (n.render(this.renderer, this.writeBuffer, this.readBuffer, e, i),
                            n.needsSwap) {
                                if (i) {
                                    var a = this.renderer.context;
                                    a.stencilFunc(a.NOTEQUAL, 1, 4294967295),
                                    this.copyPass.render(this.renderer, this.writeBuffer, this.readBuffer, e),
                                    a.stencilFunc(a.EQUAL, 1, 4294967295)
                                }
                                this.swapBuffers()
                            }
                            n instanceof t.MaskPass ? i = !0 : n instanceof t.ClearMaskPass && (i = !1)
                        }
                },
                reset: function(t) {
                    if (void 0 === t) {
                        t = this.renderTarget1.clone();
                        var e = this.renderer.getPixelRatio();
                        t.width = Math.floor(this.renderer.context.canvas.width / e),
                        t.height = Math.floor(this.renderer.context.canvas.height / e)
                    }
                    this.renderTarget1.dispose(),
                    this.renderTarget1 = t,
                    this.renderTarget2.dispose(),
                    this.renderTarget2 = t.clone(),
                    this.writeBuffer = this.renderTarget1,
                    this.readBuffer = this.renderTarget2
                },
                setSize: function(t, e) {
                    this.renderTarget1.setSize(t, e),
                    this.renderTarget2.setSize(t, e)
                }
            }
        }
    }
    , {}],
    88: [function(t, e, n) {
        "use strict";
        e.exports = function(t) {
            t.MaskPass = function(t, e) {
                this.scene = t,
                this.camera = e,
                this.enabled = !0,
                this.clear = !0,
                this.needsSwap = !1,
                this.inverse = !1
            }
            ,
            t.MaskPass.prototype = {
                render: function(t, e, n, r) {
                    var i = t.context;
                    i.colorMask(!1, !1, !1, !1),
                    i.depthMask(!1);
                    var o, a;
                    this.inverse ? (o = 0,
                    a = 1) : (o = 1,
                    a = 0),
                    i.enable(i.STENCIL_TEST),
                    i.stencilOp(i.REPLACE, i.REPLACE, i.REPLACE),
                    i.stencilFunc(i.ALWAYS, o, 4294967295),
                    i.clearStencil(a),
                    t.render(this.scene, this.camera, n, this.clear),
                    t.render(this.scene, this.camera, e, this.clear),
                    i.colorMask(!0, !0, !0, !0),
                    i.depthMask(!0),
                    i.stencilFunc(i.EQUAL, 1, 4294967295),
                    i.stencilOp(i.KEEP, i.KEEP, i.KEEP)
                }
            },
            t.ClearMaskPass = function() {
                this.enabled = !0
            }
            ,
            t.ClearMaskPass.prototype = {
                render: function(t, e, n, r) {
                    var i = t.context;
                    i.disable(i.STENCIL_TEST)
                }
            }
        }
    }
    , {}],
    89: [function(t, e, n) {
        "use strict";
        e.exports = function(t) {
            t.RenderPass = function(e, n, r, i, o) {
                this.scene = e,
                this.camera = n,
                this.overrideMaterial = r,
                this.clearColor = i,
                this.clearAlpha = void 0 !== o ? o : 1,
                this.oldClearColor = new t.Color,
                this.oldClearAlpha = 1,
                this.enabled = !0,
                this.clear = !0,
                this.needsSwap = !1
            }
            ,
            t.RenderPass.prototype = {
                render: function(t, e, n, r) {
                    this.scene.overrideMaterial = this.overrideMaterial,
                    this.clearColor && (this.oldClearColor.copy(t.getClearColor()),
                    this.oldClearAlpha = t.getClearAlpha(),
                    t.setClearColor(this.clearColor, this.clearAlpha)),
                    t.render(this.scene, this.camera, n, this.clear),
                    this.clearColor && t.setClearColor(this.oldClearColor, this.oldClearAlpha),
                    this.scene.overrideMaterial = null
                }
            }
        }
    }
    , {}],
    90: [function(t, e, n) {
        "use strict";
        e.exports = function(t) {
            t.ShaderPass = function(e, n) {
                this.textureID = void 0 !== n ? n : "tDiffuse",
                this.uniforms = t.UniformsUtils.clone(e.uniforms),
                this.material = new t.ShaderMaterial({
                    defines: e.defines || {},
                    uniforms: this.uniforms,
                    vertexShader: e.vertexShader,
                    fragmentShader: e.fragmentShader
                }),
                this.renderToScreen = !1,
                this.enabled = !0,
                this.needsSwap = !0,
                this.clear = !1,
                this.camera = new t.OrthographicCamera((-1),1,1,(-1),0,1),
                this.scene = new t.Scene,
                this.quad = new t.Mesh(new t.PlaneBufferGeometry(2,2),null ),
                this.scene.add(this.quad)
            }
            ,
            t.ShaderPass.prototype = {
                render: function(t, e, n, r) {
                    this.uniforms[this.textureID] && (this.uniforms[this.textureID].value = n),
                    this.quad.material = this.material,
                    this.renderToScreen ? t.render(this.scene, this.camera) : t.render(this.scene, this.camera, e, this.clear)
                }
            }
        }
    }
    , {}],
    91: [function(t, e, n) {
        "use strict";
        function r(t, e) {
            if (!(t instanceof e))
                throw new TypeError("Cannot call a class as a function")
        }
        var i = function() {
            function t(t, e) {
                for (var n = 0; n < e.length; n++) {
                    var r = e[n];
                    r.enumerable = r.enumerable || !1,
                    r.configurable = !0,
                    "value"in r && (r.writable = !0),
                    Object.defineProperty(t, r.key, r)
                }
            }
            return function(e, n, r) {
                return n && t(e.prototype, n),
                r && t(e, r),
                e
            }
        }()
          , o = t("lodash")
          , a = function() {
            function t(e, n, i, o, a) {
                return r(this, t),
                this.hidden = !1,
                this.isMoving = !0,
                this.isAnimated = !0,
                this.inverseSpeed = 0,
                this.halfCircle = 100,
                this.box = new THREE.Box3,
                this.posX = e,
                this.posY = n,
                this.posZ = i,
                this.renderCtx = a,
                this.checkIntersectionX = !1,
                this.checkIntersectionY = !1,
                this._one = new THREE.Vector3(1,1,1),
                this
            }
            return i(t, [{
                key: "append",
                value: function(t) {
                    this.mesh = t,
                    this.mesh.position.x = this.posX,
                    this.mesh.position.y = this.posY,
                    this.mesh.position.z = this.posZ,
                    this.updateBoxSize()
                }
            }, {
                key: "move",
                value: function() {}
            }, {
                key: "pointIntersect",
                value: function(t) {
                    if (!this.checkIntersectionX && !this.checkIntersectionY)
                        return !1;
                    var e = 3
                      , n = this.height || 20
                      , r = this.width || 20;
                    return r += e,
                    n += e,
                    !!(this.checkIntersectionX && t.x > this.mesh.position.x - r && t.x < this.mesh.position.x + r) || !!(this.checkIntersectionY && t.y > this.mesh.position.y - n && t.y < this.mesh.position.y + n)
                }
            }, {
                key: "collideWithLanes",
                value: function() {
                    if (this.renderCtx) {
                        if (this.hidden)
                            return !1;
                        if (!this.checkIntersectionX && !this.checkIntersectionY)
                            return !1;
                        for (var t = this.renderCtx.LaneManager, e = t.lanes, n = 0, r = e.length; n < r; n++) {
                            var i = e[n]
                              , o = i.nextDataSet.curve
                              , a = o.getPoint(this.renderCtx.Game._curveProgress);
                            if (this.pointIntersect(a))
                                return !0
                        }
                        return !1
                    }
                }
            }, {
                key: "updateBoxSize",
                value: function() {
                    this.box.setFromObject(this.mesh),
                    this.height = this.box.max.y - this.box.min.y,
                    this.width = this.box.max.x - this.box.min.x
                }
            }, {
                key: "mutateObject",
                value: function(t) {
                    this.hiddenChance();
                    var e = o.random(0, 3)
                      , n = o.random(-.5, .5);
                    this.speedZ = e,
                    this.originalSpeedZ = e,
                    this.speedX = n,
                    this.originalSpeedX = n
                }
            }, {
                key: "updateSpeed",
                value: function() {
                    if (this.renderCtx) {
                        var t = this.renderCtx.sphereCamera.position.z
                          , e = this.mesh.position.z;
                        if (!(e < t)) {
                            var n = this.renderCtx.LaneManager
                              , r = n.lanes
                              , i = "currentDataSet"
                              , o = this.renderCtx.Game._curveProgress + (e - t) / 749;
                            o > 1 && (o -= 1,
                            i = "nextDataSet"),
                            this.box.setFromCenterAndSize(this.mesh.position, this._one);
                            for (var a = 0, s = r.length; a < s; a++) {
                                var h = r[a]
                                  , u = h[i].curve
                                  , l = u.getPoint(o)
                                  , c = this.box.distanceToPoint(l);
                                if (c < 50) {
                                    var p = 50 / c;
                                    this.speedX = this.originalSpeedX * -p,
                                    this.speedZ = this.originalSpeedZ * -p
                                }
                            }
                        }
                    }
                }
            }, {
                key: "hiddenChance",
                value: function() {
                    var t = arguments.length <= 0 || void 0 === arguments[0] ? .4 : arguments[0];
                    this.hidden = Math.random() < t
                }
            }, {
                key: "getNewPosition",
                value: function(t) {
                    var e = Math.random() * -180 + 180
                      , n = Math.cos(e * (Math.PI / 180)) * this.halfCircle
                      , r = Math.sin(e * (Math.PI / 180)) * this.halfCircle;
                    return this.hidden ? {
                        x: 999999,
                        y: 0
                    } : {
                        x: n,
                        y: r
                    }
                }
            }, {
                key: "toggle",
                value: function() {
                    this.hidden = !this.hidden
                }
            }]),
            t
        }();
        e.exports = a
    }
    , {
        lodash: 5
    }],
    92: [function(t, e, n) {
        "use strict";
        function r(t, e) {
            if (!(t instanceof e))
                throw new TypeError("Cannot call a class as a function")
        }
        function i(t, e) {
            if (!t)
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return !e || "object" != typeof e && "function" != typeof e ? t : e
        }
        function o(t, e) {
            if ("function" != typeof e && null !== e)
                throw new TypeError("Super expression must either be null or a function, not " + typeof e);
            t.prototype = Object.create(e && e.prototype, {
                constructor: {
                    value: t,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                }
            }),
            e && (Object.setPrototypeOf ? Object.setPrototypeOf(t, e) : t.__proto__ = e)
        }
        var a = function() {
            function t(t, e) {
                for (var n = 0; n < e.length; n++) {
                    var r = e[n];
                    r.enumerable = r.enumerable || !1,
                    r.configurable = !0,
                    "value"in r && (r.writable = !0),
                    Object.defineProperty(t, r.key, r)
                }
            }
            return function(e, n, r) {
                return n && t(e.prototype, n),
                r && t(e, r),
                e
            }
        }()
          , s = (t("lodash"),
        t("./../../addons/CustomMeshFlat")(THREE))
          , h = t("./../../Colors")
          , u = t("./../DecorElement")
          , l = function(t) {
            function e(t, n, o, a, u) {
                var l;
                r(this, e);
                var c = i(this, Object.getPrototypeOf(e).call(this, t, n, o, a, u));
                c.rows = a.rows || 7,
                c.columns = a.columns || 7,
                c.radius = a.radius || 3,
                c.spacing = a.spacing || 6,
                c.color = h.getColor(a.color) || 16777215,
                c.rotationX = a.rotationX || Math.PI / 4,
                c.rotationY = a.rotationY || Math.PI / 4,
                c.power = a.power || .1,
                c.mesh = new THREE.Group,
                c.mesh.rotation.y = a.rotationX,
                c.mesh.rotation.x = a.rotationY,
                c.dots = [],
                c.center = {
                    x: (c.columns - .5) * c.spacing,
                    y: (c.rows - .5) * c.spacing
                },
                c.maxDist = Math.sqrt(c.center.x * c.center.x + c.center.y * c.center.y);
                for (var p = 0, f = c.columns * c.rows; p < f; p++) {
                    var d = new s.RegPolyMesh(c.radius,6,0,c.color,(!0))
                      , m = Math.floor(p / c.columns)
                      , v = m % 2 === 0 ? 0 : c.spacing;
                    d.position.x = v + p % c.columns * c.spacing * 2,
                    d.position.y = Math.floor(p / c.columns) * c.spacing * 2;
                    var g = c.center.x - d.position.x
                      , y = c.center.y - d.position.y
                      , _ = Math.sqrt(g * g + y * y);
                    d.userData.dist = _,
                    c.mesh.add(d),
                    c.dots.push(d)
                }
                return c.append(c.mesh),
                l = c,
                i(c, l)
            }
            return o(e, t),
            a(e, [{
                key: "animate",
                value: function(t) {
                    this.isAnimated && (this.updateSpeed(),
                    this.speedZ && (this.mesh.position.z += this.speedZ),
                    this.speedX && (this.mesh.position.x += this.speedX),
                    t % 32 === 0 && this.pulse(1))
                }
            }, {
                key: "pulse",
                value: function(t) {
                    this.power = t || 2,
                    this.anglePulse = 0,
                    this.center = {
                        x: 0,
                        y: 0
                    };
                    var e = this;
                    TweenMax.to(this, .2, {
                        anglePulse: Math.PI,
                        onUpdate: function() {
                            for (var t = 0, n = e.dots.length; t < n; t++) {
                                var r = e.dots[t];
                                r.position.z = Math.sin(e.anglePulse) * e.power * (e.maxDist + 3 - r.userData.dist)
                            }
                        }
                    })
                }
            }]),
            e
        }(u);
        e.exports = l
    }
    , {
        "./../../Colors": 63,
        "./../../addons/CustomMeshFlat": 86,
        "./../DecorElement": 91,
        lodash: 5
    }],
    93: [function(t, e, n) {
        "use strict";
        function r(t, e) {
            if (!(t instanceof e))
                throw new TypeError("Cannot call a class as a function")
        }
        function i(t, e) {
            if (!t)
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return !e || "object" != typeof e && "function" != typeof e ? t : e
        }
        function o(t, e) {
            if ("function" != typeof e && null !== e)
                throw new TypeError("Super expression must either be null or a function, not " + typeof e);
            t.prototype = Object.create(e && e.prototype, {
                constructor: {
                    value: t,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                }
            }),
            e && (Object.setPrototypeOf ? Object.setPrototypeOf(t, e) : t.__proto__ = e)
        }
        var a = function() {
            function t(t, e) {
                for (var n = 0; n < e.length; n++) {
                    var r = e[n];
                    r.enumerable = r.enumerable || !1,
                    r.configurable = !0,
                    "value"in r && (r.writable = !0),
                    Object.defineProperty(t, r.key, r)
                }
            }
            return function(e, n, r) {
                return n && t(e.prototype, n),
                r && t(e, r),
                e
            }
        }()
          , s = t("lodash")
          , h = t("./../../addons/CustomMeshFlat")(THREE)
          , u = t("./../../Colors")
          , l = t("./../DecorElement")
          , c = function(t) {
            function e(t, n, o, a, s) {
                var l;
                r(this, e);
                var c = i(this, Object.getPrototypeOf(e).call(this, t, n, o, a, s))
                  , p = new THREE.Group;
                return p.rotation.y = Math.PI / 4,
                c.triPlane = new h.RegPolyMesh(20,3,0,u.getColor("redDark"),(!0)),
                c.triStroke = new h.RegPolyMesh(18,3,0,u.getColor("blueLight"),(!0)),
                c.triStroke.position.z = 5,
                c.triStroke.rotation.z = .2,
                c.triStroke.material.wireframe = !0,
                c.triStroke.material.wireframeLinewidth = 2,
                c.pointLight = new THREE.PointLight(u.getColor("redDark"),30,30),
                c.pointLight.position.z = 10,
                c.pointLight.position.x = 10,
                c.pointLight.position.y = 10,
                p.add(c.triPlane),
                p.add(c.triStroke),
                p.add(c.pointLight),
                c.v0 = c.triPlane.geometry.vertices[0].clone(),
                c.v1 = c.triPlane.geometry.vertices[1].clone(),
                c.v2 = c.triPlane.geometry.vertices[2].clone(),
                c.initPositions = [c.v0, c.v1, c.v2],
                c.append(p),
                l = c,
                i(c, l)
            }
            return o(e, t),
            a(e, [{
                key: "animate",
                value: function(t) {
                    this.isAnimated && (this.updateSpeed(),
                    this.speedZ && (this.mesh.position.z += this.speedZ),
                    this.speedX && (this.mesh.position.x += this.speedX),
                    t % 32 === 0 && this.pulse(s.random(18, 25)))
                }
            }, {
                key: "pulse",
                value: function(t) {
                    for (var e = this, n = 0; n < 3; n++) {
                        var r = this.triPlane.geometry.vertices[n]
                          , i = this.triStroke.geometry.vertices[n]
                          , o = this.initPositions[n].x + Math.random() * t
                          , a = this.initPositions[n].y + Math.random() * t
                          , s = this.initPositions[n].z + Math.random() * t
                          , h = this.initPositions[n].x + Math.random() * t
                          , u = this.initPositions[n].y + Math.random() * t
                          , l = this.initPositions[n].z + Math.random() * t;
                        TweenMax.to(r, .6, {
                            x: o,
                            y: a,
                            z: s,
                            ease: Elastic.easeOut,
                            onUpdate: function() {
                                e.triPlane.geometry.verticesNeedUpdate = !0,
                                e.triPlane.geometry.normalsNeedUpdate = !0,
                                e.triPlane.geometry.colorsNeedUpdate = !0
                            }
                        }),
                        TweenMax.to(i, .6, {
                            x: h,
                            y: u,
                            z: l,
                            ease: Elastic.easeOut,
                            onUpdate: function() {
                                e.triStroke.geometry.verticesNeedUpdate = !0,
                                e.triStroke.geometry.normalsNeedUpdate = !0,
                                e.triStroke.geometry.colorsNeedUpdate = !0
                            }
                        })
                    }
                }
            }]),
            e
        }(l);
        e.exports = c
    }
    , {
        "./../../Colors": 63,
        "./../../addons/CustomMeshFlat": 86,
        "./../DecorElement": 91,
        lodash: 5
    }],
    94: [function(t, e, n) {
        "use strict";
        function r(t, e) {
            if (!(t instanceof e))
                throw new TypeError("Cannot call a class as a function")
        }
        function i(t, e) {
            if (!t)
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return !e || "object" != typeof e && "function" != typeof e ? t : e
        }
        function o(t, e) {
            if ("function" != typeof e && null !== e)
                throw new TypeError("Super expression must either be null or a function, not " + typeof e);
            t.prototype = Object.create(e && e.prototype, {
                constructor: {
                    value: t,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                }
            }),
            e && (Object.setPrototypeOf ? Object.setPrototypeOf(t, e) : t.__proto__ = e)
        }
        var a = function() {
            function t(t, e) {
                for (var n = 0; n < e.length; n++) {
                    var r = e[n];
                    r.enumerable = r.enumerable || !1,
                    r.configurable = !0,
                    "value"in r && (r.writable = !0),
                    Object.defineProperty(t, r.key, r)
                }
            }
            return function(e, n, r) {
                return n && t(e.prototype, n),
                r && t(e, r),
                e
            }
        }()
          , s = t("lodash")
          , h = t("./../../addons/CustomMeshFlat")(THREE)
          , u = t("./../../Colors")
          , l = t("./../DecorElement")
          , c = t("./Speaker")
          , p = function(t) {
            function e(t, n, o, a, s) {
                var l;
                r(this, e);
                var p = i(this, Object.getPrototypeOf(e).call(this, t, n, o, a, s));
                p.radius = a.radius || 20,
                p.height = a.height || 300,
                p.lightIntensity = a.lightIntensity || 1,
                p.rotationY = a.rotationY || Math.PI / 3,
                p.position = a.position || "left",
                p.originalRotationY = a.rotationY,
                p.checkIntersectionY = !1,
                p.checkIntersectionX = !0,
                p.mesh = new THREE.Group,
                p.mesh.name = "lightcolumn",
                p.mesh.rotation.y = p.rotationY;
                var f = 2 * Math.PI / 3
                  , d = Math.cos(f) * p.radius
                  , m = Math.sin(f) * p.radius
                  , v = p.height / 2
                  , g = new THREE.Geometry;
                g.vertices.push(new THREE.Vector3(p.radius,v + p.radius,0), new THREE.Vector3(d,v,m), new THREE.Vector3(d,v,(-m)), new THREE.Vector3(p.radius,(-v),0), new THREE.Vector3(d,(-v),m), new THREE.Vector3(d,(-v),(-m))),
                g.faces.push(new THREE.Face3(0,1,2), new THREE.Face3(0,3,5), new THREE.Face3(0,2,5), new THREE.Face3(1,2,4), new THREE.Face3(2,4,5), new THREE.Face3(0,1,3), new THREE.Face3(1,3,4), new THREE.Face3(3,4,5)),
                g.computeBoundingSphere();
                var y = new THREE.MeshLambertMaterial({
                    color: u.getColor("blueDark"),
                    side: THREE.DoubleSide
                });
                h.flatshadeGeometry(g),
                p.columnMesh = new THREE.Mesh(g,y);
                var _ = .5
                  , x = new THREE.MeshLambertMaterial({
                    color: u.getColor("redDark"),
                    side: THREE.DoubleSide
                })
                  , b = new THREE.MeshLambertMaterial({
                    color: u.getColor("redDark"),
                    side: THREE.DoubleSide,
                    opacity: .4,
                    transparent: !0
                })
                  , w = g.clone();
                w.applyMatrix((new THREE.Matrix4).makeScale(_, 1, _)),
                h.flatshadeGeometry(w),
                p.laserMesh = new THREE.Mesh(w,b);
                var E = new THREE.Geometry;
                return E.vertices.push(g.vertices[0].clone(), g.vertices[1].clone(), g.vertices[2].clone()),
                E.faces.push(new THREE.Face3(1,2,0)),
                E.applyMatrix((new THREE.Matrix4).makeTranslation(0, -v, 0)),
                E.applyMatrix((new THREE.Matrix4).makeScale(_, _, _)),
                h.flatshadeGeometry(E),
                p.laserBaseMesh = new THREE.Mesh(E,x),
                p.laserBaseMesh.position.y = -v - .5,
                p.pointLight = new THREE.PointLight(u.getColor("redDark"),20,30),
                p.pointLight.position.set(0, -v + 20, 0),
                p.speaker1 = new c(14,16),
                p.speaker1.mesh.position.x = d - 1,
                p.speaker1.mesh.position.y = .75 * v,
                p.speaker1.mesh.position.y += 15,
                p.speaker1.mesh.rotation.y = -Math.PI / 2,
                p.speaker2 = new c(14,12),
                p.speaker2.mesh.position.x = d - 1,
                p.speaker2.mesh.position.y = p.speaker1.mesh.position.y - 2 * p.speaker1.radius - 5,
                p.speaker2.mesh.position.y += 2,
                p.speaker2.mesh.rotation.y = -Math.PI / 2,
                p.mesh.add(p.columnMesh),
                p.mesh.add(p.speaker1.mesh),
                p.mesh.add(p.speaker2.mesh),
                p.lightMesh = new THREE.Group,
                p.lightMesh.position.y = 6 + p.height,
                p.mesh.add(p.lightMesh),
                p.lightMesh.add(p.laserMesh),
                p.lightMesh.add(p.laserBaseMesh),
                p.lightMesh.add(p.pointLight),
                p.append(p.mesh),
                l = p,
                i(p, l)
            }
            return o(e, t),
            a(e, [{
                key: "animate",
                value: function(t) {
                    this.isAnimated && (t % 16 === 0 && (this.speaker2.pulse(1.3),
                    this.speaker2.pulse(1.3)),
                    t % 16 === 4 && (this.speaker1.pulse(1.3),
                    this.speaker1.pulse(1.3)),
                    t % 32 === 0 && (this.pulse(.9),
                    this.pulse(.9)))
                }
            }, {
                key: "updateLight",
                value: function(t) {
                    this.laserBaseMesh.material.opacity = 2 * t,
                    this.laserMesh.material.opacity = t,
                    this.pointLight.intensity = 50 * t
                }
            }, {
                key: "pulse",
                value: function(t) {
                    var e = this;
                    this.lightIntensity = t,
                    this.laserMesh.position.y = 0,
                    this.updateLight(this.lightIntensity),
                    TweenMax.to(this, .3, {
                        lightIntensity: .1,
                        onUpdate: function() {
                            e.updateLight(e.lightIntensity)
                        }
                    }),
                    TweenMax.to(this.laserMesh.position, .2, {
                        y: -30 - this.height
                    })
                }
            }, {
                key: "getNewPosition",
                value: function(t) {
                    if (this.hidden)
                        return {
                            x: 999999,
                            y: 0
                        };
                    var e = "left" === this.position ? 5 : -5
                      , n = e * (t + 1);
                    return {
                        x: n,
                        y: s.random(-110, -80)
                    }
                }
            }, {
                key: "mutateObject",
                value: function() {
                    this.hiddenChance(.5);
                    var t = this.originalRotationY;
                    this.mesh.rotation.y = s.random(t - .5, t + .5);
                    var e = this.mesh.position.y
                      , n = this.mesh.rotation.y
                      , r = s.random(1, 4);
                    TweenLite.from(this.mesh.position, r, {
                        y: e - s.random(100, 150)
                    }),
                    TweenLite.from(this.mesh.rotation, r, {
                        y: n - s.random(Math.PI, Math.PI / 2)
                    })
                }
            }]),
            e
        }(l);
        e.exports = p
    }
    , {
        "./../../Colors": 63,
        "./../../addons/CustomMeshFlat": 86,
        "./../DecorElement": 91,
        "./Speaker": 99,
        lodash: 5
    }],
    95: [function(t, e, n) {
        "use strict";
        function r(t, e) {
            if (!(t instanceof e))
                throw new TypeError("Cannot call a class as a function")
        }
        function i(t, e) {
            if (!t)
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return !e || "object" != typeof e && "function" != typeof e ? t : e
        }
        function o(t, e) {
            if ("function" != typeof e && null !== e)
                throw new TypeError("Super expression must either be null or a function, not " + typeof e);
            t.prototype = Object.create(e && e.prototype, {
                constructor: {
                    value: t,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                }
            }),
            e && (Object.setPrototypeOf ? Object.setPrototypeOf(t, e) : t.__proto__ = e);
        }
        var a = function() {
            function t(t, e) {
                for (var n = 0; n < e.length; n++) {
                    var r = e[n];
                    r.enumerable = r.enumerable || !1,
                    r.configurable = !0,
                    "value"in r && (r.writable = !0),
                    Object.defineProperty(t, r.key, r)
                }
            }
            return function(e, n, r) {
                return n && t(e.prototype, n),
                r && t(e, r),
                e
            }
        }()
          , s = (t("lodash"),
        t("./../../addons/CustomMeshFlat")(THREE),
        t("./../../Colors"))
          , h = t("./../DecorElement")
          , u = function(t) {
            function e(t, n, o, a, h) {
                var u;
                r(this, e);
                var l = i(this, Object.getPrototypeOf(e).call(this, t, n, o, a, h));
                l.radius = a.radius || 20,
                l.depth = a.depth || 20,
                l.segments = a.segments || 3,
                l.linesCount = a.linesCount || 16,
                l.acuteness = a.acuteness || 2,
                l.color = s.getColor(a.color) || 16777215,
                l.speed = a.speed || .1,
                l.lineThickness = 2,
                l.mesh = new THREE.Group,
                l.mesh.rotation.y = Math.PI / 3,
                l.mesh.rotation.x = Math.PI / 3,
                l.lines = [],
                l.angle = 0,
                l.separation = 2 * l.radius / l.linesCount,
                l.angleStep = Math.PI / l.linesCount;
                var c = new THREE.LineBasicMaterial({
                    color: l.color,
                    linewidth: l.lineThickness
                })
                  , p = new THREE.CircleGeometry(l.radius,l.segments);
                p.vertices.shift();
                for (var f = 0, d = l.linesCount; f < d; f++) {
                    var m = c.clone()
                      , v = new THREE.Line(p,m);
                    l.mesh.add(v),
                    l.lines.push(v)
                }
                return l.meshUpdate(l.speed),
                l.append(l.mesh),
                u = l,
                i(l, u)
            }
            return o(e, t),
            a(e, [{
                key: "meshUpdate",
                value: function() {
                    this.angle += this.speed || .01;
                    for (var t = 0, e = this.linesCount; t < e; t++) {
                        var n = this.lines[t]
                          , r = Math.cos(this.angle + this.angleStep * t)
                          , i = Math.sin(this.angle + this.angleStep * t)
                          , o = Math.pow(i, this.acuteness);
                        i < 0 ? n.position.z = 1 - r * this.depth : n.position.z = r * this.depth,
                        n.scale.x = o,
                        n.scale.y = o,
                        n.scale.z = o,
                        this.lines.push(n),
                        this.mesh.add(n)
                    }
                }
            }, {
                key: "animate",
                value: function(t) {
                    this.isAnimated && (this.updateSpeed(),
                    this.speedZ && (this.mesh.position.z += this.speedZ),
                    this.speedX && (this.mesh.position.x += this.speedX),
                    this.meshUpdate())
                }
            }]),
            e
        }(h);
        e.exports = u
    }
    , {
        "./../../Colors": 63,
        "./../../addons/CustomMeshFlat": 86,
        "./../DecorElement": 91,
        lodash: 5
    }],
    96: [function(t, e, n) {
        "use strict";
        function r(t, e) {
            if (!(t instanceof e))
                throw new TypeError("Cannot call a class as a function")
        }
        var i = function() {
            function t(t, e) {
                for (var n = 0; n < e.length; n++) {
                    var r = e[n];
                    r.enumerable = r.enumerable || !1,
                    r.configurable = !0,
                    "value"in r && (r.writable = !0),
                    Object.defineProperty(t, r.key, r)
                }
            }
            return function(e, n, r) {
                return n && t(e.prototype, n),
                r && t(e, r),
                e
            }
        }()
          , o = (t("lodash"),
        t("./../../addons/CustomMeshFlat")(THREE))
          , a = t("./../../Colors")
          , s = function() {
            function t(e) {
                r(this, t),
                this.size = e.size || 20,
                this.color = a.getColor(e.color) || 16777215,
                this.stroked = e.stroked || !1,
                this.rotationZ = e.rotationZ || !1,
                this.speed = .01,
                this.power = .2;
                var n = new THREE.MeshLambertMaterial({
                    color: this.color,
                    wireframe: this.stroked,
                    wireframeLinewidth: 2
                })
                  , i = new THREE.TetrahedronGeometry(this.size,0);
                return o.flatshadeGeometry(i),
                this.mesh = new THREE.Mesh(i,n),
                this
            }
            return i(t, [{
                key: "rotate",
                value: function(t) {
                    this.speed = t || this.speed;
                    var e = this.speed
                      , n = 3 * this.speed
                      , r = this.rotationZ ? 5 * this.speed : 0;
                    this.mesh.rotation.x += e,
                    this.mesh.rotation.y += n,
                    this.mesh.rotation.z += r
                }
            }, {
                key: "pulse",
                value: function(t) {
                    this.power = t || this.power,
                    this.pulseAngle = 0;
                    var e = this;
                    TweenMax.to(this, .2, {
                        pulseAngle: Math.PI,
                        onUpdate: function() {
                            var t = 1 + Math.sin(e.pulseAngle) * e.power;
                            e.mesh.scale.set(t, t, t)
                        }
                    })
                }
            }]),
            t
        }();
        e.exports = s
    }
    , {
        "./../../Colors": 63,
        "./../../addons/CustomMeshFlat": 86,
        lodash: 5
    }],
    97: [function(t, e, n) {
        "use strict";
        function r(t, e) {
            if (!(t instanceof e))
                throw new TypeError("Cannot call a class as a function")
        }
        function i(t, e) {
            if (!t)
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return !e || "object" != typeof e && "function" != typeof e ? t : e
        }
        function o(t, e) {
            if ("function" != typeof e && null !== e)
                throw new TypeError("Super expression must either be null or a function, not " + typeof e);
            t.prototype = Object.create(e && e.prototype, {
                constructor: {
                    value: t,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                }
            }),
            e && (Object.setPrototypeOf ? Object.setPrototypeOf(t, e) : t.__proto__ = e)
        }
        var a = function() {
            function t(t, e) {
                for (var n = 0; n < e.length; n++) {
                    var r = e[n];
                    r.enumerable = r.enumerable || !1,
                    r.configurable = !0,
                    "value"in r && (r.writable = !0),
                    Object.defineProperty(t, r.key, r)
                }
            }
            return function(e, n, r) {
                return n && t(e.prototype, n),
                r && t(e, r),
                e
            }
        }()
          , s = (t("lodash"),
        t("./../../addons/CustomMeshFlat")(THREE),
        t("./../../Colors"),
        t("./../DecorElement"))
          , h = t("./Pyramid")
          , u = function(t) {
            function e(t, n, o, a, s) {
                var u;
                r(this, e);
                var l = i(this, Object.getPrototypeOf(e).call(this, t, n, o, a, s));
                l.rotationZ = a.rotationZ || !1,
                l.speed = .01,
                l.power = .2;
                var c = new THREE.Group;
                return l.pyramid = new h(a),
                c.add(l.pyramid.mesh),
                l.append(c),
                u = l,
                i(l, u)
            }
            return o(e, t),
            a(e, [{
                key: "animate",
                value: function(t) {
                    this.isAnimated && (this.updateSpeed(),
                    this.speedZ && (this.mesh.position.z += this.speedZ),
                    this.speedX && (this.mesh.position.x += this.speedX),
                    this.pyramid.rotate(),
                    t % 32 === 0 && this.pyramid.pulse(this.power))
                }
            }]),
            e
        }(s);
        e.exports = u
    }
    , {
        "./../../Colors": 63,
        "./../../addons/CustomMeshFlat": 86,
        "./../DecorElement": 91,
        "./Pyramid": 96,
        lodash: 5
    }],
    98: [function(t, e, n) {
        "use strict";
        function r(t, e) {
            if (!(t instanceof e))
                throw new TypeError("Cannot call a class as a function")
        }
        function i(t, e) {
            if (!t)
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return !e || "object" != typeof e && "function" != typeof e ? t : e
        }
        function o(t, e) {
            if ("function" != typeof e && null !== e)
                throw new TypeError("Super expression must either be null or a function, not " + typeof e);
            t.prototype = Object.create(e && e.prototype, {
                constructor: {
                    value: t,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                }
            }),
            e && (Object.setPrototypeOf ? Object.setPrototypeOf(t, e) : t.__proto__ = e)
        }
        var a = function() {
            function t(t, e) {
                for (var n = 0; n < e.length; n++) {
                    var r = e[n];
                    r.enumerable = r.enumerable || !1,
                    r.configurable = !0,
                    "value"in r && (r.writable = !0),
                    Object.defineProperty(t, r.key, r)
                }
            }
            return function(e, n, r) {
                return n && t(e.prototype, n),
                r && t(e, r),
                e
            }
        }()
          , s = (t("lodash"),
        t("./../../addons/CustomMeshFlat")(THREE),
        t("./../../Colors"),
        t("./../DecorElement"))
          , h = t("./Pyramid")
          , u = function(t) {
            function e(t, n, o, a, s) {
                var u;
                r(this, e);
                var l = i(this, Object.getPrototypeOf(e).call(this, t, n, o, a, s));
                l.stroked = a.stroked || !1,
                l.speed = .01,
                l.power = .2,
                l.pulseAngle = 0;
                var c = new THREE.Group;
                return l.pyramid0 = new h({
                    size: 5,
                    color: "redLight",
                    stroked: !0
                }),
                c.add(l.pyramid0.mesh),
                l.pyramid1 = new h({
                    size: 10,
                    color: "blueLight",
                    stroked: !0
                }),
                c.add(l.pyramid1.mesh),
                l.pyramid2 = new h({
                    size: 20,
                    color: "redDark",
                    stroked: !0
                }),
                c.add(l.pyramid2.mesh),
                l.append(c),
                u = l,
                i(l, u)
            }
            return o(e, t),
            a(e, [{
                key: "animate",
                value: function(t) {
                    this.isAnimated && (this.updateSpeed(),
                    this.speedZ && (this.mesh.position.z += this.speedZ),
                    this.speedX && (this.mesh.position.x += this.speedX),
                    this.pyramid0.rotate(4 * this.speed),
                    this.pyramid1.rotate(2 * this.speed),
                    this.pyramid2.rotate(1 * this.speed),
                    t % 32 === 0 && (this.pyramid0.pulse(1.2 * this.power),
                    this.pyramid1.pulse(1.1 * this.power),
                    this.pyramid2.pulse(1 * this.power)))
                }
            }]),
            e
        }(s);
        e.exports = u
    }
    , {
        "./../../Colors": 63,
        "./../../addons/CustomMeshFlat": 86,
        "./../DecorElement": 91,
        "./Pyramid": 96,
        lodash: 5
    }],
    99: [function(t, e, n) {
        "use strict";
        function r(t, e) {
            if (!(t instanceof e))
                throw new TypeError("Cannot call a class as a function")
        }
        function i(t, e) {
            if (!t)
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return !e || "object" != typeof e && "function" != typeof e ? t : e
        }
        function o(t, e) {
            if ("function" != typeof e && null !== e)
                throw new TypeError("Super expression must either be null or a function, not " + typeof e);
            t.prototype = Object.create(e && e.prototype, {
                constructor: {
                    value: t,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                }
            }),
            e && (Object.setPrototypeOf ? Object.setPrototypeOf(t, e) : t.__proto__ = e)
        }
        var a = function() {
            function t(t, e) {
                for (var n = 0; n < e.length; n++) {
                    var r = e[n];
                    r.enumerable = r.enumerable || !1,
                    r.configurable = !0,
                    "value"in r && (r.writable = !0),
                    Object.defineProperty(t, r.key, r)
                }
            }
            return function(e, n, r) {
                return n && t(e.prototype, n),
                r && t(e, r),
                e
            }
        }()
          , s = (t("lodash"),
        t("./../../addons/CustomMeshFlat")(THREE))
          , h = t("./../../Colors")
          , u = t("./../DecorElement")
          , l = function(t) {
            function e(t, n) {
                var o;
                r(this, e);
                var a = i(this, Object.getPrototypeOf(e).call(this));
                return a.segments = n || 12,
                a.radius = t || 20,
                a.mesh = new THREE.Group,
                a.outerMesh1 = new s.RegPolyMesh(a.radius,a.segments,0,h.getColor("blueLight"),(!0)),
                a.innerMesh1 = new s.RegPolyMesh(a.radius - 2,a.segments,0,h.getColor("redDark"),(!0)),
                a.innerMesh1.position.z = 1,
                a.outerMesh2 = new s.RegPolyMesh(a.radius / 2,a.segments,0,h.getColor("blueLight"),(!0)),
                a.outerMesh2.position.z = 2,
                a.innerMesh2 = new s.RegPolyMesh(a.radius / 2 - 2,a.segments,0,h.getColor("blueDark"),(!0)),
                a.innerMesh2.position.z = 3,
                a.pointLight = new THREE.PointLight(h.getColor("redDark"),20,10),
                a.pointLight.position.z = 5,
                a.mesh.add(a.outerMesh1),
                a.mesh.add(a.innerMesh1),
                a.mesh.add(a.outerMesh2),
                a.mesh.add(a.innerMesh2),
                a.mesh.add(a.pointLight),
                o = a,
                i(a, o)
            }
            return o(e, t),
            a(e, [{
                key: "pulse",
                value: function(t) {
                    this.pulsePower = t || 1.2,
                    this.outerMesh2.scale.set(this.pulsePower, this.pulsePower, this.pulsePower),
                    this.innerMesh2.scale.set(this.pulsePower, this.pulsePower, this.pulsePower),
                    this.innerMesh2.position.z = 5,
                    this.pointLight.position.z = 10,
                    this.pointLight.intensity = 30 * t,
                    TweenMax.to(this.outerMesh2.scale, .2, {
                        x: 1,
                        y: 1,
                        z: 1
                    }),
                    TweenMax.to(this.innerMesh2.scale, .2, {
                        x: 1,
                        y: 1,
                        z: 1
                    }),
                    TweenMax.to(this.innerMesh2.position, .2, {
                        z: 3
                    }),
                    TweenMax.to(this.pointLight.position, .2, {
                        z: 5
                    }),
                    TweenMax.to(this.pointLight, .2, {
                        intensity: 20
                    })
                }
            }]),
            e
        }(u);
        e.exports = l
    }
    , {
        "./../../Colors": 63,
        "./../../addons/CustomMeshFlat": 86,
        "./../DecorElement": 91,
        lodash: 5
    }],
    100: [function(t, e, n) {
        "use strict";
        function r(t, e) {
            if (!(t instanceof e))
                throw new TypeError("Cannot call a class as a function")
        }
        function i(t, e) {
            if (!t)
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return !e || "object" != typeof e && "function" != typeof e ? t : e
        }
        function o(t, e) {
            if ("function" != typeof e && null !== e)
                throw new TypeError("Super expression must either be null or a function, not " + typeof e);
            t.prototype = Object.create(e && e.prototype, {
                constructor: {
                    value: t,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                }
            }),
            e && (Object.setPrototypeOf ? Object.setPrototypeOf(t, e) : t.__proto__ = e)
        }
        var a = function() {
            function t(t, e) {
                for (var n = 0; n < e.length; n++) {
                    var r = e[n];
                    r.enumerable = r.enumerable || !1,
                    r.configurable = !0,
                    "value"in r && (r.writable = !0),
                    Object.defineProperty(t, r.key, r)
                }
            }
            return function(e, n, r) {
                return n && t(e.prototype, n),
                r && t(e, r),
                e
            }
        }()
          , s = (t("lodash"),
        t("./../../addons/CustomMeshFlat")(THREE))
          , h = t("./../../Colors")
          , u = t("./../DecorElement")
          , l = t("./Speaker")
          , c = function(t) {
            function e(t, n, o, a, u) {
                var c;
                r(this, e);
                var p = i(this, Object.getPrototypeOf(e).call(this, t, n, o, a, u));
                p.radius = a.radius || 20,
                p.segments = a.segments || 6;
                var f = new THREE.Group;
                f.rotation.y = -Math.PI / 4,
                f.rotation.x = Math.PI / 4;
                var d = new THREE.SphereGeometry(p.radius,p.segments / 2,p.segments / 2,0,Math.PI,0,Math.PI);
                s.flatshadeGeometry(d);
                var m = new THREE.MeshLambertMaterial({
                    color: h.getColor("redDark")
                });
                return p.bodyMesh = new THREE.Mesh(d,m),
                p.bodyMesh.rotation.y = Math.PI,
                p.pointLight = new THREE.PointLight(h.getColor("redDark"),5,20),
                p.pointLight.position.z = 2 * -p.radius,
                p.pointLight.position.y = 2 * -p.radius,
                p.pointLight.position.x = p.radius,
                p.speaker = new l(p.radius,p.segments),
                f.add(p.speaker.mesh),
                f.add(p.bodyMesh),
                f.add(p.pointLight),
                p.append(f),
                c = p,
                i(p, c)
            }
            return o(e, t),
            a(e, [{
                key: "animate",
                value: function(t) {
                    this.isAnimated && (this.updateSpeed(),
                    this.speedZ && (this.mesh.position.z += this.speedZ),
                    this.speedX && (this.mesh.position.x += this.speedX),
                    this.mesh.rotation.x += .01,
                    this.mesh.rotation.y += .03,
                    this.mesh.position.x += .05,
                    t % 16 === 8 && this.speaker.pulse(1.3))
                }
            }]),
            e
        }(u);
        e.exports = c
    }
    , {
        "./../../Colors": 63,
        "./../../addons/CustomMeshFlat": 86,
        "./../DecorElement": 91,
        "./Speaker": 99,
        lodash: 5
    }],
    101: [function(t, e, n) {
        "use strict";
        function r(t, e) {
            if (!(t instanceof e))
                throw new TypeError("Cannot call a class as a function")
        }
        function i(t, e) {
            if (!t)
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return !e || "object" != typeof e && "function" != typeof e ? t : e
        }
        function o(t, e) {
            if ("function" != typeof e && null !== e)
                throw new TypeError("Super expression must either be null or a function, not " + typeof e);
            t.prototype = Object.create(e && e.prototype, {
                constructor: {
                    value: t,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                }
            }),
            e && (Object.setPrototypeOf ? Object.setPrototypeOf(t, e) : t.__proto__ = e)
        }
        var a = function() {
            function t(t, e) {
                for (var n = 0; n < e.length; n++) {
                    var r = e[n];
                    r.enumerable = r.enumerable || !1,
                    r.configurable = !0,
                    "value"in r && (r.writable = !0),
                    Object.defineProperty(t, r.key, r)
                }
            }
            return function(e, n, r) {
                return n && t(e.prototype, n),
                r && t(e, r),
                e
            }
        }()
          , s = (t("./../../addons/CustomMeshFlat")(THREE),
        t("./../../Colors"))
          , h = t("./../DecorElement")
          , u = function(t) {
            function e(t, n, o, a, h) {
                var u;
                r(this, e);
                var l = i(this, Object.getPrototypeOf(e).call(this));
                l.initPosition = new THREE.Vector3;
                var c = new THREE.Color(s.getColor(o));
                return l.material = a.clone(),
                l.material.uniforms.color.value = new THREE.Vector4(c.r,c.g,c.b,1),
                l.material.uniforms.splat.value = h,
                l.geometry = new THREE.PlaneGeometry(t,n),
                l.mesh = new THREE.Mesh(l.geometry,l.material),
                l.mesh.renderOrder = 110,
                l.mesh.geometry.applyMatrix((new THREE.Matrix4).makeRotationY(Math.PI / 2)),
                l.mesh.geometry.applyMatrix((new THREE.Matrix4).makeRotationZ(Math.PI)),
                l.speedAngle = 0,
                u = l,
                i(l, u)
            }
            return o(e, t),
            a(e, [{
                key: "pulse",
                value: function(t) {
                    this.speed = t,
                    this.speedAngle = 0;
                    var e = this;
                    TweenMax.to(this, this.speed, {
                        speedAngle: Math.PI,
                        onUpdate: function() {
                            e.mesh.position.z = e.initPosition.z - 300 * e.speedAngle
                        }
                    }),
                    this.mesh.geometry.verticesNeedUpdate = !0
                }
            }]),
            e
        }(h);
        e.exports = u
    }
    , {
        "./../../Colors": 63,
        "./../../addons/CustomMeshFlat": 86,
        "./../DecorElement": 91
    }],
    102: [function(t, e, n) {
        "use strict";
        function r(t, e) {
            if (!(t instanceof e))
                throw new TypeError("Cannot call a class as a function")
        }
        function i(t, e) {
            if (!t)
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return !e || "object" != typeof e && "function" != typeof e ? t : e
        }
        function o(t, e) {
            if ("function" != typeof e && null !== e)
                throw new TypeError("Super expression must either be null or a function, not " + typeof e);
            t.prototype = Object.create(e && e.prototype, {
                constructor: {
                    value: t,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                }
            }),
            e && (Object.setPrototypeOf ? Object.setPrototypeOf(t, e) : t.__proto__ = e)
        }
        var a = function() {
            function t(t, e) {
                for (var n = 0; n < e.length; n++) {
                    var r = e[n];
                    r.enumerable = r.enumerable || !1,
                    r.configurable = !0,
                    "value"in r && (r.writable = !0),
                    Object.defineProperty(t, r.key, r)
                }
            }
            return function(e, n, r) {
                return n && t(e.prototype, n),
                r && t(e, r),
                e
            }
        }()
          , s = t("./../../Colors")
          , h = t("./../DecorElement")
          , u = t("./SpeedStripe")
          , l = function(t) {
            function e(t) {
                var n;
                r(this, e);
                var o = i(this, Object.getPrototypeOf(e).call(this))
                  , a = (new THREE.TextureLoader).load("images/textures/stripe-1fe787b8c4.png")
                  , h = new THREE.RawShaderMaterial({
                    vertexShader: "precision mediump float;\nprecision mediump int;\n#define GLSLIFY 1\n\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\n\nattribute vec3 position;\nattribute vec2 uv;\n\nvarying vec2 vUv;\n\nvoid main() {\n  vUv = uv;\n\n  gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}\n",
                    fragmentShader: "precision mediump float;\nprecision mediump int;\n#define GLSLIFY 1\n\nuniform sampler2D splat;\nuniform vec4 color;\n\nvarying vec2 vUv;\n\nvoid main() {\n  vec4 transparent = color;\n       transparent.a = 0.0;\n\n  vec4 t = texture2D(splat, vUv);\n\n  gl_FragColor = vec4(mix(color, transparent, 1.0 - t.a));\n}\n",
                    side: THREE.DoubleSide,
                    transparent: !0,
                    uniforms: {
                        color: {
                            type: "v4",
                            value: new THREE.Vector4(1,0,0,1)
                        },
                        splat: {
                            type: "t",
                            value: a
                        }
                    }
                });
                h.map = !0,
                o.radius = t || 70,
                o.stripes = [],
                o.stripesCount = 40,
                o.stripeAngle = Math.PI / o.stripesCount,
                o.mesh = new THREE.Group;
                for (var l = 0, c = o.stripesCount; l < c; l++) {
                    var p = 100
                      , f = 4
                      , d = new u(p,f,s.getRandomColorName(),h,a)
                      , t = o.radius * (4 * Math.random());
                    d.mesh.position.x = Math.cos(o.stripeAngle * l) * t,
                    d.mesh.position.y = Math.sin(o.stripeAngle * l) * t,
                    d.mesh.rotation.z = o.stripeAngle * l,
                    d.mesh.position.z = 500 * Math.random(),
                    d.initPosition = d.mesh.position.clone(),
                    o.mesh.add(d.mesh),
                    o.stripes.push(d)
                }
                return n = o,
                i(o, n)
            }
            return o(e, t),
            a(e, [{
                key: "pulse",
                value: function(t) {
                    if (this.isAnimated) {
                        var e = this.stripes.length
                          , n = this.stripes[Math.floor(Math.random() * e)];
                        n.pulse(t)
                    }
                }
            }]),
            e
        }(h);
        e.exports = l
    }
    , {
        "./../../Colors": 63,
        "./../DecorElement": 91,
        "./SpeedStripe": 101
    }],
    103: [function(t, e, n) {
        "use strict";
        function r(t, e) {
            if (!(t instanceof e))
                throw new TypeError("Cannot call a class as a function")
        }
        var i = function() {
            function t(t, e) {
                for (var n = 0; n < e.length; n++) {
                    var r = e[n];
                    r.enumerable = r.enumerable || !1,
                    r.configurable = !0,
                    "value"in r && (r.writable = !0),
                    Object.defineProperty(t, r.key, r)
                }
            }
            return function(e, n, r) {
                return n && t(e.prototype, n),
                r && t(e, r),
                e
            }
        }()
          , o = function() {
            function t(e) {
                return r(this, t),
                !this.needToUnlock || (this.soundInstance = e,
                this.context = this.soundInstance.context,
                this.unlocked = !1,
                this.unlockCallback = this.unlock.bind(this),
                document.addEventListener("touchend", this.unlockCallback, !0),
                void document.addEventListener("mousedown", this.unlockCallback, !0))
            }
            return i(t, [{
                key: "unlock",
                value: function() {
                    return !this.unlocked && ("function" == typeof this.context.resume ? this.context.resume().then(this.startFakeBuffer.bind(this)) : this.startFakeBuffer())
                }
            }, {
                key: "startFakeBuffer",
                value: function() {
                    this.buffer = this.context.createBuffer(1, 1, 22050),
                    this.source = this.context.createBufferSource(),
                    this.source.buffer = this.buffer,
                    this.source.connect(this.context.destination),
                    this.source.start(0),
                    this.source.onended = this.onSourceEnd.bind(this)
                }
            }, {
                key: "onSourceEnd",
                value: function() {
                    this.source.disconnect(),
                    this.unlocked = !0,
                    document.removeEventListener("touchend", this.unlockCallback, !0),
                    document.removeEventListener("mousedown", this.unlockCallback, !0)
                }
            }, {
                key: "needToUnlock",
                get: function() {
                    return Modernizr.safari || Modernizr.ios
                }
            }]),
            t
        }();
        e.exports = o
    }
    , {}],
    104: [function(t, e, n) {
        "use strict";
        function r(t, e) {
            if (!(t instanceof e))
                throw new TypeError("Cannot call a class as a function")
        }
        var i = function() {
            function t(t, e) {
                for (var n = 0; n < e.length; n++) {
                    var r = e[n];
                    r.enumerable = r.enumerable || !1,
                    r.configurable = !0,
                    "value"in r && (r.writable = !0),
                    Object.defineProperty(t, r.key, r)
                }
            }
            return function(e, n, r) {
                return n && t(e.prototype, n),
                r && t(e, r),
                e
            }
        }()
          , o = t("lodash")
          , a = t("../AssetsManager")
          , s = function() {
            function t(e) {
                r(this, t);
                var n = e.context;
                return this.effects = [{
                    name: a.effects.HIGHPASS,
                    node: function() {
                        var t = n.createBiquadFilter();
                        return t.type = "highpass",
                        t
                    }()
                }],
                o.forEach(this.effects, function(t) {
                    t.active = !1
                }),
                this
            }
            return i(t, [{
                key: "getEffectByName",
                value: function(t) {
                    return o.findWhere(this.effects, {
                        name: t
                    })
                }
            }]),
            t
        }();
        e.exports = s
    }
    , {
        "../AssetsManager": 22,
        lodash: 5
    }],
    105: [function(t, e, n) {
        "use strict";
        function r(t, e) {
            if (!(t instanceof e))
                throw new TypeError("Cannot call a class as a function")
        }
        var i = function() {
            function t(t, e) {
                for (var n = 0; n < e.length; n++) {
                    var r = e[n];
                    r.enumerable = r.enumerable || !1,
                    r.configurable = !0,
                    "value"in r && (r.writable = !0),
                    Object.defineProperty(t, r.key, r)
                }
            }
            return function(e, n, r) {
                return n && t(e.prototype, n),
                r && t(e, r),
                e
            }
        }()
          , o = t("lodash")
          , a = t("../Helpers/Deferred")
          , s = t("../AssetsManager")
          , h = t("../Dispatcher/Dispatcher")
          , u = t("./FxManager")
          , l = t("./EnableMobileAudio")
          , c = function() {
            function t() {
                return r(this, t),
                this.context = new (window.AudioContext || window.webkitAudioContext),
                this.playbackRate = 1,
                this.analyser = this.context.createAnalyser(),
                this.analyser.minDecibels = -90,
                this.analyser.maxDecibels = -10,
                this.analyser.fftSize = 256,
                this.analyserDataArray = new Uint8Array(this.analyser.frequencyBinCount),
                this.masterOutput = this.context.createGain(),
                this.masterOutput.connect(this.context.destination),
                this.output = this.context.createGain(),
                this.output.connect(this.analyser),
                this.output.connect(this.masterOutput),
                this.mixer = this.context.createGain(),
                this.mixer.connect(this.output),
                this.fx = new u(this),
                new l(this),
                this
            }
            return i(t, [{
                key: "bindEvents",
                value: function() {
                    h.on("GAME:enableEffect", this.enableEffect.bind(this)),
                    h.on("GAME:disableEffects", this.disableEffects.bind(this)),
                    h.on("GAME:setPlaybackRate", this.setPlaybackRate.bind(this)),
                    h.on("GAME:updateInstrument", this.updateInstrument.bind(this)),
                    h.on("GAME:enableInstrument", this.enableInstrument.bind(this)),
                    h.on("GAME:disableInstrument", this.disableInstrument.bind(this)),
                    h.on("GAME:disableAllInstruments", this.disableAllInstruments.bind(this)),
                    h.on("GAME:nextInstrumentLoop", this.nextInstrumentLoop.bind(this)),
                    h.on("SOUND:playAssetByID", this.playAssetByID.bind(this)),
                    h.on("SOUND:setMasterOutput", this.setMasterOutput.bind(this)),
                    h.on("SOUND:setMixerOutput", this.setMixerOutput.bind(this)),
                    h.on("GAME:pause", this.pause.bind(this)),
                    h.on("GAME:resume", this.resume.bind(this)),
                    h.on("GAME:replay", this.reset.bind(this))
                }
            }, {
                key: "pause",
                value: function() {
                    this.output.gain.value = 0
                }
            }, {
                key: "resume",
                value: function() {
                    this.output.gain.value = 1,
                    new l(this)
                }
            }, {
                key: "setMasterOutput",
                value: function() {
                    var t = arguments.length <= 0 || void 0 === arguments[0] ? 1 : arguments[0]
                      , e = arguments.length <= 1 || void 0 === arguments[1] ? .2 : arguments[1];
                    this.fadeTo(this.masterOutput, t, e)
                }
            }, {
                key: "setMixerOutput",
                value: function() {
                    var t = arguments.length <= 0 || void 0 === arguments[0] ? 1 : arguments[0]
                      , e = arguments.length <= 1 || void 0 === arguments[1] ? .2 : arguments[1];
                    this.fadeTo(this.mixer, t, e)
                }
            }, {
                key: "init",
                value: function() {
                    var t = s.types.AUDIO
                      , e = s.getAssetsByType(t);
                    this.connectAudioSources(e)
                }
            }, {
                key: "reset",
                value: function() {
                    this.tweenPlaybackRate && this.tweenPlaybackRate.kill(),
                    this.setPlaybackRate(1)
                }
            }, {
                key: "ready",
                value: function() {
                    this.initBackground(),
                    this.playAll(),
                    this.bindEvents()
                }
            }, {
                key: "initBackground",
                value: function() {
                    var t = s.getAssetById("BACKGROUND_LOOP");
                    t.source.loop = !0,
                    t.source.playbackRate.value = this.playbackRate,
                    t.gainNode = this.context.createGain(),
                    t.gainNode.connect(this.mixer),
                    t.gainNode.gain.value = .75,
                    t.source.connect(t.gainNode),
                    this.background = t
                }
            }, {
                key: "decodeAudioAsset",
                value: function(t, e) {
                    var n = this
                      , r = new a;
                    return this.context.decodeAudioData(e, function(e) {
                        t.source = n.context.createBufferSource(),
                        t.source.buffer = e,
                        r.resolve()
                    }),
                    r.promise
                }
            }, {
                key: "connectAudioSources",
                value: function(t) {
                    this.samples = t,
                    this.instrumentsIndex = {};
                    for (var e = this.samples.length, n = 0, r = this.samples.length; n < r; n++) {
                        var i = this.samples[n];
                        if ("BACKGROUND_LOOP" !== i.id) {
                            if (i.category) {
                                var a = s.getAssetsByCategory(i.category);
                                this.instrumentsIndex[i.category] = o.random(a.length - 1),
                                i.source.loop = !0,
                                i.source.playbackRate.value = this.playbackRate
                            }
                            i.gainNode = this.context.createGain(),
                            i.gainNode.connect(this.mixer),
                            i.category && (i.gainNode.gain.value = 0),
                            i.source.connect(i.gainNode),
                            e--,
                            e || this.ready()
                        } else
                            e--
                    }
                }
            }, {
                key: "playAll",
                value: function() {
                    for (var t = 0, e = this.samples.length; t < e; t++) {
                        var n = this.samples[t];
                        n.category && n.source.start(0)
                    }
                    this.background && this.background.source.start(0)
                }
            }, {
                key: "playAssetByID",
                value: function(t) {
                    var e = s.getAssetById(t);
                    if (e) {
                        var n = this.context.createBufferSource();
                        n.buffer = e.source.buffer,
                        n.connect(this.output),
                        n.start(0)
                    }
                }
            }, {
                key: "enableEffect",
                value: function(t) {
                    var e = this.fx.getEffectByName(t);
                    return !(!e || !e.node) && (this.mixer.disconnect(),
                    this.mixer.connect(e.node),
                    e.node.connect(this.output),
                    void (e.active = !0))
                }
            }, {
                key: "disableEffects",
                value: function() {
                    this.mixer.disconnect(),
                    this.mixer.connect(this.output),
                    o.forEach(this.fx.effects, function(t) {
                        t.active = !1
                    })
                }
            }, {
                key: "setPlaybackRate",
                value: function() {
                    var t = arguments.length <= 0 || void 0 === arguments[0] ? 1 : arguments[0];
                    this.playbackRate = t;
                    for (var e = 0, n = this.samples.length; e < n; e++)
                        this.samples[e].source.playbackRate.value = t;
                    this.background && (this.background.source.playbackRate.value = t)
                }
            }, {
                key: "updateInstrument",
                value: function() {
                    this.enableInstrument.apply(this, arguments)
                }
            }, {
                key: "enableInstrument",
                value: function(t) {
                    for (var e = this, n = s.getAssetsByCategory(t), r = 0, i = n.length; r < i; r++) {
                        var o = 0;
                        this.instrumentsIndex[t] % n.length === r && (o = 1),
                        this.fadeTo(n[r].gainNode, o)
                    }
                    n = s.getAssetsByType(s.types.AUDIO);
                    for (var a = function(r, i) {
                        var o = n[r]
                          , a = o.gainNode;
                        o.category !== t && 1 === a.gain.value && (e.fadeTo(a, .65, .4, !1),
                        a.willFade = window.setTimeout(function() {
                            e.fadeTo(a, 1, .4, !1)
                        }, 2e3))
                    }
                    , h = 0, u = n.length; h < u; h++)
                        a(h, u)
                }
            }, {
                key: "disableInstrument",
                value: function(t) {
                    for (var e = s.getAssetsByCategory(t), n = 0, r = e.length; n < r; n++)
                        this.fadeTo(e[n].gainNode, 0)
                }
            }, {
                key: "disableAllInstruments",
                value: function() {
                    for (var t = s.getAssetsByType(s.types.AUDIO), e = 0, n = t.length; e < n; e++)
                        "BACKGROUND_LOOP" !== t[e].id && this.fadeTo(t[e].gainNode, 0, 2);
                    this.fadePlaybackRate(.4, 2)
                }
            }, {
                key: "nextInstrumentLoop",
                value: function(t) {
                    var e = arguments.length <= 1 || void 0 === arguments[1] || arguments[1];
                    this.instrumentsIndex[t]++,
                    e && this.updateInstrument(t)
                }
            }, {
                key: "fadePlaybackRate",
                value: function(t) {
                    var e = this
                      , n = arguments.length <= 1 || void 0 === arguments[1] ? 1 : arguments[1]
                      , r = {
                        val: this.playbackRate
                    };
                    this.tweenPlaybackRate = TweenLite.to(r, n, {
                        val: t,
                        onUpdate: function() {
                            e.setPlaybackRate(r.val)
                        }
                    })
                }
            }, {
                key: "fadeTo",
                value: function(t, e) {
                    var n = arguments.length <= 2 || void 0 === arguments[2] ? 1 : arguments[2]
                      , r = arguments.length <= 3 || void 0 === arguments[3] || arguments[3]
                      , i = {
                        volume: t.gain.value
                    };
                    t.willFade && window.clearTimeout(t.willFade),
                    t.tween && t.tween.kill(),
                    t.tween = TweenLite.to(i, n, {
                        ease: Power0.easeNone,
                        volume: e,
                        onUpdate: function() {
                            var e = Math.cos(.5 * (1 - i.volume) * Math.PI);
                            t.gain.value = r ? e : i.volume
                        }
                    })
                }
            }]),
            t
        }();
        e.exports = new c
    }
    , {
        "../AssetsManager": 22,
        "../Dispatcher/Dispatcher": 23,
        "../Helpers/Deferred": 54,
        "./EnableMobileAudio": 103,
        "./FxManager": 104,
        lodash: 5
    }],
    106: [function(t, e, n) {
        "use strict";
        function r(t, e) {
            if (!(t instanceof e))
                throw new TypeError("Cannot call a class as a function")
        }
        var i = function() {
            function t(t, e) {
                for (var n = 0; n < e.length; n++) {
                    var r = e[n];
                    r.enumerable = r.enumerable || !1,
                    r.configurable = !0,
                    "value"in r && (r.writable = !0),
                    Object.defineProperty(t, r.key, r)
                }
            }
            return function(e, n, r) {
                return n && t(e.prototype, n),
                r && t(e, r),
                e
            }
        }()
          , o = function() {
            function t() {
                return r(this, t),
                this.active = !1,
                this.init(),
                this.loop(),
                this
            }
            return i(t, [{
                key: "init",
                value: function() {
                    this.logoElements = ["#letterC", "#letterH", "#letterO", "#letterR1", "#letterD", "#letterS", "#letterU", "#letterR2", "#letterF", "#letterE", "#letterR3"],
                    this.angle = 0
                }
            }, {
                key: "loop",
                value: function() {
                    if (window.requestAnimationFrame(this.loop.bind(this)),
                    this.active) {
                        this.angle += .05;
                        for (var t = 0; t < this.logoElements.length; t++) {
                            var e = this.logoElements[t]
                              , n = 2 + .4 * t;
                            TweenMax.set(e, {
                                scaleY: .6 + Math.abs(.4 * Math.sin(this.angle + .5 * t)),
                                y: -50 + Math.sin(this.angle + .5 * t) * n
                            })
                        }
                    }
                }
            }, {
                key: "show",
                value: function() {
                    this.active = !0;
                    for (var t = 0; t < this.logoElements.length; t++) {
                        var e = this.logoElements[t]
                          , n = .5 * Math.abs(t - (this.logoElements.length - 1) / 2);
                        TweenMax.set(e, {
                            transformOrigin: "50% 50%",
                            scale: 0
                        }),
                        TweenMax.to(e, 3, {
                            scale: .8,
                            delay: n
                        })
                    }
                }
            }, {
                key: "hide",
                value: function() {
                    this.active = !1;
                    for (var t = 0; t < this.logoElements.length; t++) {
                        var e = this.logoElements[t];
                        .5 * Math.abs(t - (this.logoElements.length - 1) / 2);
                        TweenMax.killTweensOf(e),
                        TweenMax.set(e, {
                            transformOrigin: "50% 50%",
                            scale: 1
                        }),
                        TweenMax.to(e, 1, {
                            scale: 0,
                            delay: Strong.easeOut
                        })
                    }
                }
            }]),
            t
        }();
        e.exports = o
    }
    , {}],
    107: [function(t, e, n) {
        "use strict";
        function r(t, e) {
            if (!(t instanceof e))
                throw new TypeError("Cannot call a class as a function")
        }
        var i = function() {
            function t(t, e) {
                for (var n = 0; n < e.length; n++) {
                    var r = e[n];
                    r.enumerable = r.enumerable || !1,
                    r.configurable = !0,
                    "value"in r && (r.writable = !0),
                    Object.defineProperty(t, r.key, r)
                }
            }
            return function(e, n, r) {
                return n && t(e.prototype, n),
                r && t(e, r),
                e
            }
        }()
          , o = (t("lodash"),
        function() {
            function t(e) {
                r(this, t),
                this.root = e,
                this.sprite = e.querySelector(".sprite"),
                this.sprite && (this.step = 0,
                this.width = 339,
                this.bind(),
                this.updateStep())
            }
            return i(t, [{
                key: "bind",
                value: function() {
                    this.root.addEventListener("mouseenter", this.onEnter.bind(this)),
                    this.root.addEventListener("touchstart", this.onEnter.bind(this)),
                    this.root.addEventListener("mouseleave", this.onLeave.bind(this)),
                    this.root.addEventListener("touchend", this.onLeave.bind(this))
                }
            }, {
                key: "onEnter",
                value: function() {
                    this.sprite.classList.add("hover"),
                    TweenMax.to(this, .3, {
                        step: 9,
                        roundProps: "step",
                        onUpdate: this.updateStep.bind(this)
                    })
                }
            }, {
                key: "onLeave",
                value: function() {
                    this.sprite.classList.remove("hover"),
                    TweenMax.to(this, .3, {
                        step: 0,
                        roundProps: "step",
                        onUpdate: this.updateStep.bind(this)
                    })
                }
            }, {
                key: "updateStep",
                value: function() {
                    var t = this.width * this.step
                      , e = 0 === this.step ? 0 : 1;
                    this.sprite.style.backgroundPosition = "-" + t + "px",
                    this.sprite.style.opacity = e
                }
            }]),
            t
        }());
        e.exports = o
    }
    , {
        lodash: 5
    }],
    108: [function(t, e, n) {
        "use strict";
        function r(t, e) {
            if (!(t instanceof e))
                throw new TypeError("Cannot call a class as a function")
        }
        var i = function() {
            function t(t, e) {
                for (var n = 0; n < e.length; n++) {
                    var r = e[n];
                    r.enumerable = r.enumerable || !1,
                    r.configurable = !0,
                    "value"in r && (r.writable = !0),
                    Object.defineProperty(t, r.key, r)
                }
            }
            return function(e, n, r) {
                return n && t(e.prototype, n),
                r && t(e, r),
                e
            }
        }()
          , o = t("../Helpers/Tracking")
          , a = t("../Fullscreen")
          , s = function() {
            function t() {
                return r(this, t),
                this.root = document.querySelector(".gameui__fullscreen"),
                this.arrows = [document.getElementById("arrow1"), document.getElementById("arrow2"), document.getElementById("arrow3"), document.getElementById("arrow4")],
                this.active = a.isEnabled && a.isFullScreen(),
                this.bind(),
                this
            }
            return i(t, [{
                key: "bind",
                value: function() {
                    this.root.addEventListener("click", this.toggle.bind(this)),
                    a.onChange(this.onChange.bind(this))
                }
            }, {
                key: "toggle",
                value: function(t) {
                    t.preventDefault(),
                    t.stopPropagation(),
                    a[a.isFullScreen() ? "exit" : "request"]()
                }
            }, {
                key: "onChange",
                value: function() {
                    this.active = a.isFullScreen();
                    var t = this.active ? "add" : "remove";
                    this.root.classList[t]("active"),
                    this.active && o.send("IngameScreen", "ButtonPress", "Fullscreen")
                }
            }]),
            t
        }();
        e.exports = s
    }
    , {
        "../Fullscreen": 24,
        "../Helpers/Tracking": 60
    }],
    109: [function(t, e, n) {
        "use strict";
        function r(t, e) {
            if (!(t instanceof e))
                throw new TypeError("Cannot call a class as a function")
        }
        var i = function() {
            function t(t, e) {
                for (var n = 0; n < e.length; n++) {
                    var r = e[n];
                    r.enumerable = r.enumerable || !1,
                    r.configurable = !0,
                    "value"in r && (r.writable = !0),
                    Object.defineProperty(t, r.key, r)
                }
            }
            return function(e, n, r) {
                return n && t(e.prototype, n),
                r && t(e, r),
                e
            }
        }()
          , o = t("lodash")
          , a = t("hashids")
          , s = t("../Game/ScoreVerdict")
          , h = t("../Dispatcher/Dispatcher")
          , u = t("../Helpers/Sharing")
          , l = t("../Helpers/FitElement")
          , c = t("../Helpers/Tracking")
          , p = function() {
            function t() {
                r(this, t),
                this.root = document.getElementById("gameover"),
                this.videoContainer = this.root.querySelector(".panel__video-container"),
                this.scoreLabel = this.root.querySelector(".gameover__score span"),
                this.replayButton = this.root.querySelector(".button--replay"),
                this.docuLink = this.root.querySelectorAll(".watch-tv"),
                this.panelLink = this.root.querySelector(".panel__link"),
                this.panel = this.root.querySelector(".panel"),
                this.animateIn = this.root.querySelectorAll(".animate--in"),
                this.facebookButton = this.root.querySelector(".gameover__share--facebook"),
                this.twitterButton = this.root.querySelector(".gameover__share--twitter"),
                this.whatsappButton = this.root.querySelector(".gameover__share--whatsapp"),
                this.screenActive = !1,
                this.Hashids = new a(HASHIDS_SEED),
                this.canPlayVideo = Modernizr.desktop,
                Modernizr.mobile || this.whatsappButton.parentNode.removeChild(this.whatsappButton),
                this.canPlayVideo && this.populateVideos(),
                !Modernizr.objectfit && this.canPlayVideo && this.fixVideoSize(),
                Modernizr.desktop && this.enableHoverPanel(),
                this.bind()
            }
            return i(t, [{
                key: "bind",
                value: function() {
                    this.replayButton.addEventListener("click", this.replay.bind(this)),
                    this.facebookButton.addEventListener("click", this.onFacebookClick.bind(this)),
                    this.twitterButton.addEventListener("click", this.onTwitterClick.bind(this)),
                    o.each(this.docuLink, function(t) {
                        t.addEventListener("click", function() {
                            c.send("RBTV", "URLClick", "From game over link")
                        })
                    }),
                    this.panelLink.addEventListener("click", function() {
                        c.send("RBTV", "URLClick", "From game over video")
                    }),
                    this.whatsappButton.addEventListener("click", function() {
                        c.send("SocialSharing", "ButtonPress", "Whatsapp")
                    }),
                    h.on("GAME:gameover", this.onGameOver.bind(this))
                }
            }, {
                key: "populateVideos",
                value: function() {
                    var t = this
                      , e = this.videoContainer.querySelector(".color-layer")
                      , n = [window.BASEPATH + "/videos/1.mp4", window.BASEPATH + "/videos/2.mp4", window.BASEPATH + "/videos/3.mp4"];
                    o.each(n, function(n) {
                        var r = t.createVideo(n);
                        t.videoContainer.insertBefore(r, e)
                    }),
                    this.videos = this.root.querySelectorAll("video")
                }
            }, {
                key: "createVideo",
                value: function(t) {
                    var e = document.createElement("video");
                    return e.src = t,
                    e.muted = !0,
                    e.loop = !0,
                    e.autoplay = !0,
                    e
                }
            }, {
                key: "resetAnimation",
                value: function() {
                    TweenLite.set(this.panel, {
                        y: -window.outerHeight
                    }),
                    TweenLite.set(this.animateIn, {
                        y: 50,
                        autoAlpha: 0
                    })
                }
            }, {
                key: "fixVideoSize",
                value: function() {
                    o.forEach(this.videos, function(t) {
                        new l(t)
                    })
                }
            }, {
                key: "onGameOver",
                value: function(t) {
                    var e = this.Hashids.encode(t);
                    this.url = BASEURL + ("/?r=" + e),
                    this.score = t,
                    this.updateVerdict(),
                    this.updateScoreLabel(),
                    this.updateFacebookLink(),
                    this.updateTwitterLink(),
                    this.updateWhatsappLink(),
                    this.show()
                }
            }, {
                key: "replay",
                value: function(t) {
                    if (t && t.preventDefault && t.preventDefault(),
                    this.screenActive) {
                        h.emit("GAME:replay"),
                        this.hide();
                        var e = (new Date).getTime() - this.startingTime;
                        e = Math.round(e / 1e3),
                        c.send("GameOverScreen", "ButtonPress", "Replay"),
                        c.send("GameOverScreen", "TimeSpent", "Watching the video", e)
                    }
                }
            }, {
                key: "show",
                value: function() {
                    var t = this;
                    this.resetAnimation(),
                    this.showRandomVideo(),
                    TweenLite.to(this.root, 1.3, {
                        autoAlpha: 1
                    });
                    var e = new TimelineMax({
                        delay: 1.5,
                        onComplete: function() {
                            t.screenActive = !0,
                            t.startingTime = (new Date).getTime(),
                            t.replayButton.focus()
                        }
                    });
                    e.to(this.panel, .7, {
                        y: 0,
                        ease: Back.easeOut.config(1, .4),
                        onComplete: function() {
                            h.emit("POSTPROCESS:disableGlitch")
                        }
                    }),
                    e.staggerTo(this.animateIn, .2, {
                        y: 0,
                        autoAlpha: 1
                    }, .1, "-=0.15")
                }
            }, {
                key: "hide",
                value: function() {
                    Modernizr.desktop && this.onPanelMouseLeave(),
                    this.screenActive = !1,
                    TweenLite.to(this.root, .6, {
                        autoAlpha: 0
                    })
                }
            }, {
                key: "updateScoreLabel",
                value: function() {
                    this.scoreLabel.textContent = this.score
                }
            }, {
                key: "onFacebookClick",
                value: function(t) {
                    t.preventDefault(),
                    u.openPopup(t.currentTarget.href, "Share on Facebook", 575, 300),
                    c.send("SocialSharing", "ButtonPress", "Facebook")
                }
            }, {
                key: "onTwitterClick",
                value: function(t) {
                    t.preventDefault(),
                    u.openPopup(t.currentTarget.href, "Share on Twitter", 550, 255),
                    c.send("SocialSharing", "ButtonPress", "Twitter")
                }
            }, {
                key: "updateFacebookLink",
                value: function() {
                    this.facebookButton.href = u.getFacebook(this.url)
                }
            }, {
                key: "updateTwitterLink",
                value: function() {
                    this.twitterButton.href = u.getTwitter(this.url, "I scored " + this.score + " chords, how far can you get? Play #Chordsurfer to find out:")
                }
            }, {
                key: "updateWhatsappLink",
                value: function() {
                    this.whatsappButton.href = u.getWhatsAppLink("I scored " + this.score + " chords, how far can you get? Play here: " + this.url)
                }
            }, {
                key: "updateVerdict",
                value: function() {
                    var t = s.getVerdictByScore(this.score);
                    this.root.querySelector(".verdict").textContent = t.text
                }
            }, {
                key: "showRandomVideo",
                value: function() {
                    return this.canPlayVideo ? (o.forEach(this.videos, function(t) {
                        t.style.display = "none"
                    }),
                    void (o.sample(this.videos).style.display = "block")) : this.setRandomGif()
                }
            }, {
                key: "setRandomGif",
                value: function() {
                    var t = o.random(1, 3);
                    this.videoContainer.style.backgroundImage = "url('" + BASEURL + "/videos/" + t + ".gif')"
                }
            }, {
                key: "enableHoverPanel",
                value: function() {
                    this.panelLink = this.root.querySelector(".panel__link"),
                    this.panelText = this.root.querySelector(".panel__text"),
                    this.colorLayer = this.root.querySelector(".color-layer"),
                    this.panelLink.style.display = "block",
                    this.panel.addEventListener("mouseenter", this.onPanelMouseEnter.bind(this)),
                    this.panel.addEventListener("mouseleave", this.onPanelMouseLeave.bind(this))
                }
            }, {
                key: "onPanelMouseEnter",
                value: function() {
                    if (this.screenActive) {
                        var t = new TimelineLite;
                        t.add("start"),
                        t.to(this.colorLayer, .4, {
                            opacity: 0
                        }, "start"),
                        t.to([this.panelText], .4, {
                            opacity: 0
                        }, "start")
                    }
                }
            }, {
                key: "onPanelMouseLeave",
                value: function() {
                    if (this.screenActive) {
                        var t = new TimelineLite;
                        t.add("start"),
                        t.to(this.colorLayer, .4, {
                            opacity: .6
                        }, "start"),
                        t.to([this.panelText], .4, {
                            opacity: 1
                        }, "start")
                    }
                }
            }]),
            t
        }();
        e.exports = p
    }
    , {
        "../Dispatcher/Dispatcher": 23,
        "../Game/ScoreVerdict": 49,
        "../Helpers/FitElement": 56,
        "../Helpers/Sharing": 58,
        "../Helpers/Tracking": 60,
        hashids: 4,
        lodash: 5
    }],
    110: [function(t, e, n) {
        "use strict";
        function r(t, e) {
            if (!(t instanceof e))
                throw new TypeError("Cannot call a class as a function")
        }
        var i = function() {
            function t(t, e) {
                for (var n = 0; n < e.length; n++) {
                    var r = e[n];
                    r.enumerable = r.enumerable || !1,
                    r.configurable = !0,
                    "value"in r && (r.writable = !0),
                    Object.defineProperty(t, r.key, r)
                }
            }
            return function(e, n, r) {
                return n && t(e.prototype, n),
                r && t(e, r),
                e
            }
        }()
          , o = t("../Dispatcher/Dispatcher")
          , a = t("../Helpers/Tracking")
          , s = t("./InstrumentSlots")
          , h = t("./Thunder")
          , u = t("./Protection")
          , l = t("./FullscreenUI")
          , c = t("./Sound")
          , p = function() {
            function t() {
                r(this, t),
                this.root = document.getElementById("gameui"),
                this.top = this.root.querySelector(".gameui__top"),
                this.heart = this.root.querySelector(".gameui__heart"),
                this.bpm = this.root.querySelector(".gameui__bpm"),
                this.actions = this.root.querySelectorAll(".gameui__controls"),
                this.sof = this.root.querySelector(".gameui__sof"),
                this.splash = this.root.querySelector(".gameui__splash"),
                this.logo = this.root.querySelector(".gameui__sof"),
                this.intScore = this.root.querySelector(".gameui__bpm__score--int"),
                this.Protection = new u,
                this.InstrumentSlots = new s,
                this.Thunder = new h,
                this.FullscreenUI = new l,
                this.Sound = new c,
                this.reset(),
                this.bind()
            }
            return i(t, [{
                key: "bind",
                value: function() {
                    var t = this;
                    o.on("GAME:play", this.show.bind(this)),
                    o.on("GAME:replay", this.show.bind(this)),
                    o.on("GAME:updateScore", this.onScoreUpdate.bind(this)),
                    o.on("GAME:gameover", this.hide.bind(this)),
                    this.sof && this.sof.addEventListener("click", function() {
                        a.send("RBTV", "URLClick", "From ingame")
                    }),
                    o.on("GAME:tutorialStart", function() {
                        TweenLite.set([t.heart, t.bpm], {
                            y: -50,
                            opacity: 0
                        })
                    }),
                    o.on("GAME:tutorialEnd", function() {
                        TweenLite.set([t.heart, t.bpm], {
                            y: 0,
                            opacity: 1
                        })
                    })
                }
            }, {
                key: "onScoreUpdate",
                value: function(t) {
                    this.intScore.textContent = t
                }
            }, {
                key: "reset",
                value: function() {
                    TweenLite.set(this.top, {
                        y: -50,
                        opacity: 0
                    }),
                    TweenLite.set(this.actions, {
                        y: 50,
                        opacity: 0
                    }),
                    TweenLite.set(this.splash, {
                        yPercent: 100
                    }),
                    TweenLite.set(this.logo, {
                        opacity: 0,
                        y: 50
                    })
                }
            }, {
                key: "show",
                value: function() {
                    TweenLite.to(this.root, .3, {
                        visibility: "visible",
                        opacity: 1
                    }),
                    TweenLite.to(this.splash, .5, {
                        yPercent: 0,
                        delay: 1.5
                    }),
                    TweenLite.to(this.logo, .4, {
                        opacity: 1,
                        y: 0,
                        delay: 2.5
                    }),
                    TweenLite.to(this.top, .3, {
                        y: 0,
                        opacity: 1,
                        delay: 3
                    }),
                    TweenMax.staggerTo(this.actions, .3, {
                        y: 0,
                        opacity: 1,
                        delay: 3
                    }, .2),
                    this.InstrumentSlots.show()
                }
            }, {
                key: "hide",
                value: function() {
                    var t = this;
                    TweenLite.to(this.root, .3, {
                        visibility: "hidden",
                        opacity: 0,
                        onComplete: function() {
                            t.reset(),
                            t.InstrumentSlots.reset()
                        }
                    })
                }
            }]),
            t
        }();
        e.exports = p
    }
    , {
        "../Dispatcher/Dispatcher": 23,
        "../Helpers/Tracking": 60,
        "./FullscreenUI": 108,
        "./InstrumentSlots": 112,
        "./Protection": 113,
        "./Sound": 114,
        "./Thunder": 115
    }],
    111: [function(t, e, n) {
        "use strict";
        function r(t, e) {
            if (!(t instanceof e))
                throw new TypeError("Cannot call a class as a function")
        }
        var i = function() {
            function t(t, e) {
                for (var n = 0; n < e.length; n++) {
                    var r = e[n];
                    r.enumerable = r.enumerable || !1,
                    r.configurable = !0,
                    "value"in r && (r.writable = !0),
                    Object.defineProperty(t, r.key, r)
                }
            }
            return function(e, n, r) {
                return n && t(e.prototype, n),
                r && t(e, r),
                e
            }
        }()
          , o = t("../Dispatcher/Dispatcher")
          , a = t("../Helpers/Deferred")
          , s = t("../Helpers/Tracking")
          , h = t("../Fullscreen")
          , u = t("./AnimateLogo")
          , l = (t("../PageVisibility"),
        screen.lockOrientation || screen.mozLockOrientation || screen.msLockOrientation,
        function() {
            function t() {
                return r(this, t),
                this.root = document.getElementById("home"),
                this.playButton = this.root.querySelector(".button--play"),
                this.progressSVG = this.root.querySelector(".loader-st-color"),
                this.animateInEls = this.root.querySelectorAll(".animate--in"),
                this.docuLink = this.root.querySelector(".watch-tv a"),
                this.playEnabled = !1,
                TweenLite.to(document.getElementById("canvas"), 1, {
                    delay: 1,
                    opacity: 1
                }),
                this.loadingDfd = new a,
                Modernizr.desktop && (this.AnimateLogo = new u),
                TweenLite.set(this.progressSVG, {
                    drawSVG: "0% 0%"
                }),
                TweenLite.set(this.animateInEls, {
                    opacity: 0,
                    y: 50
                }),
                this.bind(),
                Promise.all([this.minimumTime, this.loadingDfd.promise]).then(this.enablePlayButton.bind(this)),
                this
            }
            return i(t, [{
                key: "bind",
                value: function() {
                    this.playButton.addEventListener("click", this.play.bind(this)),
                    this.docuLink.addEventListener("click", function() {
                        s.send("RBTV", "URLClick", "From intro link")
                    }),
                    o.on("LOADER:assetProcessed", this.onLoadProgress.bind(this)),
                    o.on("LOADER:complete", this.onLoadComplete.bind(this)),
                    o.on("MAIN:ready", this.animateIn.bind(this))
                }
            }, {
                key: "play",
                value: function(t) {
                    t && t.preventDefault && t.preventDefault(),
                    this.playEnabled && (Modernizr.desktop || h.request(),
                    this.AnimateLogo && this.AnimateLogo.hide(),
                    TweenLite.to(this.root, .5, {
                        opacity: 0,
                        display: "none"
                    }),
                    o.emit("GAME:play"),
                    o.emit("SOUND:playAssetByID", "FX_BASS_DROP"),
                    s.send("IntroScreen", "ButtonPress", "Play"))
                }
            }, {
                key: "onLoadProgress",
                value: function(t) {
                    t = Math.round(t),
                    TweenLite.to(this.progressSVG, .5, {
                        drawSVG: "0% " + t + "%",
                        ease: Strong.easeInOut
                    })
                }
            }, {
                key: "onLoadComplete",
                value: function() {
                    this.loadingDfd.resolve()
                }
            }, {
                key: "enablePlayButton",
                value: function() {
                    Modernizr.desktop || this.playButton.classList.add("active"),
                    this.playButton.classList.remove("hover-sound--mute"),
                    this.playButton.classList.remove("button--loading"),
                    this.playButton.setAttribute("disabled", !1),
                    this.playButton.focus(),
                    this.playEnabled = !0
                }
            }, {
                key: "animateIn",
                value: function() {
                    this.AnimateLogo && this.AnimateLogo.show(),
                    TweenMax.staggerTo(this.animateInEls, 1, {
                        delay: 3,
                        opacity: 1,
                        y: 0
                    }, .2)
                }
            }, {
                key: "minimumTime",
                get: function() {
                    var t = new a
                      , e = Modernizr.desktop ? 3e3 : 1e4;
                    return window.setTimeout(function() {
                        t.resolve()
                    }, e),
                    t.promise
                }
            }]),
            t
        }());
        e.exports = l
    }
    , {
        "../Dispatcher/Dispatcher": 23,
        "../Fullscreen": 24,
        "../Helpers/Deferred": 54,
        "../Helpers/Tracking": 60,
        "../PageVisibility": 62,
        "./AnimateLogo": 106
    }],
    112: [function(t, e, n) {
        "use strict";
        function r(t, e) {
            if (!(t instanceof e))
                throw new TypeError("Cannot call a class as a function")
        }
        var i = function() {
            function t(t, e) {
                for (var n = 0; n < e.length; n++) {
                    var r = e[n];
                    r.enumerable = r.enumerable || !1,
                    r.configurable = !0,
                    "value"in r && (r.writable = !0),
                    Object.defineProperty(t, r.key, r)
                }
            }
            return function(e, n, r) {
                return n && t(e.prototype, n),
                r && t(e, r),
                e
            }
        }()
          , o = t("lodash")
          , a = t("../AssetsManager")
          , s = t("../Dispatcher/Dispatcher")
          , h = function() {
            function t() {
                r(this, t),
                this.root = document.querySelector(".gameui__instruments"),
                this.instruments = a.instruments,
                this.slots = {},
                this.easing = Strong.easeInOut,
                this.initSlots(),
                this.allSlots = this.root.querySelectorAll(".gameui__instruments li"),
                this.reset(),
                this.bind()
            }
            return i(t, [{
                key: "reset",
                value: function() {
                    TweenLite.set(this.allSlots, {
                        y: 50,
                        opacity: 0
                    })
                }
            }, {
                key: "show",
                value: function() {
                    TweenMax.staggerTo(this.allSlots, .3, {
                        y: 0,
                        opacity: 1,
                        delay: 2
                    }, .1)
                }
            }, {
                key: "bind",
                value: function() {
                    s.on("GAME:nextInstrumentLoop", this.enable.bind(this)),
                    s.on("GAME:disableInstrument", this.disable.bind(this)),
                    s.on("GAME:disableAllInstruments", this.disableAll.bind(this))
                }
            }, {
                key: "enable",
                value: function(t) {
                    var e = this.slots[t];
                    e && (e.active = !0,
                    e.dom.classList.add("active"),
                    TweenLite.to(e.stColor, 1, {
                        drawSVG: "0% 100%",
                        ease: this.easing
                    }))
                }
            }, {
                key: "disable",
                value: function(t) {
                    var e = this.slots[t];
                    e && (e.active = !1,
                    e.dom.classList.remove("active"),
                    TweenLite.to(e.stColor, 1, {
                        drawSVG: "0% 0%",
                        ease: this.easing
                    }))
                }
            }, {
                key: "disableAll",
                value: function() {
                    for (var t in this.instruments)
                        this.disable(t)
                }
            }, {
                key: "initSlots",
                value: function() {
                    var t = document.createDocumentFragment();
                    for (var e in this.instruments) {
                        var n = this.createDOM(e)
                          , r = n.querySelector(".st-color");
                        TweenLite.set(r, {
                            drawSVG: "0% 0%"
                        }),
                        this.slots[e] = {
                            instrument: e,
                            active: !1,
                            dom: n,
                            stColor: r
                        },
                        t.appendChild(n)
                    }
                    this.root.appendChild(t)
                }
            }, {
                key: "createDOM",
                value: function(t) {
                    var e = o.kebabCase(t)
                      , n = {
                        "audio-type-bass": BASEURL + "images/audio-type-bass-a2bc833774.svg",
                        "audio-type-drum": BASEURL + "images/audio-type-drum-d2b38cfd0c.svg",
                        "audio-type-extra": BASEURL + "images/audio-type-extra-91c9f9d1bb.svg",
                        "audio-type-fx": BASEURL + "images/audio-type-fx-2ccfa99ff2.svg",
                        "audio-type-guitar": BASEURL + "images/audio-type-guitar-a1c1bb069f.svg",
                        "audio-type-synth": BASEURL + "images/audio-type-synth-1a16ccda01.svg",
                        "audio-type-vocal": BASEURL + "images/audio-type-vocal-778af3650e.svg"
                    }
                      , r = document.createElement("li");
                    return r.className = e,
                    r.innerHTML = '\n        <img src="' + n[e] + '" alt="icon instrument ' + e + '"/>\n        <svg viewBox="0 0 250 250" style="enable-background:new 0 0 250 250;">\n          <defs>\n            <linearGradient id="grad" gradientUnits="userSpaceOnUse" x1="71.9051" y1="178.0949" x2="178.0949" y2="71.9051">\n              <stop  offset="0" style="stop-color:#BE2584"/>\n              <stop  offset="0.4147" style="stop-color:#7F67B2"/>\n              <stop  offset="0.8105" style="stop-color:#49A1DA"/>\n              <stop  offset="1" style="stop-color:#34B7EA"/>\n            </linearGradient>\n          </defs>\n\n          <circle class="st-bg" cx="125" cy="125" r="68.6"/>\n          <circle class="st-border" cx="125" cy="125" r="72"/>\n          <circle class="st-color" cx="125" cy="125" r="68.6"/>\n        </svg>',
                    r
                }
            }]),
            t
        }();
        e.exports = h
    }
    , {
        "../AssetsManager": 22,
        "../Dispatcher/Dispatcher": 23,
        lodash: 5
    }],
    113: [function(t, e, n) {
        "use strict";
        function r(t, e) {
            if (!(t instanceof e))
                throw new TypeError("Cannot call a class as a function")
        }
        var i = function() {
            function t(t, e) {
                for (var n = 0; n < e.length; n++) {
                    var r = e[n];
                    r.enumerable = r.enumerable || !1,
                    r.configurable = !0,
                    "value"in r && (r.writable = !0),
                    Object.defineProperty(t, r.key, r)
                }
            }
            return function(e, n, r) {
                return n && t(e.prototype, n),
                r && t(e, r),
                e
            }
        }()
          , o = t("../Dispatcher/Dispatcher")
          , a = t("lodash")
          , s = function() {
            function t() {
                return r(this, t),
                this.root = document.body.querySelector("#protection"),
                this.sinusoide = this.root.querySelector("#sinusoide"),
                this.hexs = [this.root.querySelector("#hexa1"), this.root.querySelector("#hexa2"), this.root.querySelector("#hexa3")],
                this.order = [this.root, this.hexs[0], this.hexs[1], this.hexs[2], this.sinusoide],
                this.easing = Strong.easeInOut,
                this.params = {
                    rot: 0,
                    angle: 0,
                    amp: 7,
                    points: [{
                        x: 34.2,
                        y: 54
                    }, {
                        x: 46.2,
                        y: 54
                    }, {
                        x: 57.2,
                        y: 54
                    }, {
                        x: 71.8,
                        y: 54
                    }]
                },
                this._updateBind = this.update.bind(this),
                this.init(),
                this.bind(),
                this.update(),
                this
            }
            return i(t, [{
                key: "bind",
                value: function() {
                    o.on("GAME:enableEffect", this.show.bind(this)),
                    o.on("GAME:disableEffects", this.hide.bind(this))
                }
            }, {
                key: "init",
                value: function() {
                    this.active = !1,
                    TweenLite.set(this.order, {
                        scale: 0,
                        svgOrigin: "54, 54"
                    })
                }
            }, {
                key: "show",
                value: function() {
                    this.active = !0,
                    TweenMax.staggerTo(this.order, 1, {
                        ease: this.easing,
                        scale: 1
                    }, .1)
                }
            }, {
                key: "hide",
                value: function() {
                    this.active = !1;
                    var t = a.clone(this.order).reverse();
                    TweenMax.staggerTo(t, 1, {
                        ease: this.easing,
                        scale: 0
                    }, .1)
                }
            }, {
                key: "toggle",
                value: function() {
                    this[this.active ? "hide" : "show"]()
                }
            }, {
                key: "getScale",
                value: function(t, e, n) {
                    return 1 + Math.cos(t * e * Math.PI / 180) * n
                }
            }, {
                key: "update",
                value: function() {
                    if (window.requestAnimationFrame(this._updateBind),
                    this.active) {
                        var t = this.params.rot += 2
                          , e = this.params.angle += .2;
                        TweenLite.set(this.hexs[0], {
                            rotation: t,
                            scale: this.getScale(t, 3, .1)
                        }),
                        TweenLite.set(this.hexs[1], {
                            rotation: 2 * t,
                            scale: this.getScale(t, 6, .05)
                        }),
                        TweenLite.set(this.hexs[2], {
                            rotation: 3 * t,
                            scale: this.getScale(t, 9, .2)
                        });
                        for (var n = this.params.points, r = "", i = 0, o = n.length, a = void 0; i < o; i++)
                            a = n[i],
                            a.y = 54 + Math.sin(e + i * Math.PI / 2) * this.params.amp,
                            r += a.x + ", " + a.y + " ";
                        this.sinusoide.setAttribute("points", r)
                    }
                }
            }]),
            t
        }();
        e.exports = s
    }
    , {
        "../Dispatcher/Dispatcher": 23,
        lodash: 5
    }],
    114: [function(t, e, n) {
        "use strict";
        function r(t, e) {
            if (!(t instanceof e))
                throw new TypeError("Cannot call a class as a function")
        }
        var i = function() {
            function t(t, e) {
                for (var n = 0; n < e.length; n++) {
                    var r = e[n];
                    r.enumerable = r.enumerable || !1,
                    r.configurable = !0,
                    "value"in r && (r.writable = !0),
                    Object.defineProperty(t, r.key, r)
                }
            }
            return function(e, n, r) {
                return n && t(e.prototype, n),
                r && t(e, r),
                e
            }
        }()
          , o = t("../Dispatcher/Dispatcher")
          , a = t("../Helpers/Tracking")
          , s = function() {
            function t() {
                return r(this, t),
                this.root = document.querySelector(".gameui__sound"),
                this.active = !1,
                this.bind(),
                this
            }
            return i(t, [{
                key: "bind",
                value: function() {
                    this.root.addEventListener("click", this.toggle.bind(this))
                }
            }, {
                key: "toggle",
                value: function(t) {
                    t.preventDefault(),
                    t.stopPropagation(),
                    this[this.active ? "on" : "off"]()
                }
            }, {
                key: "on",
                value: function() {
                    this.active = !1,
                    this.root.classList.remove("active"),
                    o.emit("SOUND:setMasterOutput", 1)
                }
            }, {
                key: "off",
                value: function() {
                    this.active = !0,
                    this.root.classList.add("active"),
                    o.emit("SOUND:setMasterOutput", 0),
                    a.send("IngameScreen", "ButtonPress", "Mute")
                }
            }]),
            t
        }();
        e.exports = s
    }
    , {
        "../Dispatcher/Dispatcher": 23,
        "../Helpers/Tracking": 60
    }],
    115: [function(t, e, n) {
        "use strict";
        function r(t, e) {
            if (!(t instanceof e))
                throw new TypeError("Cannot call a class as a function")
        }
        var i = function() {
            function t(t, e) {
                for (var n = 0; n < e.length; n++) {
                    var r = e[n];
                    r.enumerable = r.enumerable || !1,
                    r.configurable = !0,
                    "value"in r && (r.writable = !0),
                    Object.defineProperty(t, r.key, r)
                }
            }
            return function(e, n, r) {
                return n && t(e.prototype, n),
                r && t(e, r),
                e
            }
        }()
          , o = t("../Dispatcher/Dispatcher")
          , a = function() {
            function t() {
                return r(this, t),
                this.root = document.querySelector("#gameui #thunder"),
                this.thunder1 = this.root.querySelector("#gameui #thunder1"),
                this.isPaused = !1,
                this.init(),
                this.bind(),
                this
            }
            return i(t, [{
                key: "bind",
                value: function() {
                    o.on("GAME:play", this.start.bind(this)),
                    o.on("GAME:replay", this.start.bind(this)),
                    o.on("GAME:gameover", this.stop.bind(this)),
                    o.on("GAME:pause", this.pause.bind(this)),
                    o.on("GAME:resume", this.resume.bind(this))
                }
            }, {
                key: "pause",
                value: function() {
                    this.isPaused = !0
                }
            }, {
                key: "resume",
                value: function() {
                    this.isPaused = !1
                }
            }, {
                key: "init",
                value: function() {
                    TweenLite.set(this.root, {
                        svgOrigin: "125, 125"
                    })
                }
            }, {
                key: "start",
                value: function() {
                    this.pulseInterval = window.setInterval(this.pulse.bind(this), 500)
                }
            }, {
                key: "stop",
                value: function() {
                    window.clearInterval(this.pulseInterval)
                }
            }, {
                key: "pulse",
                value: function() {
                    this.isPaused || (TweenLite.killTweensOf(this.root),
                    TweenMax.from(this.root, .3, {
                        scale: .8,
                        transformOrigin: "50%, 50%",
                        ease: Strong.easeOut
                    }))
                }
            }]),
            t
        }();
        e.exports = a
    }
    , {
        "../Dispatcher/Dispatcher": 23
    }],
    116: [function(t, e, n) {
        "use strict";
        function r(t, e) {
            if (!(t instanceof e))
                throw new TypeError("Cannot call a class as a function")
        }
        var i = function() {
            function t(t, e) {
                for (var n = 0; n < e.length; n++) {
                    var r = e[n];
                    r.enumerable = r.enumerable || !1,
                    r.configurable = !0,
                    "value"in r && (r.writable = !0),
                    Object.defineProperty(t, r.key, r)
                }
            }
            return function(e, n, r) {
                return n && t(e.prototype, n),
                r && t(e, r),
                e
            }
        }()
          , o = t("lodash")
          , a = t("../Dispatcher/Dispatcher")
          , s = t("./Home")
          , h = t("./GameOver")
          , u = t("./GameUI")
          , l = t("./Button")
          , c = function() {
            function t() {
                r(this, t)
            }
            return i(t, [{
                key: "init",
                value: function() {
                    new s,
                    new h,
                    Modernizr.desktop && (new u,
                    this.buttonHoverSound()),
                    this.initButtons()
                }
            }, {
                key: "initButtons",
                value: function() {
                    var t = document.querySelectorAll(".button");
                    o.forEach(t, function(t) {
                        new l(t)
                    })
                }
            }, {
                key: "buttonHoverSound",
                value: function() {
                    var t = this;
                    this.buttons = document.querySelectorAll(".hover-sound"),
                    o.forEach(this.buttons, function(e) {
                        e.addEventListener("mouseenter", t.onButtonsHover.bind(t))
                    })
                }
            }, {
                key: "onButtonsHover",
                value: function(t) {
                    t.currentTarget.classList.contains("hover-sound--mute") || a.emit("SOUND:playAssetByID", "HOVER")
                }
            }]),
            t
        }();
        e.exports = new c
    }
    , {
        "../Dispatcher/Dispatcher": 23,
        "./Button": 107,
        "./GameOver": 109,
        "./GameUI": 110,
        "./Home": 111,
        lodash: 5
    }],
    117: [function(t, e, n) {
        "use strict";
        window.Detectizr = function(t, e, n, r) {
            function i(t, e) {
                var n, r, o;
                if (arguments.length > 2)
                    for (n = 1,
                    r = arguments.length; n < r; n += 1)
                        i(t, arguments[n]);
                else
                    for (o in e)
                        e.hasOwnProperty(o) && (t[o] = e[o]);
                return t
            }
            function o(t) {
                return x.browser.userAgent.indexOf(t) > -1
            }
            function a(t) {
                return t.test(x.browser.userAgent)
            }
            function s(t) {
                return t.exec(x.browser.userAgent)
            }
            function h(t) {
                return t.replace(/^\s+|\s+$/g, "")
            }
            function u(t) {
                return null === t || t === r ? "" : String(t).replace(/((\s|\-|\.)+[a-z0-9])/g, function(t) {
                    return t.toUpperCase().replace(/(\s|\-|\.)/g, "")
                })
            }
            function l(t, e) {
                var n = e || ""
                  , r = 1 === t.nodeType && (t.className ? (" " + t.className + " ").replace(T, " ") : "");
                if (r) {
                    for (; r.indexOf(" " + n + " ") >= 0; )
                        r = r.replace(" " + n + " ", " ");
                    t.className = e ? h(r) : ""
                }
            }
            function c(t, e, n) {
                t && (t = u(t),
                e && (e = u(e),
                p(t + e, !0),
                n && p(t + e + "_" + n, !0)))
            }
            function p(t, e) {
                t && b && (E.addAllFeaturesAsClass ? b.addTest(t, e) : (e = "function" == typeof e ? e() : e,
                e ? b.addTest(t, !0) : (delete b[t],
                l(M, t))))
            }
            function f(t, e) {
                t.version = e;
                var n = e.split(".");
                n.length > 0 ? (n = n.reverse(),
                t.major = n.pop(),
                n.length > 0 ? (t.minor = n.pop(),
                n.length > 0 ? (n = n.reverse(),
                t.patch = n.join(".")) : t.patch = "0") : t.minor = "0") : t.major = "0"
            }
            function d() {
                t.clearTimeout(y),
                y = t.setTimeout(function() {
                    _ = x.device.orientation,
                    t.innerHeight > t.innerWidth ? x.device.orientation = "portrait" : x.device.orientation = "landscape",
                    p(x.device.orientation, !0),
                    _ !== x.device.orientation && p(_, !1)
                }, 10)
            }
            function m(t) {
                var n, r, i, o, a, s = e.plugins;
                for (o = s.length - 1; o >= 0; o--) {
                    for (n = s[o],
                    r = n.name + n.description,
                    i = 0,
                    a = t.length; a >= 0; a--)
                        r.indexOf(t[a]) !== -1 && (i += 1);
                    if (i === t.length)
                        return !0
                }
                return !1
            }
            function v(t) {
                var e;
                for (e = t.length - 1; e >= 0; e--)
                    try {
                        new ActiveXObject(t[e])
                    } catch (n) {}
                return !1
            }
            function g(r) {
                var h, l, g, y, _, T, M;
                if (E = i({}, E, r || {}),
                E.detectDevice) {
                    for (x.device = {
                        type: "",
                        model: "",
                        orientation: ""
                    },
                    g = x.device,
                    a(/googletv|smarttv|smart-tv|internet.tv|netcast|nettv|appletv|boxee|kylo|roku|dlnadoc|roku|pov_tv|hbbtv|ce\-html/) ? (g.type = w[0],
                    g.model = "smartTv") : a(/xbox|playstation.3|wii/) ? (g.type = w[0],
                    g.model = "gameConsole") : a(/ip(a|ro)d/) ? (g.type = w[1],
                    g.model = "ipad") : a(/tablet/) && !a(/rx-34/) || a(/folio/) ? (g.type = w[1],
                    g.model = String(s(/playbook/) || "")) : a(/linux/) && a(/android/) && !a(/fennec|mobi|htc.magic|htcX06ht|nexus.one|sc-02b|fone.945/) ? (g.type = w[1],
                    g.model = "android") : a(/kindle/) || a(/mac.os/) && a(/silk/) ? (g.type = w[1],
                    g.model = "kindle") : a(/gt-p10|sc-01c|shw-m180s|sgh-t849|sch-i800|shw-m180l|sph-p100|sgh-i987|zt180|htc(.flyer|\_flyer)|sprint.atp51|viewpad7|pandigital(sprnova|nova)|ideos.s7|dell.streak.7|advent.vega|a101it|a70bht|mid7015|next2|nook/) || a(/mb511/) && a(/rutem/) ? (g.type = w[1],
                    g.model = "android") : a(/bb10/) ? (g.type = w[1],
                    g.model = "blackberry") : (g.model = s(/iphone|ipod|android|blackberry|opera mini|opera mobi|skyfire|maemo|windows phone|palm|iemobile|symbian|symbianos|fennec|j2me/),
                    null !== g.model ? (g.type = w[2],
                    g.model = String(g.model)) : (g.model = "",
                    a(/bolt|fennec|iris|maemo|minimo|mobi|mowser|netfront|novarra|prism|rx-34|skyfire|tear|xv6875|xv6975|google.wireless.transcoder/) ? g.type = w[2] : a(/opera/) && a(/windows.nt.5/) && a(/htc|xda|mini|vario|samsung\-gt\-i8000|samsung\-sgh\-i9/) ? g.type = w[2] : a(/windows.(nt|xp|me|9)/) && !a(/phone/) || a(/win(9|.9|nt)/) || a(/\(windows 8\)/) ? g.type = w[3] : a(/macintosh|powerpc/) && !a(/silk/) ? (g.type = w[3],
                    g.model = "mac") : a(/linux/) && a(/x11/) ? g.type = w[3] : a(/solaris|sunos|bsd/) ? g.type = w[3] : a(/cros/) ? g.type = w[3] : a(/bot|crawler|spider|yahoo|ia_archiver|covario-ids|findlinks|dataparksearch|larbin|mediapartners-google|ng-search|snappy|teoma|jeeves|tineye/) && !a(/mobile/) ? (g.type = w[3],
                    g.model = "crawler") : g.type = w[2])),
                    h = 0,
                    l = w.length; h < l; h += 1)
                        p(w[h], g.type === w[h]);
                    E.detectDeviceModel && p(u(g.model), !0)
                }
                if (E.detectScreen && (g.screen = {},
                b && b.mq && (b.mq("only screen and (max-width: 240px)") ? (g.screen.size = "veryVerySmall",
                p("veryVerySmallScreen", !0)) : b.mq("only screen and (max-width: 320px)") ? (g.screen.size = "verySmall",
                p("verySmallScreen", !0)) : b.mq("only screen and (max-width: 480px)") && (g.screen.size = "small",
                p("smallScreen", !0)),
                g.type !== w[1] && g.type !== w[2] || b.mq("only screen and (-moz-min-device-pixel-ratio: 1.3), only screen and (-o-min-device-pixel-ratio: 2.6/2), only screen and (-webkit-min-device-pixel-ratio: 1.3), only screen  and (min-device-pixel-ratio: 1.3), only screen and (min-resolution: 1.3dppx)") && (g.screen.resolution = "high",
                p("highresolution", !0))),
                g.type === w[1] || g.type === w[2] ? (t.onresize = function(t) {
                    d(t)
                }
                ,
                d()) : (g.orientation = "landscape",
                p(g.orientation, !0))),
                E.detectOS && (x.os = {},
                y = x.os,
                "" !== g.model && ("ipad" === g.model || "iphone" === g.model || "ipod" === g.model ? (y.name = "ios",
                f(y, (a(/os\s([\d_]+)/) ? RegExp.$1 : "").replace(/_/g, "."))) : "android" === g.model ? (y.name = "android",
                f(y, a(/android\s([\d\.]+)/) ? RegExp.$1 : "")) : "blackberry" === g.model ? (y.name = "blackberry",
                f(y, a(/version\/([^\s]+)/) ? RegExp.$1 : "")) : "playbook" === g.model && (y.name = "blackberry",
                f(y, a(/os ([^\s]+)/) ? RegExp.$1.replace(";", "") : ""))),
                y.name || (o("win") || o("16bit") ? (y.name = "windows",
                o("windows nt 10") ? f(y, "10") : o("windows nt 6.3") ? f(y, "8.1") : o("windows nt 6.2") || a(/\(windows 8\)/) ? f(y, "8") : o("windows nt 6.1") ? f(y, "7") : o("windows nt 6.0") ? f(y, "vista") : o("windows nt 5.2") || o("windows nt 5.1") || o("windows xp") ? f(y, "xp") : o("windows nt 5.0") || o("windows 2000") ? f(y, "2k") : o("winnt") || o("windows nt") ? f(y, "nt") : o("win98") || o("windows 98") ? f(y, "98") : (o("win95") || o("windows 95")) && f(y, "95")) : o("mac") || o("darwin") ? (y.name = "mac os",
                o("68k") || o("68000") ? f(y, "68k") : o("ppc") || o("powerpc") ? f(y, "ppc") : o("os x") && f(y, (a(/os\sx\s([\d_]+)/) ? RegExp.$1 : "os x").replace(/_/g, "."))) : o("webtv") ? y.name = "webtv" : o("x11") || o("inux") ? y.name = "linux" : o("sunos") ? y.name = "sun" : o("irix") ? y.name = "irix" : o("freebsd") ? y.name = "freebsd" : o("bsd") && (y.name = "bsd")),
                y.name && (p(y.name, !0),
                y.major && (c(y.name, y.major),
                y.minor && c(y.name, y.major, y.minor))),
                a(/\sx64|\sx86|\swin64|\swow64|\samd64/) ? y.addressRegisterSize = "64bit" : y.addressRegisterSize = "32bit",
                p(y.addressRegisterSize, !0)),
                E.detectBrowser && (_ = x.browser,
                a(/opera|webtv/) || !a(/msie\s([\d\w\.]+)/) && !o("trident") ? o("firefox") ? (_.engine = "gecko",
                _.name = "firefox",
                f(_, a(/firefox\/([\d\w\.]+)/) ? RegExp.$1 : "")) : o("gecko/") ? _.engine = "gecko" : o("opera") ? (_.name = "opera",
                _.engine = "presto",
                f(_, a(/version\/([\d\.]+)/) ? RegExp.$1 : a(/opera(\s|\/)([\d\.]+)/) ? RegExp.$2 : "")) : o("konqueror") ? _.name = "konqueror" : o("edge") ? (_.engine = "webkit",
                _.name = "edge",
                f(_, a(/edge\/([\d\.]+)/) ? RegExp.$1 : "")) : o("chrome") ? (_.engine = "webkit",
                _.name = "chrome",
                f(_, a(/chrome\/([\d\.]+)/) ? RegExp.$1 : "")) : o("iron") ? (_.engine = "webkit",
                _.name = "iron") : o("crios") ? (_.name = "chrome",
                _.engine = "webkit",
                f(_, a(/crios\/([\d\.]+)/) ? RegExp.$1 : "")) : o("applewebkit/") ? (_.name = "safari",
                _.engine = "webkit",
                f(_, a(/version\/([\d\.]+)/) ? RegExp.$1 : "")) : o("mozilla/") && (_.engine = "gecko") : (_.engine = "trident",
                _.name = "ie",
                !t.addEventListener && n.documentMode && 7 === n.documentMode ? f(_, "8.compat") : a(/trident.*rv[ :](\d+)\./) ? f(_, RegExp.$1) : f(_, a(/trident\/4\.0/) ? "8" : RegExp.$1)),
                _.name && (p(_.name, !0),
                _.major && (c(_.name, _.major),
                _.minor && c(_.name, _.major, _.minor))),
                p(_.engine, !0),
                _.language = e.userLanguage || e.language,
                p(_.language, !0)),
                E.detectPlugins) {
                    for (_.plugins = [],
                    h = S.length - 1; h >= 0; h--)
                        T = S[h],
                        M = !1,
                        t.ActiveXObject ? M = v(T.progIds) : e.plugins && (M = m(T.substrs)),
                        M && (_.plugins.push(T.name),
                        p(T.name, !0));
                    e.javaEnabled() && (_.plugins.push("java"),
                    p("java", !0))
                }
            }
            var y, _, x = {}, b = t.Modernizr, w = ["tv", "tablet", "mobile", "desktop"], E = {
                addAllFeaturesAsClass: !1,
                detectDevice: !0,
                detectDeviceModel: !0,
                detectScreen: !0,
                detectOS: !0,
                detectBrowser: !0,
                detectPlugins: !0
            }, S = [{
                name: "adobereader",
                substrs: ["Adobe", "Acrobat"],
                progIds: ["AcroPDF.PDF", "PDF.PDFCtrl.5"]
            }, {
                name: "flash",
                substrs: ["Shockwave Flash"],
                progIds: ["ShockwaveFlash.ShockwaveFlash.1"]
            }, {
                name: "wmplayer",
                substrs: ["Windows Media"],
                progIds: ["wmplayer.ocx"]
            }, {
                name: "silverlight",
                substrs: ["Silverlight"],
                progIds: ["AgControl.AgControl"]
            }, {
                name: "quicktime",
                substrs: ["QuickTime"],
                progIds: ["QuickTime.QuickTime"]
            }], T = /[\t\r\n]/g, M = n.documentElement;
            return x.detect = function(t) {
                return g(t)
            }
            ,
            x.init = function() {
                x !== r && (x.browser = {
                    userAgent: (e.userAgent || e.vendor || t.opera).toLowerCase()
                },
                x.detect())
            }
            ,
            x.init(),
            x
        }(window, window.navigator, window.document)
    }
    , {}],
    118: [function(t, e, n) {
        (function(t) {
            "use strict";
            var n = "undefined" != typeof e && e.exports && "undefined" != typeof t ? t : window;
            (n._gsQueue || (n._gsQueue = [])).push(function() {
                function t(t, e, n, r) {
                    return n = parseFloat(n) - parseFloat(t),
                    r = parseFloat(r) - parseFloat(e),
                    Math.sqrt(n * n + r * r)
                }
                function e(t) {
                    return "string" != typeof t && t.nodeType || (t = n.TweenLite.selector(t),
                    t.length && (t = t[0])),
                    t
                }
                function r(t, e, n) {
                    var r, i, o = t.indexOf(" ");
                    return -1 === o ? (r = void 0 !== n ? n + "" : t,
                    i = t) : (r = t.substr(0, o),
                    i = t.substr(o + 1)),
                    r = -1 !== r.indexOf("%") ? parseFloat(r) / 100 * e : parseFloat(r),
                    i = -1 !== i.indexOf("%") ? parseFloat(i) / 100 * e : parseFloat(i),
                    r > i ? [i, r] : [r, i]
                }
                function i(n) {
                    if (!n)
                        return 0;
                    n = e(n);
                    var r, i, o, a, s, h, u, l, c = n.tagName.toLowerCase();
                    if ("path" === c)
                        s = n.style.strokeDasharray,
                        n.style.strokeDasharray = "none",
                        r = n.getTotalLength() || 0,
                        n.style.strokeDasharray = s;
                    else if ("rect" === c)
                        i = n.getBBox(),
                        r = 2 * (i.width + i.height);
                    else if ("circle" === c)
                        r = 2 * Math.PI * parseFloat(n.getAttribute("r"));
                    else if ("line" === c)
                        r = t(n.getAttribute("x1"), n.getAttribute("y1"), n.getAttribute("x2"), n.getAttribute("y2"));
                    else if ("polyline" === c || "polygon" === c)
                        for (o = n.getAttribute("points").split(" "),
                        r = 0,
                        s = o[0].split(","),
                        "polygon" === c && (o.push(o[0]),
                        -1 === o[0].indexOf(",") && o.push(o[1])),
                        h = 1; o.length > h; h++)
                            a = o[h].split(","),
                            1 === a.length && (a[1] = o[h++]),
                            2 === a.length && (r += t(s[0], s[1], a[0], a[1]) || 0,
                            s = a);
                    else
                        "ellipse" === c && (u = parseFloat(n.getAttribute("rx")),
                        l = parseFloat(n.getAttribute("ry")),
                        r = Math.PI * (3 * (u + l) - Math.sqrt((3 * u + l) * (u + 3 * l))));
                    return r || 0
                }
                function o(t, n) {
                    if (!t)
                        return [0, 0];
                    t = e(t),
                    n = n || i(t) + 1;
                    var r = s(t)
                      , o = r.strokeDasharray || ""
                      , a = parseFloat(r.strokeDashoffset)
                      , h = o.indexOf(",");
                    return 0 > h && (h = o.indexOf(" ")),
                    o = 0 > h ? n : parseFloat(o.substr(0, h)) || 1e-5,
                    o > n && (o = n),
                    [Math.max(0, -a), o - a]
                }
                var a, s = document.defaultView ? document.defaultView.getComputedStyle : function() {}
                ;
                a = n._gsDefine.plugin({
                    propName: "drawSVG",
                    API: 2,
                    version: "0.0.5",
                    global: !0,
                    overwriteProps: ["drawSVG"],
                    init: function(t, e) {
                        if (!t.getBBox)
                            return !1;
                        var n, a, s, h = i(t) + 1;
                        return this._style = t.style,
                        e === !0 || "true" === e ? e = "0 100%" : e ? -1 === (e + "").indexOf(" ") && (e = "0 " + e) : e = "0 0",
                        n = o(t, h),
                        a = r(e, h, n[0]),
                        this._length = h + 10,
                        0 === n[0] && 0 === a[0] ? (s = Math.max(1e-5, a[1] - h),
                        this._dash = h + s,
                        this._offset = h - n[1] + s,
                        this._addTween(this, "_offset", this._offset, h - a[1] + s, "drawSVG")) : (this._dash = n[1] - n[0] || 1e-6,
                        this._offset = -n[0],
                        this._addTween(this, "_dash", this._dash, a[1] - a[0] || 1e-5, "drawSVG"),
                        this._addTween(this, "_offset", this._offset, -a[0], "drawSVG")),
                        !0
                    },
                    set: function(t) {
                        this._firstPT && (this._super.setRatio.call(this, t),
                        this._style.strokeDashoffset = this._offset,
                        this._style.strokeDasharray = (1 === t || 0 === t) && .001 > this._offset && 10 >= this._length - this._dash ? "none" : this._dash + "px," + this._length + "px")
                    }
                }),
                a.getLength = i,
                a.getPosition = o
            }),
            n._gsDefine && n._gsQueue.pop()()
        }
        ).call(this, "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {})
    }
    , {}],
    119: [function(t, e, n) {
        "use strict";
        var r = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
            return typeof t
        }
        : function(t) {
            return t && "function" == typeof Symbol && t.constructor === Symbol ? "symbol" : typeof t
        }
        ;
        !function(t, e, n) {
            function i(t, e) {
                return ("undefined" == typeof t ? "undefined" : r(t)) === e
            }
            function o() {
                var t, e, n, r, o, a, s;
                for (var h in b)
                    if (b.hasOwnProperty(h)) {
                        if (t = [],
                        e = b[h],
                        e.name && (t.push(e.name.toLowerCase()),
                        e.options && e.options.aliases && e.options.aliases.length))
                            for (n = 0; n < e.options.aliases.length; n++)
                                t.push(e.options.aliases[n].toLowerCase());
                        for (r = i(e.fn, "function") ? e.fn() : e.fn,
                        o = 0; o < t.length; o++)
                            a = t[o],
                            s = a.split("."),
                            1 === s.length ? E[s[0]] = r : (!E[s[0]] || E[s[0]]instanceof Boolean || (E[s[0]] = new Boolean(E[s[0]])),
                            E[s[0]][s[1]] = r),
                            x.push((r ? "" : "no-") + s.join("-"))
                    }
            }
            function a(t) {
                var e = T.className
                  , n = E._config.classPrefix || "";
                if (M && (e = e.baseVal),
                E._config.enableJSClass) {
                    var r = new RegExp("(^|\\s)" + n + "no-js(\\s|$)");
                    e = e.replace(r, "$1" + n + "js$2")
                }
                E._config.enableClasses && (e += " " + n + t.join(" " + n),
                M ? T.className.baseVal = e : T.className = e)
            }
            function s(t, e) {
                if ("object" == ("undefined" == typeof t ? "undefined" : r(t)))
                    for (var n in t)
                        S(t, n) && s(n, t[n]);
                else {
                    t = t.toLowerCase();
                    var i = t.split(".")
                      , o = E[i[0]];
                    if (2 == i.length && (o = o[i[1]]),
                    "undefined" != typeof o)
                        return E;
                    e = "function" == typeof e ? e() : e,
                    1 == i.length ? E[i[0]] = e : (!E[i[0]] || E[i[0]]instanceof Boolean || (E[i[0]] = new Boolean(E[i[0]])),
                    E[i[0]][i[1]] = e),
                    a([(e && 0 != e ? "" : "no-") + i.join("-")]),
                    E._trigger(t, e)
                }
                return E
            }
            function h(t) {
                return t.replace(/([a-z])-([a-z])/g, function(t, e, n) {
                    return e + n.toUpperCase()
                }).replace(/^-/, "")
            }
            function u(t) {
                return t.replace(/([A-Z])/g, function(t, e) {
                    return "-" + e.toLowerCase()
                }).replace(/^ms-/, "-ms-")
            }
            function l() {
                return "function" != typeof e.createElement ? e.createElement(arguments[0]) : M ? e.createElementNS.call(e, "http://www.w3.org/2000/svg", arguments[0]) : e.createElement.apply(e, arguments)
            }
            function c(t, e) {
                return !!~("" + t).indexOf(e)
            }
            function p(t, e) {
                return function() {
                    return t.apply(e, arguments)
                }
            }
            function f(t, e, n) {
                var r;
                for (var o in t)
                    if (t[o]in e)
                        return n === !1 ? t[o] : (r = e[t[o]],
                        i(r, "function") ? p(r, n || e) : r);
                return !1
            }
            function d() {
                var t = e.body;
                return t || (t = l(M ? "svg" : "body"),
                t.fake = !0),
                t
            }
            function m(t, n, r, i) {
                var o, a, s, h, u = "modernizr", c = l("div"), p = d();
                if (parseInt(r, 10))
                    for (; r--; )
                        s = l("div"),
                        s.id = i ? i[r] : u + (r + 1),
                        c.appendChild(s);
                return o = l("style"),
                o.type = "text/css",
                o.id = "s" + u,
                (p.fake ? p : c).appendChild(o),
                p.appendChild(c),
                o.styleSheet ? o.styleSheet.cssText = t : o.appendChild(e.createTextNode(t)),
                c.id = u,
                p.fake && (p.style.background = "",
                p.style.overflow = "hidden",
                h = T.style.overflow,
                T.style.overflow = "hidden",
                T.appendChild(p)),
                a = n(c, t),
                p.fake ? (p.parentNode.removeChild(p),
                T.style.overflow = h,
                T.offsetHeight) : c.parentNode.removeChild(c),
                !!a
            }
            function v(e, r) {
                var i = e.length;
                if ("CSS"in t && "supports"in t.CSS) {
                    for (; i--; )
                        if (t.CSS.supports(u(e[i]), r))
                            return !0;
                    return !1
                }
                if ("CSSSupportsRule"in t) {
                    for (var o = []; i--; )
                        o.push("(" + u(e[i]) + ":" + r + ")");
                    return o = o.join(" or "),
                    m("@supports (" + o + ") { #modernizr { position: absolute; } }", function(t) {
                        return "absolute" == getComputedStyle(t, null ).position
                    })
                }
                return n
            }
            function g(t, e, r, o) {
                function a() {
                    u && (delete D.style,
                    delete D.modElem)
                }
                if (o = !i(o, "undefined") && o,
                !i(r, "undefined")) {
                    var s = v(t, r);
                    if (!i(s, "undefined"))
                        return s
                }
                for (var u, p, f, d, m, g = ["modernizr", "tspan"]; !D.style; )
                    u = !0,
                    D.modElem = l(g.shift()),
                    D.style = D.modElem.style;
                for (f = t.length,
                p = 0; p < f; p++)
                    if (d = t[p],
                    m = D.style[d],
                    c(d, "-") && (d = h(d)),
                    D.style[d] !== n) {
                        if (o || i(r, "undefined"))
                            return a(),
                            "pfx" != e || d;
                        try {
                            D.style[d] = r
                        } catch (y) {}
                        if (D.style[d] != m)
                            return a(),
                            "pfx" != e || d
                    }
                return a(),
                !1
            }
            function y(t, e, n, r, o) {
                var a = t.charAt(0).toUpperCase() + t.slice(1)
                  , s = (t + " " + R.join(a + " ") + a).split(" ");
                return i(e, "string") || i(e, "undefined") ? g(s, e, r, o) : (s = (t + " " + P.join(a + " ") + a).split(" "),
                f(s, e, n))
            }
            function _(t, e, r) {
                return y(t, n, n, e, r)
            }
            var x = []
              , b = []
              , w = {
                _version: "3.3.1",
                _config: {
                    classPrefix: "",
                    enableClasses: !0,
                    enableJSClass: !0,
                    usePrefixes: !0
                },
                _q: [],
                on: function(t, e) {
                    var n = this;
                    setTimeout(function() {
                        e(n[t])
                    }, 0)
                },
                addTest: function(t, e, n) {
                    b.push({
                        name: t,
                        fn: e,
                        options: n
                    })
                },
                addAsyncTest: function(t) {
                    b.push({
                        name: null ,
                        fn: t
                    })
                }
            }
              , E = function() {}
            ;
            E.prototype = w,
            E = new E,
            E.addTest("webaudio", function() {
                var e = "webkitAudioContext"in t
                  , n = "AudioContext"in t;
                return E._config.usePrefixes ? e || n : n
            });
            var S, T = e.documentElement, M = "svg" === T.nodeName.toLowerCase();
            !function() {
                var t = {}.hasOwnProperty;
                S = i(t, "undefined") || i(t.call, "undefined") ? function(t, e) {
                    return e in t && i(t.constructor.prototype[e], "undefined")
                }
                : function(e, n) {
                    return t.call(e, n)
                }
            }(),
            w._l = {},
            w.on = function(t, e) {
                this._l[t] || (this._l[t] = []),
                this._l[t].push(e),
                E.hasOwnProperty(t) && setTimeout(function() {
                    E._trigger(t, E[t])
                }, 0)
            }
            ,
            w._trigger = function(t, e) {
                if (this._l[t]) {
                    var n = this._l[t];
                    setTimeout(function() {
                        var t, r;
                        for (t = 0; t < n.length; t++)
                            (r = n[t])(e)
                    }, 0),
                    delete this._l[t]
                }
            }
            ,
            E._q.push(function() {
                w.addTest = s
            }),
            E.addTest("webgl", function() {
                var e = l("canvas")
                  , n = "probablySupportsContext"in e ? "probablySupportsContext" : "supportsContext";
                return n in e ? e[n]("webgl") || e[n]("experimental-webgl") : "WebGLRenderingContext"in t
            });
            var C = w._config.usePrefixes ? " -webkit- -moz- -o- -ms- ".split(" ") : ["", ""];
            w._prefixes = C;
            var A = "Moz O ms Webkit"
              , P = w._config.usePrefixes ? A.toLowerCase().split(" ") : [];
            w._domPrefixes = P;
            var L = function(t, e) {
                var n = !1
                  , r = l("div")
                  , i = r.style;
                if (t in i) {
                    var o = P.length;
                    for (i[t] = e,
                    n = i[t]; o-- && !n; )
                        i[t] = "-" + P[o] + "-" + e,
                        n = i[t]
                }
                return "" === n && (n = !1),
                n
            }
            ;
            w.prefixedCSSValue = L;
            var R = w._config.usePrefixes ? A.split(" ") : [];
            w._cssomPrefixes = R;
            var k = function(e) {
                var r, i = C.length, o = t.CSSRule;
                if ("undefined" == typeof o)
                    return n;
                if (!e)
                    return !1;
                if (e = e.replace(/^@/, ""),
                r = e.replace(/-/g, "_").toUpperCase() + "_RULE",
                r in o)
                    return "@" + e;
                for (var a = 0; a < i; a++) {
                    var s = C[a]
                      , h = s.toUpperCase() + "_" + r;
                    if (h in o)
                        return "@-" + s.toLowerCase() + "-" + e
                }
                return !1
            }
            ;
            w.atRule = k;
            var O = w.testStyles = m;
            E.addTest("touchevents", function() {
                var n;
                if ("ontouchstart"in t || t.DocumentTouch && e instanceof DocumentTouch)
                    n = !0;
                else {
                    var r = ["@media (", C.join("touch-enabled),("), "heartz", ")", "{#modernizr{top:9px;position:absolute}}"].join("");
                    O(r, function(t) {
                        n = 9 === t.offsetTop
                    })
                }
                return n
            });
            var I = {
                elem: l("modernizr")
            };
            E._q.push(function() {
                delete I.elem
            });
            var D = {
                style: I.elem.style
            };
            E._q.unshift(function() {
                delete D.style
            }),
            w.testAllProps = y;
            var U = w.prefixed = function(t, e, n) {
                return 0 === t.indexOf("@") ? k(t) : (t.indexOf("-") != -1 && (t = h(t)),
                e ? y(t, e, n) : y(t, "pfx"))
            }
            ;
            w.prefixedCSS = function(t) {
                var e = U(t);
                return e && u(e)
            }
            ;
            E.addTest("objectfit", !!U("objectFit"), {
                aliases: ["object-fit"]
            }),
            w.testAllProps = _,
            E.addTest("backgroundcliptext", function() {
                return _("backgroundClip", "text")
            }),
            o(),
            a(x),
            delete w.addTest,
            delete w.addAsyncTest;
            for (var B = 0; B < E._q.length; B++)
                E._q[B]();
            t.Modernizr = E
        }(window, document)
    }
    , {}],
    120: [function(t, e, n) {
        (function(e) {
            "use strict";
            function n(t, e) {
                if (!(t instanceof e))
                    throw new TypeError("Cannot call a class as a function")
            }
            var r = function() {
                function t(t, e) {
                    for (var n = 0; n < e.length; n++) {
                        var r = e[n];
                        r.enumerable = r.enumerable || !1,
                        r.configurable = !0,
                        "value"in r && (r.writable = !0),
                        Object.defineProperty(t, r.key, r)
                    }
                }
                return function(e, n, r) {
                    return n && t(e.prototype, n),
                    r && t(e, r),
                    e
                }
            }();
            t("gsap"),
            t("./polyfills"),
            t("./Vendor/Modernizr"),
            t("./Vendor/Detectizr"),
            t("./Vendor/DrawSVGPlugin.min.js"),
            e.FB_APP_ID = window.FBAPPID,
            e.HASHIDS_SEED = "r3dbull61v35y0uw1n65",
            e.BASEURL = window.BASEPATH;
            var i = t("webfontloader")
              , o = t("./Helpers/BrowserSupport")
              , a = t("./Helpers/Deferred")
              , s = t("./Helpers/DetectIframe")
              , h = t("./Dispatcher/Dispatcher");
            s && document.documentElement.classList.add("from-iframe");
            var u = function() {
                function e() {
                    return n(this, e),
                    o ? (this.PageVisibility = t("./PageVisibility"),
                    this.PageVisibility.init(),
                    this.AssetsManager = t("./AssetsManager"),
                    this.Loader = t("./Loader/Loader"),
                    this.Sound = t("./Sound/Sound"),
                    this.Game = t("./Game/Game"),
                    this.Render = t("./Render/WebGL/WebGLRender"),
                    this.UI = t("./UI/UI"),
                    void Promise.all([this.loadTypekit(), this.domReady()]).then(this.bootstrap.bind(this))) : window.location.href = BASEURL + "/nosupport.php"
                }
                return r(e, [{
                    key: "loadTypekit",
                    value: function() {
                        var t = new a;
                        try {
                            i.load({
                                custom: {
                                    families: ["Bull", "Jamoer"]
                                },
                                loading: function() {},
                                active: function() {
                                    t.resolve()
                                },
                                inactive: function() {
                                    t.resolve()
                                }
                            })
                        } catch (e) {
                            t.resolve()
                        }
                        return t.promise
                    }
                }, {
                    key: "domReady",
                    value: function() {
                        var t = new a;
                        return document.addEventListener("DOMContentLoaded", function() {
                            t.resolve()
                        }),
                        t.promise
                    }
                }, {
                    key: "bootstrap",
                    value: function() {
                        var t = this;
                        this.UI.init(),
                        this.Render.init(),
                        h.on("LOADER:complete", function() {
                            t.Sound.init(),
                            t.Render.Hud && t.Render.Hud.init()
                        }),
                        this.Loader.init(this.AssetsManager.assets),
                        this.showPage()
                    }
                }, {
                    key: "showPage",
                    value: function() {
                        document.body.classList.add("ready"),
                        h.emit("MAIN:ready")
                    }
                }]),
                e
            }();
            new u
        }
        ).call(this, "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {})
    }
    , {
        "./AssetsManager": 22,
        "./Dispatcher/Dispatcher": 23,
        "./Game/Game": 29,
        "./Helpers/BrowserSupport": 52,
        "./Helpers/Deferred": 54,
        "./Helpers/DetectIframe": 55,
        "./Loader/Loader": 61,
        "./PageVisibility": 62,
        "./Render/WebGL/WebGLRender": 84,
        "./Sound/Sound": 105,
        "./UI/UI": 116,
        "./Vendor/Detectizr": 117,
        "./Vendor/DrawSVGPlugin.min.js": 118,
        "./Vendor/Modernizr": 119,
        "./polyfills": 121,
        gsap: 3,
        webfontloader: 21
    }],
    121: [function(t, e, n) {
        "use strict";
        window.requestAnimFrame = function() {
            return window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || function(t) {
                window.setTimeout(t, 1e3 / 60)
            }
        }(),
        Array.prototype.fill || (Array.prototype.fill = function(t) {
            if (null == this)
                throw new TypeError("this is null or not defined");
            for (var e = Object(this), n = e.length >>> 0, r = arguments[1], i = r >> 0, o = i < 0 ? Math.max(n + i, 0) : Math.min(i, n), a = arguments[2], s = void 0 === a ? n : a >> 0, h = s < 0 ? Math.max(n + s, 0) : Math.min(s, n); o < h; )
                e[o] = t,
                o++;
            return e
        }
        ),
        "function" != typeof Promise && (window.Promise = t("promise-polyfill")),
        function() {
            if ("performance"in window == 0 && (window.performance = {}),
            Date.now = Date.now || function() {
                return (new Date).getTime()
            }
            ,
            "now"in window.performance == 0) {
                var t = Date.now();
                performance.timing && performance.timing.navigationStart && (t = performance.timing.navigationStart),
                window.performance.now = function() {
                    return Date.now() - t
                }
            }
        }()
    }
    , {
        "promise-polyfill": 7
    }]
}, {}, [120]);